{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;","pipeline":["stemmer"]},"docs":[{"location":"","title":"SAGE Landing Page","text":"<p>\u8fd9\u4e2a\u9875\u9762\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684index.html\u6a21\u677f\u6765\u663e\u793alanding page\u3002</p>"},{"location":"about/","title":"About","text":""},{"location":"about/#sage","title":"\ud83e\uddecSAGE: \u7528\u4e8e\u5927\u6a21\u578b\u63a8\u7406\u7684\u539f\u751f\u6d41\u8ba1\u7b97\u6846\u67b6 <p>SAGE \u662f\u4e00\u4e2a\u539f\u751f\u652f\u6301\u6570\u636e\u6d41\u7684\u6570\u636e\u63a8\u7406\u6846\u67b6\uff0c\u4ece\u5e95\u5c42\u8bbe\u8ba1\u4e0a\u5c31\u65e8\u5728\u4e3a\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u63d0\u4f9b\u6a21\u5757\u5316\u3001\u53ef\u63a7\u3001\u900f\u660e\u7684\u5de5\u4f5c\u6d41\u7a0b\u3002\u5b83\u89e3\u51b3\u4e86\u73b0\u6709\u57fa\u4e8e LLM \u7684\u7cfb\u7edf\uff08\u5982 RAG \u548c\u667a\u80fd\u4f53\uff09\u4e2d\u5e38\u89c1\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u786c\u7f16\u7801\u7684\u7f16\u6392\u903b\u8f91\u3001\u4e0d\u900f\u660e\u7684\u6267\u884c\u8def\u5f84\uff0c\u4ee5\u53ca\u6709\u9650\u7684\u8fd0\u884c\u65f6\u63a7\u5236\u80fd\u529b\u3002SAGE \u5f15\u5165\u4e86\u4e00\u79cd\u4ee5\u6570\u636e\u6d41\u4e3a\u4e2d\u5fc3\u7684\u62bd\u8c61\u65b9\u5f0f\uff0c\u5c06\u63a8\u7406\u6d41\u7a0b\u5efa\u6a21\u4e3a\u7531\u7c7b\u578b\u5316\u7b97\u5b50\u7ec4\u6210\u7684\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\uff0c\u9ad8\u6548\u5730\u6267\u884c\u5b9e\u65f6\u6570\u636e\u5904\u7406\u4efb\u52a1\u3002</p>","text":""},{"location":"about/#sage_1","title":"\u5982\u4f55\u4f7f\u7528 SAGE \u6846\u67b6\uff1f","text":"<p>\u8bf7\u67e5\u9605 \u5b89\u88c5\u6307\u5357 \u548c \u5feb\u901f\u5f00\u59cb\u3002</p>"},{"location":"about/#features","title":"\u2728 Features","text":"<ul> <li> <p>\u58f0\u660e\u5f0f\u4e0e\u6a21\u5757\u5316\u7ec4\u5408: \u4f7f\u7528\u7c7b\u578b\u5316\u3001\u53ef\u590d\u7528\u7684\u7b97\u5b50\u6784\u5efa\u590d\u6742\u63a8\u7406\u6d41\u6c34\u7ebf\u3002\u6570\u636e\u6d41\u56fe\u6e05\u6670\u5206\u79bb\u8ba1\u7b97\u5185\u5bb9\u4e0e\u6267\u884c\u65b9\u5f0f\u3002</p> </li> <li> <p>\u7edf\u4e00\u7684\u6570\u636e\u4e0e\u63a7\u5236\u6d41: \u5728\u56fe\u7ed3\u6784\u4e2d\u58f0\u660e\u5f0f\u8868\u8fbe\u6761\u4ef6\u5206\u652f\u3001\u5de5\u5177\u8def\u7531\u548c\u56de\u9000\u903b\u8f91\uff0c\u6d88\u9664\u8106\u5f31\u7684\u547d\u4ee4\u5f0f\u63a7\u5236\u4ee3\u7801\u3002</p> </li> <li> <p>\u539f\u751f\u6709\u72b6\u6001\u7b97\u5b50: \u53ef\u5c06\u4f1a\u8bdd\u3001\u4efb\u52a1\u548c\u957f\u671f\u8bb0\u5fc6\u5efa\u6a21\u4e3a\u56fe\u4e2d\u7684\u6709\u72b6\u6001\u8282\u70b9\uff0c\u5b9e\u73b0\u6301\u4e45\u7684\u4e0a\u4e0b\u6587\u611f\u77e5\u8ba1\u7b97\u3002</p> </li> <li> <p>\u5f02\u6b65\u4e14\u5f39\u6027\u7684\u8fd0\u884c\u65f6: \u5f15\u64ce\u4ee5\u975e\u963b\u585e\u3001\u6570\u636e\u9a71\u52a8\u65b9\u5f0f\u5f02\u6b65\u6267\u884c DAG\uff0c\u5177\u5907\u6d41\u611f\u77e5\u961f\u5217\u3001\u4e8b\u4ef6\u9a71\u52a8\u8c03\u5ea6\u548c\u5185\u5efa\u80cc\u538b\uff0c\u7a33\u5065\u5904\u7406\u590d\u6742\u8d1f\u8f7d\u3002</p> </li> <li> <p>\u5185\u5efa\u53ef\u89c2\u6d4b\u6027\u4e0e\u81ea\u7701\u80fd\u529b: \u63d0\u4f9b\u4ea4\u4e92\u5f0f\u4eea\u8868\u76d8\uff0c\u5f00\u7bb1\u5373\u7528\u7684\u8fd0\u884c\u65f6\u76d1\u63a7\u3002\u652f\u6301\u53ef\u89c6\u5316\u6267\u884c\u56fe\u3001\u7b97\u5b50\u7ea7\u6307\u6807\u76d1\u63a7\u548c\u5b9e\u65f6\u6d41\u6c34\u7ebf\u8c03\u8bd5\u3002</p> </li> </ul>"},{"location":"about/#license","title":"\ud83d\udd16 License","text":"<p>SAGE is licensed under the MIT License. </p>"},{"location":"code_intro/datastream_function/","title":"Operator \u4e0e Function","text":"<p>\u5728 SAGE \u7684\u6570\u636e\u5904\u7406\u6a21\u578b\u4e2d\uff0c<code>Function</code> \u548c <code>Operator</code> \u662f\u652f\u6491\u6574\u4e2a DataStream \u6570\u636e\u8f6c\u6362\u8fc7\u7a0b\u7684\u6838\u5fc3\u6784\u4ef6\uff1a</p> <ul> <li><code>Function</code> \u662f\u7528\u6237\u5b9e\u73b0\u7684\u4e1a\u52a1\u903b\u8f91\u6a21\u5757 \u2014\u2014 \u5b83\u63cf\u8ff0\u4e86\u4f60\u60f3\u8981\u5bf9\u6570\u636e\u505a\u4ec0\u4e48\u3002\u4f60\u53ea\u9700\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684 <code>Base Function</code> \u7c7b\u578b\uff08\u4f8b\u5982\uff1a <code>MapFunction</code>\uff09\uff0c\u7136\u540e\u5b9e\u73b0\u5176\u4e2d\u7684\u6838\u5fc3\u903b\u8f91\uff0c\u6bd4\u5982\u5982\u4f55\u5bf9\u6bcf\u6761\u6570\u636e\u8fdb\u884c\u8f6c\u6362\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u50cf\u4f60\u544a\u8bc9\u7cfb\u7edf\uff1a\u201c\u6211\u8981\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u7279\u5b9a\u7684\u5904\u7406\u201d\u3002\u4f60\u4e0d\u9700\u8981\u5173\u5fc3\u6570\u636e\u662f\u5982\u4f55\u6d41\u52a8\u3001\u5982\u4f55\u5206\u53d1\uff0c\u751a\u81f3\u5982\u4f55\u6267\u884c\u8fd9\u4e9b\u5904\u7406\u3002</li> <li><code>Operator</code> \u662f\u7531\u7cfb\u7edf\u81ea\u52a8\u521b\u5efa\u5e76\u8c03\u5ea6\u7684\u6784\u4ef6 \u2014\u2014 \u5b83\u8d1f\u8d23\u5982\u4f55\u6267\u884c\u4f60\u5b9a\u4e49\u7684\u903b\u8f91\uff0c\u4ee5\u53ca\u5728\u4ec0\u4e48\u73af\u5883\u4e0b\u6267\u884c\u3002\u8fd9\u5305\u62ec\u51b3\u5b9a\u5982\u4f55\u5206\u914d\u8d44\u6e90\uff0c\u5982\u4f55\u8c03\u5ea6\u4efb\u52a1\uff0c\u5982\u4f55\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u5e76\u884c\u5904\u7406\u6570\u636e\uff0c\u751a\u81f3\u5904\u7406\u9519\u8bef\u548c\u6545\u969c\u6062\u590d\u3002\u7528\u6237\u65e0\u9700\u624b\u52a8\u521b\u5efa\u6216\u7ba1\u7406 <code>Operator</code>\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u4e3a\u4f60\u7ba1\u7406\u8fd9\u4e9b\u5e95\u5c42\u7684\u6267\u884c\u548c\u8c03\u5ea6\u7ec6\u8282\u3002</li> </ul> <p></p> <p>\u5982\u56fe\uff0c\u5728 SAGE \u4e2d\uff0c\u7528\u6237\u53ea\u9700\u8981\u9009\u62e9\u5408\u9002\u7684 Base Function \u7c7b\u578b\uff08\u5982 <code>MapFunction</code>\uff09\u5e76\u5b9e\u73b0\u5176\u6838\u5fc3\u903b\u8f91\uff0c\u7cfb\u7edf\u4f1a\u5728\u540e\u7eed\u4e3a\u5176 \u521b\u5efa\u5339\u914d\u7684 Operator\uff0c\u5e76\u8d1f\u8d23\u6267\u884c\u8c03\u5ea6\u3001\u8d44\u6e90\u7ba1\u7406\u3001\u5bb9\u9519\u7b49\u6240\u6709\u5e95\u5c42\u7ec6\u8282\u3002</p>"},{"location":"code_intro/datastream_function/#function","title":"Function \u7c7b\u578b\u603b\u89c8","text":"<p>SAGE \u4e2d\u63d0\u4f9b\u4e86\u4e00\u7ec4\u6807\u51c6 Base Function \u7c7b\u578b\uff0c\u4f9b\u7528\u6237\u7ee7\u627f\u5e76\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u5904\u7406\u903b\u8f91\uff0c\u4f60\u53ef\u4ee5\u70b9\u51fb\u5177\u4f53\u7684 Function \u67e5\u770b\u7528\u6cd5\uff1a</p> Function \u7c7b\u578b \u7528\u9014\u63cf\u8ff0 <code>MapFunction</code> \u5bf9\u6bcf\u6761\u6570\u636e\u8fdb\u884c\u4e00\u5bf9\u4e00\u8f6c\u6362 <code>FilterFunction</code> \u6309\u6761\u4ef6\u7b5b\u9009\uff0c\u4ec5\u4fdd\u7559\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u636e <code>FlatMapFunction</code> \u5c06\u4e00\u6761\u8f93\u5165\u6570\u636e\u62c6\u5206\u4e3a\u591a\u6761\u8f93\u51fa\u6570\u636e <code>KeyByFunction</code> \u63d0\u53d6\u5173\u952e\u5b57\u6bb5\uff0c\u5b9e\u73b0\u6309 key \u5206\u533a <code>SinkFunction</code> \u5c06\u6570\u636e\u5199\u51fa\u5230\u7ec8\u7aef\u3001\u6587\u4ef6\u6216\u5916\u90e8\u7cfb\u7edf <code>BatchFunction</code> \u7528\u4e8e \u6279\u5904\u7406 \u6a21\u5f0f\u4e0b\u7684\u6570\u636e\u6e90 <code>SourceFunction</code> \u7528\u4e8e \u6d41\u5f0f \u6a21\u5f0f\u4e0b\u7684\u6570\u636e\u6e90 <code>CoMapFunction</code> \u7528\u4e8e\u5904\u7406\u53cc\u8f93\u5165\u6d41\u7684\u7ec4\u5408\u903b\u8f91"},{"location":"code_intro/datastream_function/#function_1","title":"Function \u7f16\u5199\u793a\u4f8b","text":"<p>\u6bcf\u4e2a Function \u90fd\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u6216\u591a\u4e2a\u65b9\u6cd5\uff0c\u6700\u5e38\u89c1\u7684\u662f <code>execute()</code> \u65b9\u6cd5\u3002\u4f8b\u5982\uff1a</p> <pre><code>class MyMap(MapFunction):\n    def execute(self, value):\n        return value * 2\n</code></pre>"},{"location":"code_intro/datastream_function/#function_2","title":"Function \u4f20\u53c2\u793a\u4f8b","text":"<p>\u4f60\u53ef\u4ee5\u5728 Function \u4e2d\u5b9a\u4e49\u6784\u9020\u51fd\u6570\uff08<code>__init__</code>\uff09\uff0cSAGE \u652f\u6301\u901a\u8fc7 <code>.map(MyFunction, config)</code> \u7684\u65b9\u5f0f\u6ce8\u5165\u53c2\u6570\u3002</p> <pre><code>class MyFunction(MapFunction):\n    def __init__(self, config):\n        self.factor = config.get(\"factor\")\n\n    def execute(self, value):\n        return value * self.factor\n\n# \u4f7f\u7528\u65b9\u5f0f\nmydatastream.map(MyFunction, config)\n</code></pre>"},{"location":"code_intro/datastream_function/#operator","title":"Operator \u539f\u7406\u89e3\u6790","text":"<p>\u6bcf\u4e00\u4e2a Function \u5728\u8fd0\u884c\u65f6\u90fd\u4f1a\u7531\u5176\u5bf9\u5e94\u7684 <code>Operator</code> \u5305\u88c5\u548c\u8c03\u5ea6\uff0cOperator \u8d1f\u8d23\uff1a</p> <ul> <li>\u63a5\u6536\u4e0a\u6e38\u6570\u636e</li> <li>\u8c03\u7528 Function \u7684 <code>execute()</code> \u6216\u5176\u4ed6\u63a5\u53e3\u65b9\u6cd5</li> <li>\u5904\u7406\u6570\u636e\u6d41\u4f20\u9012\u3001\u5e76\u53d1\u4e0e\u5bb9\u9519</li> </ul> <p>\u7cfb\u7edf\u4f1a\u6839\u636e\u63d0\u4ea4\u6570\u636e\u6d41\u9009\u62e9\u5408\u9002\u7684 Operator \u6765\u5305\u88c5\u4f60\u7684 Function\uff0c\u4ee5\u4e0b\u662f\u4e24\u8005\u7684\u8fd0\u884c\u65f6\u5173\u7cfb\u56fe\uff1a</p> <pre><code>\u8f93\u5165\u6570\u636e \u2192 Operator.receive() \n          \u2192 Function.execute()\n            \u2192 Operator.send()\n\u8f93\u5165\u6570\u636e \u2192 \u4e0b\u6e38 Operator.receive()\n...\n</code></pre>"},{"location":"code_intro/datastream_function/#function_3","title":"Function \u7c7b\u578b\u8be6\u89e3","text":""},{"location":"code_intro/datastream_function/#mapfunction","title":"MapFunction","text":"<p>\u5bf9\u6bcf\u6761\u6570\u636e\u505a\u4e00\u5bf9\u4e00\u8f6c\u6362\u3002</p> <pre><code>class Upper(MapFunction):\n    def execute(self, s: str):\n        return s.upper()\n\nds.map(Upper)\n</code></pre>"},{"location":"code_intro/datastream_function/#filterfunction","title":"FilterFunction","text":"<p>N\u6761\u6570\u636e\u8f93\u5165\uff0cM\u6761\u6570\u636e\u6d41\u51fa\uff0c\u6309\u6761\u4ef6\u4fdd\u7559\u6570\u636e\uff08N \u2265 M\uff09\uff1a</p> <pre><code>class IsPositive(FilterFunction):\n    def execute(self, x):\n        return x &gt; 0\n\nds.filter(IsPositive)\n</code></pre>"},{"location":"code_intro/datastream_function/#flatmapfunction","title":"FlatMapFunction","text":"<p>\u4e00\u6761\u6570\u636e\u8f93\u51fa\u591a\u6761\u6570\u636e\uff0c\u652f\u6301\u8fd4\u56de\u5217\u8868\u6216\u8c03\u7528 <code>collector.collect()</code>\u3002</p> <pre><code>class Split(FlatMapFunction):\n    def execute(self, sentence):\n        return sentence.split()\n</code></pre> <p>\u6216\u4f7f\u7528 <code>collector</code>\uff1a</p> <pre><code>class Split(FlatMapFunction):\n    def execute(self, sentence, collector):\n        for word in sentence.split():\n            collector.collect(word)\n</code></pre>"},{"location":"code_intro/datastream_function/#keybyfunction","title":"KeyByFunction","text":"<p>\u4e00\u6761\u6570\u636e\u6d41\u8f6c\u4e3a\u591a\u6761\u6570\u636e\u6d41\uff0c\u4e3a\u6570\u636e\u6307\u5b9a Key\uff0c\u5b9e\u73b0\u5206\u533a\uff1a</p> <pre><code>ds.keyby(lambda x: x[\"user_id\"], strategy=\"hash\")\n</code></pre> <p>\u652f\u6301\u7b56\u7565\u5305\u62ec <code>\"hash\"</code>\u3001<code>\"round_robin\"</code>\u3001<code>\"broadcast\"</code>\u3002</p>"},{"location":"code_intro/datastream_function/#sinkfunction","title":"SinkFunction","text":"<p>\u5c06\u6700\u7ec8\u6570\u636e\u5199\u5165\u6587\u4ef6\u3001\u7ec8\u7aef\u3001\u6570\u636e\u5e93\u7b49\uff1a</p> <pre><code>class PrintSink(SinkFunction):\n    def execute(self, value):\n        print(value)\n\nds.sink(PrintSink)\n</code></pre>"},{"location":"code_intro/datastream_function/#batchfunction","title":"BatchFunction","text":"<p>\u7528\u4e8e\u751f\u6210\u6709\u9650\u6279\u91cf\u6570\u636e\uff1a</p> <pre><code>class HelloBatch(BatchFunction):\n    def __init__(self):\n        self.counter = 0\n\n    def execute(self):\n        if self.counter &gt;= 5:\n            return None\n        self.counter += 1\n        return f\"Hello #{self.counter}\"\n\nenv.from_batch(HelloBatch)\n</code></pre>"},{"location":"code_intro/datastream_function/#sourcefunction","title":"SourceFunction","text":"<p>\u7528\u4e8e\u751f\u6210\u65e0\u9650\u6d41\u6570\u636e\uff0c\u4f8b\u5982\u8bfb\u53d6 socket\uff1a</p> <pre><code>class MySocket(SourceFunction):\n    def run(self, ctx):\n        while True:\n            data = read_socket()\n            ctx.collect(data)\n</code></pre>"},{"location":"code_intro/datastream_function/#comapfunction","title":"CoMapFunction","text":"<p>\u5904\u7406\u53cc\u8f93\u5165\u6d41\uff0c\u5206\u522b\u5b9e\u73b0 <code>map1()</code> \u548c <code>map2()</code>\uff1a</p> <pre><code>class TagSource(CoMapFunction):\n    def map1(self, a):\n        return (\"A\", a)\n\n    def map2(self, b):\n        return (\"B\", b)\n\nds1.connect(ds2).co_map(TagSource)\n</code></pre>"},{"location":"code_intro/datastream_function/#_1","title":"\u603b\u7ed3","text":"<p>\u5728 SAGE \u4e2d\uff0c<code>Function</code> \u548c <code>Operator</code> \u5404\u81ea\u627f\u62c5\u4e0d\u540c\u7684\u804c\u8d23\uff1a</p> <ul> <li> <p><code>Function</code> \u662f\u7528\u6237\u5b9e\u73b0\u7684\u6570\u636e\u5904\u7406\u903b\u8f91\uff0c\u7528\u6237\u53ea\u9700\u5173\u6ce8\u201c\u5982\u4f55\u5904\u7406\u6bcf\u4e00\u6761\u6570\u636e\u201d\u3002\u4f8b\u5982\uff0c\u7ee7\u627f <code>MapFunction</code>\u3001<code>FilterFunction</code> \u7b49\u7c7b\u578b\u5e76\u5b9e\u73b0 <code>execute()</code> \u65b9\u6cd5\u3002</p> </li> <li> <p><code>Operator</code> \u662f\u7cfb\u7edf\u81ea\u52a8\u521b\u5efa\u7684\u6267\u884c\u5668\uff0c\u5b83\u8d1f\u8d23\u5904\u7406\u6570\u636e\u6d41\u7684\u8c03\u5ea6\u3001\u5e76\u53d1\u3001\u5bb9\u9519\u7b49\u590d\u6742\u5de5\u4f5c\u3002\u7528\u6237\u65e0\u9700\u624b\u52a8\u7ba1\u7406 <code>Operator</code>\u3002</p> </li> </ul> <p>SAGE \u63d0\u4f9b\u4e86\u591a\u79cd\u5185\u7f6e\u7684 <code>Function</code> \u7c7b\u578b\uff0c\u8986\u76d6\u4e86\u6570\u636e\u6d41\u7684\u5404\u4e2a\u9636\u6bb5\uff0c\u5305\u62ec\u8f93\u5165\u3001\u8f6c\u6362\u3001\u8f93\u51fa\u7b49\u3002\u4f8b\u5982\uff1a</p> <ul> <li>\u8f93\u5165\u9636\u6bb5\uff1a<code>SourceFunction</code>\u3001<code>BatchFunction</code></li> <li>\u6570\u636e\u8f6c\u6362\u9636\u6bb5\uff1a<code>MapFunction</code>\u3001<code>FilterFunction</code>\u3001<code>FlatMapFunction</code></li> <li>\u8f93\u51fa\u9636\u6bb5\uff1a<code>SinkFunction</code></li> </ul> <p>\u901a\u8fc7 SAGE\uff0c\u4f60\u53ea\u9700\u4e13\u6ce8\u4e8e\u5b9e\u73b0\u6570\u636e\u5904\u7406\u7684\u6838\u5fc3\u903b\u8f91\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5904\u7406\u5e95\u5c42\u7684\u8d44\u6e90\u7ba1\u7406\u3001\u4efb\u52a1\u8c03\u5ea6\u7b49\u5de5\u4f5c\u3002</p> <p>\u4e0b\u4e00\u7ae0\u5c06\u8bb2\u8ff0\uff1a\u6570\u636e\u6d41\u8f6c\u6362\uff08Transformation\uff09\uff0c\u6211\u4eec\u5c06\u8be6\u7ec6\u8bb2\u89e3\u5982\u4f55\u4f7f\u7528 <code>.map()</code>\u3001<code>.filter()</code>\u3001<code>.keyby()</code> \u7b49 API\uff0c\u7075\u6d3b\u7ec4\u5408\u5404\u7c7b Function\uff0c\u6784\u5efa\u5b8c\u6574\u3001\u53ef\u8fd0\u884c\u7684\u6d41\u5904\u7406\u7ba1\u9053\u3002</p>"},{"location":"code_intro/datastream_intro/","title":"DataStream \u7f16\u7a0b\u6307\u5357","text":"<p>SAGE \u4e2d\u4e3b\u8981\u4ee5 DataStream \u7684\u5f62\u5f0f\u8fdb\u884c\u7f16\u7a0b\u3002\u5982\u56fe\u6240\u793a\uff0c\u6570\u636e\u6d41\u7684\u8d77\u59cb\u662f\u4ece\u5404\u79cd\u6e90\uff08\u4f8b\u5982\u6d88\u606f\u961f\u5217\u3001\u5957\u63a5\u5b57\u6d41\u3001\u6587\u4ef6\uff09\u521b\u5efa\u7684\uff0c\u7ecf\u8fc7\u5404\u79cd\u7b97\u5b50\u5904\u7406\uff0c\u7ed3\u679c\u901a\u8fc7 sink \u8fd4\u56de\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u5199\u5165\u6587\u4ef6\u7136\u540e\u518d\u6807\u51c6\u8f93\u51fa\uff08\u4f8b\u5982\u547d\u4ee4\u884c\u7ec8\u7aef\uff09\u3002</p> <p></p> <p>\u4e3a\u4e86\u521b\u5efa\u81ea\u5df1\u7684 SAGE \u7a0b\u5e8f\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u4ece\u9605\u8bfb\u4e0b\u65b9\u7684 Hello World \u7a0b\u5e8f\u5256\u6790\u5f00\u59cb\uff0c\u7136\u540e\u81ea\u5b9a\u4e49\u4e2a\u6027\u5316\u7684DataStream\u7a0b\u5e8f\u3002</p>"},{"location":"code_intro/datastream_intro/#hello-world","title":"Hello World \u7a0b\u5e8f\u5256\u6790","text":"<p>\u6700\u7b80\u5355\u7684 SAGE \u5e94\u7528\u7a0b\u5e8f\u7531\u4ee5\u4e0b\u51e0\u4e2a\u57fa\u672c\u90e8\u5206\u6784\u6210\uff1a</p> <ol> <li>\u914d\u7f6e\u8fd0\u884c\u73af\u5883</li> <li>\u58f0\u660e\u6570\u636e\u6d41\u5165</li> <li>\u5b9a\u4e49\u6570\u636e\u5904\u7406\u903b\u8f91</li> <li>\u58f0\u660e\u6570\u636e\u6d41\u51fa</li> <li>\u63d0\u4ea4\u4efb\u52a1</li> </ol> <p>\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u5b8c\u6574\u7684 SAGE \u7a0b\u5e8f\uff0c\u672c\u7a0b\u5e8f\u6f14\u793a\u4e86\u5982\u4f55\u5229\u7528 SAGE \u7684 DataStream \u63a5\u53e3\u53bb\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u6279\u5904\u7406<sup>1</sup> \u4efb\u52a1\uff1a</p> Python<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\n\n# \u58f0\u660e\u6570\u636e\u6d41\u5165\uff1a\u751f\u621010\u6761\"Hello, World!\"\u5b57\u7b26\u4e32\nclass HelloBatch(BatchFunction):\n    def __init__(self):\n        super().__init__()\n        self.counter = 0\n        # \u751f\u621010\u4e2a\u6570\u636e\u5305\n        self.max_count = 10     \n\n    def execute(self):\n        if self.counter &gt;= self.max_count:\n            return None         \n        # \u8fd4\u56deNone\u8868\u793a\u6279\u5904\u7406\u5b8c\u6210\n        self.counter += 1\n        return f\"Hello, World! #{self.counter}\"\n\n# \u5b9a\u4e49\u6570\u636e\u5904\u7406\u903b\u8f91\uff0c\u5c06\u5b57\u7b26\u4e32\u8f6c\u5927\u5199\nclass UpperCaseMap(MapFunction):\n    def execute(self, data):\n        return data.upper()\n\n# \u58f0\u660e\u6570\u636e\u6d41\u51fa\uff0c\u6253\u5370\u7ed3\u679c\nclass PrintSink(SinkFunction):\n    def execute(self, data):\n        print(data)\n\ndef main():\n    env = LocalEnvironment(\"Hello_World\")\n\n    # \u5b9a\u4e49\u6570\u636e\u5904\u7406\u903b\u8f91\uff0c\u8fde\u63a5\u7b97\u5b50\u7ec4\u6210 Pipeline\n    env.from_batch(HelloBatch).map(UpperCaseMap).sink(PrintSink)\n\n    # \u63d0\u4ea4 pipeline\uff0c\u5e76\u542f\u52a8\u81ea\u52a8\u505c\u6b62\n    env.submit(autostop=True)\n\n    print(\"Hello World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\")\n\nif __name__ == \"__main__\":\n    # \u5173\u95ed\u65e5\u5fd7\u8f93\u51fa\n    CustomLogger.disable_global_console_debug()\n    main()\n</code></pre> <p>\u4e0b\u9762\u6211\u4eec\u5c06\u5bf9\u8fd9\u4e9b\u90e8\u5206\u9010\u4e00\u8fdb\u884c\u6982\u8ff0\uff0c\u4ee5\u4fbf\u7406\u89e3 SAGE \u7f16\u7a0b\u7684\u4e3b\u8981\u601d\u60f3\uff1a</p>"},{"location":"code_intro/datastream_intro/#hellobatch","title":"<code>HelloBatch</code>\uff1a\u58f0\u660e\u6570\u636e\u6d41\u5165","text":"<pre><code>class HelloBatch(BatchFunction):\n    def __init__(self):\n        super().__init__()\n        self.counter = 0\n        self.max_count = 10 \n\n    def execute(self):\n        if self.counter &gt;= self.max_count:\n            return None \n        self.counter += 1\n        return f\"Hello, World! #{self.counter}\"\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ee7\u627f\u81ea <code>BatchFunction</code>\uff0c\u9700\u8981\u5b9e\u4f8b\u5316\u62bd\u8c61\u63a5\u53e3 <code>execute()</code>\uff0c\u7528\u4e8e\u6279\u91cf\u751f\u6210\u6570\u636e\uff0creturn\u8fd4\u56de\u7684\u503c\u5373\u662f\u4f20\u9012\u7ed9\u4e0b\u6e38\u7684\u6570\u636e\u3002</li> <li>\u6bcf\u8c03\u7528\u4e00\u6b21 <code>execute()</code>\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 <code>\"Hello, World! #\u7f16\u53f7\"</code> \u5b57\u7b26\u4e32\u3002</li> <li>\u5f53\u751f\u6210 10 \u6761\u6570\u636e\u540e\uff0c\u8fd4\u56de <code>None</code>\uff0c\u901a\u77e5\u6846\u67b6\u6570\u636e\u5df2\u7ecf\u751f\u6210\u5b8c\u6bd5\uff0c\u6570\u636e\u6e90\u81ea\u52a8\u7ed3\u675f\u3002</li> </ul>"},{"location":"code_intro/datastream_intro/#uppercasemap","title":"<code>UpperCaseMap</code>\uff1a\u6570\u636e\u8f6c\u6362","text":"<pre><code>class UpperCaseMap(MapFunction):\n    def execute(self, data):\n        return data.upper()\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ee7\u627f\u81ea <code>MapFunction</code>\uff0c\u8fd9\u662f SAGE \u4e2d\u5e38\u89c1\u7684\u6570\u636e\u8f6c\u6362\u8282\u70b9\uff08map\uff09\u3002</li> <li>\u5bf9\u4f20\u5165\u7684\u6bcf\u6761\u6570\u636e\u6267\u884c <code>.upper()</code>\uff0c\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199\u3002</li> </ul>"},{"location":"code_intro/datastream_intro/#printsink","title":"<code>PrintSink</code>\uff1a\u58f0\u660e\u6570\u636e\u6d41\u51fa","text":"<pre><code>class PrintSink(SinkFunction):\n    def execute(self, data):\n        print(data)\n        return data\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ee7\u627f\u81ea <code>SinkFunction</code>\uff0c\u7528\u4f5c\u6570\u636e\u5904\u7406\u7684\u201c\u7ec8\u70b9\u201d\u3002</li> <li>\u6bcf\u6536\u5230\u4e00\u6761\u6570\u636e\uff0c\u76f4\u63a5\u6253\u5370\u8f93\u51fa\u3002</li> </ul>"},{"location":"code_intro/datastream_intro/#main","title":"<code>main</code>\u51fd\u6570\uff1a\u73af\u5883\u548c\u6570\u636e\u6d41\u642d\u5efa","text":"<pre><code>def main():\n    env = LocalEnvironment(\"Hello_World\")\n\n    # transformation\uff1afrom_batch -&gt; map -&gt; sink\n    env.from_batch(HelloBatch).map(UpperCaseMap).sink(PrintSink)\n\n    # \u63d0\u4ea4 pipeline\uff0c\u5e76\u542f\u52a8\u81ea\u52a8\u505c\u6b62\uff08\u4ec5from_batch\u6a21\u5f0f\u6709\u6548\uff09\n    env.submit(autostop=True)\n\n    print(\"Hello World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\")\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u521b\u5efa\u672c\u5730\u6267\u884c\u73af\u5883 <code>LocalEnvironment</code>\uff0c\u65b9\u4fbf\u672c\u5730\u5f00\u53d1\u4e0e\u8c03\u8bd5\u3002</li> <li> <p>\u7528\u94fe\u5f0f API \u5b9a\u4e49\u6570\u636e\u6d41\u5904\u7406\u6b65\u9aa4\uff1a</p> </li> <li> <p><code>from_batch()</code>\uff1a\u6307\u5b9a\u6570\u636e\u8f93\u5165\u6e90</p> </li> <li><code>.map()</code>\uff1a\u6700\u5e38\u7528\u7684\u6570\u636e\u8fde\u63a5\uff0c\u4e00\u5bf9\u4e00\u5411\u4e0a\u4e0b\u6e38\u4f20\u9012\u6570\u636e</li> <li><code>.sink()</code>\uff1a\u6307\u5b9a\u6570\u636e\u8f93\u51fa\u7ec8\u70b9</li> <li><code>env.submit(autostop=True)</code>\uff1a\u542f\u52a8\u4efb\u52a1\u3002</li> </ul>"},{"location":"code_intro/datastream_intro/#_1","title":"\u8fd0\u884c\u6548\u679c","text":"<p>\u63a7\u5236\u53f0\u8f93\u51fa\u6548\u679c\uff1a</p> <pre><code>JobManager logs: ***/.sage/logs/jobmanager/session_***\nHELLO, WORLD! #1\nHELLO, WORLD! #2\nHELLO, WORLD! #3\nHELLO, WORLD! #4\nHELLO, WORLD! #5\nHELLO, WORLD! #6\nHELLO, WORLD! #7\nHELLO, WORLD! #8\nHELLO, WORLD! #9\nHELLO, WORLD! #10\nHello World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\n</code></pre>"},{"location":"code_intro/datastream_intro/#_2","title":"\u7ed3\u8bed","text":"<p>\u672c\u7ae0\u4e3b\u8981\u4ecb\u7ecd\u4e86 SAGE DataStream \u7f16\u7a0b\u7684\u57fa\u672c\u6d41\u7a0b\uff0c\u5305\u62ec\u8fd0\u884c\u73af\u5883\u7684\u914d\u7f6e\u3001\u6570\u636e\u6d41\u7684\u58f0\u660e\u3001\u5904\u7406\u903b\u8f91\u7684\u5b9a\u4e49\u4ee5\u53ca\u7ed3\u679c\u7684\u8f93\u51fa\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff0cSAGE \u63d0\u4f9b\u4e86\u7b80\u6d01\u76f4\u89c2\u7684 API\uff0c\u4f7f\u5f97\u6d41\u5f0f\u4e0e\u6279\u91cf\u6570\u636e\u5904\u7406\u7a0b\u5e8f\u7684\u5f00\u53d1\u66f4\u52a0\u9ad8\u6548\u548c\u53ef\u7ef4\u62a4\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u7075\u6d3b\u7ec4\u5408\u4e0d\u540c\u7684\u6570\u636e\u6e90\u3001\u8f6c\u6362\u7b97\u5b50\u548c\u8f93\u51fa\u65b9\u5f0f\uff0c\u6784\u5efa\u51fa\u9002\u5e94\u591a\u79cd\u573a\u666f\u7684\u6570\u636e\u5904\u7406\u4efb\u52a1\u3002\u5efa\u8bae\u8bfb\u8005\u4ee5\u672c\u793a\u4f8b\u4e3a\u57fa\u7840\uff0c\u8fdb\u4e00\u6b65\u62d3\u5c55\u548c\u5b9e\u8df5\uff0c\u6df1\u5165\u7406\u89e3 SAGE \u7684\u7f16\u7a0b\u6a21\u5f0f\u548c\u4f53\u7cfb\u7ed3\u6784\u3002</p> <p>\u4e0b\u9762\u7684\u7ae0\u8282\u5c06\u8bb2\u89e3\u7b97\u5b50\u4e0e\u6570\u636e\u6d41\uff0c\u4f9b\u7528\u6237\u7f16\u5199\u66f4\u52a0\u590d\u6742\u7684Pipeline\u4ee5\u9002\u5e94\u590d\u6742\u7684\u4e1a\u52a1\u9700\u6c42\u3002</p> <ol> <li> <p>\u6279\u5904\u7406\u4efb\u52a1\u4e3b\u8981\u662f\u6307\u5904\u7406 \u6709\u754c\u6d41 \u6570\u636e\uff0c\u8fd9\u610f\u5473\u7740\u6570\u636e\u662f\u6709\u9650\u7684\uff0c\u4efb\u52a1\u662f\u53ef\u7ec8\u7ed3\u7684\u3002\u00a0\u21a9</p> </li> </ol>"},{"location":"code_intro/datastream_trans/","title":"Transformation \u6570\u636e\u6d41\u8f6c\u6362","text":"<p>DataStream Transformation \u662f SAGE \u7a0b\u5e8f\u4e2d\u7528\u4e8e\u4e32\u8054\u548c\u7ec4\u7ec7\u5404\u7c7b\u6570\u636e\u5904\u7406\u51fd\u6570\uff08\u7b97\u5b50\uff09\u7684\u6838\u5fc3\u62bd\u8c61\u3002\u5982\u56fe\u6240\u793a\uff0c\u7528\u6237\u901a\u8fc7\u5728 DataStream \u4e0a\u4f9d\u6b21\u58f0\u660e\u4e0d\u540c\u7684\u6570\u636e\u8f6c\u6362\uff08\u5982 map\u3001filter\u3001flatmap \u7b49\uff09\uff0cSAGE \u4f1a\u901a\u8fc7 Complier \u7ec4\u4ef6\u5c06\u5b83\u4eec\u8fde\u63a5\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5904\u7406\u6d41\uff0c\u5f62\u6210\u6700\u7ec8\u7528\u4e8e\u6267\u884c\u4efb\u52a1\u7684 DataStream\u3002</p> <p></p> <p>\u672c\u8282\u5c06\u4ecb\u7ecd DataStream Transformation \u7684\u6838\u5fc3\u6570\u636e\u8f6c\u6362\u63a5\u53e3\u3001\u7b97\u5b50\u7684\u8fde\u63a5\u4e0e\u7ec4\u5408\u65b9\u5f0f\uff0c\u4ee5\u53ca\u6570\u636e\u5728\u5404\u7b97\u5b50\u95f4\u7684\u5206\u533a\u7b56\u7565\u548c\u8c03\u5ea6\u673a\u5236\u3002</p>"},{"location":"code_intro/datastream_trans/#transformation_1","title":"Transformation \u603b\u89c8","text":"<p>\u5728 SAGE \u4e2d\uff0c\u7528\u6237\u901a\u8fc7\u94fe\u5f0f\u8c03\u7528\u4e00\u7cfb\u5217\u8f6c\u6362\u64cd\u4f5c\uff08\u5982 map\u3001filter\u3001keyby \u7b49\uff09\uff0c\u53ef\u4ee5\u5c06\u539f\u59cb\u6570\u636e\u9010\u6b65\u52a0\u5de5\u6210\u4e1a\u52a1\u6240\u9700\u7684\u7ed3\u6784\u548c\u5f62\u5f0f\u3002</p> <p>\u5728\u4e0a\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u63d0\u5230\u4e86<code>Function</code>\u4e0e<code>Operator</code>\u7684\u6982\u5ff5\uff0cSAGE\u4f1a\u5229\u7528<code>Operator</code>\u5305\u88c5<code>Function</code>\uff0c\u7ee7\u800c\u901a\u8fc7<code>Operator</code>\u7684\u8def\u7531\u80fd\u529b\u63d0\u4f9b<code>Function</code>\u4e0e<code>Function</code>\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u90a3\u4e48SAGE\u662f\u5982\u4f55\u77e5\u9053\u7528\u54ea\u79cd<code>Operator</code>\u5305\u88c5\u5462\uff1f<code>Transformation</code>\u5c31\u662f\u627f\u5f53\u7740\u8fd9\u4e48\u4e00\u4e2a\u7ffb\u8bd1\u7684\u89d2\u8272\uff0c\u7528\u6237\u901a\u8fc7\u6307\u5b9a<code>Transformation</code>\u6765\u544a\u77e5SAGE\u7cfb\u7edf\u8be5\u5982\u4f55\u5305\u88c5<code>Function</code>\u4ece\u800c\u5f62\u6210\u6570\u636e\u5904\u7406\u7684Pipeline\u3002</p> <pre><code>graph LR\n    A[Function] --&gt; B[Transformation]\n    B --&gt; C[Operator\u5305\u88c5]\n    C --&gt; D[Pipeline]\n    subgraph Pipeline\n        D\n    end\n    subgraph SAGE\u7f16\u8bd1\n        C\n    end\n    subgraph \u7528\u6237\n        A\n        B\n    end</code></pre> <p>\u4e0b\u8868\u5217\u51fa\u4e86 SAGE \u4e2d\u5e38\u7528\u7684 Transformation \u7c7b\u578b\u53ca\u5176\u4f5c\u7528\u8303\u56f4\uff0c\u5e2e\u52a9\u4f60\u5feb\u901f\u4e86\u89e3\u5404\u79cd API \u7684\u7528\u9014\u548c\u8fd4\u56de\u7c7b\u578b\uff0c\u4f60\u53ef\u4ee5\u70b9\u51fb\u5404\u4e2a\u65b9\u6cd5\u4ee5\u67e5\u770b\u76f8\u5173\u793a\u4f8b\uff1a</p> \u7c7b\u522b \u4ee3\u8868\u65b9\u6cd5 \u4f5c\u7528 \u8fd4\u56de\u7c7b\u578b \u8bb0\u5f55\u7ea7\u8f6c\u6362 <code>map</code> / <code>filter</code> / <code>flatmap</code> \u9010\u6761\u5904\u7406\u3001\u8fc7\u6ee4\u6216\u5c55\u5f00\u6570\u636e <code>DataStream</code> \u5206\u533a\u4e0e\u91cd\u5206\u5e03 <code>keyby</code> \u63a7\u5236\u6570\u636e\u5982\u4f55\u5728\u5e76\u884c\u7b97\u5b50\u95f4\u5206\u914d <code>DataStream</code> \u591a\u6d41\u8f6c\u6362 <code>connect</code> / <code>comap</code> / <code>join</code> \u5c06\u4e24\u6761\u6216\u591a\u6761\u6d41\u7ec4\u5408\u5230\u4e00\u8d77 <code>ConnectedStreams</code> / <code>DataStream</code> \u7ec8\u7aef\u8f93\u51fa <code>sink</code> \u5c06\u7ed3\u679c\u5199\u51fa\u5230\u5916\u90e8\u7cfb\u7edf\u6216\u6587\u4ef6 \u65e0\uff08\u94fe\u8def\u7ed3\u675f\uff09"},{"location":"code_intro/transformation_guides/hello_filter_world/","title":"Hello Filter World !!!","text":"<p><code>Hello Filter World</code>\u57fa\u4e8e SAGE Repo \u91cc\u7684\u793a\u4f8b <code>examples/tutorials/transformation-api/hello_filter_world.py</code>\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u4f60\u5c06\u4e86\u89e3\u6709\u5173\u4ee5\u4e0b<code>function</code>\u548c<code>transformation</code>\u7684\u7528\u6cd5\uff1a</p> <ul> <li>DataStream.filter</li> <li>FilterFunction</li> </ul>"},{"location":"code_intro/transformation_guides/hello_filter_world/#a","title":"A. \u573a\u666f\u6982\u8ff0","text":"<ul> <li> \u4f9d\u6b21\u4ece\u4e00\u4e2a\u751f\u6210 <code>1 ~ 10</code> \u7684\u5b57\u7b26\u4e32\u8bb0\u5f55\uff0c\u7ecf Map \u8f6c\u5927\u5199\uff0c\u518d\u7528 Filter \u4ec5\u4fdd\u7559\u7ed3\u5c3e\u4e3a\u5947\u6570\u7684\u8bb0\u5f55\uff0c\u6700\u7ec8\u6253\u5370\u8f93\u51fa\u3002</li> </ul>"},{"location":"code_intro/transformation_guides/hello_filter_world/#b","title":"B. \u4ee3\u7801\u793a\u4f8b","text":"examples/tutorials/transformation-api/hello_filter_world.py<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.core.api.function.filter_function import FilterFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\n\nclass HelloBatch(BatchFunction):\n  def __init__(self, **kwargs):\n    super().__init__(**kwargs)\n    self.counter = 0\n    self.max_count = 10     \n\n  def execute(self):\n    if self.counter &gt;= self.max_count:\n      return None       \n    self.counter += 1\n    return f\"Hello, World! #{self.counter}\"\n\nclass UpperCaseMap(MapFunction):\n  def execute(self, data):\n    return data.upper()\n\nclass PrintSink(SinkFunction):\n  def execute(self, data):\n    print(data)\n\n# \u8fc7\u6ee4\u5668\u793a\u4f8b\uff0c\u8fc7\u6ee4\u6240\u6709\u5076\u6570\u7ed3\u5c3e\u7684\u6570\u636e\nclass Oddpicker(FilterFunction):\n  def execute(self, data):\n    if int(data[-1]) % 2 != 0:\n      return data\n    else:\n      return None\n\ndef main():\n  env = LocalEnvironment(\"Hello_Filter_World\")\n\n  env.from_batch(HelloBatch).map(UpperCaseMap).filter(Oddpicker).sink(PrintSink)\n\n  env.submit(autostop=True)\n  print(\"Hello Filter World \u793a\u4f8b\u7ed3\u675f\")\n\nif __name__ == \"__main__\":\n  # \u5173\u95ed\u65e5\u5fd7\u8f93\u51fa\n  CustomLogger.disable_global_console_debug()\n  main()\n</code></pre>"},{"location":"code_intro/transformation_guides/hello_filter_world/#c","title":"C. \u5173\u952e\u7c7b\u4e0e\u63a5\u53e3","text":"<ul> <li>Oddpicker \uff1a \u7ee7\u627f\u57fa\u7840 <code>FilterFunction</code> \u7c7b\u5e76\u5b9e\u73b0\u5176 <code>execute</code> \u65b9\u6cd5\u3002</li> <li>.filter\u8f6c\u6362 \uff1a <code>filter</code> \u7c7b\u578b <code>transformation</code>\uff0c\u544a\u77e5 SAGE \u7528 <code>filter_operator</code> \u5305\u88c5\u8be5\u7b97\u5b50\u3002</li> </ul> <p>\u5728\u6b64\u4f8b\u4e2d\uff0cfilter\u7684\u4f5c\u7528\u4e3b\u8981\u662f\u7b5b\u9664\u4e0d\u7b26\u5408\u8981\u6c42\u7684\u6570\u636e\uff0c\u6570\u636e\u53d8\u6362\u683c\u5f0f\u4e3a\uff1a M \u4e2a\u8f93\u5165 -&gt; N \u4e2a\u8f93\u51fa \uff08M \u2265 N\uff09\u3002</p>"},{"location":"code_intro/transformation_guides/hello_filter_world_comap/","title":"Hello CoMap World !!!","text":"<p><code>Hello CoMap World</code> \u57fa\u4e8e SAGE \u4ed3\u5e93\u793a\u4f8b <code>examples/tutorials/transformation-api/hello_comap_world.py</code>\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u4f60\u5c06\u4e86\u89e3\u4ee5\u4e0b function \u4e0e transformation \u7684\u7528\u6cd5\uff1a</p> <ul> <li>DataStream.connect</li> <li>ConnectedStreams.comap\uff08BaseCoMapFunction\uff09</li> <li>\u591a\u6e90\u6279\u6d41\u5408\u5e76\u5904\u7406</li> </ul>"},{"location":"code_intro/transformation_guides/hello_filter_world_comap/#a","title":"A. \u573a\u666f\u6982\u8ff0","text":"<ul> <li> \u4e24\u6761\u6279\u6e90\u6d41\u5206\u522b\u4ea7\u751f\u6d88\u606f\uff0c\u901a\u8fc7 connect \u5408\u5e76\u4e3a\u53cc\u8f93\u5165\u6d41\uff0c\u4f7f\u7528 comap \u5bf9\u5de6\u53f3\u4e24\u8def\u5404\u81ea\u5904\u7406\u540e\uff0c\u7edf\u4e00\u4e0b\u53d1\u5230\u4e0b\u6e38 Sink \u5e76\u6253\u5370\u3002</li> </ul>"},{"location":"code_intro/transformation_guides/hello_filter_world_comap/#b","title":"B. \u4ee3\u7801\u793a\u4f8b","text":"examples/tutorials/transformation-api/hello_comap_world.py<pre><code># \u6b64\u4f8b\u610f\u5728\u8bf4\u660e\u5982\u4f55\u5c06\u4e24\u4e2a\u6d41\u901a\u8fc7comap\u5408\u4e3a\u4e00\u4e2a\u6d41\n\nfrom sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.core.api.function.comap_function import BaseCoMapFunction\n\n# \u5b9a\u4e49\u4e24\u4e2a\u7b80\u5355\u6570\u636e\u6e90\uff1a\nclass SourceOne(BatchFunction):\n   def __init__(self):\n      super().__init__()\n      self.counter = 0\n\n   def execute(self):\n      self.counter += 1\n      if self.counter &gt; 5:\n         return None\n      return {\"msg\": f\"No.{self.counter}: Hello\"}\n\nclass SourceTwo(BatchFunction):\n   def __init__(self):\n      super().__init__()\n      self.counter = 0\n\n   def execute(self):\n      self.counter += 1\n      if self.counter &gt; 10:\n         return None\n      return {\"msg\": f\"World! #{self.counter}\"}\n\nclass HelloCoMapProcessor(BaseCoMapFunction):\n   def map0(self, data):\n      return f\"[Stream0] \ud83d\udc4b {data['msg']}\"\n\n   def map1(self, data):\n      return f\"[Stream1] \ud83c\udf0d {data['msg']}\"\n\nclass PrintSink(SinkFunction):\n   def execute(self, data):\n      print(data)\n\ndef main():\n   env = LocalEnvironment(\"Hello_CoMap_World\")\n\n   # \u4e24\u4e2a\u6570\u636e\u6e90\n   source1 = env.from_batch(SourceOne)\n   source2 = env.from_batch(SourceTwo)\n\n   # \u5c06\u4e24\u4e2a\u6d41 connect \u5728\u4e00\u8d77\uff0c\u5e76\u7528 comap \u5206\u5f00\u5904\u7406\n   source1.connect(source2).comap(HelloCoMapProcessor).sink(PrintSink)\n\n   env.submit(autostop=True)\n   print(\"Hello Comap World \u793a\u4f8b\u7ed3\u675f\")\n\nif __name__ == \"__main__\":\n   CustomLogger.disable_global_console_debug()\n   main()\n</code></pre>"},{"location":"code_intro/transformation_guides/hello_filter_world_comap/#c","title":"C. \u5173\u952e\u7c7b\u4e0e\u63a5\u53e3","text":"<ul> <li>BaseCoMapFunction\uff1a\u5b9e\u73b0 <code>map0</code>/<code>map1</code>\uff0c\u5206\u522b\u5904\u7406\u5de6/\u53f3\u4e24\u8def\u8f93\u5165\uff0c\u5c5e\u4e8e\u4e00\u5bf9\u4e00\u53d8\u6362\uff08\u4e0d\u8981\u8fd4\u56de\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u6241\u5e73\u5316\u5e94\u4f7f\u7528 FlatMap\uff09\u3002</li> <li>.connect/.comap\uff1a\u5c06\u4e24\u8def\u4e0a\u6e38\u8fde\u63a5\u4e3a ConnectedStreams\uff0c\u5e76\u5206\u522b\u5e94\u7528\u6620\u5c04\uff1b\u4e24\u4fa7\u8f93\u5165\u7c7b\u578b\u53ef\u4e0d\u540c\uff0c\u4f46\u8f93\u51fa\u7c7b\u578b\u9700\u7edf\u4e00\u4ee5\u4f9b\u4e0b\u6e38\u7ee7\u7eed\u5904\u7406\u3002</li> </ul> <p>\u5e38\u89c1\u7528\u6cd5\u5305\u62ec\u201c\u4e3b\u526f\u6570\u636e\u6e90\u7edf\u4e00\u5316\u201d\u573a\u666f\uff1a\u4e24\u8def\u6570\u636e\u5206\u522b\u6e05\u6d17\u540e\u8f93\u51fa\u7edf\u4e00 schema\uff0c\u4fbf\u4e8e\u540e\u7eed\u7edf\u4e00\u5904\u7406\u3002</p>"},{"location":"code_intro/transformation_guides/hello_flatmap_world/","title":"Hello FlatMap World !!!","text":"<p><code>Hello FlatMap World</code> \u57fa\u4e8e SAGE \u4ed3\u5e93\u793a\u4f8b <code>examples/tutorials/transformation-api/hello_flatmap_world.py</code>\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u4f60\u5c06\u4e86\u89e3\u4ee5\u4e0b <code>function</code> \u4e0e <code>transformation</code> \u7684\u7528\u6cd5\uff1a</p> <ul> <li>DataStream.map</li> <li>DataStream.flatmap</li> <li>FlatMapFunction\uff08\u8fd4\u56de\u8bed\u4e49\uff09</li> <li>SinkFunction / BatchFunction</li> </ul>"},{"location":"code_intro/transformation_guides/hello_flatmap_world/#a","title":"A. \u573a\u666f\u6982\u8ff0","text":"<ul> <li> \u4ece\u4e00\u4e2a\u6279\u6e90\u751f\u6210 <code>1 ~ 10</code> \u7684\u5b57\u7b26\u4e32\u8bb0\u5f55\uff0c\u7ecf Map \u8f6c\u5927\u5199\uff0c\u518d\u7528 FlatMap \u5c06\u6bcf\u6761\u5b57\u7b26\u4e32\u5207\u5206\u4e3a\u591a\u4e2a\u5355\u8bcd\u5e76\u9010\u6761\u4e0b\u53d1\uff0c\u6700\u7ec8\u6253\u5370\u8f93\u51fa\u3002</li> </ul>"},{"location":"code_intro/transformation_guides/hello_flatmap_world/#b","title":"B. \u4ee3\u7801\u793a\u4f8b","text":"examples/tutorials/transformation-api/hello_flatmap_world.py<pre><code># \u6b64\u4f8b\u610f\u5728\u8bf4\u660eFlatMap\u7684\u4f7f\u7528\nfrom sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\nfrom sage.core.api.function.flatmap_function import FlatMapFunction\n\nclass HelloBatch(BatchFunction):\n  def __init__(self, **kwargs):\n    super().__init__(**kwargs)\n    self.counter = 0\n    self.max_count = 10     \n\n  def execute(self):\n    if self.counter &gt;= self.max_count:\n      return None        \n    self.counter += 1\n    return f\"Hello, World! #{self.counter}\"\n\nclass UpperCaseMap(MapFunction):\n  def execute(self, data):\n    return data.upper()\n\nclass PrintSink(SinkFunction):\n  def execute(self, data):\n    print(data)\n\n# \u5229\u7528FlatMapFunction\u5b9e\u73b0\u5355\u8bcd\u62c6\u5206\nclass SplitWords(FlatMapFunction):\n  def execute(self, data):\n    words = data.split()\n    return words\n\n\ndef main():\n  env = LocalEnvironment(\"Hello_Flatmap_World\")\n\n  env.from_batch(HelloBatch).map(UpperCaseMap).flatmap(SplitWords).sink(PrintSink)\n\n  env.submit(autostop=True)\n  print(\"Hello Flatmap World \u793a\u4f8b\u7ed3\u675f\")\n\nif __name__ == \"__main__\":\n  # \u5173\u95ed\u65e5\u5fd7\u8f93\u51fa\n  CustomLogger.disable_global_console_debug()\n  main()\n</code></pre>"},{"location":"code_intro/transformation_guides/hello_flatmap_world/#c","title":"C. \u5173\u952e\u7c7b\u4e0e\u63a5\u53e3","text":"<ul> <li>SplitWords\uff1a\u7ee7\u627f\u57fa\u7840 <code>FlatMapFunction</code> \u5e76\u5b9e\u73b0\u5176 <code>execute</code>\uff0c\u8fd4\u56de\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u6846\u67b6\u4f1a\u9010\u6761\u4e0b\u53d1\u5176\u4e2d\u5143\u7d20\uff1b\u4e5f\u53ef\u4f7f\u7528 <code>collector.collect()</code> \u9010\u6761\u8f93\u51fa\u3002</li> <li>.flatmap \u8f6c\u6362\uff1a<code>flatmap</code> \u7c7b\u578b <code>transformation</code>\uff0c\u544a\u77e5 SAGE \u7528 <code>flatmap_operator</code> \u5305\u88c5\u8be5\u7b97\u5b50\u3002</li> </ul> <p>\u5728\u6b64\u4f8b\u4e2d\uff0cflatmap \u7684\u4f5c\u7528\u662f\u5c06\u4e00\u6761\u8f93\u5165\u62c6\u89e3\u4e3a\u591a\u6761\u8f93\u51fa\uff0c\u6570\u636e\u53d8\u6362\u793a\u610f\uff1aM \u4e2a\u8f93\u5165 -&gt; N \u4e2a\u8f93\u51fa\uff08\u901a\u5e38 N \u2265 M\uff09\u3002</p>"},{"location":"code_intro/transformation_guides/hello_future_world/","title":"Hello Future World !!!","text":"<p><code>Hello Future World</code> \u57fa\u4e8e SAGE \u4ed3\u5e93\u793a\u4f8b <code>examples/tutorials/transformation-api/hello_future_world.py</code>\uff0c\u672c\u4f8b\u6f14\u793a\u201c\u53cd\u9988\u8fb9\u4e0e\u5faa\u73af\u6d41\u201d\u7684\u7528\u6cd5\uff1a</p> <ul> <li>env.from_future\uff08\u5360\u4f4d\u6d41\uff09</li> <li>DataStream.connect + ConnectedStreams.comap</li> <li>DataStream.fill_future\uff08\u5c06\u7ed3\u679c\u56de\u586b\u5230 future \u6d41\uff0c\u5f62\u6210\u95ed\u73af\uff09</li> </ul>"},{"location":"code_intro/transformation_guides/hello_future_world/#a","title":"A. \u573a\u666f\u6982\u8ff0","text":"<ul> <li> StartSource \u53d1\u9001\u4e00\u6b21\u542f\u52a8\u4fe1\u53f7\uff1b\u4e0e\u53cd\u9988\u6d41 connect \u540e comap \u7edf\u4e00\u5904\u7406\uff1bSentenceProvider \u5728\u6536\u5230\u53cd\u9988\u540e\u5411\u524d\u63a8\u8fdb\u53e5\u5b50\u5e8f\u5217\uff1bSink \u6253\u5370\u540e\u7ecf FeedbackDelayer \u5ef6\u65f6\u4e00\u6bb5\u65f6\u95f4\uff0c\u518d\u56de\u586b\u5230 future \u6d41\u89e6\u53d1\u4e0b\u4e00\u8f6e\uff0c\u5f62\u6210\u53ef\u63a7\u8282\u594f\u7684\u95ed\u73af\u6d41\u3002</li> </ul>"},{"location":"code_intro/transformation_guides/hello_future_world/#b","title":"B. \u4ee3\u7801\u793a\u4f8b","text":"examples/tutorials/transformation-api/hello_future_world.py<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.comap_function import BaseCoMapFunction\nfrom sage.core.api.function.base_function import BaseFunction\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\nfrom time import sleep\n\n# \u542f\u52a8\u4fe1\u53f7\u6e90\uff08\u53ea\u53d1\u4e00\u6b21\u542f\u52a8\u4fe1\u53f7\uff09\nclass StartSource(BatchFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.started = False\n\n    def execute(self):\n        if not self.started:\n            self.started = True\n            print(\"\u5df2\u53d1\u9001\u542f\u52a8\u4fe1\u53f7\")\n            return {\"signal\": \"start\"}\n        else:\n            return None\n\n\n# \u5408\u6d41\u5904\u7406\u5668\uff08map0 = \u542f\u52a8\uff0cmap1 = \u53cd\u9988\uff09\nclass SignalMerger(BaseCoMapFunction):\n    def map0(self, data):\n        print(f\"&gt;&gt;&gt; StartSource\uff1a\u6536\u5230\u542f\u52a8\u6570\u636e: {data}\")\n        return data\n\n    def map1(self, data):\n        print(f\"&gt;&gt;&gt; PipelineSource\uff1a \u6536\u5230\u53cd\u9988\u6570\u636e: {data}\")\n        return data\n\n\n# \u4ece\u53e5\u5b50\u5217\u8868\u4e2d\u6309\u987a\u5e8f\u53d6\u53e5\u5b50\uff08\u53ea\u5728\u6536\u5230\u53cd\u9988\u65f6\u63a8\u8fdb\uff09\nclass SentenceProvider(BatchFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.sentences = [\n            \"\u8fd9\u662f\u7b2c\u4e00\u53e5\u3002\",\n            \"\u8fd9\u662f\u7b2c\u4e8c\u53e5\u3002\",\n            \"\u8fd9\u662f\u7b2c\u4e09\u53e5\u3002\",\n            \"\u6240\u6709\u53e5\u5b50\u5df2\u5b8c\u6210\uff01\"\n        ]\n        self.index = 0\n\n    def execute(self, data):\n        if data is None:\n            return None\n\n        if self.index &gt;= len(self.sentences):\n            print(\"\u5168\u90e8\u53e5\u5b50\u5df2\u8f93\u51fa\u5b8c\u6bd5\uff0c\u7ed3\u675f\u6570\u636e\u6d41\u3002\")\n            return None\n\n        sentence = self.sentences[self.index]\n        self.index += 1\n        new_data = {\"\u53e5\u5b50\": sentence}\n        print(f\"&gt;&gt;&gt; SentenceProvider \u63d0\u4f9b\u53e5\u5b50: {new_data}\")\n        return new_data\n\n\n# Sink\uff1a\u6253\u5370\u53e5\u5b50\uff08\u7acb\u5373\u6253\u5370\uff0c\u4e0d\u52a0 sleep\uff09\nclass FeedbackSink(SinkFunction):\n    def execute(self, data):\n        if data:\n            print(f\"&gt;&gt;&gt; Sink \u6253\u5370: {data}\")\n        return data\n\n\n# \u5ef6\u8fdf\u53cd\u9988\u7b97\u5b50\uff1a\u63a7\u5236\u8282\u594f\nclass FeedbackDelayer(BaseFunction):\n    def execute(self, data):\n        if data is None:\n            return None\n        sleep(1)  # \u63a7\u5236\u95f4\u9694\n        print(\"&gt;&gt;&gt; FeedbackDelayer\u7b49\u5f85 2 \u79d2\u540e\u53cd\u9988...\")\n        return data\n\n\ndef main():\n    env = LocalEnvironment(\"\u53e5\u5b50\u987a\u5e8f\u8f93\u51fa\")\n\n    # 1. \u542f\u52a8\u6e90\n    start_stream = env.from_source(StartSource)\n\n    # 2. future stream \u7528\u4e8e\u53cd\u9988\n    feedback_stream = env.from_future(\"feedback\")\n\n    # 3. \u5408\u6d41\n    merged = start_stream.connect(feedback_stream).comap(SignalMerger)\n\n    # 4. \u53e5\u5b50\u63d0\u4f9b\u5668\n    provided = merged.map(SentenceProvider)\n\n    # 5. Sink\uff0c\u6253\u5370\u7ed3\u679c\n    sinked = provided.sink(FeedbackSink)\n\n    # 6. \u5728\u53cd\u9988\u524d\u52a0\u5ef6\u8fdf\n    delayed = sinked.map(FeedbackDelayer)\n\n    # 7. \u628a\u5ef6\u8fdf\u540e\u7684\u7ed3\u679c\u53cd\u9988\u5230 future stream\n    delayed.fill_future(feedback_stream)\n\n\n    env.submit()\n\n    from time import sleep\n    sleep(6)  # \u7ed9\u8db3\u591f\u65f6\u95f4\u8ba9\u6240\u6709\u6570\u636e\u5904\u7406\u5b8c\u6210\n\n    print(\"Hello Future World \u793a\u4f8b\u7ed3\u675f\")\n\nif __name__ == \"__main__\":\n    CustomLogger.disable_global_console_debug()\n    main()\n</code></pre>"},{"location":"code_intro/transformation_guides/hello_future_world/#c","title":"C. \u5173\u952e\u7c7b\u4e0e\u63a5\u53e3","text":"<ul> <li>from_future/fill_future\uff1a\u6784\u5efa\u5360\u4f4d\u7684\u201c\u672a\u6765\u6d41\u201d\u5e76\u5728\u540e\u7eed\u8282\u70b9\u56de\u586b\uff0c\u5f62\u6210\u95ed\u73af\u3002</li> <li>BaseCoMapFunction\uff1a\u5408\u6d41\u540e\u5206\u522b\u5904\u7406\u201c\u542f\u52a8\u201d\u548c\u201c\u53cd\u9988\u201d\u4e24\u8def\u8f93\u5165\u3002</li> <li>BaseFunction\uff08FeedbackDelayer\uff09\uff1a\u4eba\u4e3a\u52a0\u5165\u8282\u6d41\u73af\u8282\uff0c\u907f\u514d\u5fd9\u7b49\u4e0e\u8d44\u6e90\u8017\u5c3d\u3002</li> </ul> <p>\u6ce8\u610f\uff1a\u95ed\u73af\u6570\u636e\u6d41\u5fc5\u987b\u5177\u5907\u201c\u8282\u6d41\u201d\u73af\u8282\uff08\u5982\u5ef6\u8fdf\uff09\uff0c\u5e76\u786e\u4fdd from_future \u6700\u7ec8\u88ab fill_future \u56de\u586b\u95ed\u5408\u3002</p>"},{"location":"code_intro/transformation_guides/hello_join_world/","title":"Hello Join World !!!","text":"<p><code>Hello Join World</code> \u57fa\u4e8e SAGE \u4ed3\u5e93\u793a\u4f8b <code>examples/tutorials/transformation-api/hello_join_world.py</code>\uff0c\u6f14\u793a\u6309\u952e\u5206\u533a\u4e0e\u53cc\u6d41 Join\uff1a</p> <ul> <li>DataStream.keyby</li> <li>DataStream.connect</li> <li>ConnectedStreams.join\uff08BaseJoinFunction\uff09</li> </ul>"},{"location":"code_intro/transformation_guides/hello_join_world/#a","title":"A. \u573a\u666f\u6982\u8ff0","text":"<ul> <li> \u4e24\u6761\u6279\u6e90\u6d41\u5206\u522b\u4ea7\u751f\u5e26 id \u7684\u8bb0\u5f55\uff0c\u7ecf keyby \u63d0\u53d6\u76f8\u540c key \u540e\uff0c\u901a\u8fc7 connect + join \u8fdb\u884c\u5173\u8054\uff0c\u8f93\u51fa\u914d\u5bf9\u540e\u7684\u5408\u5e76\u7ed3\u679c\u5e76\u6253\u5370\u3002</li> </ul>"},{"location":"code_intro/transformation_guides/hello_join_world/#b","title":"B. \u4ee3\u7801\u793a\u4f8b","text":"examples/tutorials/transformation-api/hello_join_world.py<pre><code># \u6b64\u4f8b\u7528\u5230\u4e86keyby\u548cjoin\u64cd\u4f5c\u7b26\uff0c\u5c55\u793a\u5982\u4f55\u5c06\u4e24\u4e2a\u6570\u636e\u6d41\u6309key\u8fdb\u884c\u5173\u8054\u3002\nfrom sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.core.api.function.keyby_function import KeyByFunction\nfrom sage.core.api.function.join_function import BaseJoinFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\n\nclass SourceOne(BatchFunction):\n   def __init__(self):\n      super().__init__()\n      self.counter = 0\n\n   def execute(self):\n      self.counter += 1\n      if self.counter &gt; 5:\n         return None\n      return {\"id\": self.counter, \"msg\": f\"Hello-{self.counter}\", \"type\": \"hello\"}\n\n\nclass SourceTwo(BatchFunction):\n   def __init__(self):\n      super().__init__()\n      self.counter = 0\n\n   def execute(self):\n      self.counter += 1\n      if self.counter &gt; 5:\n         return None\n      return {\"id\": self.counter, \"msg\": f\"World-{self.counter}\", \"type\": \"world\"}\n\nclass IdKeyBy(KeyByFunction):\n   def execute(self, data):\n      return data.get(\"id\")\n\nclass PrintSink(SinkFunction):\n   def execute(self, data):\n      print(f\"\ud83d\udd17 Joined Streaming: {data}\")\n\nclass HelloWorldJoin(BaseJoinFunction):\n   \"\"\"\n   Join \u7b97\u5b50\u793a\u4f8b\uff1a\n   execute(payload, key, tag) \u53c2\u6570\u8bf4\u660e\uff1a\n     - payload: \u6d41\u91cc\u4f20\u8fc7\u6765\u7684\u539f\u59cb\u6570\u636e (dict)\n     - key: \u7531 keyby \u7b97\u5b50\u63d0\u53d6\u51fa\u6765\u7684\u5206\u533a\u952e (\u6bd4\u5982\u8fd9\u91cc\u7684 id)\n     - tag: \u6570\u636e\u6765\u6e90\u6807\u8bc6 (0=\u5de6\u6d41 / \u7b2c\u4e00\u4e2a\u6d41, 1=\u53f3\u6d41 / \u7b2c\u4e8c\u4e2a\u6d41)\n   \"\"\"\n   def __init__(self, **kwargs):\n      super().__init__(**kwargs)\n      self.hello_cache = {}   # {key: [payloads]}\n      self.world_cache = {}   # {key: [payloads]}\n\n   def execute(self, payload, key, tag):\n      results = []\n      data_type = payload.get(\"type\", \"\")\n\n      if tag == 0:  # \u7b2c\u4e00\u4e2a\u6d41 (Hello)\n         if data_type == \"hello\":\n            # \u7f13\u5b58 Hello \u6570\u636e\n            self.hello_cache.setdefault(key, []).append(payload)\n\n            # \u68c0\u67e5\u662f\u5426\u6709\u5339\u914d\u7684 World \u6570\u636e\n            if key in self.world_cache:\n               for world_data in self.world_cache[key]:\n                  results.append(self._merge(payload, world_data, key))\n\n      elif tag == 1:  # \u7b2c\u4e8c\u4e2a\u6d41 (World)\n         if data_type == \"world\":\n            # \u7f13\u5b58 World \u6570\u636e\n            self.world_cache.setdefault(key, []).append(payload)\n\n            # \u68c0\u67e5\u662f\u5426\u6709\u5339\u914d\u7684 Hello \u6570\u636e\n            if key in self.hello_cache:\n               for hello_data in self.hello_cache[key]:\n                  results.append(self._merge(hello_data, payload, key))\n\n      return results\n\n   def _merge(self, hello_data, world_data, key):\n      return {\n         \"id\": key,\n         \"msg\": f\"{hello_data['msg']} + {world_data['msg']}\"\n      }\n\ndef main():\n   env = LocalEnvironment(\"Hello_Join_World\")\n\n   source1 = env.from_batch(SourceOne).keyby(IdKeyBy)\n   source2 = env.from_batch(SourceTwo).keyby(IdKeyBy)\n\n   # connect + join\n   source1.connect(source2).join(HelloWorldJoin).sink(PrintSink)\n\n   # \u63d0\u4ea4\u4f46\u4e0d\u4f7f\u7528 autostop\uff0c\u800c\u662f\u624b\u52a8\u63a7\u5236\n   env.submit()\n\n   # \u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u8ba9\u6279\u5904\u7406\u5b8c\u6210\n   import time\n   time.sleep(2)  # \u7ed9\u8db3\u591f\u65f6\u95f4\u8ba9\u6240\u6709\u6570\u636e\u5904\u7406\u5b8c\u6210\n\n   print(\"Hello Join World \u793a\u4f8b\u7ed3\u675f\")\n\n\nif __name__ == \"__main__\":\n   CustomLogger.disable_global_console_debug()\n   main()\n</code></pre>"},{"location":"code_intro/transformation_guides/hello_join_world/#c","title":"C. \u5173\u952e\u7c7b\u4e0e\u63a5\u53e3","text":"<ul> <li>KeyByFunction\uff1a\u63d0\u53d6 key \u7528\u4e8e\u5206\u533a\uff0c\u786e\u4fdd join \u8986\u76d6\u9700\u8981\u5173\u8054\u7684\u8bb0\u5f55\u3002</li> <li>BaseJoinFunction\uff1a\u53cc\u6d41 Join \u7b97\u5b50\uff0c\u6846\u67b6\u4f20\u5165 (payload, key, tag)\u3002\u9700\u8003\u8651\u4e71\u5e8f\u3001\u91cd\u590d\u4e0e\u7f13\u5b58\u6e05\u7406\u7b56\u7565\uff08\u793a\u4f8b\u4e3a\u6700\u7b80\u5b9e\u73b0\uff09\u3002</li> <li>join \u662f\u53cc\u5411\u89e6\u53d1\uff1a\u5de6\u6216\u53f3\u4efb\u4e00\u5230\u8fbe\u90fd\u4f1a\u5c1d\u8bd5\u4e0e\u5bf9\u65b9\u7f13\u5b58\u5339\u914d\u3002</li> </ul> <p>\u6269\u5c55\uff1a\u8ba2\u5355\u4e0e\u652f\u4ed8\u5bf9\u8d26\uff08\u6309 order_id join\uff09\u3001\u5b9e\u65f6\u76d1\u63a7\uff08\u6307\u6807\u6d41\u4e0e\u9608\u503c\u6d41\u6309\u6307\u6807\u540d join \u5e76\u751f\u6210\u544a\u8b66\uff09\u7b49\u3002</p>"},{"location":"extension/project_intro/","title":"Project intro","text":"<p>packages/sage/src/sage packages/sage-common/src/sage packages/sage-libs/src/sage packages/sage-kernel/src/sage packages/sage-middleware/src/sage \u4ee5\u4e0a\u76ee\u5f55\u4e0b\u7684__init__.py\u6587\u4ef6\uff0c\u53ef\u4ee5\u8bed\u8a00\u670d\u52a1\u5668\u68c0\u67e5\u5230sage\u4e0b\u7684\u5404\u4e2a\u7ec4\u4ef6\uff0c\u6709\u4e86\u8fd9\u4e2a\u53ef\u4ee5\u8ba9\u8bed\u8a00\u670d\u52a1\u5668\u8fdb\u884c\u8865\u5168\u63d0\u793a\u3002</p> <pre><code># \u6269\u5c55\u547d\u540d\u7a7a\u95f4\u5305\u8def\u5f84\u4ee5\u652f\u6301\u5b50\u5305\n__path__ = __import__('pkgutil').extend_path(__path__, __name__)\n</code></pre> <p><code>packages/sage/src/sage/_version.py</code> \u8be5\u6587\u4ef6\u88ab <code>packages/sage/pyproject.toml</code> \u5bfc\u5165\uff0c\u5177\u4f53\u8bed\u53e5\u5982\u4e0b\uff1a <pre><code>version = {attr = \"sage._version.__version__\"}\n</code></pre> \u4e3b\u8981\u4f5c\u7528\u662f\uff1a * \u52a8\u6001\u7248\u672c\u83b7\u53d6\uff1a\u6839\u636e\u73af\u5883\uff08\u5f00\u53d1/\u6784\u5efa\uff09\u667a\u80fd\u9009\u62e9\u7248\u672c\u6765\u6e90 * \u7edf\u4e00\u7248\u672c\u63a7\u5236\uff1a\u786e\u4fdd\u6240\u6709 SAGE \u5b50\u5305\u4f7f\u7528\u4e00\u81f4\u7684\u7248\u672c\u53f7 * \u5b89\u88c5\u65f6\u7248\u672c\u63d0\u4f9b\uff1a\u4e3a pip install \u63d0\u4f9b\u7248\u672c\u4fe1\u606f</p>"},{"location":"get_start/developer/","title":"SAGE \u5b89\u88c5\u6307\u5357","text":"<p>\u672c\u6587\u6863\u5c06\u6307\u5bfc\u60a8\u5982\u4f55\u4ee5 \u5f00\u53d1\u8005\u6a21\u5f0f \u5b89\u88c5 SAGE \u6e90\u7801\u53ca\u5176\u76f8\u5173\u4f9d\u8d56\u3002</p>"},{"location":"get_start/developer/#a-prerequisites","title":"A. \u524d\u7f6e\u8981\u6c42 (Prerequisites)","text":"<p>\u5728\u5f00\u59cb\u5b89\u88c5\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u7684\u5f00\u53d1\u73af\u5883\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a</p> <ul> <li>\u64cd\u4f5c\u7cfb\u7edf (OS)\uff1aUbuntu 22.04\u53ca\u4ee5\u4e0a\u7248\u672c</li> <li>\u57fa\u7840\u4f9d\u8d56\uff1aAnaconda/Miniconda</li> <li>SAGE\u5b98\u65b9\u4ed3\u5e93\uff1aIntelliStreamSAGE</li> </ul> <p>\u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u5feb\u901f\u62c9\u53d6 SAGE \u5b98\u65b9\u4ed3\u5e93</p> <pre><code>git clone git@github.com:intellistream/SAGE.git\n</code></pre>"},{"location":"get_start/developer/#b-installation","title":"B. \u672c\u5730\u5b89\u88c5 (Installation)","text":"<p>\u7b2c 1 \u6b65\uff1a\u8fd0\u884c\u5b89\u88c5\u811a\u672c</p> <p>\u5728\u672c\u5730\u7684 SAGE \u76ee\u5f55\u4e0b\uff0c\u53ef\u89c1\u4e00\u4e2aquickstart.sh\u7684\u811a\u672c\uff0c\u63d0\u524d \u62c9\u957f\u7ec8\u7aef\u8fb9\u6846 \uff0c\u8fd0\u884c\u8be5\u811a\u672c\u4e00\u952e\u5f0f\u5b89\u88c5 SAGE\uff1a</p> <pre><code>./quickstart.sh\n</code></pre> <p>\u8fd0\u884c\u8be5\u811a\u672c\u540e\uff0c\u60a8\u7684\u7ec8\u7aef\u4f1a\u663e\u793a\u4ee5\u4e0b\u8f93\u51fa\uff1a</p> <p></p> <p>\u7b2c 2 \u6b65\uff1a\u9009\u62e9\u73af\u5883\u540d\u79f0</p> <p>\u5728\u7ec8\u7aef\u4e2d\uff0c\u8f93\u5165 3+Enter, \u4ee5\u6307\u5b9a\u521b\u5efa SAGE \u73af\u5883\u7684\u540d\u79f0\uff1a </p> <p>\u6307\u5b9a\u60a8\u5e0c\u671b\u521b\u5efa\u7684 SAGE \u73af\u5883\u540d\u79f0\u5e76 Enter \uff0c\u7b49\u5f85\u5b89\u88c5\u7a0b\u5e8f\u5f00\u59cb\u5b89\u88c5\u3002 </p> <p>\u9759\u5f85\u7247\u523b\u540e\uff0c\u663e\u793a\u4ee5\u4e0b\u9875\u9762\uff0c\u5b8c\u6210 SAGE \u73af\u5883\u90e8\u7f72\uff1a</p> <p></p>"},{"location":"get_start/developer/#c-verify-installation","title":"C. \u9a8c\u8bc1\u5b89\u88c5 (Verify Installation)","text":"<p>\u6267\u884c SAGE \u76ee\u5f55\u4e0b\u7684 <code>hello_world.py</code> \u6587\u4ef6\uff1a</p> <pre><code>python examples/tutorials/hello_world.py\n</code></pre> <p>\u51fa\u73b0\u5982\u4e0b\u8f93\u51fa\uff0c\u8bf4\u660e SAGE \u5b89\u88c5\u6210\u529f\uff0c\u795d\u60a8\u4f7f\u7528\u6109\u5feb~</p> <p></p>"},{"location":"get_start/developer/#d-common-question","title":"D. \u5e38\u89c1\u95ee\u9898 (Common Question)","text":"<p> SAGE-Pub Failed to connect / \u5b50\u6a21\u5757\u8bbe\u7f6e\u5931\u8d25</p> <p>\u62a5\u9519\u5185\u5bb9\u5927\u81f4\u5982\u4e0b\uff1a</p> bash error<pre><code>fatal:unable to access'https://github.com/intellistream/SAGE-Pub.git/': Failed to connect_to github.com_port 443 after 118564 ms: Could not connect to server\n</code></pre> <p>\u8fd9\u4e00\u822c\u662f\u56e0\u4e3a\u7f51\u7edc\u539f\u56e0\u5bfc\u81f4\u65e0\u6cd5\u4e0e github \u5efa\u7acb\u8fde\u63a5\uff0c\u5efa\u8bae\u79d1\u5b66\u4e0a\u7f51\u5e76\u5207\u6362\u5230\u865a\u62df\u7f51\u5361\u6a21\u5f0f\u91cd\u8bd5\u3002</p>"},{"location":"get_start/developer/#e-installation-demo","title":"E. \u5b89\u88c5\u6f14\u793a \uff08Installation Demo\uff09","text":""},{"location":"get_start/install/","title":"SAGE \u5b89\u88c5\u6307\u5357","text":"<p>\u672c\u6587\u6863\u5c06\u6307\u5bfc\u60a8\u5982\u4f55 \u5b89\u88c5 SAGE \u53ca\u5176\u76f8\u5173\u4f9d\u8d56\u3002\u8bf7\u6839\u636e\u60a8\u7684\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u5b89\u88c5\u65b9\u5f0f\u3002</p>"},{"location":"get_start/install/#a-prerequisites","title":"A. \u524d\u7f6e\u8981\u6c42 (Prerequisites)","text":"<p>\u5728\u5f00\u59cb\u5b89\u88c5\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u7684\u5f00\u53d1\u73af\u5883\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a</p> <ul> <li>\u64cd\u4f5c\u7cfb\u7edf (OS)\uff1aUbuntu 22.04\u53ca\u4ee5\u4e0a\u7248\u672c</li> <li>\u57fa\u7840\u4f9d\u8d56\uff1aAnaconda/Miniconda </li> <li>\u5907\u6ce8\uff1a\u5efa\u8bae\u4f7f\u7528\u7248\u672c \u2265 3.11.10 \u7684 Python \u89e3\u91ca\u5668\u3002</li> </ul> <p>\u5229\u7528 Conda \u5728\u865a\u62df\u73af\u5883\u4e2d\u521b\u5efa\u5e76\u6fc0\u6d3b\u73af\u5883\uff1a</p> <pre><code>conda create -n sage python=3.11.10\nconda activate sage\n</code></pre> <p>\u6e29\u99a8\u63d0\u793a\uff1a\u82e5 Conda \u521b\u5efa\u5931\u8d25\uff0c\u53ef\u80fd\u662f\u7f51\u7edc\u95ee\u9898\u5bfc\u81f4\uff0c\u8bf7\u53ca\u65f6\u66f4\u6362 Conda \u6e90\u3002</p>"},{"location":"get_start/install/#b-installation","title":"B. \u4e0b\u8f7d\u5b89\u88c5 (Installation)","text":"<p>SAGE \u63d0\u4f9b\u7b80\u5355\u7684\u5b89\u88c5\u65b9\u5f0f\uff0c\u60a8\u53ea\u9700\u901a\u8fc7 <code>pip install isage</code> \u547d\u4ee4\uff0c\u5373\u53ef\u5b8c\u6210\u5b89\u88c5\uff0c\u65e0\u9700\u4e0b\u8f7d\u6e90\u7801\uff0c\u9002\u5408\u5feb\u901f\u90e8\u7f72\u548c\u4f7f\u7528\u3002</p> <p>\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b8c\u6210\u5b89\u88c5\uff1a</p> <pre><code># \u5b89\u88c5\u524d\u8bf7\u786e\u4fdd\u60a8\u5904\u5728\u6b63\u786e\u7684Python\u73af\u5883\u4e0b\npip install isage\n</code></pre>"},{"location":"get_start/install/#c-verify-installation","title":"C. \u9a8c\u8bc1\u5b89\u88c5 (Verify Installation)","text":"<p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4efb\u4e00\u65b9\u5f0f\u6765\u9a8c\u8bc1 SAGE \u662f\u5426\u5df2\u6210\u529f\u5b89\u88c5\u3002</p>"},{"location":"get_start/install/#1","title":"\u65b9\u6cd51\uff1a\u67e5\u770b\u5305\u4fe1\u606f","text":"<p>\u8fd0\u884c <code>pip show</code> \u4ee5\u68c0\u67e5 SAGE \u7684\u5b89\u88c5\u60c5\u51b5\u3002</p> <pre><code>pip show isage\n</code></pre> <p>\u60a8\u5c06\u4f1a\u770b\u5230\u4ee5\u4e0b\u7684\u7c7b\u4f3c\u8f93\u51fa\uff1a</p> <pre><code>Name: isage\nVersion: 0.1.3.1\nSummary: SAGE (Meta Package)\nHome-page: https://github.com/intellistream/SAGE\nAuthor: \nAuthor-email: SAGE Team &lt;shuhao_zhang@hust.edu.cn&gt;\nLicense: MIT\nLocation: /path/to/your/python/site-packages\nRequires: isage-common, isage-kernel, isage-libs, isage-middleware\nRequired-by:\n</code></pre>"},{"location":"get_start/install/#2-sage-helloworld","title":"\u65b9\u6cd52\uff1a\u8fd0\u884c SAGE HelloWorld \u7a0b\u5e8f","text":"<p>\u6267\u884c SAGE \u5b98\u65b9\u53d1\u5e03\u4ed3\u5e93\u4e0b(\u76ee\u524d\u4e3a\u79c1\u6709\u5e93) <code>hello_world.py</code> Python \u6587\u4ef6\u3002</p> <pre><code>python hello_world.py\n</code></pre> <p>hello_world.py\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\n\n# \u6279\u5904\u7406\u6570\u636e\u6e90\uff1a\u4f5c\u7528\u662f\u751f\u621010\u6761\"Hello, World!\"\u5b57\u7b26\u4e32\nclass HelloBatch(BatchFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.counter = 0\n        self.max_count = 10     # \u751f\u621010\u4e2a\u6570\u636e\u5305\u540e\u8fd4\u56deNone\n\n    def execute(self):\n        if self.counter &gt;= self.max_count:\n            return None         # \u8fd4\u56deNone\u8868\u793a\u6279\u5904\u7406\u5b8c\u6210\n        self.counter += 1\n        return f\"Hello, World! #{self.counter}\"\n\n# \u7b80\u5355\u7684 MapFunction\uff0c\u5c06\u5185\u5bb9\u8f6c\u5927\u5199\nclass UpperCaseMap(MapFunction):\n    def execute(self, data):\n        return data.upper()\n\n# \u7b80\u5355 SinkFunction\uff0c\u76f4\u63a5\u6253\u5370\u7ed3\u679c\nclass PrintSink(SinkFunction):\n    def execute(self, data):\n        print(data)\n\ndef main():\n    env = LocalEnvironment(\"Hello_World\")\n\n    # \u6279\u5904\u7406\u6e90 -&gt; map -&gt; sink\n    env.from_batch(HelloBatch).map(UpperCaseMap).sink(PrintSink)\n\n    env.submit(autostop=True)\n    print(\"Hello World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\")\n\nif __name__ == \"__main__\":\n    # \u5173\u95ed\u65e5\u5fd7\u8f93\u51fa\n    CustomLogger.disable_global_console_debug()\n    main()\n</code></pre></p> <p>\u60a8\u5c06\u4f1a\u770b\u5230\u4e00\u7cfb\u5217\u7684\u7ec8\u7aef\u8f93\u51fa\uff0c\u8868\u660e\u60a8\u987a\u5229\u5b8c\u6210 SAGE \u7684\u5b89\u88c5\u3002</p> <pre><code>Waiting for batch processing to complete...\nHELLO, WORLD! #1\nHELLO, WORLD! #2\nHELLO, WORLD! #3\nHELLO, WORLD! #4\nHELLO, WORLD! #5\nHELLO, WORLD! #6\nHELLO, WORLD! #7\nHELLO, WORLD! #8\nHELLO, WORLD! #9\nHELLO, WORLD! #10\nHello World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\n</code></pre> <p>\u81f3\u6b64\uff0c\u60a8\u5df2\u6210\u529f\u5b89\u88c5 SAGE\uff0c\u795d\u60a8\u4f7f\u7528\u6109\u5feb\uff01</p>"},{"location":"get_start/install/#dpip-install","title":"D.pip install\u65f6\u53ef\u80fd\u9047\u5230\u7684\u95ee\u9898\u4ee5\u53ca\u89e3\u51b3\u65b9\u6848","text":"<p> Python\u7248\u672c\u8fc7\u9ad8\uff0c\u62a5\u9519\u5982\u4e0b\uff1a</p> <p><pre><code>Building wheels for collected packages: faiss-cpu, sgmllib3k\n  Building wheel for faiss-cpu (pyproject.toml) ... error\n  error: subprocess-exited-with-error\n\n  \u00d7 Building wheel for faiss-cpu (pyproject.toml) did not run successfully.\n  \u2502 exit code: 1\n  \u2570\u2500&gt; [138 lines of output]\n      /tmp/pip-build-env-08i_jo3h/overlay/lib/python3.13/site-packages/setuptools/config/_apply_pyprojecttoml.py:82: SetuptoolsDeprecationWarning: `project.license` as a TOML table is deprecated\n\u2026\nnote: This error originates from a subprocess, and is likely not a problem with pip.\n  ERROR: Failed building wheel for faiss-cpu\n</code></pre> \u95ee\u9898\u5206\u6790\uff1aFaiss\u5b98\u65b9\u5305\u8fd8\u6ca1\u652f\u6301\u5230Python 3.13\uff0c\u652f\u6301\u8303\u56f4\u4e3a3.7~3.12\uff0c\u56e0\u6b64\u63a8\u8350\u4f7f\u75283.11\u3002</p>"},{"location":"get_start/quickstart/","title":"\u6982\u89c8","text":"<p>\u672c\u7248\u5757\u5269\u4f59\u7684\u90e8\u5206\u5c06\u4e13\u95e8\u901a\u8fc7\u4e00\u7cfb\u5217 \u5b9e\u6218\u793a\u4f8b\uff0c\u5e2e\u52a9\u4f60\u5feb\u901f\u7406\u89e3\u5e76\u4e0a\u624b\u4f7f\u7528 SAGE\uff0c\u5982\u679c\u4f60\u60f3\u8fdb\u4e00\u6b65\u4e86\u89e3\u6709\u5173 SAGE \u7f16\u7a0b\u7684\u7ec6\u8282\uff0c\u8bf7\u79fb\u6b65\u81f3 SAGE-\u7f16\u7a0b\u6307\u5357\u67e5\u770b\u76f8\u5173\u5185\u5bb9\u3002</p> <p>\u8fd9\u4e9b\u793a\u4f8b\u8986\u76d6\u4e86\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\uff0c\u65e8\u5728\u8ba9\u4f60\u5728\u6700\u77ed\u7684\u65f6\u95f4\u5185\u638c\u63e1\u6846\u67b6\u7684\u6838\u5fc3\u7528\u6cd5\uff0c\u5e76\u4e3a\u540e\u7eed\u66f4\u6df1\u5165\u7684\u5f00\u53d1\u63d0\u4f9b\u53c2\u8003\u3002</p>"},{"location":"get_start/quickstart/#cpu","title":"\u261e CPU \u8d1f\u8f7d\u76f8\u5173\u901f\u67e5","text":"<p>CPU \u8d1f\u8f7d\u76f8\u5173 \u6307\u7684\u662f\u65e0\u9700\u4f7f\u7528\u663e\u5361\uff08GPU\uff09\u5373\u53ef\u5b8c\u6210\u7684\u793a\u4f8b\u3002\u8fd9\u7c7b\u793a\u4f8b\u53ea\u4f9d\u8d56 CPU \u8ba1\u7b97\uff0c\u66f4\u9002\u5408\u5728\u6ca1\u6709\u914d\u7f6e GPU \u7684\u73af\u5883\u4e0b\u8fdb\u884c\u5feb\u901f\u5c1d\u8bd5\u548c\u5b66\u4e60\u3002</p> <ol> <li>Hello SAGE\uff1a\u7b80\u5355\u7684 SAGE Hello World \u793a\u4f8b\uff0c\u4e86\u89e3 SAGE \u57fa\u672c\u7f16\u7a0b\u63a5\u53e3 \u2192 \u793a\u4f8b\u94fe\u63a5</li> <li>Finite / Infinite Stream\uff1a\u6709\u65e0\u754c\u6570\u636e\u6d41\u793a\u4f8b\uff0c\u4e86\u89e3 SAGE \u7684\u57fa\u672c\u6570\u636e\u6e90\u63a5\u53e3 \u2192 \u793a\u4f8b\u94fe\u63a5</li> <li>Micro Service\uff1a\u7b80\u5355\u7684 SAGE Micro Service\u793a\u4f8b\uff0c\u4e86\u89e3 SAGE \u7684\u5916\u90e8\u670d\u52a1\u63a5\u53e3 \u2192 \u793a\u4f8b\u94fe\u63a5</li> <li>One Handle Pipeline\uff1a\u7279\u6b8a\u6570\u636e\u5904\u7406 Pipeline \uff0c\u5229\u7528\u4fe1\u53f7\u673a\u5236\u5b9e\u73b0 Pipeline \u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u88ab\u5904\u7406 \u2192 \u793a\u4f8b\u94fe\u63a5</li> </ol>"},{"location":"get_start/quickstart/#gpu","title":"\u261e GPU \u8d1f\u8f7d\u76f8\u5173\u901f\u67e5","text":"<p>GPU \u8d1f\u8f7d\u76f8\u5173 \u6307\u7684\u662f\u9700\u8981\u501f\u52a9\u663e\u5361\uff08GPU\uff09\u6765\u5b8c\u6210\u8ba1\u7b97\u7684\u793a\u4f8b\u3002\u8fd9\u7c7b\u793a\u4f8b\u901a\u5e38\u7528\u4e8e\u66f4\u9ad8\u5e76\u884c\u5ea6\u6216\u66f4\u5927\u89c4\u6a21\u7684\u6570\u636e\u5904\u7406\uff0c\u80fd\u591f\u663e\u8457\u63d0\u5347\u8fd0\u884c\u901f\u5ea6\uff0c\u4f46\u524d\u63d0\u662f\u4f60\u7684\u73af\u5883\u4e2d\u5df2\u6b63\u786e\u914d\u7f6e\u4e86 GPU \u6216\u8005\u4f7f\u7528 <code>API \u8c03\u7528</code> \u7b49\u4e91\u670d\u52a1\u3002</p>"},{"location":"get_start/quickstart/#_2","title":"\u261e \u5206\u5e03\u5f0f\u76f8\u5173\u901f\u67e5","text":"<p>\u5206\u5e03\u5f0f\u76f8\u5173 \u6307\u7684\u662f\u9700\u8981\u5728\u591a\u53f0\u673a\u5668\u4e4b\u95f4\u534f\u540c\u8fd0\u884c\u7684\u793a\u4f8b\u3002\u8fd9\u7c7b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5728\u96c6\u7fa4\u73af\u5883\u4e0b\u5206\u914d\u4efb\u52a1\u3001\u534f\u8c03\u901a\u4fe1\uff0c\u5e76\u63d0\u5347\u6574\u4f53\u8ba1\u7b97\u6548\u7387\u3002\u9002\u5408\u6709\u591a\u8282\u70b9\u8d44\u6e90\u3001\u9700\u8981\u5904\u7406\u8d85\u5927\u89c4\u6a21\u6570\u636e\u6216\u9ad8\u5e76\u53d1\u4efb\u52a1\u7684\u573a\u666f\u3002</p>"},{"location":"get_start/quickstart/#_3","title":"\u261e \u5e38\u89c1\u9519\u8bef\u901f\u67e5","text":""},{"location":"get_start/cpu_examples/hello_sage/","title":"Hello SAGE","text":"<p>\u672c\u4f8b\u4f4d\u4e8e SAGE Repo \u4e0b\u7684 <code>examples/tutorials/hello_world.py</code></p> <pre><code>graph LR\n    A[HelloBatch] --&gt; B[UpperCaseMap]\n    B --&gt; C[PrintSink]</code></pre>"},{"location":"get_start/cpu_examples/hello_sage/#_1","title":"\u793a\u4f8b\u89e3\u6790","text":"<p>\u4f5c\u4e3a SAGE \u7684\u5165\u95e8\u7a0b\u5e8f\uff0c <code>hello_world.py</code> \u6db5\u76d6\u4e86 SAGE \u7f16\u7a0b\u6240\u9700\u7684\u57fa\u672c\u63a5\u53e3\uff1a</p> <ol> <li>\u914d\u7f6e\u8fd0\u884c\u73af\u5883</li> <li>\u58f0\u660e\u6570\u636e\u6d41\u5165</li> <li>\u5b9a\u4e49\u6570\u636e\u5904\u7406\u903b\u8f91</li> <li>\u58f0\u660e\u6570\u636e\u6d41\u51fa</li> <li>\u63d0\u4ea4\u4efb\u52a1</li> </ol> <p>\u5176\u7a0b\u5e8f\u5982\u4e0b\uff1a</p> Python<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\n\n# \u58f0\u660e\u6570\u636e\u6d41\u5165\uff1a\u751f\u621010\u6761\"Hello, World!\"\u5b57\u7b26\u4e32\nclass HelloBatch(BatchFunction):\n    def __init__(self):\n        super().__init__()\n        self.counter = 0\n        # \u751f\u621010\u4e2a\u6570\u636e\u5305\n        self.max_count = 10     \n\n    def execute(self):\n        if self.counter = self.max_count:\n            return None         \n        # \u8fd4\u56deNone\u8868\u793a\u6279\u5904\u7406\u5b8c\u6210\n        self.counter += 1\n        return f\"Hello, World! #{self.counter}\"\n\n# \u5b9a\u4e49\u6570\u636e\u5904\u7406\u903b\u8f91\uff0c\u5c06\u5b57\u7b26\u4e32\u8f6c\u5927\u5199\nclass UpperCaseMap(MapFunction):\n    def execute(self, data):\n        return data.upper()\n\n# \u58f0\u660e\u6570\u636e\u6d41\u51fa\uff0c\u6253\u5370\u7ed3\u679c\nclass PrintSink(SinkFunction):\n    def execute(self, data):\n        print(data)\n\ndef main():\n    env = LocalEnvironment(\"Hello_World\")\n\n    # \u5b9a\u4e49\u6570\u636e\u5904\u7406\u903b\u8f91\uff0c\u8fde\u63a5\u7b97\u5b50\u7ec4\u6210 Pipeline\n    env.from_batch(HelloBatch).map(UpperCaseMap).sink(PrintSink)\n\n    # \u63d0\u4ea4 pipeline\uff0c\u5e76\u542f\u52a8\u81ea\u52a8\u505c\u6b62\n    env.submit(autostop=True)\n\n    print(\"Hello World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\")\n\nif __name__ == \"__main__\":\n    # \u5173\u95ed\u65e5\u5fd7\u8f93\u51fa\n    CustomLogger.disable_global_console_debug()\n    main()\n</code></pre> <p>\u4e0b\u9762\u6211\u4eec\u5c06\u5bf9\u8fd9\u4e9b\u90e8\u5206\u9010\u4e00\u8fdb\u884c\u6982\u8ff0\uff0c\u4ee5\u4fbf\u7406\u89e3 SAGE \u7f16\u7a0b\u7684\u4e3b\u8981\u601d\u60f3\uff1a</p>"},{"location":"get_start/cpu_examples/hello_sage/#a-hellobatch","title":"A. <code>HelloBatch</code>\uff1a\u58f0\u660e\u6570\u636e\u6d41\u5165","text":"<pre><code>class HelloBatch(BatchFunction):\n    def __init__(self):\n        super().__init__()\n        self.counter = 0\n        self.max_count = 10 \n\n    def execute(self):\n        if self.counter = self.max_count:\n            return None \n        self.counter += 1\n        return f\"Hello, World! #{self.counter}\"\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ee7\u627f\u81ea <code>BatchFunction</code>\uff0c\u9700\u8981\u5b9e\u4f8b\u5316\u62bd\u8c61\u63a5\u53e3 <code>execute()</code>\uff0c\u7528\u4e8e\u6279\u91cf\u751f\u6210\u6570\u636e\uff0creturn\u8fd4\u56de\u7684\u503c\u5373\u662f\u4f20\u9012\u7ed9\u4e0b\u6e38\u7684\u6570\u636e\u3002</li> <li>\u6bcf\u8c03\u7528\u4e00\u6b21 <code>execute()</code>\uff0c\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 <code>\"Hello, World! #\u7f16\u53f7\"</code> \u5b57\u7b26\u4e32\u3002</li> <li>\u5f53\u751f\u6210 10 \u6761\u6570\u636e\u540e\uff0c\u8fd4\u56de <code>None</code>\uff0c\u901a\u77e5\u6846\u67b6\u6570\u636e\u5df2\u7ecf\u751f\u6210\u5b8c\u6bd5\uff0c\u6570\u636e\u6e90\u81ea\u52a8\u7ed3\u675f\u3002</li> </ul>"},{"location":"get_start/cpu_examples/hello_sage/#buppercasemap","title":"B.<code>UpperCaseMap</code>\uff1a\u6570\u636e\u8f6c\u6362","text":"<pre><code>class UpperCaseMap(MapFunction):\n    def execute(self, data):\n        return data.upper()\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ee7\u627f\u81ea <code>MapFunction</code>\uff0c\u8fd9\u662f SAGE \u4e2d\u5e38\u89c1\u7684\u6570\u636e\u8f6c\u6362\u8282\u70b9\uff08map\uff09\u3002</li> <li>\u5bf9\u4f20\u5165\u7684\u6bcf\u6761\u6570\u636e\u6267\u884c <code>.upper()</code>\uff0c\u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199\u3002</li> </ul>"},{"location":"get_start/cpu_examples/hello_sage/#cprintsink","title":"C.<code>PrintSink</code>\uff1a\u58f0\u660e\u6570\u636e\u6d41\u51fa","text":"<pre><code>class PrintSink(SinkFunction):\n    def execute(self, data):\n        print(data)\n        return data\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ee7\u627f\u81ea <code>SinkFunction</code>\uff0c\u7528\u4f5c\u6570\u636e\u5904\u7406\u7684\u201c\u7ec8\u70b9\u201d\u3002</li> <li>\u6bcf\u6536\u5230\u4e00\u6761\u6570\u636e\uff0c\u76f4\u63a5\u6253\u5370\u8f93\u51fa\u3002</li> </ul>"},{"location":"get_start/cpu_examples/hello_sage/#dmainpipeline","title":"D.<code>main</code>\u51fd\u6570\uff1aPipeline\u642d\u5efa","text":"<pre><code>def main():\n    env = LocalEnvironment(\"Hello_World\")\n\n    # transformation\uff1afrom_batch - map - sink\n    env.from_batch(HelloBatch).map(UpperCaseMap).sink(PrintSink)\n\n    # \u63d0\u4ea4 pipeline\uff0c\u5e76\u542f\u52a8\u81ea\u52a8\u505c\u6b62\uff08\u4ec5from_batch\u6a21\u5f0f\u6709\u6548\uff09\n    env.submit(autostop=True)\n\n    print(\"Hello World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\")\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u521b\u5efa\u672c\u5730\u6267\u884c\u73af\u5883 <code>LocalEnvironment</code>\uff0c\u65b9\u4fbf\u672c\u5730\u5f00\u53d1\u4e0e\u8c03\u8bd5\u3002</li> <li> <p>\u7528\u94fe\u5f0f API \u5b9a\u4e49\u6570\u636e\u6d41\u5904\u7406\u6b65\u9aa4\uff1a</p> </li> <li> <p><code>from_batch()</code>\uff1a\u6307\u5b9a\u6570\u636e\u8f93\u5165\u6e90</p> </li> <li><code>.map()</code>\uff1a\u6700\u5e38\u7528\u7684\u6570\u636e\u8fde\u63a5\uff0c\u4e00\u5bf9\u4e00\u5411\u4e0a\u4e0b\u6e38\u4f20\u9012\u6570\u636e</li> <li><code>.sink()</code>\uff1a\u6307\u5b9a\u6570\u636e\u8f93\u51fa\u7ec8\u70b9</li> <li><code>env.submit(autostop=True)</code>\uff1a\u542f\u52a8\u4efb\u52a1\u3002</li> </ul>"},{"location":"get_start/cpu_examples/hello_sage/#e","title":"E.\u8fd0\u884c\u6548\u679c","text":"<p>\u63a7\u5236\u53f0\u8f93\u51fa\u6548\u679c\uff1a</p> <pre><code>JobManager logs: ***/.sage/logs/jobmanager/session_***\nHELLO, WORLD! #1\nHELLO, WORLD! #2\nHELLO, WORLD! #3\nHELLO, WORLD! #4\nHELLO, WORLD! #5\nHELLO, WORLD! #6\nHELLO, WORLD! #7\nHELLO, WORLD! #8\nHELLO, WORLD! #9\nHELLO, WORLD! #10\nHello World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\n</code></pre>"},{"location":"get_start/cpu_examples/hello_sage/#_2","title":"\u7ed3\u8bed","text":"<p>Hello SAGE \u7a0b\u5e8f\u5c55\u793a\u4e86 SAGE \u7f16\u7a0b\u6240\u9700\u7684\u57fa\u672c\u63a5\u53e3\uff1aenv\u3001from_batch\u3001map\u3001sink\u3001submit\u3001\u51e0\u7c7bfunction\u4ee5\u53ca\u5bf9\u5e94\u9700\u8981\u5b9e\u73b0\u7684execute\u51fd\u6570\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u7f16\u7a0b\u4eba\u5458\u9700\u8981\u5b9a\u4e49\u597d \u6570\u636e\u5904\u7406\u5355\u5143 \uff08\u5373\u5b9e\u73b0\u62bd\u8c61Function\uff09\u4ee5\u53ca Pipeline \uff08\u5229\u7528env\u3001map\u3001sink\u3001env\u7b49\u63a5\u53e3\uff09\uff0c\u6700\u7ec8 \u63d0\u4ea4Pipeline \u4ee5\u5b9e\u73b0\u4e2a\u6027\u5316\u7684\u6570\u636e\u5904\u7406\u7a0b\u5e8f\u3002</p>"},{"location":"get_start/cpu_examples/micro_service/","title":"Micro Service - \u5fae\u670d\u52a1","text":"<p>\u672c\u4f8b\u4f4d\u4e8e SAGE Repo \u4e0b\u7684 <code>examples/tutorials/service-api/hello_service_world.py</code></p> <pre><code>graph LR\n    A[HelloBatch] --&gt; B[UpperCaseMap]\n    B --&gt; C[PrintSink]\n    B -.-&gt; D[Service]</code></pre>"},{"location":"get_start/cpu_examples/micro_service/#_1","title":"\u793a\u4f8b\u89e3\u6790","text":"<p>\u5728\u642d\u5efa SAGE Pipeline\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u65f6\u4f1a\u9700\u8981\u7528 \u72ec\u5360\u5f0f\u7684\u670d\u52a1\uff0c\u4f8b\u5982\u8bb0\u5fc6\u670d\u52a1\u3001\u5de5\u5177\u8c03\u7528\u3001\u5916\u90e8\u6a21\u578b\u8c03\u7528\u7b49\u7b49\uff0c\u672c\u6587\u6863\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 SAGE \u5fae\u670d\u52a1\u3002</p> <p>\u793a\u4f8b\u7a0b\u5e8f\u5982\u4e0b\uff1a</p> Python<pre><code>from sage.core.api.service.base_service import BaseService\nfrom sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\n\nclass HelloBatch(BatchFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.counter = 0\n        self.max_count = 10  \n\n    def execute(self):\n        if self.counter &gt;= self.max_count:\n            return None  \n        self.counter += 1\n        return f\"Hello, World! #{self.counter}\"\n\nclass PrintSink(SinkFunction):\n    def execute(self, data):\n        # \u8c03\u7528\u670d\u52a1\n        self.call_service[\"hello_service\"].hello()\n        print(data)\n\n# \u7ee7\u627fBaseService\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u670d\u52a1\nclass HelloService(BaseService):\n    def __init__(self):\n        self.message = \"hello service!!!\"\n\n    def hello(self):\n        print(self.message)\n\n\ndef main():\n    env = LocalEnvironment(\"hello_service\")\n\n    # \u6ce8\u518c\u670d\u52a1\n    env.register_service(\"hello_service\", HelloService)\n\n    env.from_batch(HelloBatch).sink(PrintSink)\n\n    env.submit(autostop=True)\n    print(\"Hello Service World \u793a\u4f8b\u5b8c\u6210!\")\n\nif __name__ == \"__main__\":\n    CustomLogger.disable_global_console_debug()\n    main()\n</code></pre> <p>\u672c\u4f8b\u7531 <code>Hello SAGE</code> \u6539\u52a8\u800c\u6765\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u5bf9\u8fd9\u4e9b\u6539\u52a8\u90e8\u5206\u9010\u4e00\u8fdb\u884c\u6982\u8ff0\uff0c\u4ee5\u4fbf\u7406\u89e3 SAGE \u5fae\u670d\u52a1\u7684\u4e3b\u8981\u601d\u60f3\uff1a</p>"},{"location":"get_start/cpu_examples/micro_service/#a-helloservice","title":"A. <code>HelloService</code>\uff1a\u670d\u52a1\u5b9a\u4e49","text":"<pre><code>class HelloService(BaseService):\n    def __init__(self):\n        self.message = \"hello service!!!\"\n\n    def hello(self):\n        print(self.message)\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ee7\u627f\u81ea <code>BaseService</code>\uff0c \u5728\u7f16\u8bd1\u7684\u65f6\u5019 SAGE \u4f1a\u81ea\u52a8\u6ce8\u5165\u4e0a\u4e0b\u6587\uff0c\u8ba9\u7b97\u5b50\u627e\u5230\u76f8\u5e94\u7684\u670d\u52a1\u3002</li> <li>\u58f0\u660e\u4e00\u4e2ahello\u65b9\u6cd5\uff0c\u4ee5\u4f9b\u7b97\u5b50\u8c03\u7528\u3002</li> </ul>"},{"location":"get_start/cpu_examples/micro_service/#b-call_service","title":"B. call_service \u7b97\u5b50\u670d\u52a1\u8c03\u7528","text":"<pre><code># \u8c03\u7528\u670d\u52a1\nself.call_service[\"hello_service\"].hello()\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7b97\u5b50\u5185\u90e8\u901a\u8fc7 <code>call_service[\"\u670d\u52a1\u540d\"].\u670d\u52a1\u65b9\u6cd5()</code> \u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002</li> </ul>"},{"location":"get_start/cpu_examples/micro_service/#c-register_service","title":"C. register_service \u670d\u52a1\u58f0\u660e","text":"<pre><code># \u6ce8\u518c\u670d\u52a1\nenv.register_service(\"hello_service\", HelloService)\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u9700\u8981\u5728env\u4e2d\u901a\u8fc7 <code>register_service(\"\u670d\u52a1\u540d\", \u670d\u52a1\u63d0\u4f9b\u5bf9\u8c61)</code> \u6765\u6ce8\u518c\u670d\u52a1</li> </ul>"},{"location":"get_start/cpu_examples/micro_service/#d","title":"D.\u8fd0\u884c\u6548\u679c","text":"<pre><code>ServiceFactory initialized for hello_service with class &lt;class '__main__.HelloService'&gt;\nJobManager logs: ***/.sage/logs/jobmanager/session_***\nhello service!!!\nHello, World! #1\nhello service!!!\nHello, World! #2\nhello service!!!\nHello, World! #3\nhello service!!!\nHello, World! #4\nhello service!!!\nHello, World! #5\nhello service!!!\nHello, World! #6\nhello service!!!\nHello, World! #7\nhello service!!!\nHello, World! #8\nhello service!!!\nHello, World! #9\nhello service!!!\nHello, World! #10\nHello Service World \u793a\u4f8b\u5b8c\u6210!\n</code></pre>"},{"location":"get_start/cpu_examples/micro_service/#_2","title":"\u7ed3\u8bed","text":"<p>\u5fae\u670d\u52a1\u7a0b\u5e8f\u4f5c\u4e3a Pipeline \u5185 \u6240\u6709\u7b97\u5b50\u90fd\u53ef\u4ee5\u8c03\u7528 \u7684\u7a0b\u5e8f\uff0c\u80fd\u4e3aPipeline\u7684\u8fd0\u884c\u63d0\u4f9b\u72ec\u7279\u7684\u4e0a\u4e0b\u6587\u53cd\u9988/\u8bb0\u5fc6\u7b49\u80fd\u529b\u3002\u603b\u7684\u6765\u8bf4\uff0c\u7f16\u7a0b\u4eba\u5458\u9700\u8981\u5b9a\u4e49\u597d\u670d\u52a1\u8c03\u7528\u903b\u8f91\uff08\u5373\u62c6\u89e3\u4e1a\u52a1\u903b\u8f91\uff0c\u5b9a\u4e49\u591a\u7b97\u5b50\u8c03\u7528\u670d\u52a1\u4e8b\u52a1\uff09\uff0c\u6700\u7ec8\u5b9e\u73b0\u5e26\u6709\u8bb0\u5fc6\u7b49\u5916\u90e8\u670d\u52a1\u7684\u63a8\u7406\u7a0b\u5e8f\u3002</p>"},{"location":"get_start/cpu_examples/onebyone/","title":"One Handle Pipeline","text":"<p>\u672c\u4f8b\u4f4d\u4e8e SAGE Repo \u4e0b\u7684 <code>examples/tutorials/stream_mode/hello_onebyone_world.py</code></p> <pre><code>graph LR\n    A[SyncBatch] --&gt; B[UpperMap]\n    B --&gt; C[SyncSink]</code></pre>"},{"location":"get_start/cpu_examples/onebyone/#_1","title":"\u793a\u4f8b\u89e3\u6790","text":"<p>\u5bf9\u6bd4\u4e8ehello_sage \u793a\u4f8b\uff0c <code>hello_onebyone_world.py</code> \u65b0\u589e\u4e86\u4e32\u884c\u5316\u7684\u7279\u6027:</p> <ol> <li>\u5f15\u5165 Metronome\uff1a\u901a\u8fc7 Metronome \u5b9e\u73b0\u7b97\u5b50\u95f4\u7684\u540c\u6b65\uff0c\u786e\u4fdd\u6570\u636e\u6309\u987a\u5e8f\u5904\u7406\u3002</li> </ol> <p>\u5176\u7a0b\u5e8f\u5982\u4e0b\uff1a</p> Python<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\nfrom sage.core.communication.metronome import create_metronome\nimport time \n\nmetronome = create_metronome(\"sync_metronome\")\n\nclass SyncBatch(BatchFunction):\n    use_metronome = True\n\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.counter = 0\n        self.max_count = 5\n        self.metronome = metronome\n\n    def execute(self):\n        if self.counter &gt;= self.max_count:\n            return None\n        self.counter += 1\n        data = f\"hello, No. {str(self.counter)} one by one world~\"\n        print(f\" \u26a1 {data}\")\n        return data\n\nclass UpperMap(MapFunction):\n    def execute(self, data):\n        print(f\" \ud83d\udd14 uppering word!!!\")\n        time.sleep(1)  \n        return data.upper()\n\nclass SyncSink(SinkFunction):\n    use_metronome = True\n\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.metronome = metronome\n\n    def execute(self, data):\n        print(f\" \u2705 {data}\")\n        time.sleep(1)  \n\ndef main():   \n    metronome.release_once()\n    env = LocalEnvironment(\"Test_Sync\")\n    env.from_batch(SyncBatch).map(UpperMap).sink(SyncSink)\n    env.submit(autostop=True)\n    print(\"Hello one by one World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\")\n\nif __name__ == \"__main__\":\n    CustomLogger.disable_global_console_debug()\n    main()\n</code></pre> <p>\u4e0b\u9762\u6211\u4eec\u5c06\u5bf9\u65b0\u589e\u7684\u90e8\u5206\u8fdb\u884c\u89e3\u6790\uff1a</p>"},{"location":"get_start/cpu_examples/onebyone/#use_metronome","title":"\u5f15\u5165 use_metronome \u6210\u5458\u53d8\u91cf","text":"<p>\u5728BaseFunction\u4e2d\u5f15\u5165\u4e86 <code>use_metronome</code> \u6210\u5458\u53d8\u91cf\uff0c\u8868\u793a\u8be5\u7b97\u5b50\u662f\u5426\u662f\u987a\u5e8f\u6267\u884c</p> <pre><code>use_metronome = True\n</code></pre>"},{"location":"get_start/cpu_examples/onebyone/#_2","title":"\u8fd0\u884c\u7ed3\u679c","text":"<p>\u63a7\u5236\u53f0\u8f93\u51fa\u6548\u679c\uff1a</p> <pre><code>JobManager logs: ***/.sage/logs/jobmanager/session_***\n\u26a1 hello, No. 1 one by one world~\n\ud83d\udd14 uppering word!!!\n\u2705 HELLO, NO. 1 ONE BY ONE WORLD~\n\u26a1 hello, No. 2 one by one world~\n\ud83d\udd14 uppering word!!!\n\u2705 HELLO, NO. 2 ONE BY ONE WORLD~\n\u26a1 hello, No. 3 one by one world~\n\ud83d\udd14 uppering word!!!\n\u2705 HELLO, NO. 3 ONE BY ONE WORLD~\n\u26a1 hello, No. 4 one by one world~\n\ud83d\udd14 uppering word!!!\n\u2705 HELLO, NO. 4 ONE BY ONE WORLD~\n\u26a1 hello, No. 5 one by one world~\n\ud83d\udd14 uppering word!!!\n\u2705 HELLO, NO. 5 ONE BY ONE WORLD~\n\u2705 None\nHello one by one World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\n</code></pre>"},{"location":"get_start/cpu_examples/onebyone/#_3","title":"\u7ed3\u8bed","text":"<p>Hello OnebyOne SAGE \u7a0b\u5e8f\u5c55\u793a\u4e86 SAGE \u4e32\u884c\u5316\u7f16\u7a0b\u6240\u9700\u7684\u57fa\u672c\u63a5\u53e3\uff1aenv\u3001from_batch\u3001map\u3001sink\u3001submit\u3001\u51e0\u7c7bfunction\u4ee5\u53ca\u5bf9\u5e94\u9700\u8981\u5b9e\u73b0\u7684execute\u51fd\u6570, \u540c\u65f6\u5728function\u4e2d\u7684\u6210\u5458\u5b9a\u4e49use_metronome \u51b3\u5b9afunction\u662f\u5426\u4e32\u884c\u5316\u6267\u884c\uff0c\u603b\u7684\u6765\u8bf4\uff0c\u4e32\u884c\u5316\u63a5\u53e3\u66f4\u591a\u7528\u4e8e\u672c\u5730\u6d4b\u8bd5\u529f\u80fd\u662f\u5426\u80fd\u6b63\u5e38\u8fd0\u884c, \u5728\u8bbe\u8ba1\u4e0a sage \u53ea\u9700\u8981\u5728function\u58f0\u660e\u4e2d, \u5b9a\u4e49 use_metronome = True \u5373\u53ef\u5b9e\u73b0\u4e32\u884c\u5316\u6267\u884c\uff0c \u4f46\u5728\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5efa\u8bae\u4f7f\u7528\u5e76\u884c\u5316\u63a5\u53e3\u4ee5\u63d0\u5347\u8ba1\u7b97\u6548\u7387\u3002</p>"},{"location":"get_start/cpu_examples/streaming/limited_streaming/","title":"\u6709\u754c\u6d41\u5904\u7406 (Finite Stream)","text":"<p>\u672c\u4f8b\u4f4d\u4e8e SAGE Repo \u4e0b\u7684 <code>examples/tutorials/core-api/wordcount_batch_example.py</code></p> <pre><code>graph LR\n    A[SentenceBatch] --&gt; B[SplitWords]\n    B --&gt; C[WordToPair]\n    C --&gt; D[PrintResult]</code></pre>"},{"location":"get_start/cpu_examples/streaming/limited_streaming/#_1","title":"\u793a\u4f8b\u89e3\u6790","text":"<p>\u6709\u754c\u6d41\u5904\u7406\u6a21\u62df\u771f\u5b9e\u4e16\u754c\u4e2d\u7684 \u6279\u91cf\u6570\u636e\u5206\u6790 \u573a\u666f\uff0c\u5982\u65e5\u5fd7\u5206\u6790\u3001\u62a5\u8868\u751f\u6210\u3001\u6570\u636e\u8fc1\u79fb\u7b49\u3002\u5b83\u5f3a\u8c03\u5b8c\u6574\u6027\u548c\u786e\u5b9a\u6027\uff0c\u662f\u6784\u5efa\u53ef\u9760\u6570\u636e\u5904\u7406\u7cfb\u7edf\u7684\u57fa\u7840\u6a21\u5f0f\u3002</p> <p>\u793a\u4f8b\u7a0b\u5e8f\u5982\u4e0b\uff1a</p> Python<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.core.api.function.flatmap_function import FlatMapFunction\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\n\n# \u6279\u5904\u7406\u6570\u636e\u6e90\uff1a\u751f\u6210\u51e0\u884c\u53e5\u5b50\nclass SentenceBatch(BatchFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.sentences = [\n            \"hello world\",\n            \"hello sage\",\n            \"hello chatgpt\",\n            \"world of ai\",\n            \"sage world\"\n        ]\n        self.index = 0\n\n    def execute(self):\n        if self.index &gt;= len(self.sentences):\n            return None\n        sentence = self.sentences[self.index]\n        self.index += 1\n        return sentence\n\n\n# \u62c6\u5206\u53e5\u5b50\u4e3a\u5355\u8bcd\nclass SplitWords(FlatMapFunction):\n    def execute(self, data):\n        return data.split()\n\n\n# \u8f6c\u6362\u4e3a (word, 1)\nclass WordToPair(MapFunction):\n    def execute(self, data):\n        return (data, 1)\n\n\nclass PrintResult(SinkFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.counts = {}\n\n    def execute(self, data):\n        word, cnt = data\n        self.counts[word] = self.counts.get(word, 0) + cnt\n\n    def close(self):\n        print(\"WordCount \u7ed3\u679c\uff1a\")\n        for word, count in self.counts.items():\n            print(f\"{word}: {count}\")\n\ndef main():\n    env = LocalEnvironment(\"WordCount\")\n\n    # \u6279\u5904\u7406\uff1a\u53e5\u5b50 -&gt; \u62c6\u5206\u5355\u8bcd -&gt; \u8f6c\u6362\u4e3a(word,1) -&gt; \u805a\u5408 -&gt; \u8f93\u51fa\n    env.from_batch(SentenceBatch) \\\n        .flatmap(SplitWords) \\\n        .map(WordToPair) \\\n        .sink(PrintResult)\n\n    env.submit(autostop=True)\n    print(\"WordCount \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\")\n\n\nif __name__ == \"__main__\":\n    CustomLogger.disable_global_console_debug()\n    main()\n</code></pre> <p>\u672c\u4f8b\u7531 <code>Hello SAGE</code> \u6539\u52a8\u800c\u6765\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u5bf9\u8fd9\u4e9b\u6539\u52a8\u90e8\u5206\u9010\u4e00\u8fdb\u884c\u6982\u8ff0\uff0c\u4ee5\u4fbf\u7406\u89e3 SAGE \u6709\u754c\u6d41\uff1a</p>"},{"location":"get_start/cpu_examples/streaming/limited_streaming/#a-sentencebatch","title":"A. <code>SentenceBatch</code>\uff1a\u6279\u91cf\u6570\u636e\u6e90","text":"<pre><code>class SentenceBatch(BatchFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.sentences = [\n            \"hello world\",\n            \"hello sage\",\n            \"hello chatgpt\",\n            \"world of ai\",\n            \"sage world\"\n        ]\n        self.index = 0\n\n    def execute(self):\n        if self.index &gt;= len(self.sentences):\n            return None\n        sentence = self.sentences[self.index]\n        self.index += 1\n        return sentence\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ee7\u627f\u81ea <code>BatchFunction</code>\uff0c\u9700\u8981\u5b9e\u4f8b\u5316\u62bd\u8c61\u63a5\u53e3 <code>execute()</code>\uff0c\u7528\u4e8e\u6279\u91cf\u751f\u6210\u6570\u636e\uff0c\u914d\u5408 <code>env.from_batch</code> \u5b9e\u73b0\u6570\u636e\u8f93\u5165\u3002</li> </ul>"},{"location":"get_start/cpu_examples/streaming/limited_streaming/#bsplitwordsflatmap","title":"B.<code>SplitWords</code>\uff1aflatmap\u62c6\u5206","text":"<pre><code>class SplitWords(FlatMapFunction):\n    def execute(self, data):\n        return data.split()\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ee7\u627f\u81ea <code>FlatMapFunction</code>\u914d\u5408 <code>.flatmap</code>\uff0c\u5b9e\u73b0\u5355\u6761\u6570\u636e\u8f93\u5165\uff0c\u591a\u6761\u6570\u636e\u8f93\u51fa\u3002</li> <li>\u62c6\u5206\u8bed\u53e5\uff0c\u62c6\u6210\u4e00\u4e2a\u4e00\u4e2a\u5355\u8bcd\u53d1\u9001\u7ed9\u4e0b\u6e38\u3002</li> </ul>"},{"location":"get_start/cpu_examples/streaming/limited_streaming/#cprintresult","title":"C.<code>PrintResult</code>\uff1a\u6c47\u603b\u6d41\u51fa","text":"<pre><code>class PrintResult(SinkFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.counts = {}\n\n    def execute(self, data):\n        word, cnt = data\n        self.counts[word] = self.counts.get(word, 0) + cnt\n\n    def close(self):\n        print(\"WordCount \u7ed3\u679c\uff1a\")\n        for word, count in self.counts.items():\n            print(f\"{word}: {count}\")\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u4e0e <code>Hello SAGE</code> \u4e0d\u540c\uff0c\u8fd9\u91cc\u901a\u8fc7 <code>close()</code> \u51fd\u6570\u8fdb\u884c\u6c47\u603b\u8f93\u51fa\u3002</li> <li>\u5728\u4efb\u52a1\u7ed3\u675f\u4e4b\u540e\uff0c\u4f1a\u628a\u4efb\u52a1\u60c5\u51b5\u7ed9\u8f93\u51fa\u51fa\u6765\u3002</li> </ul>"},{"location":"get_start/cpu_examples/streaming/limited_streaming/#d","title":"D.\u8fd0\u884c\u6548\u679c","text":"<p>\u63a7\u5236\u53f0\u8f93\u51fa\u6548\u679c\uff1a</p> <pre><code>JobManager logs: ***/.sage/logs/jobmanager/session_***\nWordCount \u7ed3\u679c\uff1a\nhello: 3\nworld: 3\nsage: 2\nchatgpt: 1\nof: 1\nai: 1\nWordCount \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\n</code></pre>"},{"location":"get_start/cpu_examples/streaming/limited_streaming/#_2","title":"\u7ed3\u8bed","text":"<p><code>env.from_batch()</code> \u548c <code>BatchFunction</code> \u5171\u540c\u7ec4\u6210\u4e86\u6709\u754c\u6d41\u5904\u7406\u7684\u57fa\u7840\u3002SAGE \u4e2d\uff0c\u4f1a\u901a\u8fc7 <code>autostop=True</code> \u8fd9\u4e00\u53c2\u6570\uff0c\u68c0\u67e5\u6570\u636e\u6e90\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u4f1a\u81ea\u52a8\u5173\u95edPipeline\u3002\u6709\u754c\u6d41\u5904\u7406\u7684\u76f8\u5173\u63a5\u53e3\u53ef\u4ee5\u5904\u7406\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u96c6\uff0c\u9002\u5408\u79bb\u7ebf\u6279\u91cf\u5206\u6790\u548c\u4e00\u6b21\u6027\u8ba1\u7b97\u4efb\u52a1\u3002</p>"},{"location":"get_start/cpu_examples/streaming/unlimited_streaming/","title":"\u65e0\u754c\u6d41\u5904\u7406 (Infinite Stream)","text":"<p>\u672c\u4f8b\u4f4d\u4e8e SAGE Repo \u4e0b\u7684 <code>examples/tutorials/core-api/wordcount_source_example.py</code></p> <pre><code>graph LR\n    A[SentenceBatch] --&gt; B[SplitWords]\n    B --&gt; C[WordToPair]\n    C --&gt; D[PrintResult]</code></pre>"},{"location":"get_start/cpu_examples/streaming/unlimited_streaming/#_1","title":"\u5b9e\u4f8b\u89e3\u6790","text":"<p>\u65e0\u754c\u6d41\u5904\u7406\u6a21\u62df\u771f\u5b9e\u4e16\u754c\u4e2d\u7684 \u8fde\u7eed\u6570\u636e\u6d41\uff0c\u5982\u4f20\u611f\u5668\u6570\u636e\u3001\u7528\u6237\u70b9\u51fb\u6d41\u3001\u6d88\u606f\u961f\u5217\u7b49\u3002\u5b83\u5f3a\u8c03\u5b9e\u65f6\u6027\u548c\u54cd\u5e94\u6027\uff0c\u662f\u6784\u5efa\u73b0\u4ee3\u6570\u636e\u9a71\u52a8\u5e94\u7528\u7684\u6838\u5fc3\u6a21\u5f0f\u3002</p> <p>\u793a\u4f8b\u7a0b\u5e8f\u5982\u4e0b\uff1a</p> Python<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.source_function import SourceFunction\nfrom sage.core.api.function.flatmap_function import FlatMapFunction\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.common.utils.logging.custom_logger import CustomLogger\nimport time\n\n# \u6d41\u6570\u636e\u6e90\uff1a\u6bcf\u6b21\u8f93\u51fa\u4e00\u884c\u53e5\u5b50\nclass SentenceSource(SourceFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.sentences = [\n            \"hello world\",\n            \"hello sage\",\n            \"hello chatgpt\",\n            \"world of ai\",\n            \"sage world\"\n        ]\n        self.index = 0\n\n    def execute(self):\n        # \u65e0\u9650\u6d41\uff1a\u6bcf\u6b21\u8f93\u51fa\u4e00\u53e5\u8bdd\uff0c\u6a21\u62df\u6d41\u6570\u636e\u6e90\n        if self.index &gt;= len(self.sentences):\n            self.index = 0  # \u91cd\u7f6e\u7d22\u5f15\uff0c\u5b9e\u73b0\u5faa\u73af\u8f93\u51fa\n        sentence = self.sentences[self.index]\n        self.index += 1\n        return sentence\n\n# \u62c6\u5206\u53e5\u5b50\u4e3a\u5355\u8bcd\nclass SplitWords(FlatMapFunction):\n    def execute(self, data):\n        return data.split()\n\n# \u8f6c\u6362\u4e3a (word, 1)\nclass WordToPair(MapFunction):\n    def execute(self, data):\n        return (data, 1)\n\n# SinkFunction \u8f93\u51fa\u7ed3\u679c\uff1a\u6bcf\u6b21\u8f93\u51fa\u5355\u8bcd\u8ba1\u6570\nclass PrintResult(SinkFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.counts = {}\n\n    def execute(self, data):\n        word, cnt = data\n        self.counts[word] = self.counts.get(word, 0) + cnt\n\n        # \u6bcf\u6b21\u63a5\u6536\u5230\u65b0\u6570\u636e\u65f6\uff0c\u8f93\u51fa\u5f53\u524d\u7edf\u8ba1\u7ed3\u679c\n        print(\"\u5f53\u524d\u5355\u8bcd\u8ba1\u6570\uff1a\")\n        for word, count in self.counts.items():\n            print(f\"{word}: {count}\")\n        print(\"------\")\n\ndef main():\n    env = LocalEnvironment(\"WordCount\")\n\n    # \u6d41\u5f0f\u5904\u7406\uff1a\u53e5\u5b50 -&gt; \u62c6\u5206\u5355\u8bcd -&gt; \u8f6c\u6362\u4e3a(word,1) -&gt; \u8f93\u51fa\u6bcf\u6b21\u7684\u5355\u8bcd\u7edf\u8ba1\n    env.from_source(SentenceSource) \\\n        .flatmap(SplitWords) \\\n        .map(WordToPair) \\\n        .sink(PrintResult)\n\n    env.submit() # \u8bbe\u7f6e\u4e3a False \u4ee5\u4fdd\u6301\u6d41\u5f0f\u6267\u884c\n\n    # \u6a21\u62df\u6d41\u5f0f\u6570\u636e\u6e90\u6301\u7eed\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\uff08\u8fd9\u91cc\u8bbe\u5b9a\u4e3a 10 \u79d2\uff09\n    time.sleep(10)\n    print(\"WordCount \u6d41\u5f0f\u793a\u4f8b\u7ed3\u675f\")\n\nif __name__ == \"__main__\":\n    CustomLogger.disable_global_console_debug()\n    main()\n</code></pre> <p>\u672c\u4f8b\u7531\u6709\u754c\u6d41\u6539\u52a8\u800c\u6765\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u5bf9\u8fd9\u4e9b\u6539\u52a8\u90e8\u5206\u9010\u4e00\u8fdb\u884c\u6982\u8ff0\uff0c\u4ee5\u4fbf\u7406\u89e3 SAGE \u65e0\u754c\u6d41\uff1a</p>"},{"location":"get_start/cpu_examples/streaming/unlimited_streaming/#a-sentencesource","title":"A. <code>SentenceSource</code>\uff1a\u65e0\u754c\u6570\u636e\u6e90","text":"<pre><code>class SentenceSource(SourceFunction):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.sentences = [\n            \"hello world\",\n            \"hello sage\",\n            \"hello chatgpt\",\n            \"world of ai\",\n            \"sage world\"\n        ]\n        self.index = 0\n\n    def execute(self):\n        # \u65e0\u9650\u6d41\uff1a\u6bcf\u6b21\u8f93\u51fa\u4e00\u53e5\u8bdd\uff0c\u6a21\u62df\u6d41\u6570\u636e\u6e90\n        if self.index &gt;= len(self.sentences):\n            self.index = 0  # \u91cd\u7f6e\u7d22\u5f15\uff0c\u5b9e\u73b0\u5faa\u73af\u8f93\u51fa\n        sentence = self.sentences[self.index]\n        self.index += 1\n        return sentence\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ee7\u627f\u81ea <code>SourceFunction</code>\uff0c\u9700\u8981\u5b9e\u4f8b\u5316\u62bd\u8c61\u63a5\u53e3 <code>execute()</code>\uff0c\u7528\u4e8e\u751f\u6210\u6570\u636e\uff0c\u914d\u5408 <code>env.from_source</code> \u5b9e\u73b0\u65e0\u754c\u6570\u636e\u8f93\u5165\u3002</li> </ul>"},{"location":"get_start/cpu_examples/streaming/unlimited_streaming/#b-sleep","title":"B. <code>sleep</code>\uff1a\u963b\u585e\u7ebf\u7a0b","text":"<pre><code>time.sleep(10)\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u5728\u65e0\u754c\u6d41\u4e2d\uff0c <code>autostop=True</code> \u65e0\u6cd5\u6682\u505c Pipeline\u3002</li> <li><code>submit</code> \u63d0\u4ea4\u7684\u4efb\u52a1\u7531\u540e\u53f0\u7ebf\u7a0b\u6267\u884c\uff0c\u4e3b\u7ebf\u7a0b\u4e0d\u963b\u585e\u7684\u8bdd\uff0c\u4f1a\u81ea\u52a8\u505c\u6b62\u3002</li> </ul>"},{"location":"get_start/cpu_examples/streaming/unlimited_streaming/#c","title":"C.\u8fd0\u884c\u6548\u679c","text":"<p>\u63a7\u5236\u53f0\u8f93\u51fa\u6548\u679c\uff08\u4f1a\u6709\u5f88\u591a\u8f93\u51fa\u4e0d\u65ad\u751f\u6210\uff09\uff1a</p> <pre><code>JobManager logs: ***/.sage/logs/jobmanager/session_***\n\u5f53\u524d\u5355\u8bcd\u8ba1\u6570\uff1a\nhello: 527\nworld: 526\nsage: 350\nchatgpt: 175\nof: 175\nai: 175\n------\n\u5f53\u524d\u5355\u8bcd\u8ba1\u6570\uff1a\nhello: 527\nworld: 526\nsage: 351\nchatgpt: 175\nof: 175\nai: 175\n...\n</code></pre>"},{"location":"get_start/cpu_examples/streaming/unlimited_streaming/#_2","title":"\u7ed3\u8bed","text":"<p><code>env.from_source()</code> \u548c <code>SourceFunction</code> \u5171\u540c\u7ec4\u6210\u4e86\u6709\u754c\u6d41\u5904\u7406\u7684\u57fa\u7840\u3002SAGE\u7684 <code>LocalEnvironment</code> \u4e2d\uff0c\u4e3b\u7ebf\u7a0b\u4f1a\u5c06\u63d0\u4ea4\u7684\u4efb\u52a1\u5206\u914d\u7ed9 Python \u4ece\u7ebf\u7a0b\u6267\u884c\uff0c\u9700\u8981\u7528\u6237\u7ee7\u7eed\u663e\u5f0f\u7684\u963b\u585e\uff0c\u5426\u5219\u4f1a\u81ea\u52a8\u7ed3\u675f\u4ece\u800c\u5173\u95ed\u4ece\u7ebf\u7a0b\u7684 Pipeline\u3002\u6709\u754c\u6d41\u5904\u7406\u7684\u76f8\u5173\u63a5\u53e3\u53ef\u4ee5\u5904\u7406\u6301\u7eed\u4ea7\u751f\u7684\u6570\u636e\u6d41\uff0c\u9002\u5408\u5b9e\u65f6\u6570\u636e\u5206\u6790\u3001\u76d1\u63a7\u548c\u4ea4\u4e92\u5f0f\u5e94\u7528\u3002</p>"},{"location":"get_start/llm_qa/llm_qa/","title":"LLM QA \u5feb\u901f\u5165\u95e8","text":"<p>\u672c\u6587\u6863\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 SAGE \u6784\u5efa\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684\u95ee\u7b54\u7cfb\u7edf\uff0c\u5305\u62ec\u4e0d\u5e26\u68c0\u7d22\u7684\u76f4\u63a5\u95ee\u7b54\u548c\u96c6\u6210\u68c0\u7d22\u529f\u80fd\u7684\u589e\u5f3a\u95ee\u7b54\u3002</p>"},{"location":"get_start/llm_qa/llm_qa/#_1","title":"\ud83c\udfaf \u6838\u5fc3\u6982\u5ff5","text":"<p>LLM QA\uff08\u5927\u8bed\u8a00\u6a21\u578b\u95ee\u7b54\uff09\u662f\u76f4\u63a5\u4f7f\u7528\u5927\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u95ee\u7b54\u7684\u6280\u672f\uff0c\u65e0\u9700\u5916\u90e8\u77e5\u8bc6\u5e93\u68c0\u7d22\u3002\u9002\u7528\u4e8e\uff1a</p> <ul> <li>\u4e00\u822c\u5e38\u8bc6\u95ee\u7b54</li> <li>\u7f16\u7a0b\u8f85\u52a9</li> <li>\u6587\u672c\u521b\u4f5c</li> <li>\u5b9e\u65f6\u5bf9\u8bdd</li> </ul>"},{"location":"get_start/llm_qa/llm_qa/#qa","title":"\ud83d\ude80 \u4e0d\u5e26\u68c0\u7d22\u7684QA\u793a\u4f8b","text":""},{"location":"get_start/llm_qa/llm_qa/#qa_1","title":"\u7ec8\u7aef\u4ea4\u4e92\u5f0fQA","text":"<p>\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u7ec8\u7aef\u4ea4\u4e92\u5f0f\u7684\u95ee\u7b54\u7cfb\u7edf\uff0c\u4ee3\u7801\u6765\u81ea <code>examples/rag/qa_without_retrieval.py</code>\uff1a</p> <pre><code>\"\"\"\n\u7ec8\u7aef\u4ea4\u4e92\u5f0fQA\u65e0\u754c\u6d41\u5904\u7406\n\u652f\u6301\u7ec8\u7aef\u8f93\u5165\u95ee\u9898\uff0c\u4f7f\u7528\u5927\u6a21\u578b\u751f\u6210\u56de\u7b54\u7684\u65e0\u754c\u6d41\u5904\u7406\u793a\u4f8b\n\"\"\"\nimport time\nfrom dotenv import load_dotenv\nfrom sage.common.utils.logging.custom_logger import CustomLogger\nfrom sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.source_function import SourceFunction\nfrom sage.libs.rag.generator import OpenAIGenerator\nfrom sage.libs.rag.promptor import QAPromptor\nfrom sage.common.utils.config.loader import load_config\n\n\nclass TerminalInputSource(SourceFunction):\n    \"\"\"\u7ec8\u7aef\u8f93\u5165\u6e90\u51fd\u6570\"\"\"\n    def execute(self, data=None):\n        try:\n            print(\"\ud83e\udd14 \u8bf7\u8f93\u5165\u60a8\u7684\u95ee\u9898\uff08\u6309Ctrl+C\u9000\u51fa\uff09:\")\n            user_input = input(\"&gt;&gt;&gt; \").strip()\n            if user_input:\n                return user_input\n            return self.execute(data)\n        except (EOFError, KeyboardInterrupt):\n            raise\n\n\nclass QuestionProcessor(MapFunction):\n    \"\"\"\u95ee\u9898\u5904\u7406\u5668\"\"\"\n    def execute(self, data):\n        if not data or data.strip() == \"\":\n            return None\n\n        question = data.strip()\n        return question\n\n\nclass AnswerFormatter(MapFunction):\n    \"\"\"\u56de\u7b54\u683c\u5f0f\u5316\u5668\"\"\"\n    def execute(self, data):\n        if not data:\n            return None\n\n        # OpenAIGenerator\u8fd4\u56de\u7684\u683c\u5f0f\u662f (user_query, generated_text)\n        if isinstance(data, tuple) and len(data) &gt;= 2:\n            user_query = data[0]\n            answer = data[1]\n            return {\n                \"question\": user_query if user_query else \"N/A\",\n                \"answer\": answer,\n                \"timestamp\": time.strftime(\"%Y-%m-%d %H:%M:%S\")\n            }\n        else:\n            return {\n                \"question\": \"N/A\",\n                \"answer\": str(data),\n                \"timestamp\": time.strftime(\"%Y-%m-%d %H:%M:%S\")\n            }\n\n\nclass ConsoleSink(SinkFunction):\n    \"\"\"\u63a7\u5236\u53f0\u8f93\u51fa\"\"\"\n    def execute(self, data):\n        if not data:\n            return None\n\n        if isinstance(data, dict):\n            print(f\"\\n\ud83e\udd16 {data.get('answer', 'N/A')}\\n\")\n        else:\n            print(f\"\\n\ud83e\udd16 {data}\\n\")\n\n        return data\n\n\ndef create_qa_pipeline():\n    \"\"\"\u521b\u5efaQA\u5904\u7406\u7ba1\u9053\"\"\"\n    import os\n    # \u52a0\u8f7d\u914d\u7f6e\n    load_dotenv(override=False)\n    config_path = os.path.join(os.path.dirname(__file__), \"..\", \"config\", \"config_source.yaml\")\n    config = load_config(config_path)\n\n    # \u521b\u5efa\u672c\u5730\u73af\u5883\n    env = LocalEnvironment()\n\n    # \u542f\u52a8\u6b22\u8fce\u63d0\u793a\n    print(\"\ud83d\udcac QA\u52a9\u624b\u5df2\u542f\u52a8\uff01\u8f93\u5165\u95ee\u9898\u540e\u6309\u56de\u8f66\")\n\n    try:\n        # \u6784\u5efa\u65e0\u754c\u6d41\u5904\u7406\u7ba1\u9053\n        (env\n            .from_source(TerminalInputSource)\n            .map(QuestionProcessor)\n            .map(QAPromptor, config[\"promptor\"])\n            .map(OpenAIGenerator, config[\"generator\"][\"vllm\"])\n            .map(AnswerFormatter)\n            .sink(ConsoleSink)\n        )\n\n        # \u542f\u52a8\u7ba1\u9053\n        env.submit()\n\n        # \u4fdd\u6301\u7a0b\u5e8f\u8fd0\u884c\n        print(\"\u7a0b\u5e8f\u8fd0\u884c\u4e2d\uff0c\u6309 Ctrl+C \u9000\u51fa...\")\n        import time\n        while True:\n            time.sleep(1)\n\n    except KeyboardInterrupt:\n        print(\"\\n\ud83d\udc4b \u611f\u8c22\u4f7f\u7528\uff0c\u518d\u89c1\uff01\")\n    finally:\n        try:\n            env.close()\n        except:\n            pass\n\n\nif __name__ == \"__main__\":\n    # \u5173\u95ed\u8c03\u8bd5\u65e5\u5fd7\n    CustomLogger.disable_global_console_debug()\n    create_qa_pipeline()\n</code></pre>"},{"location":"get_start/llm_qa/llm_qa/#qa_2","title":"\u6279\u5904\u7406QA","text":"<p>\u5904\u7406\u9884\u5b9a\u4e49\u7684\u95ee\u9898\u5217\u8868\uff1a</p> <pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.libs.rag.generator import OpenAIGenerator\nfrom sage.libs.rag.promptor import QAPromptor\nfrom sage.libs.io_utils.sink import TerminalSink\n\nclass QABatch(BatchFunction):\n    \"\"\"QA\u6279\u5904\u7406\u6570\u636e\u6e90\"\"\"\n    def __init__(self, config, **kwargs):\n        super().__init__(**kwargs)\n        self.questions = [\n            \"\u4ec0\u4e48\u662f\u4eba\u5de5\u667a\u80fd\uff1f\",\n            \"Python\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\",\n            \"\u5982\u4f55\u5b66\u4e60\u673a\u5668\u5b66\u4e60\uff1f\",\n            \"\u6df1\u5ea6\u5b66\u4e60\u7684\u5e94\u7528\u9886\u57df\u6709\u54ea\u4e9b\uff1f\"\n        ]\n        self.counter = 0\n\n    def execute(self):\n        if self.counter &gt;= len(self.questions):\n            return None\n\n        question = self.questions[self.counter]\n        self.counter += 1\n        return question\n\ndef batch_qa_pipeline():\n    \"\"\"\u6279\u5904\u7406QA\u7ba1\u9053\"\"\"\n    env = LocalEnvironment(\"batch_qa\")\n\n    config = {\n        \"promptor\": {\"platform\": \"local\"},\n        \"generator\": {\n            \"vllm\": {\n                \"api_key\": \"your-api-key\",\n                \"method\": \"openai\",\n                \"model_name\": \"gpt-3.5-turbo\",\n                \"base_url\": \"https://api.openai.com/v1\"\n            }\n        },\n        \"sink\": {\"platform\": \"local\"}\n    }\n\n    (env\n        .from_batch(QABatch, config)\n        .map(QAPromptor, config[\"promptor\"])\n        .map(OpenAIGenerator, config[\"generator\"][\"vllm\"])\n        .sink(TerminalSink, config[\"sink\"])\n    )\n\n    env.submit(autostop=True)\n\nif __name__ == \"__main__\":\n    batch_qa_pipeline()\n</code></pre>"},{"location":"get_start/llm_qa/llm_qa/#_2","title":"\ud83d\udd27 \u914d\u7f6e\u9009\u9879","text":""},{"location":"get_start/llm_qa/llm_qa/#_3","title":"\u57fa\u7840\u914d\u7f6e\u6587\u4ef6","text":"<p>\u521b\u5efa <code>config.yaml</code> \u6587\u4ef6\uff1a</p> <pre><code>pipeline:\n  name: \"llm-qa-pipeline\"\n  description: \"LLM\u95ee\u7b54\u7ba1\u9053\"\n\npromptor:\n  platform: \"local\"\n\ngenerator:\n  vllm:\n    api_key: \"your-api-key\"\n    method: \"openai\"\n    model_name: \"gpt-3.5-turbo\"\n    base_url: \"https://api.openai.com/v1\"\n    temperature: 0.7\n    max_tokens: 1000\n\nsink:\n  platform: \"local\"\n</code></pre>"},{"location":"get_start/llm_qa/llm_qa/#_4","title":"\u73af\u5883\u53d8\u91cf\u914d\u7f6e","text":"<p>\u521b\u5efa <code>.env</code> \u6587\u4ef6\uff1a</p> <pre><code># OpenAI API\u914d\u7f6e\nOPENAI_API_KEY=your-openai-api-key\nOPENAI_BASE_URL=https://api.openai.com/v1\n\n# \u6216\u8005\u4f7f\u7528\u517c\u5bb9\u7684API\nVLLM_API_KEY=your-vllm-api-key\nVLLM_BASE_URL=http://localhost:8000/v1\n</code></pre>"},{"location":"get_start/llm_qa/llm_qa/#_5","title":"\ud83c\udfa8 \u81ea\u5b9a\u4e49\u63d0\u793a\u8bcd","text":""},{"location":"get_start/llm_qa/llm_qa/#_6","title":"\u57fa\u7840\u63d0\u793a\u8bcd\u6a21\u677f","text":"<pre><code>from jinja2 import Template\n\n# \u81ea\u5b9a\u4e49\u63d0\u793a\u8bcd\u6a21\u677f\nqa_template = Template(\"\"\"\n\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684AI\u52a9\u624b\uff0c\u8bf7\u57fa\u4e8e\u4ee5\u4e0b\u4e0a\u4e0b\u6587\u56de\u7b54\u7528\u6237\u7684\u95ee\u9898\u3002\n\n{% if external_corpus %}\n\u53c2\u8003\u4fe1\u606f\uff1a\n{{ external_corpus }}\n{% endif %}\n\n\u8bf7\u63d0\u4f9b\u51c6\u786e\u3001\u6709\u7528\u7684\u56de\u7b54\u3002\u5982\u679c\u4e0d\u786e\u5b9a\u7b54\u6848\uff0c\u8bf7\u8bda\u5b9e\u5730\u8bf4\u660e\u3002\n\"\"\")\n\n# \u5728QAPromptor\u4e2d\u4f7f\u7528\nconfig = {\n    \"promptor\": {\n        \"platform\": \"local\",\n        \"template\": qa_template\n    }\n}\n</code></pre>"},{"location":"get_start/llm_qa/llm_qa/#_7","title":"\ud83d\udcca \u6027\u80fd\u4f18\u5316","text":""},{"location":"get_start/llm_qa/llm_qa/#_8","title":"\u6279\u91cf\u5904\u7406\u4f18\u5316","text":"<pre><code>class OptimizedQABatch(BatchFunction):\n    \"\"\"\u4f18\u5316\u7684\u6279\u5904\u7406QA\"\"\"\n    def __init__(self, config, **kwargs):\n        super().__init__(**kwargs)\n        self.batch_size = config.get(\"batch_size\", 5)\n        self.questions = self.load_questions(config[\"data_path\"])\n        self.current_batch = 0\n\n    def execute(self):\n        start_idx = self.current_batch * self.batch_size\n        end_idx = start_idx + self.batch_size\n\n        if start_idx &gt;= len(self.questions):\n            return None\n\n        batch_questions = self.questions[start_idx:end_idx]\n        self.current_batch += 1\n        return batch_questions\n</code></pre>"},{"location":"get_start/llm_qa/llm_qa/#_9","title":"\u5f02\u6b65\u5904\u7406","text":"<pre><code>import asyncio\nfrom sage.core.api.function.map_function import MapFunction\n\nclass AsyncQAProcessor(MapFunction):\n    \"\"\"\u5f02\u6b65QA\u5904\u7406\u5668\"\"\"\n    async def async_execute(self, data):\n        # \u5f02\u6b65\u8c03\u7528LLM API\n        result = await self.async_llm_call(data)\n        return result\n\n    def execute(self, data):\n        # \u5728\u540c\u6b65\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u5f02\u6b65\u4ee3\u7801\n        loop = asyncio.get_event_loop()\n        return loop.run_until_complete(self.async_execute(data))\n</code></pre>"},{"location":"get_start/llm_qa/llm_qa/#_10","title":"\ud83d\udd0d \u9519\u8bef\u5904\u7406","text":""},{"location":"get_start/llm_qa/llm_qa/#_11","title":"\u5065\u58ee\u7684\u9519\u8bef\u5904\u7406","text":"<pre><code>class RobustQAProcessor(MapFunction):\n    \"\"\"\u5e26\u9519\u8bef\u5904\u7406\u7684QA\u5904\u7406\u5668\"\"\"\n    def execute(self, data):\n        try:\n            # \u5904\u7406\u95ee\u9898\n            if not data or not data.strip():\n                return {\"error\": \"\u7a7a\u95ee\u9898\", \"question\": data}\n\n            # \u8c03\u7528LLM\n            result = self.call_llm(data)\n            return {\"success\": True, \"question\": data, \"answer\": result}\n\n        except Exception as e:\n            self.logger.error(f\"QA\u5904\u7406\u9519\u8bef: {e}\")\n            return {\n                \"error\": str(e),\n                \"question\": data,\n                \"answer\": \"\u62b1\u6b49\uff0c\u5904\u7406\u60a8\u7684\u95ee\u9898\u65f6\u51fa\u73b0\u4e86\u9519\u8bef\u3002\"\n            }\n</code></pre>"},{"location":"get_start/llm_qa/llm_qa/#_12","title":"\ud83d\udcc8 \u76d1\u63a7\u548c\u65e5\u5fd7","text":""},{"location":"get_start/llm_qa/llm_qa/#_13","title":"\u6027\u80fd\u76d1\u63a7","text":"<pre><code>import time\nfrom collections import defaultdict\n\nclass QAMonitorSink(SinkFunction):\n    \"\"\"QA\u76d1\u63a7\u8f93\u51fa\"\"\"\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.stats = defaultdict(int)\n        self.start_time = time.time()\n\n    def execute(self, data):\n        self.stats[\"total_questions\"] += 1\n\n        if isinstance(data, dict):\n            if \"error\" in data:\n                self.stats[\"errors\"] += 1\n            else:\n                self.stats[\"success\"] += 1\n\n        # \u6bcf100\u4e2a\u95ee\u9898\u6253\u5370\u4e00\u6b21\u7edf\u8ba1\n        if self.stats[\"total_questions\"] % 100 == 0:\n            self.print_stats()\n\n        return data\n\n    def print_stats(self):\n        elapsed = time.time() - self.start_time\n        print(f\"\u5904\u7406\u7edf\u8ba1: {self.stats['total_questions']} \u95ee\u9898\")\n        print(f\"\u6210\u529f\u7387: {self.stats['success'] / self.stats['total_questions'] * 100:.1f}%\")\n        print(f\"\u5e73\u5747\u901f\u5ea6: {self.stats['total_questions'] / elapsed:.1f} \u95ee\u9898/\u79d2\")\n</code></pre>"},{"location":"get_start/llm_qa/llm_qa/#_14","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":"<ol> <li>\u5b89\u88c5\u4f9d\u8d56\uff1a\u786e\u4fdd\u5df2\u5b89\u88c5 SAGE \u548c\u76f8\u5173\u4f9d\u8d56</li> <li>\u914d\u7f6eAPI\uff1a\u8bbe\u7f6e\u5927\u8bed\u8a00\u6a21\u578b\u7684API\u5bc6\u94a5\u548c\u5730\u5740</li> <li>\u8fd0\u884c\u793a\u4f8b\uff1a\u9009\u62e9\u5408\u9002\u7684\u793a\u4f8b\u4ee3\u7801\u8fd0\u884c</li> <li>\u81ea\u5b9a\u4e49\u6269\u5c55\uff1a\u6839\u636e\u9700\u6c42\u4fee\u6539\u63d0\u793a\u8bcd\u548c\u5904\u7406\u903b\u8f91</li> </ol> <p>\u901a\u8fc7SAGE\u6784\u5efa\u7684LLM QA\u7cfb\u7edf\u5177\u5907\u9ad8\u5ea6\u7684\u7075\u6d3b\u6027\u548c\u6269\u5c55\u6027\uff0c\u662f\u667a\u80fd\u95ee\u7b54\u5e94\u7528\u7684\u7406\u60f3\u9009\u62e9\u3002</p>"},{"location":"join_sage/detail_template/","title":"SAGE \u7ae0\u8282\u5c0f\u8282\u6a21\u677f","text":"<p>\u4e00\u53e5\u8bdd\u6982\u8ff0\uff1a\u672c\u8282\u4ecb\u7ecd {{\u5bf9\u8c61}}\uff0c\u7528\u4e8e {{\u76ee\u6807/\u573a\u666f}}\uff0c\u5e2e\u52a9\u4f60\u5728 {{\u4e0a\u4e0b\u6587/\u7cfb\u7edf}} \u4e2d\u5b8c\u6210 {{\u4efb\u52a1}}\u3002</p> <p>\u6ce8\u610f\uff0c\u5728\u4e86\u89e3\u672c\u8282\u4e4b\u524d\u9700\u8981\u63d0\u524d\u4e86\u89e3\u4ee5\u4e0b\u77e5\u8bc6\uff1a</p> <p>\u5148\u51b3\u6761\u4ef6\uff08Prerequisites\uff09</p> <ul> <li>\u57fa\u7840\u6982\u5ff5\uff1a{{RAG / Agent / \u5e76\u53d1 / \u4e8b\u52a1 \u7b49}}</li> <li>\u63a8\u8350\u524d\u7f6e\u9605\u8bfb\uff1a[\u8fd4\u56de Chapter\uff1a{{\u6240\u5c5e\u7ae0\u8282\u540d}}]</li> </ul>"},{"location":"join_sage/detail_template/#_1","title":"\u4e00\u3001\u5feb\u901f\u5f00\u59cb","text":"PythonJavaScriptCLI \u6700\u5c0f\u53ef\u8fd0\u884c\u793a\u4f8b\uff08\u53ef\u62f7\u8d1d\u8fd0\u884c\uff09<pre><code>from {{package}} import {{ClassOrFn}}\n\ndef main():\n    cli = {{ClassOrFn}}({{\u53ef\u9009\u53c2\u6570}})\n    result = cli.run({{\u8f93\u5165}})\n    print(result)\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> \u6700\u5c0f\u53ef\u8fd0\u884c\u793a\u4f8b\uff08ESM \u6216 TS\uff09<pre><code>// npm i {{pkg}}  \u6216  pnpm add {{pkg}}\nimport { {{fn}} } from \"{{pkg}}\";\n\nconst out = await {{fn}}({{\u8f93\u5165}});\nconsole.log(out);\n</code></pre> \u547d\u4ee4\u884c\u4e00\u628a\u68ad<pre><code>{{tool}} init {{project}}\n{{tool}} run --input {{path/to/input}} --output {{path/to/out}}\n</code></pre>"},{"location":"join_sage/detail_template/#api","title":"\u4e8c\u3001API \u6982\u89c8\uff08\u7b7e\u540d / \u5165\u53e3 / \u901f\u67e5\uff09","text":"<p>\u8fd9\u91cc\u653e**\u6700\u5e38\u7528**\u7684\u5165\u53e3\u4e0e\u7b7e\u540d\uff1b\u8be6\u7ec6\u53c2\u6570\u653e\u5230\u4e0b\u4e00\u8282\u201c\u53c2\u6570 &amp; \u8fd4\u56de\u201d\u3002</p> Python API \u7b7e\u540d<pre><code>class {{ClassName}}:\n    def __init__(self, {{\u53c2\u6570\u5217\u8868}}): ...\n    def run(self, {{\u53c2\u6570}}) -&gt; {{\u8fd4\u56de\u7c7b\u578b}}: ...\n    async def arun(self, {{\u53c2\u6570}}) -&gt; {{\u8fd4\u56de\u7c7b\u578b}}: ...\n</code></pre>"},{"location":"join_sage/detail_template/#_2","title":"\u4e09\u3001\u53c2\u6570 &amp; \u8fd4\u56de &amp; \u9519\u8bef","text":""},{"location":"join_sage/detail_template/#parameters","title":"\u53c2\u6570\uff08Parameters\uff09","text":"\u540d\u79f0 \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>{{param1}}</code> <code>{{type}}</code> \u662f \u2014 {{\u4f5c\u7528 / \u53d6\u503c\u8303\u56f4}} <code>{{param2}}</code> <code>{{type}}</code> \u5426 <code>{{default}}</code> {{\u5f71\u54cd / \u6ce8\u610f\u4e8b\u9879}}"},{"location":"join_sage/detail_template/#returns","title":"\u8fd4\u56de\uff08Returns\uff09","text":"\u5b57\u6bb5 \u7c7b\u578b \u8bf4\u660e <code>{{field}}</code> <code>{{type}}</code> {{\u542b\u4e49 / \u4f8b\u5b50}}"},{"location":"join_sage/detail_template/#errors","title":"\u5f02\u5e38 / \u9519\u8bef\u7801\uff08Errors\uff09","text":"\u9519\u8bef \u89e6\u53d1\u6761\u4ef6 \u5efa\u8bae\u4fee\u590d <code>{{ErrInvalidArg}}</code> {{\u4f55\u65f6\u51fa\u73b0}} {{\u5982\u4f55\u4fee\u590d}} <code>{{HTTP 429}}</code> {{\u9650\u6d41}} {{\u9000\u907f/\u91cd\u8bd5\u53c2\u6570}}"},{"location":"join_sage/detail_template/#_3","title":"\u56db\u3001\u5de5\u4f5c\u673a\u5236\uff08\u7531\u6d45\u5165\u6df1\uff09","text":"<pre><code>sequenceDiagram\n  participant U as User\n  participant S as {{Section \u7ec4\u4ef6}}\n  participant D as Downstream\n  U-&gt;&gt;S: {{\u8f93\u5165/\u8c03\u7528}}\n  S-&gt;&gt;S: \u6821\u9a8c/\u51c6\u5907\n  S-&gt;&gt;D: {{\u8bf7\u6c42/\u4e8b\u4ef6}}\n  D--&gt;&gt;S: {{\u54cd\u5e94/\u56de\u8c03}}\n  S--&gt;&gt;U: {{\u7ed3\u679c/\u9519\u8bef}}</code></pre> <p>\u8bbe\u8ba1\u52a8\u673a / \u53d6\u820d</p> <ul> <li>\u9009\u62e9 {{\u7b97\u6cd5/\u534f\u8bae/\u5b58\u50a8}} \u7684\u539f\u56e0\uff1a{{\u7b80\u8ff0}}</li> <li>\u4e0e {{\u66ff\u4ee3\u65b9\u6848}} \u76f8\u6bd4\u7684\u6298\u4e2d\uff1a{{\u6027\u80fd\u3001\u53ef\u7ef4\u62a4\u6027\u3001\u6210\u672c}}</li> </ul>"},{"location":"join_sage/detail_template/#_4","title":"\u516d\u3001\u914d\u7f6e\u9879\uff08\u8fdb\u9636\uff09","text":"\u914d\u7f6e\u952e \u7c7b\u578b \u9ed8\u8ba4 \u8bf4\u660e \u8c03\u4f18\u5efa\u8bae <code>{{cfg.key}}</code> <code>bool/int/str</code> <code>{{default}}</code> {{\u4f5c\u7528}} {{\u5728\u4f55\u79cd\u8d1f\u8f7d/\u573a\u666f\u4e0b\u8c03\u5927/\u8c03\u5c0f}}"},{"location":"join_sage/intellistream/","title":"\u52a0\u5165\u6211\u4eec \u00b7 IntelliStream SAGE \u9879\u76ee\u7ec4","text":"<p>\u6211\u4eec\u662f\u534e\u4e2d\u79d1\u6280\u5927\u5b66 IntelliStream \u8bfe\u9898\u7ec4\uff0c\u957f\u671f\u81f4\u529b\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e0e\u667a\u80fd\u6570\u636e\u6d41\u5904\u7406\u65b9\u5411\u7684\u7814\u7a76\u3002\u73b0\u5728\uff0c\u6211\u4eec\u56f4\u7ed5\u5927\u6a21\u578b\u7cfb\u7edf\u5316\u843d\u5730\u7684\u65b0\u8303\u5f0f\uff0c\u6b63\u5728\u6784\u5efa\u4e0b\u4e00\u4ee3\u79d1\u7814\u57fa\u7840\u8bbe\u65bd\u2014\u2014SAGE\uff08Streaming-Augmented Generative Execution\uff09\u3002</p>"},{"location":"join_sage/intellistream/#_1","title":"\ud83c\udf1f \u6211\u4eec\u5728\u505a\u4ec0\u4e48\uff1f","text":"<p>SAGE \u9879\u76ee\u65e8\u5728\u5c06\u201c\u5927\u6570\u636e\u65f6\u4ee3\u201d\u884c\u4e4b\u6709\u6548\u7684 Dataflow \u601d\u60f3\uff0c\u5e26\u5165\u201c\u5927\u6a21\u578b\u65f6\u4ee3\u201d\u7684\u65b0\u6311\u6218\u4e2d\uff1a</p> <ul> <li>\u4efb\u52a1\u66f4\u590d\u6742\uff1a\u4ece\u7b80\u5355\u7684\u6570\u636e\u6279\u5904\u7406\uff0c\u8d70\u5411\u591a\u6a21\u6001\u68c0\u7d22\u3001\u591a\u667a\u80fd\u4f53\u3001\u591a\u9636\u6bb5\u63a8\u7406\u3002</li> <li>\u72b6\u6001\u66f4\u96be\u7ba1\uff1aPrompt\u3001KV Cache\u3001\u5411\u91cf\u8bb0\u5fc6\u2026\u2026\u90fd\u9700\u8981\u53ef\u590d\u73b0\u3001\u53ef\u89c2\u6d4b\u3001\u53ef\u6269\u5c55\u7684\u7cfb\u7edf\u652f\u6491\u3002</li> <li>\u8d44\u6e90\u66f4\u5b9d\u8d35\uff1a\u5728 GPU \u7a00\u7f3a\u73af\u5883\u4e0b\uff0c\u7cfb\u7edf\u7ea7\u8c03\u5ea6\u4e0e\u6267\u884c\u7b56\u7565\u5bf9\u541e\u5410\u4e0e\u5ef6\u8fdf\u5f71\u54cd\u5de8\u5927\u3002</li> </ul> <p>SAGE \u6b63\u5728\u5f00\u53d1\uff1a</p> <ul> <li>\ud83e\udde0 \u7edf\u4e00\u8bb0\u5fc6\u5c42\uff08NeuroMem\uff09\uff1a\u652f\u6301 KV / \u5411\u91cf / \u56fe\u8bb0\u5fc6\u7684\u901a\u7528\u63a5\u53e3\u4e0e\u7248\u672c\u63a7\u5236\u3002</li> <li>\u2699\ufe0f \u8d44\u6e90\u611f\u77e5\u8c03\u5ea6\u5668\uff1a\u57fa\u4e8e Ray Runtime \u7684\u52a8\u6001\u6269\u7f29\u4e0e\u9884\u6d4b\u6267\u884c\uff0c\u521d\u6b65\u5b9e\u9a8c\u5df2\u89c1 1.5\u00d7\uff5e2\u00d7 \u541e\u5410\u63d0\u5347\u3002</li> <li>\ud83d\udd78\ufe0f Dataflow \u7f16\u6392\uff1a\u7528 DAG \u660e\u786e\u5217\u51fa\u68c0\u7d22-\u63a8\u7406-\u5de5\u5177\u8c03\u7528\u94fe\uff0c\u65b9\u4fbf\u5b9e\u9a8c\u590d\u73b0\u4e0e\u4f18\u5316\u3002</li> <li>\ud83d\udd0d \u5168\u94fe\u8def\u89c2\u6d4b\u652f\u6301\uff1a\u8ba1\u5212\u652f\u6301 Trace + \u5dee\u5206\u56de\u653e\uff0c\u589e\u5f3a\u5bf9\u6bd4\u5b9e\u9a8c\u7684\u53ef\u89e3\u91ca\u6027\u3002</li> </ul>"},{"location":"join_sage/intellistream/#_2","title":"\ud83d\udd2c \u6211\u4eec\u5728\u601d\u8003\u7684\u95ee\u9898","text":"<ul> <li>\u5982\u4f55\u8ba9 RAG\u3001Agent \u7cfb\u7edf\u5728\u53ef\u91cd\u590d\u7684\u540c\u65f6\u652f\u6301\u771f\u5b9e\u5728\u7ebf\u8d1f\u8f7d\uff1f</li> <li>\u5982\u4f55\u5c06\u201c\u8bb0\u5fc6-\u68c0\u7d22-\u63a8\u7406\u201d\u653e\u5165\u4e00\u4e2a\u7edf\u4e00\u7684\u4f18\u5316\u5668\uff1f</li> <li>\u7f16\u8bd1\u4f18\u5316\u5728 LLM Workload \u7f16\u6392\u4e2d\u7684\u89d2\u8272\u662f\u4ec0\u4e48\uff1f</li> <li>Speculative Execution \u80fd\u5426\u5728\u5c0f\u89c4\u6a21\u5b9e\u9a8c\u4e2d\u6709\u6548\u964d\u4f4e\u5c3e\u5ef6\u8fdf\uff1f</li> <li>Graph-RAG \u5728\u5de5\u4e1a\u90e8\u7f72\u4e0b\u7684\u771f\u5b9e\u6536\u76ca\uff1f</li> </ul> <p>\u8fd9\u4e9b\u6b63\u662f\u6211\u4eec\u5f53\u524d\u4e0e\u672a\u6765\u4e24\u5e74\u5173\u6ce8\u7684\u7814\u7a76\u65b9\u5411\u3002</p>"},{"location":"join_sage/intellistream/#_3","title":"\ud83e\udd1d \u6b22\u8fce\u4f60\u52a0\u5165\uff01","text":"<p>\u5982\u679c\u4f60\u6b63\u5728\u505a\u5982\u4e0b\u65b9\u5411\uff0c\u6b22\u8fce\u4e00\u8d77\u6765\u63a2\u8ba8\u3001\u505a\u5b9e\u9a8c\u3001\u5199\u8bba\u6587\uff1a</p> <ul> <li>RAG / Tool-LLM / \u591a\u667a\u80fd\u4f53\u7cfb\u7edf</li> <li>\u7cfb\u7edf\u8c03\u5ea6\u3001\u8d44\u6e90\u7ba1\u7406\u3001\u7cfb\u7edf\u53ef\u89c2\u6d4b\u6027</li> <li>AIOps / \u591a\u6a21\u6001\u56fe\u795e\u7ecf\u7f51\u7edc / \u6570\u636e\u6d41\u56fe\u7f16\u8bd1</li> <li>GPU \u4f18\u5316\u3001Serverless \u63a8\u7406\u3001\u6d41\u6279\u4e00\u4f53</li> </ul> <p>\u6211\u4eec\u63d0\u4f9b\u5b8c\u5584\u7684\u539f\u578b\u4ee3\u7801\u3001\u6570\u636e\u96c6\u3001Benchmark \u6d41\u6c34\u7ebf\uff0c\u5e76\u652f\u6301\u5f00\u6e90\u534f\u4f5c\u4e0e SIG\uff08\u4e13\u9898\u5c0f\u7ec4\uff09\u5171\u5efa\u3002</p>"},{"location":"join_sage/intellistream/#_4","title":"\ud83d\udcec \u8054\u7cfb\u65b9\u5f0f","text":"<ul> <li> <p>\ud83d\udc64 \u56e2\u961f\u8d1f\u8d23\u4eba\uff1a\u5f20\u4e66\u8c6a  </p> <ul> <li>\ud83e\udde2 \u4e3b\u9875\uff1ahttps://faculty.hust.edu.cn/ZHANG_SHUHAO/zh_CN/index/2608525/list/</li> <li>\ud83d\udce7 \u90ae\u7bb1\uff1ashuhao_zhang@hust.edu.cn  </li> <li>\ud83d\udcac QQ\uff1a420444843  </li> </ul> </li> <li> <p>\ud83c\udf10 \u56e2\u961f\u4e3b\u9875\uff1ahttps://IntelliStream.github.io/</p> </li> <li>\ud83d\udcbc \u56e2\u961f\u5730\u5740\uff1a\u6e56\u5317\u7701\u6b66\u6c49\u5e02\u6d2a\u5c71\u533a\u73de\u55bb\u8def 1037 \u53f7   \u534e\u4e2d\u79d1\u6280\u5927\u5b66\u8ba1\u7b97\u673a\u5b66\u9662 408 \u5ba4  </li> <li>\ud83d\udcac Slack \u793e\u533a\uff1aintellistream.slack.com\uff08\u6b22\u8fce\u7559\u8a00\u6216\u52a0\u5165\u4ea4\u6d41\uff09</li> </ul>"},{"location":"join_sage/intellistream/#_5","title":"\ud83d\udccc \u5f00\u6e90\u8ba1\u5212\u8def\u7ebf\u56fe","text":"\u91cc\u7a0b\u7891\u65f6\u95f4 \u5185\u5bb9 2025 H2 \u53d1\u5e03 Beta \u7248\u672c\u7684 Dataflow SDK + \u57fa\u7840\u8bb0\u5fc6 API 2026 H1 \u53d1\u5e03\u89c2\u6d4b\u7ec4\u4ef6\u4e0e\u8c03\u5ea6\u7b56\u7565\u8bba\u6587\uff0c\u5e76\u540c\u6b65\u5f00\u6e90\u5b9e\u73b0 <p>\u9879\u76ee\u5730\u5740\u4e0e\u6587\u6863\u6301\u7eed\u66f4\u65b0\u4e2d\uff1ahttps://intellistream.github.io/SAGE-Pub/</p> <p>\u6211\u4eec\u76f8\u4fe1\u672a\u6765\u7684\u5927\u6a21\u578b\u7cfb\u7edf\uff0c\u5fc5\u987b\u201c\u80fd\u843d\u5730\u3001\u53ef\u91cd\u590d\u3001\u53ef\u89e3\u91ca\u201d\u3002\u5982\u679c\u4f60\u4e5f\u8ba4\u540c\u8fd9\u6761\u8def\u5f84\uff0c\u6b22\u8fce\u52a0\u5165\u6211\u4eec\uff0c\u4e00\u8d77\u642d\u5efa\u4e0b\u4e00\u4e2a\u5341\u5e74\u7684\u667a\u80fd\u7cfb\u7edf\u57fa\u7840\u8bbe\u65bd\uff01</p> <p>\u2014\u2014 IntelliStream \u00b7 SAGE \u9879\u76ee\u7ec4</p>"},{"location":"join_sage/overview_template/","title":"SAGE Chapter","text":"<p>Chapter \u4e3aSAGE\u7f16\u7a0b\u63d0\u4f9b\u4e86XXX\uff0cXXX\u53ef\u4ee5do something\uff0c\u4f8b\u5982something\u3002</p> <p>\u5bf9\u4e8e\u67d0\u4e9b\u4eba\u6765\u8bf4\uff0cChapter \u901a\u8fc7\u63d0\u4f9bXXX\u4e3a\u5176\u63d0\u4f9b\u66f4\u4fbf\u6377/\u9ad8\u6548\u7684\u7ec4\u4ef6/\u51fd\u6570/\u7b49\u7b49\u3002</p> <p>\u6ce8\u610f\uff0c\u5728\u4e86\u89e3\u672c\u7ae0\u4e4b\u524d\u9700\u8981\u63d0\u524d\u4e86\u89e3\u4ee5\u4e0b\u77e5\u8bc6\uff1a</p> <p>\u5148\u51b3\u6761\u4ef6\uff08Prerequisites\uff09</p> <ul> <li>\u57fa\u7840\u6982\u5ff5\uff1a{\u4f8b\u5982RAG\u3001Agent\u7b49\u7b49}</li> <li>\u524d\u7f6e\u77e5\u8bc6\uff1a{\u9700\u8bfb\u7684\u524d\u4e00\u7ae0\u94fe\u63a5}</li> </ul>"},{"location":"join_sage/overview_template/#chapter-example","title":"\u4e00\u3001Chapter Example","text":"PythonJavaScript pip \u5b89\u88c5\u4e0e\u6700\u5c0f\u53ef\u8fd0\u884c\u793a\u4f8b<pre><code>import {{pkg}}\ndef main():\n    print(\"{{Hello from chapter}}\")\nif __name__ == \"__main__\":\n    main()\n</code></pre> npm \u5b89\u88c5\u4e0e\u6700\u5c0f\u793a\u4f8b<pre><code>import { {{fn}} } from \"{{pkg}}\";\nconsole.log({{fn}}(\"{{input}}\"));\n</code></pre>"},{"location":"join_sage/overview_template/#chapter-detail-overview","title":"\u4e8c\u3001Chapter Detail Overview","text":""},{"location":"join_sage/overview_template/#section-i","title":"Section \u2160","text":"<p>Section \u2160 \u5305\u542bXXX\u7c7b\uff0c\u63d0\u4f9bXXX\u652f\u6301/\u529f\u80fd\uff0c\u5177\u6709XXX\u7279\u6027\u3002</p> <p>XXX\u5728\u8bbe\u8ba1\u4e4b\u521d\u662f\u4e3a\u4e86YYY\uff0c\u7528\u6237\u53ef\u901a\u8fc7XXX\u5e72ZZZ\u3002\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605XXX\u3002</p> <p>\u6ce8</p> <p>\u8865\u5145\u8bf4\u660e\u3002</p>"},{"location":"join_sage/overview_template/#section-ii","title":"Section \u2161","text":"<p>Same as above\u3002</p>"},{"location":"join_sage/overview_template/#section-iii","title":"Section \u2162","text":"<p>Same as above\u3002</p>"},{"location":"join_sage/overview_template/#_1","title":"\u4e09\u3001\u5feb\u901f\u7d22\u5f15","text":"\u7ec4\u4ef6 \u5165\u53e3 \u5feb\u901f\u94fe\u63a5 HTTP API <code>{{/v1/resources}}</code> \u4e00\u53e5\u8bdd\u53d9\u8ff0\u4f5c\u7528 SDK <code>{{package/module}}</code> \u4e00\u53e5\u8bdd\u53d9\u8ff0\u4f5c\u7528 CLI <code>{{tool}}</code> \u4e00\u53e5\u8bdd\u53d9\u8ff0\u4f5c\u7528"},{"location":"join_sage/quick_start/","title":"XXX\u5feb\u901f\u5f00\u59cb","text":"<p>\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bXXX\u5373\u53ef</p>"},{"location":"join_sage/quick_start/#_1","title":"\u793a\u4f8b\u4e00","text":"Python pip \u5b89\u88c5\u4e0e\u6700\u5c0f\u53ef\u8fd0\u884c\u793a\u4f8b<pre><code>import {{pkg}}\ndef main():\n    print(\"{{Hello from chapter}}\")\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u9644\u5e26\u4e00\u4e0b\u8bb2\u89e3\uff0c\u53ea\u8bb2\u89e3\u8be5\u5b9e\u4f8b\u4e2d\u9700\u8981\u7528\u6237\u6ce8\u610f\u7684\uff08\u524d\u9762\u8bb2\u8fc7\u5c31\u4e0d\u9700\u8981\u518d\u8bb2\u4e86\uff09</p>"},{"location":"join_sage/quick_start/#_2","title":"\u793a\u4f8b\u4e8c","text":"Python pip \u5b89\u88c5\u4e0e\u6700\u5c0f\u53ef\u8fd0\u884c\u793a\u4f8b<pre><code>import {{pkg}}\ndef main():\n    print(\"{{Hello from chapter}}\")\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"join_sage/quick_start/#_3","title":"\u5c0f\u8282","text":""},{"location":"join_sage/rookie/","title":"\u6b22\u8fce\u65b0\u540c\u5b66~","text":""},{"location":"join_sage/rookie/#_2","title":"\u5199\u5728\u524d\u9762","text":""},{"location":"join_sage/rookie/#_3","title":"\u8d44\u6e90","text":"<ul> <li>\u5468\u4f1a\u6587\u6863\uff1a\u3010\u817e\u8baf\u6587\u6863\u3011\u7ec4\u4f1a&amp;\u4e2a\u4eba\u6c47\u62a5PPT</li> <li></li> </ul>"},{"location":"join_sage/rookie/#_4","title":"\u5b88\u5219","text":""},{"location":"join_sage/template/","title":"MkDocs Material \u9ad8\u7ea7\u8868\u8fbe\u65b9\u5f0f\u6a21\u677f","text":"<p>\u8fd9\u4e2a\u6587\u4ef6\u5c55\u793a\u4e86\u5728 MkDocs Material \u4e3b\u9898\u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684\u5404\u79cd\u9ad8\u7ea7\u8868\u8fbe\u65b9\u5f0f\u548c\u7ec4\u4ef6\u3002</p>"},{"location":"join_sage/template/#1-admonitions","title":"1. \u544a\u793a\u6846 (Admonitions)","text":"<p>\u63d0\u793a</p> <p>\u8fd9\u662f\u4e00\u4e2a\u63d0\u793a\u6846\uff0c\u7528\u4e8e\u5c55\u793a\u91cd\u8981\u4fe1\u606f\u3002</p> <p>\u4fe1\u606f</p> <p>\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u6846\uff0c\u7528\u4e8e\u5c55\u793a\u4e00\u822c\u4fe1\u606f\u3002</p> <p>\u5c0f\u8d34\u58eb</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5c0f\u8d34\u58eb\u6846\uff0c\u7528\u4e8e\u7ed9\u51fa\u5efa\u8bae\u3002</p> <p>\u8b66\u544a</p> <p>\u8fd9\u662f\u4e00\u4e2a\u8b66\u544a\u6846\uff0c\u7528\u4e8e\u63d0\u9192\u6ce8\u610f\u4e8b\u9879\u3002</p> <p>\u5371\u9669</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5371\u9669\u6846\uff0c\u7528\u4e8e\u6807\u6ce8\u98ce\u9669\u64cd\u4f5c\u3002</p> <p>\u6210\u529f</p> <p>\u8fd9\u662f\u4e00\u4e2a\u6210\u529f\u6846\uff0c\u7528\u4e8e\u6807\u6ce8\u6210\u529f\u72b6\u6001\u3002</p> <p>\u5931\u8d25</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5931\u8d25\u6846\uff0c\u7528\u4e8e\u6807\u6ce8\u5931\u8d25\u72b6\u6001\u3002</p> <p>\u9519\u8bef</p> <p>\u8fd9\u662f\u4e00\u4e2a\u9519\u8bef\u6846\uff0c\u7528\u4e8e\u6807\u6ce8 bug \u6216\u95ee\u9898\u3002</p> <p>\u793a\u4f8b</p> <p>\u8fd9\u662f\u4e00\u4e2a\u793a\u4f8b\u6846\uff0c\u7528\u4e8e\u5c55\u793a\u4ee3\u7801\u793a\u4f8b\u3002</p> <p>\u5f15\u7528</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5f15\u7528\u6846\uff0c\u7528\u4e8e\u5f15\u7528\u4ed6\u4eba\u89c2\u70b9\u3002</p>"},{"location":"join_sage/template/#_1","title":"\u53ef\u6298\u53e0\u7684\u544a\u793a\u6846","text":"\u53ef\u6298\u53e0\u7684\u63d0\u793a (\u70b9\u51fb\u5c55\u5f00) <p>\u8fd9\u4e2a\u544a\u793a\u6846\u9ed8\u8ba4\u662f\u6298\u53e0\u7684\uff0c\u70b9\u51fb\u6807\u9898\u53ef\u4ee5\u5c55\u5f00\u3002</p> \u9ed8\u8ba4\u5c55\u5f00\u7684\u53ef\u6298\u53e0\u544a\u793a\u6846 <p>\u8fd9\u4e2a\u544a\u793a\u6846\u9ed8\u8ba4\u662f\u5c55\u5f00\u7684\uff0c\u4f46\u53ef\u4ee5\u6298\u53e0\u3002</p>"},{"location":"join_sage/template/#2","title":"2. \u4ee3\u7801\u5757\u589e\u5f3a","text":""},{"location":"join_sage/template/#_2","title":"\u57fa\u672c\u4ee3\u7801\u5757","text":"<pre><code>def hello_world():\n    print(\"Hello, World!\")\n</code></pre>"},{"location":"join_sage/template/#_3","title":"\u5e26\u6807\u9898\u7684\u4ee3\u7801\u5757","text":"\u793a\u4f8b\u4ee3\u7801<pre><code>def calculate_sum(a, b):\n    return a + b\n\nresult = calculate_sum(5, 3)\nprint(f\"\u7ed3\u679c\u662f: {result}\")\n</code></pre>"},{"location":"join_sage/template/#_4","title":"\u5e26\u884c\u53f7\u7684\u4ee3\u7801\u5757","text":"<pre><code>class DataProcessor:\n    def __init__(self, name):\n        self.name = name\n\n    def process(self, data):\n        return f\"\u5904\u7406 {data} \u901a\u8fc7 {self.name}\"\n</code></pre>"},{"location":"join_sage/template/#_5","title":"\u9ad8\u4eae\u7279\u5b9a\u884c\u7684\u4ee3\u7801\u5757","text":"<pre><code>def important_function():\n    # \u8fd9\u884c\u4f1a\u88ab\u9ad8\u4eae\n    important_variable = \"\u91cd\u8981\u6570\u636e\"\n    return important_variable\n</code></pre>"},{"location":"join_sage/template/#_6","title":"\u5185\u8054\u4ee3\u7801\u5757","text":"<p>\u8fd9\u91cc\u6709\u4e00\u4e9b\u5185\u8054\u4ee3\u7801: <code>print(\"Hello\")</code> \u548c <code>var x = 10;</code></p>"},{"location":"join_sage/template/#3-tabs","title":"3. \u6807\u7b7e\u9875 (Tabs)","text":"PythonJavaScriptJava <pre><code>def greet(name):\n    return f\"Hello, {name}!\"\n\nprint(greet(\"SAGE\"))\n</code></pre> <pre><code>function greet(name) {\n    return `Hello, ${name}!`;\n}\n\nconsole.log(greet(\"SAGE\"));\n</code></pre> <pre><code>public class Greeting {\n    public static String greet(String name) {\n        return \"Hello, \" + name + \"!\";\n    }\n\n    public static void main(String[] args) {\n        System.out.println(greet(\"SAGE\"));\n    }\n}\n</code></pre>"},{"location":"join_sage/template/#4","title":"4. \u8868\u683c","text":""},{"location":"join_sage/template/#_7","title":"\u57fa\u672c\u8868\u683c","text":"\u7279\u6027 \u63cf\u8ff0 \u72b6\u6001 \u6d41\u5904\u7406 \u5b9e\u65f6\u6570\u636e\u6d41\u5904\u7406 \u2705 \u5b8c\u6210 \u6279\u5904\u7406 \u6279\u91cf\u6570\u636e\u5904\u7406 \u2705 \u5b8c\u6210 \u5206\u5e03\u5f0f \u5206\u5e03\u5f0f\u8ba1\u7b97\u652f\u6301 \ud83d\udea7 \u5f00\u53d1\u4e2d \u76d1\u63a7 \u5b9e\u65f6\u76d1\u63a7\u9762\u677f \ud83d\udccb \u8ba1\u5212\u4e2d"},{"location":"join_sage/template/#_8","title":"\u5bf9\u9f50\u8868\u683c","text":"\u5de6\u5bf9\u9f50 \u5c45\u4e2d\u5bf9\u9f50 \u53f3\u5bf9\u9f50 \u5185\u5bb91 \u5185\u5bb92 \u5185\u5bb93 \u8f83\u957f\u7684\u5185\u5bb9 \u4e2d\u7b49\u5185\u5bb9 \u77ed\u5185\u5bb9"},{"location":"join_sage/template/#5","title":"5. \u5217\u8868\u589e\u5f3a","text":""},{"location":"join_sage/template/#_9","title":"\u4efb\u52a1\u5217\u8868","text":"<ul> <li> \u5b8c\u6210\u9879\u76ee\u521d\u59cb\u5316</li> <li> \u5b9e\u73b0\u57fa\u7840\u529f\u80fd</li> <li> \u6dfb\u52a0\u6d4b\u8bd5\u7528\u4f8b</li> <li> \u5b8c\u5584\u6587\u6863</li> <li> \u53d1\u5e03\u7b2c\u4e00\u4e2a\u7248\u672c</li> </ul>"},{"location":"join_sage/template/#_10","title":"\u5b9a\u4e49\u5217\u8868","text":"\u6570\u636e\u6d41 \u4e00\u7cfb\u5217\u8fde\u7eed\u7684\u6570\u636e\u5143\u7d20\u5e8f\u5217 \u7b97\u5b50 \u5bf9\u6570\u636e\u6d41\u8fdb\u884c\u8f6c\u6362\u7684\u64cd\u4f5c \u6279\u5904\u7406 \u4e00\u6b21\u6027\u5904\u7406\u5927\u91cf\u6570\u636e\u7684\u8ba1\u7b97\u6a21\u5f0f"},{"location":"join_sage/template/#6","title":"6. \u6570\u5b66\u516c\u5f0f (\u9700\u8981\u989d\u5916\u914d\u7f6e)","text":"<p>\u5185\u8054\u516c\u5f0f: \\(E = mc^2\\)</p> <p>\u5757\u7ea7\u516c\u5f0f: $$ \\sum_{i=1}^{n} x_i = x_1 + x_2 + \\cdots + x_n $$</p>"},{"location":"join_sage/template/#7","title":"7. \u56fe\u6807\u548c\u8868\u60c5\u7b26\u53f7","text":""},{"location":"join_sage/template/#_11","title":"\u5e38\u7528\u56fe\u6807","text":"<p> \u5b8c\u6210  \u53d6\u6d88  \u4fe1\u606f  \u8b66\u544a  \u60f3\u6cd5  \u542f\u52a8  \u8bbe\u7f6e  \u4e0b\u8f7d  </p>"},{"location":"join_sage/template/#_12","title":"\u8868\u60c5\u7b26\u53f7","text":""},{"location":"join_sage/template/#8","title":"8. \u952e\u76d8\u6309\u952e","text":"<p>\u6309 Ctrl+C \u590d\u5236\u6587\u672c \u6309 Ctrl+V \u7c98\u8d34\u6587\u672c \u6309 Enter \u786e\u8ba4 \u6309 Shift+Tab \u53cd\u5411\u7f29\u8fdb  </p>"},{"location":"join_sage/template/#9","title":"9. \u811a\u6ce8","text":"<p>\u8fd9\u91cc\u662f\u4e00\u4e2a\u811a\u6ce8\u7684\u4f8b\u5b50<sup>1</sup>\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u811a\u6ce8<sup>2</sup>\u3002</p>"},{"location":"join_sage/template/#10","title":"10. \u7f29\u5199","text":"<p>SAGE \u662f\u4e00\u4e2a\u5f88\u68d2\u7684\u9879\u76ee\uff0cHTML \u548c CSS \u662f\u7f51\u9875\u5f00\u53d1\u7684\u57fa\u7840\u3002</p>"},{"location":"join_sage/template/#11","title":"11. \u94fe\u63a5\u548c\u5f15\u7528","text":""},{"location":"join_sage/template/#_13","title":"\u5916\u90e8\u94fe\u63a5","text":"<p>\u8bbf\u95ee GitHub</p>"},{"location":"join_sage/template/#_14","title":"\u5185\u90e8\u94fe\u63a5","text":"<p>\u56de\u5230\u9996\u9875  </p> <p>\u67e5\u770b DataStream \u4ecb\u7ecd</p>"},{"location":"join_sage/template/#_15","title":"\u5f15\u7528\u5f0f\u94fe\u63a5","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u5f15\u7528\u5f0f\u94fe\u63a5\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u5f15\u7528\u3002</p>"},{"location":"join_sage/template/#12","title":"12. \u56fe\u7247","text":""},{"location":"join_sage/template/#_16","title":"\u57fa\u672c\u56fe\u7247","text":""},{"location":"join_sage/template/#_17","title":"\u5e26\u6807\u9898\u7684\u56fe\u7247","text":""},{"location":"join_sage/template/#_18","title":"\u53ef\u70b9\u51fb\u7684\u56fe\u7247","text":""},{"location":"join_sage/template/#13","title":"13. \u5f15\u7528\u5757","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5f15\u7528\u5757\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u591a\u884c\u7684\u5f15\u7528\u5757\uff0c \u53ef\u4ee5\u5305\u542b\u591a\u884c\u5185\u5bb9\uff0c \u975e\u5e38\u9002\u5408\u5f15\u7528\u957f\u6587\u672c\u3002</p> <p>\u91cd\u8981\u5f15\u7528</p> <p>\u8fd9\u4e2a\u5f15\u7528\u5757\u5305\u542b\u4e86\u683c\u5f0f\u5316\u7684\u5185\u5bb9\uff0c \u6bd4\u5982**\u7c97\u4f53**\u548c*\u659c\u4f53*\u6587\u5b57\u3002</p>"},{"location":"join_sage/template/#14","title":"14. \u6c34\u5e73\u5206\u5272\u7ebf","text":"<p>\u4e0a\u9762\u7684\u5185\u5bb9</p> <p>\u4e0b\u9762\u7684\u5185\u5bb9</p> <p>\u53e6\u4e00\u79cd\u5206\u5272\u7ebf</p>"},{"location":"join_sage/template/#15","title":"15. \u6587\u672c\u683c\u5f0f","text":"<p>\u7c97\u4f53\u6587\u672c \u659c\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c \u5220\u9664\u7ebf\u6587\u672c \u9ad8\u4eae\u6587\u672c H<sub>2</sub>O (\u4e0b\u6807) X<sup>2</sup> (\u4e0a\u6807)  </p>"},{"location":"join_sage/template/#16","title":"16. \u8fdb\u5ea6\u6761 (\u9700\u8981\u989d\u5916\u6269\u5c55)","text":"<p>\u8fdb\u5ea6\u6761\u901a\u5e38\u9700\u8981\u989d\u5916\u7684\u6269\u5c55\u652f\u6301\uff0c\u53ef\u4ee5\u7528 HTML \u5b9e\u73b0\uff1a</p> 70%"},{"location":"join_sage/template/#17","title":"17. \u6298\u53e0\u5185\u5bb9\u5757","text":"\u70b9\u51fb\u5c55\u5f00\u8be6\u7ec6\u4fe1\u606f  \u8fd9\u91cc\u662f\u6298\u53e0\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u5305\u542b\uff1a  - \u5217\u8868\u9879 - **\u683c\u5f0f\u5316\u6587\u672c** - `\u4ee3\u7801\u5757`  <pre><code>def hidden_function():\n    return \"\u8fd9\u662f\u9690\u85cf\u7684\u4ee3\u7801\"\n</code></pre>"},{"location":"join_sage/template/#18-html","title":"18. HTML \u6807\u7b7e\u589e\u5f3a","text":""},{"location":"join_sage/template/#_19","title":"\u5c45\u4e2d\u5bf9\u9f50","text":"\u8fd9\u662f\u5c45\u4e2d\u7684\u6587\u5b57"},{"location":"join_sage/template/#_20","title":"\u5c0f\u5b57\u4f53","text":"<p>\u8fd9\u662f\u5c0f\u5b57\u4f53\u6587\u672c</p>"},{"location":"join_sage/template/#_21","title":"\u5927\u5b57\u4f53","text":"<p>\u8fd9\u662f\u5927\u5b57\u4f53\u6587\u672c</p>"},{"location":"join_sage/template/#_22","title":"\u6807\u8bb0\u6587\u672c","text":"<p>\u8fd9\u662f\u6807\u8bb0\u7684\u91cd\u8981\u6587\u672c</p>"},{"location":"join_sage/template/#19-css","title":"19. \u7f51\u683c\u5e03\u5c40 (\u9700\u8981\u81ea\u5b9a\u4e49 CSS)","text":"<p>\u529f\u80fd1</p> <p>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u529f\u80fd\u7684\u63cf\u8ff0</p> <p>\u529f\u80fd2</p> <p>\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u529f\u80fd\u7684\u63cf\u8ff0</p>"},{"location":"join_sage/template/#20-css","title":"20. \u6309\u94ae\u6837\u5f0f (\u9700\u8981\u81ea\u5b9a\u4e49 CSS)","text":"<p>\u666e\u901a\u6309\u94ae \u4e3b\u8981\u6309\u94ae</p>"},{"location":"join_sage/template/#_23","title":"\u4f7f\u7528\u5efa\u8bae","text":"<ol> <li>\u544a\u793a\u6846\uff1a\u6700\u5e38\u7528\u7684\u9ad8\u7ea7\u7ec4\u4ef6\uff0c\u9002\u5408\u7a81\u51fa\u91cd\u8981\u4fe1\u606f</li> <li>\u4ee3\u7801\u5757\u589e\u5f3a\uff1a\u5bf9\u4e8e\u6280\u672f\u6587\u6863\u7279\u522b\u91cd\u8981</li> <li>\u6807\u7b7e\u9875\uff1a\u9002\u5408\u5c55\u793a\u591a\u79cd\u8bed\u8a00\u6216\u65b9\u6848\u7684\u5bf9\u6bd4</li> <li>\u8868\u683c\uff1a\u7ed3\u6784\u5316\u6570\u636e\u5c55\u793a</li> <li>\u4efb\u52a1\u5217\u8868\uff1a\u9879\u76ee\u8fdb\u5ea6\u8ddf\u8e2a</li> <li>\u56fe\u6807\uff1a\u589e\u52a0\u89c6\u89c9\u6548\u679c\uff0c\u4f46\u4e0d\u8981\u8fc7\u5ea6\u4f7f\u7528</li> </ol>"},{"location":"join_sage/template/#21-snippets","title":"21. \u4ee3\u7801\u7247\u6bb5\u5d4c\u5165 (Snippets)","text":"<p>\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>pymdownx.snippets</code> \u6269\u5c55\u6765\u5d4c\u5165\u5916\u90e8\u4ee3\u7801\u6587\u4ef6\uff1a</p> \u5d4c\u5165\u7684\u4ee3\u7801\u793a\u4f8b<pre><code>#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nSAGE Framework Hello World \u6279\u5904\u7406\u793a\u4f8b\n\n\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 SAGE Framework \u7684\u7b80\u5355\u6279\u5904\u7406\u793a\u4f8b\uff0c\u6f14\u793a\u4e86\uff1a\n1. \u6279\u5904\u7406\u6570\u636e\u6e90 (BatchFunction)\n2. \u6570\u636e\u8f6c\u6362 (MapFunction)\n3. \u6570\u636e\u8f93\u51fa (SinkFunction)\n\nAuthor: SAGE Team\nLicense: Apache 2.0\n\"\"\"\n\nimport time\n\nfrom sage.core.api.function.batch_function import BatchFunction\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.local_environment import LocalEnvironment\n\n\nclass HelloBatch(BatchFunction):\n    \"\"\"\n    \u6279\u5904\u7406\u6570\u636e\u6e90\u51fd\u6570\uff0c\u751f\u6210\u6307\u5b9a\u6570\u91cf\u7684 Hello, World! \u6d88\u606f\n\n    \u8be5\u7c7b\u7ee7\u627f\u81ea BatchFunction\uff0c\u7528\u4e8e\u751f\u6210\u6279\u5904\u7406\u6570\u636e\u3002\n    \u5f53\u8ba1\u6570\u5668\u8fbe\u5230\u6700\u5927\u503c\u65f6\uff0c\u8fd4\u56de None \u8868\u793a\u6279\u5904\u7406\u5b8c\u6210\u3002\n    \"\"\"\n\n    def __init__(self, max_count=10, **kwargs):\n        \"\"\"\n        \u521d\u59cb\u5316\u6279\u5904\u7406\u6570\u636e\u6e90\n\n        Args:\n            max_count (int): \u6700\u5927\u751f\u6210\u6570\u636e\u6761\u6570\uff0c\u9ed8\u8ba4\u4e3a 10\n            **kwargs: \u4f20\u9012\u7ed9\u7236\u7c7b\u7684\u5176\u4ed6\u53c2\u6570\n        \"\"\"\n        super().__init__(**kwargs)\n        self.counter = 0\n        self.max_count = max_count\n\n    def execute(self):\n        \"\"\"\n        \u6267\u884c\u6279\u5904\u7406\u6570\u636e\u751f\u6210\n\n        Returns:\n            str: \u683c\u5f0f\u5316\u7684 Hello, World! \u6d88\u606f\n            None: \u5f53\u8fbe\u5230\u6700\u5927\u8ba1\u6570\u65f6\u8fd4\u56de None\uff0c\u8868\u793a\u6279\u5904\u7406\u5b8c\u6210\n        \"\"\"\n        if self.counter &gt;= self.max_count:\n            return None  # \u8fd4\u56de None \u8868\u793a\u6279\u5904\u7406\u5b8c\u6210\n\n        self.counter += 1\n        return f\"Hello, World! #{self.counter}\"\n\n\nclass UpperCaseMap(MapFunction):\n    \"\"\"\n    \u5b57\u7b26\u4e32\u5927\u5199\u8f6c\u6362\u51fd\u6570\n\n    \u8be5\u7c7b\u7ee7\u627f\u81ea MapFunction\uff0c\u7528\u4e8e\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5927\u5199\u5f62\u5f0f\u3002\n    \u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u8f6c\u6362\u793a\u4f8b\u3002\n    \"\"\"\n\n    def execute(self, data):\n        \"\"\"\n        \u6267\u884c\u5b57\u7b26\u4e32\u5927\u5199\u8f6c\u6362\n\n        Args:\n            data (str): \u8f93\u5165\u7684\u5b57\u7b26\u4e32\u6570\u636e\n\n        Returns:\n            str: \u8f6c\u6362\u4e3a\u5927\u5199\u7684\u5b57\u7b26\u4e32\n        \"\"\"\n        if data is None:\n            return None\n        return data.upper()\n\n\nclass PrintSink(SinkFunction):\n    \"\"\"\n    \u63a7\u5236\u53f0\u8f93\u51fa\u51fd\u6570\n\n    \u8be5\u7c7b\u7ee7\u627f\u81ea SinkFunction\uff0c\u7528\u4e8e\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002\n    \u8fd9\u662f\u6570\u636e\u6d41\u7684\u6700\u7ec8\u8f93\u51fa\u7aef\u70b9\u3002\n    \"\"\"\n\n    def execute(self, data):\n        \"\"\"\n        \u6267\u884c\u6570\u636e\u8f93\u51fa\u64cd\u4f5c\n\n        Args:\n            data (str): \u9700\u8981\u8f93\u51fa\u7684\u6570\u636e\n\n        Returns:\n            str: \u8fd4\u56de\u539f\u59cb\u6570\u636e\uff08\u4fbf\u4e8e\u94fe\u5f0f\u64cd\u4f5c\uff09\n        \"\"\"\n        if data is not None:\n            print(f\"[OUTPUT] {data}\")\n        return data\n\n\ndef main():\n    \"\"\"\n    \u4e3b\u51fd\u6570\uff1a\u6f14\u793a SAGE Framework \u6279\u5904\u7406\u6d41\u7a0b\n\n    \u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u5904\u7406\u6d41\u6c34\u7ebf\uff1a\n    1. HelloBatch \u751f\u6210\u6570\u636e\n    2. UpperCaseMap \u8f6c\u6362\u6570\u636e\u4e3a\u5927\u5199\n    3. PrintSink \u8f93\u51fa\u7ed3\u679c\u5230\u63a7\u5236\u53f0\n    \"\"\"\n    # \u521b\u5efa\u672c\u5730\u6267\u884c\u73af\u5883\n    env = LocalEnvironment(\"hello_world_batch_demo\")\n\n    # \u6784\u5efa\u6570\u636e\u5904\u7406\u6d41\u6c34\u7ebf\uff1a\u6279\u5904\u7406\u6e90 -&gt; \u6620\u5c04\u8f6c\u6362 -&gt; \u8f93\u51fa\n    print(\"\u6784\u5efa\u6570\u636e\u5904\u7406\u6d41\u6c34\u7ebf...\")\n    env.from_batch(HelloBatch).map(UpperCaseMap).sink(PrintSink)\n\n    try:\n        print(\"\u5f00\u59cb\u6267\u884c\u6279\u5904\u7406\u4efb\u52a1...\")\n        env.submit()\n\n        # \u7b49\u5f85\u6279\u5904\u7406\u5b8c\u6210\n        time.sleep(2)  # \u7b49\u5f85\u8db3\u591f\u65f6\u95f4\u8ba9\u6279\u5904\u7406\u5b8c\u6210\n\n    except KeyboardInterrupt:\n        print(\"\\n[INFO] \u7528\u6237\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c\")\n    except Exception as e:\n        print(f\"[ERROR] \u7a0b\u5e8f\u6267\u884c\u51fa\u9519: {e}\")\n    finally:\n        print(\"[INFO] Hello World \u6279\u5904\u7406\u793a\u4f8b\u7ed3\u675f\")\n\n\nif __name__ == \"__main__\":\n    \"\"\"\n    \u7a0b\u5e8f\u5165\u53e3\u70b9\n\n    \u7981\u7528\u8c03\u8bd5\u65e5\u5fd7\u5e76\u542f\u52a8\u4e3b\u7a0b\u5e8f\n    \"\"\"\n    # \u7981\u7528\u5168\u5c40\u63a7\u5236\u53f0\u8c03\u8bd5\u4fe1\u606f\uff0c\u4fdd\u6301\u8f93\u51fa\u6e05\u6d01\n    # CustomLogger.disable_global_console_debug()  # Commented out due to import issue\n\n    # \u542f\u52a8\u4e3b\u7a0b\u5e8f\n    main()\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5d4c\u5165\u6587\u4ef6\u7684\u7279\u5b9a\u884c\uff1a</p> \u5d4c\u5165\u7279\u5b9a\u884c<pre><code>#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nSAGE Framework Hello World \u6279\u5904\u7406\u793a\u4f8b\n\n\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 SAGE Framework \u7684\u7b80\u5355\u6279\u5904\u7406\u793a\u4f8b\uff0c\u6f14\u793a\u4e86\uff1a\n1. \u6279\u5904\u7406\u6570\u636e\u6e90 (BatchFunction)\n2. \u6570\u636e\u8f6c\u6362 (MapFunction)\n3. \u6570\u636e\u8f93\u51fa (SinkFunction)\n</code></pre>"},{"location":"join_sage/template/#22-inline-highlight","title":"22. \u5185\u8054\u4ee3\u7801\u9ad8\u4eae (Inline Highlight)","text":"<p>\u4f7f\u7528 <code>pymdownx.inlinehilite</code> \u53ef\u4ee5\u9ad8\u4eae\u5185\u8054\u4ee3\u7801\uff1a</p> <p>\u8fd9\u662f\u666e\u901a\u5185\u8054\u4ee3\u7801 <code>print(\"hello\")</code>\uff0c\u8fd9\u662f\u9ad8\u4eae\u5185\u8054\u4ee3\u7801 <code>print(\"hello\")</code>\u3002</p> <p>\u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u8bed\u8a00\uff1a<code>console.log(\"hello\")</code></p>"},{"location":"join_sage/template/#23-attr-list","title":"23. \u5c5e\u6027\u5217\u8868 (Attr List)","text":"<p>\u4f7f\u7528 <code>attr_list</code> \u6269\u5c55\u53ef\u4ee5\u7ed9\u5143\u7d20\u6dfb\u52a0\u5c5e\u6027\uff1a</p>"},{"location":"join_sage/template/#_24","title":"\u56fe\u7247\u5c5e\u6027","text":""},{"location":"join_sage/template/#_25","title":"\u94fe\u63a5\u5c5e\u6027","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u5728\u65b0\u7a97\u53e3\u6253\u5f00\u7684\u94fe\u63a5</p>"},{"location":"join_sage/template/#_26","title":"\u6587\u672c\u5c5e\u6027","text":"<p>\u8fd9\u662f\u4e00\u6bb5 \u5f3a\u8c03\u6587\u5b57 \u5e26\u6709\u81ea\u5b9a\u4e49\u5c5e\u6027\u3002</p>"},{"location":"join_sage/template/#_27","title":"\u6309\u94ae\u6837\u5f0f\u94fe\u63a5","text":"<p>\u4e0b\u8f7d SAGE</p>"},{"location":"join_sage/template/#24-html-markdown-md-in-html","title":"24. HTML \u6807\u7b7e\u5728 Markdown \u4e2d (MD in HTML)","text":"<p>\u4f7f\u7528 <code>md_in_html</code> \u6269\u5c55\u53ef\u4ee5\u5728 HTML \u6807\u7b7e\u4e2d\u4f7f\u7528 Markdown\uff1a</p> <p>\u8fd9\u4e2a div \u4e2d\u53ef\u4ee5\u4f7f\u7528 Markdown \u8bed\u6cd5\uff01</p> <ul> <li>\u5217\u8868\u9879 1</li> <li>\u5217\u8868\u9879 2</li> </ul> <pre><code>print(\"\u4ee3\u7801\u5757\u4e5f\u53ef\u4ee5\u4f7f\u7528\")\n</code></pre>"},{"location":"join_sage/template/#25","title":"25. \u66f4\u591a\u8868\u60c5\u7b26\u53f7\u793a\u4f8b","text":""},{"location":"join_sage/template/#_28","title":"\u6280\u672f\u76f8\u5173","text":"<p> Python  JavaScript  Git  GitHub  Docker  </p>"},{"location":"join_sage/template/#_29","title":"\u72b6\u6001\u56fe\u6807","text":"<p> \u5b8c\u6210  \u5931\u8d25  \u8b66\u544a  \u4fe1\u606f  \u7591\u95ee  </p>"},{"location":"join_sage/template/#_30","title":"\u81ea\u5b9a\u4e49\u8868\u60c5","text":"<p> Python  JavaScript  \u6570\u636e\u5e93  \u4e91\u670d\u52a1  API  </p>"},{"location":"join_sage/template/#26","title":"26. \u66f4\u591a\u6587\u672c\u683c\u5f0f\u5316","text":""},{"location":"join_sage/template/#_31","title":"\u667a\u80fd\u7b26\u53f7","text":"<p>\u4f7f\u7528 <code>pymdownx.caret</code>\u3001<code>pymdownx.mark</code>\u3001<code>pymdownx.tilde</code>\uff1a</p> <ul> <li>\u63d2\u5165\u6587\u672c\uff08\u4e0a\u6807\u6587\u672c\uff09</li> <li>\u5220\u9664\u6587\u672c\uff08\u5220\u9664\u7ebf\uff09</li> <li>\u6807\u8bb0\u6587\u672c\uff08\u9ad8\u4eae\u6807\u8bb0\uff09</li> <li>H<sub>2</sub>O\uff08\u4e0b\u6807\uff09</li> <li>E=mc<sup>2</sup>\uff08\u4e0a\u6807\uff09</li> </ul>"},{"location":"join_sage/template/#_32","title":"\u7ec4\u5408\u4f7f\u7528","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u5305\u542b \u65b0\u589e\u5185\u5bb9\u3001\u5220\u9664\u5185\u5bb9 \u548c \u91cd\u8981\u6807\u8bb0 \u7684\u53e5\u5b50\u3002</p>"},{"location":"join_sage/template/#27-mathjax-katex","title":"27. \u6570\u5b66\u516c\u5f0f\u652f\u6301 (\u9700\u8981 MathJax \u6216 KaTeX)","text":"<p>\u5982\u679c\u914d\u7f6e\u4e86\u6570\u5b66\u516c\u5f0f\u652f\u6301\uff0c\u53ef\u4ee5\u4f7f\u7528\uff1a</p>"},{"location":"join_sage/template/#_33","title":"\u5185\u8054\u516c\u5f0f","text":"<p>\u5f53 \\(a \\ne 0\\) \u65f6\uff0c\u65b9\u7a0b \\(ax^2 + bx + c = 0\\) \u7684\u89e3\u4e3a\uff1a</p>"},{"location":"join_sage/template/#_34","title":"\u5757\u7ea7\u516c\u5f0f","text":"\\[x = \\frac{-b \\pm \\sqrt{b^2-4ac}}{2a}\\]"},{"location":"join_sage/template/#_35","title":"\u590d\u6742\u516c\u5f0f","text":"\\[ \\begin{align} \\dot{x} &amp; = \\sigma(y-x) \\\\ \\dot{y} &amp; = \\rho x - y - xz \\\\ \\dot{z} &amp; = -\\beta z + xy \\end{align} \\]"},{"location":"join_sage/template/#28","title":"28. \u66f4\u591a\u952e\u76d8\u6309\u952e\u7ec4\u5408","text":""},{"location":"join_sage/template/#_36","title":"\u5e38\u7528\u5feb\u6377\u952e","text":"<p>Ctrl+Shift+P \u6253\u5f00\u547d\u4ee4\u9762\u677f Alt+Tab \u5207\u6362\u5e94\u7528 Win+R \u8fd0\u884c\u5bf9\u8bdd\u6846 F12 \u5f00\u53d1\u8005\u5de5\u5177 Ctrl+Shift+I \u68c0\u67e5\u5143\u7d20  </p>"},{"location":"join_sage/template/#mac","title":"Mac \u5feb\u6377\u952e","text":"<p>Cmd+C \u590d\u5236 Cmd+V \u7c98\u8d34 Cmd+Shift+3 \u622a\u5c4f  </p>"},{"location":"join_sage/template/#29","title":"29. \u590d\u6742\u7684\u544a\u793a\u6846\u5d4c\u5957","text":"<p>\u4e3b\u8981\u8bf4\u660e</p> <p>\u8fd9\u662f\u4e00\u4e2a\u4e3b\u8981\u7684\u8bf4\u660e\u6846\u3002</p> <p>\u5d4c\u5957\u63d0\u793a</p> <p>\u4f60\u53ef\u4ee5\u5728\u544a\u793a\u6846\u4e2d\u5d4c\u5957\u53e6\u4e00\u4e2a\u544a\u793a\u6846\u3002</p> <pre><code># \u751a\u81f3\u53ef\u4ee5\u5305\u542b\u4ee3\u7801\ndef nested_example():\n    return \"\u5d4c\u5957\u793a\u4f8b\"\n</code></pre> <p>\u7ee7\u7eed\u4e3b\u8981\u8bf4\u660e\u7684\u5185\u5bb9...</p>"},{"location":"join_sage/template/#30","title":"30. \u66f4\u590d\u6742\u7684\u8868\u683c","text":""},{"location":"join_sage/template/#_37","title":"\u5e26\u6709\u4ee3\u7801\u7684\u8868\u683c","text":"\u65b9\u6cd5 \u8bed\u6cd5 \u793a\u4f8b Map <code>map(function)</code> <code>stream.map(lambda x: x * 2)</code> Filter <code>filter(condition)</code> <code>stream.filter(lambda x: x &gt; 0)</code> Reduce <code>reduce(function)</code> <code>stream.reduce(lambda a, b: a + b)</code>"},{"location":"join_sage/template/#_38","title":"\u5408\u5e76\u5355\u5143\u683c\u8868\u683c (\u9700\u8981\u989d\u5916\u63d2\u4ef6)","text":"\u7c7b\u522b \u5b50\u7c7b\u522b \u63cf\u8ff0 \u6570\u636e\u6e90 \u6279\u5904\u7406 \u6709\u9650\u6570\u636e\u96c6 \u6d41\u5904\u7406 \u65e0\u9650\u6570\u636e\u6d41 \u7b97\u5b50 \u8f6c\u6362 map, filter, reduce \u52a8\u4f5c collect, print, save"},{"location":"join_sage/template/#_39","title":"\u6269\u5c55\u914d\u7f6e\u8bf4\u660e","text":"<p>\u4f60\u5f53\u524d\u7684\u914d\u7f6e\u5df2\u7ecf\u5305\u542b\u4e86\u5927\u90e8\u5206\u6269\u5c55\uff0c\u975e\u5e38\u5b8c\u5584\uff01\u4f46\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\u6765\u652f\u6301\u6570\u5b66\u516c\u5f0f\uff1a</p> <pre><code># \u5728 mkdocs.yml \u4e2d\u6dfb\u52a0\nextra_javascript:\n  - overrides/hide_sidebar.js\n  - https://polyfill.io/v3/polyfill.min.js?features=es6\n  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\n\n# \u6216\u8005\u6dfb\u52a0 KaTeX \u652f\u6301\nextra_css:\n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.css\nextra_javascript:\n  - overrides/hide_sidebar.js\n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.js\n  - https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/contrib/auto-render.min.js\n</code></pre>"},{"location":"join_sage/template/#_40","title":"\u603b\u7ed3","text":"<p>\u4f60\u7684\u914d\u7f6e\u5df2\u7ecf\u975e\u5e38\u5b8c\u5584\u4e86\uff01\u4e3b\u8981\u9057\u6f0f\u7684\u529f\u80fd\u5305\u62ec\uff1a</p> <ol> <li>\u4ee3\u7801\u7247\u6bb5\u5d4c\u5165 - \u53ef\u4ee5\u76f4\u63a5\u5d4c\u5165\u5916\u90e8\u6587\u4ef6</li> <li>\u5185\u8054\u4ee3\u7801\u9ad8\u4eae - \u66f4\u597d\u7684\u5185\u8054\u4ee3\u7801\u5c55\u793a</li> <li>\u5c5e\u6027\u5217\u8868 - \u7ed9\u5143\u7d20\u6dfb\u52a0 CSS \u7c7b\u548c\u5c5e\u6027</li> <li>HTML \u4e2d\u7684 Markdown - \u5728 HTML \u6807\u7b7e\u4e2d\u4f7f\u7528 Markdown</li> <li>\u66f4\u4e30\u5bcc\u7684\u8868\u60c5\u7b26\u53f7 - FontAwesome \u548c Octicons \u56fe\u6807</li> <li>\u6570\u5b66\u516c\u5f0f\u652f\u6301 - \u9700\u8981\u989d\u5916\u7684 JavaScript \u5e93</li> </ol> <ol> <li> <p>\u8fd9\u662f\u7b2c\u4e00\u4e2a\u811a\u6ce8\u7684\u5185\u5bb9\u3002\u00a0\u21a9</p> </li> <li> <p>\u8fd9\u662f\u7b2c\u4e8c\u4e2a\u811a\u6ce8\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u5305\u542b\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\u00a0\u21a9</p> </li> </ol>"},{"location":"join_sage/weekly_meeting/","title":"Intellistream \u5468\u4f1a\u5b89\u6392","text":"\u8bbe\u7f6e\u5bc6\u94a5 \u91cd\u7f6e\u6240\u6709 \u540c\u6b65\u6570\u636e \u672a\u540c\u6b65 \ud83d\udd11 \u914d\u7f6e GitHub Token \u00d7 <p>\u26a0\ufe0f \u91cd\u8981\u5b89\u5168\u8bf4\u660e</p> <p>\u4e3a\u4e86\u9632\u6b62 Token \u88ab GitHub \u81ea\u52a8\u64a4\u9500\uff0c\u6b64\u7cfb\u7edf\u91c7\u7528\u5b89\u5168\u914d\u7f6e\u65b9\u5f0f\uff1a</p> GitHub Token: \u26a0\ufe0f Token \u53ea\u5728\u5f53\u524d\u6d4f\u89c8\u5668\u4f1a\u8bdd\u4e2d\u4fdd\u5b58\uff0c\u9875\u9762\u5237\u65b0\u540e\u9700\u8981\u91cd\u65b0\u8f93\u5165 \u8bbe\u7f6e Token \u53d6\u6d88 \u5982\u4f55\u83b7\u53d6 GitHub Token\uff1f <ol> <li>\u8bbf\u95ee GitHub Settings \u2192 Developer settings \u2192 Personal access tokens</li> <li>\u70b9\u51fb \"Generate new token (classic)\"</li> <li>\u53ea\u52fe\u9009 \"gist\" \u6743\u9650</li> <li>\u590d\u5236\u751f\u6210\u7684 Token</li> </ol> <p>\u6ce8\u610f\uff1a\u6b64\u5b89\u5168\u8bbe\u8ba1\u907f\u514d\u4e86 Token \u88ab\u610f\u5916\u63d0\u4ea4\u5230\u4ee3\u7801\u5e93\u800c\u88ab\u64a4\u9500\u3002</p> \u5f53\u524d\u5468\u671f: 1 \u672c\u5468\u65e5\u671f: \u52a0\u8f7d\u4e2d... \u6700\u540e\u540c\u6b65: \u4ece\u672a \u672c\u5468\u6c47\u62a5\u4eba\u5458 \u672c\u5468\u6c47\u62a5\u4eba\u5458 \u4e0b\u5468\u51c6\u5907\u6c47\u62a5\u4eba\u5458 \u4e0b\u5468\u51c6\u5907\u6c47\u62a5\u4eba\u5458 \u5df2\u6c47\u62a5\u6210\u5458 (\u672c\u5468\u671f) \u5df2\u6c47\u62a5\u7684\u6210\u5458 \u5f85\u6c47\u62a5\u6210\u5458 \u5f85\u6c47\u62a5\u7684\u6210\u5458"},{"location":"kernel/","title":"SAGE Kernel \u6838\u5fc3\u6846\u67b6","text":"<p>SAGE Kernel \u662f SAGE \u6846\u67b6\u7684\u6838\u5fc3\u5f15\u64ce\uff0c\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u6d41\u6570\u636e\u5904\u7406\u548c\u5206\u5e03\u5f0f\u8ba1\u7b97\u80fd\u529b\u3002\u5b83\u662f\u6574\u4e2a SAGE \u751f\u6001\u7cfb\u7edf\u7684\u57fa\u77f3\uff0c\u4e3a\u4e0a\u5c42\u7684\u4e2d\u95f4\u4ef6\u670d\u52a1\u548c\u5e94\u7528\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u8fd0\u884c\u65f6\u73af\u5883\u3002</p>"},{"location":"kernel/#_1","title":"\ud83c\udfd7\ufe0f \u67b6\u6784\u6982\u89c8","text":"<p>SAGE Kernel \u91c7\u7528\u5206\u5c42\u67b6\u6784\u8bbe\u8ba1\uff1a</p> <ul> <li>\u6267\u884c\u73af\u5883\u5c42: \u63d0\u4f9b\u672c\u5730\u548c\u8fdc\u7a0b\u6267\u884c\u73af\u5883</li> <li>\u6570\u636e\u6d41\u5c42: \u6838\u5fc3\u7684\u6d41\u5904\u7406API\u548c\u7b97\u5b50</li> <li>\u51fd\u6570\u5c42: \u7528\u6237\u81ea\u5b9a\u4e49\u5904\u7406\u903b\u8f91\u7684\u63a5\u53e3</li> <li>\u914d\u7f6e\u5c42: \u7cfb\u7edf\u914d\u7f6e\u548c\u53c2\u6570\u7ba1\u7406</li> </ul>"},{"location":"kernel/#_2","title":"\ud83d\udcda \u6838\u5fc3\u7ec4\u4ef6\u6587\u6863","text":""},{"location":"kernel/#datastream-api","title":"DataStream API","text":"<p>\u6d41\u6570\u636e\u5904\u7406\u7684\u6838\u5fc3API\uff0c\u63d0\u4f9b\u4e30\u5bcc\u7684\u6570\u636e\u8f6c\u6362\u548c\u5904\u7406\u64cd\u4f5c\uff1a</p> <ul> <li>DataStream \u6982\u89c8 - \u57fa\u7840\u6982\u5ff5\u548c\u7f16\u7a0b\u6a21\u5f0f</li> </ul> <ul> <li>Operator \u4e0e Function - \u7b97\u5b50\u548c\u51fd\u6570\u7684\u8bbe\u8ba1\u539f\u7406</li> </ul> <ul> <li>Transformation - \u6570\u636e\u8f6c\u6362\u64cd\u4f5c\u8be6\u89e3</li> </ul>"},{"location":"kernel/#api","title":"\u6267\u884c\u73af\u5883 API","text":"<p>\u7ba1\u7406\u4efb\u52a1\u6267\u884c\u7684\u73af\u5883\u548c\u8d44\u6e90\uff1a</p> <ul> <li>Environments API - \u672c\u5730\u548c\u8fdc\u7a0b\u6267\u884c\u73af\u5883</li> <li>DataStreams API - \u6570\u636e\u6d41\u5904\u7406\u548c\u7ba1\u9053</li> <li>Functions API - \u81ea\u5b9a\u4e49\u51fd\u6570\u5f00\u53d1</li> <li>Connected Streams API - \u591a\u6d41\u5904\u7406\u548c\u590d\u6742\u4e8b\u4ef6\u5904\u7406</li> </ul>"},{"location":"kernel/#_3","title":"\u7cfb\u7edf\u914d\u7f6e\u548c\u5de5\u5177","text":"<ul> <li>Config \u914d\u7f6e - \u7cfb\u7edf\u914d\u7f6e\u53c2\u6570\u8be6\u89e3</li> <li>CLI Reference - \u547d\u4ee4\u884c\u5de5\u5177\u4f7f\u7528\u6307\u5357</li> </ul>"},{"location":"kernel/#_4","title":"\ud83d\udcd6 \u6df1\u5165\u5b66\u4e60","text":""},{"location":"kernel/#_5","title":"\u6838\u5fc3\u6982\u5ff5","text":"<ul> <li>Architecture Overview - \u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1</li> <li>Core Concepts - \u6838\u5fc3\u6982\u5ff5\u548c\u672f\u8bed</li> </ul>"},{"location":"kernel/#_6","title":"\u5f00\u53d1\u6307\u5357","text":"<ul> <li>Quick Start Guide - \u5feb\u901f\u5165\u95e8\u6559\u7a0b</li> <li>Best Practices - \u5f00\u53d1\u6700\u4f73\u5b9e\u8df5</li> <li>FAQ - \u5e38\u89c1\u95ee\u9898\u89e3\u7b54</li> </ul>"},{"location":"kernel/#_7","title":"\u793a\u4f8b\u4ee3\u7801","text":"<ul> <li>Examples Collection - \u5b9e\u7528\u793a\u4f8b\u96c6\u5408</li> </ul>"},{"location":"kernel/#_8","title":"\ud83d\udd17 \u4e0e\u5176\u4ed6\u7ec4\u4ef6\u7684\u5173\u7cfb","text":""},{"location":"kernel/#middleware","title":"Middleware \u5c42","text":"<p>SAGE Kernel \u4e3a \u4e2d\u95f4\u4ef6\u670d\u52a1 \u63d0\u4f9b\u8fd0\u884c\u65f6\u652f\u6301</p>"},{"location":"kernel/#application","title":"Application \u5c42","text":"<p>\u4e0a\u5c42\u5e94\u7528\u7ec4\u4ef6\u57fa\u4e8e Kernel \u6784\u5efa\uff1a</p> <ul> <li>RAG \u5e94\u7528</li> </ul> <ul> <li>\u667a\u80fd\u4ee3\u7406</li> </ul> <ul> <li>\u5de5\u5177\u96c6\u6210</li> </ul>"},{"location":"kernel/#_9","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\n\n# \u521b\u5efa\u672c\u5730\u73af\u5883\nenv = LocalEnvironment(\"my_app\")\n\n# \u521b\u5efa\u6570\u636e\u6d41\u7ba1\u9053\nstream = env.from_batch([1, 2, 3, 4, 5])\nresult = stream.map(lambda x: x * 2).sink(print)\n\n# \u63d0\u4ea4\u6267\u884c\nenv.submit()\n</code></pre>"},{"location":"kernel/#_10","title":"\ud83d\udccb \u4e3b\u8981\u7279\u6027","text":"<ul> <li>\ud83d\udd04 \u6d41\u5f0f\u5904\u7406: \u652f\u6301\u65e0\u9650\u6570\u636e\u6d41\u7684\u5b9e\u65f6\u5904\u7406</li> <li>\ud83c\udf10 \u5206\u5e03\u5f0f: \u539f\u751f\u652f\u6301\u96c6\u7fa4\u90e8\u7f72\u548c\u5206\u5e03\u5f0f\u8ba1\u7b97</li> <li>\ud83c\udfaf \u7c7b\u578b\u5b89\u5168: \u57fa\u4e8ePython\u6cdb\u578b\u7684\u7f16\u8bd1\u65f6\u7c7b\u578b\u68c0\u67e5</li> <li>\ud83d\udd0c \u53ef\u6269\u5c55: \u63d2\u4ef6\u5316\u67b6\u6784\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u7b97\u5b50\u548c\u670d\u52a1</li> <li>\ud83d\udee0\ufe0f \u5de5\u5177\u5b8c\u5584: \u5b8c\u6574\u7684CLI\u5de5\u5177\u94fe\u548c\u76d1\u63a7\u4f53\u7cfb</li> <li>\ud83c\udfe2 \u4f01\u4e1a\u7ea7: \u63d0\u4f9b\u5546\u4e1a\u7248\u9ad8\u7ea7\u529f\u80fd</li> </ul>"},{"location":"kernel/#_11","title":"\ud83d\udcde \u83b7\u53d6\u5e2e\u52a9","text":"<ul> <li>GitHub Issues - \u62a5\u544a\u95ee\u9898</li> <li>\u8ba8\u8bba\u533a - \u793e\u533a\u8ba8\u8bba</li> <li>\u5b98\u65b9\u6587\u6863 - \u5b8c\u6574\u6587\u6863</li> </ul>"},{"location":"kernel/#_12","title":"\ud83d\udcc4 \u8bb8\u53ef\u8bc1","text":"<p>MIT License - \u8be6\u89c1 LICENSE \u6587\u4ef6</p>"},{"location":"kernel/architecture/","title":"SAGE Kernel \u67b6\u6784\u6982\u89c8","text":"<p>SAGE Kernel \u662f\u4e00\u4e2a\u73b0\u4ee3\u5316\u7684\u6d41\u6570\u636e\u5904\u7406\u6846\u67b6\uff0c\u91c7\u7528\u5206\u5c42\u67b6\u6784\u8bbe\u8ba1\uff0c\u63d0\u4f9b\u4eceAPI\u5230\u5e95\u5c42\u8fd0\u884c\u65f6\u7684\u5b8c\u6574\u89e3\u51b3\u65b9\u6848\u3002</p>"},{"location":"kernel/architecture/#_1","title":"\ud83c\udfd7\ufe0f \u6574\u4f53\u67b6\u6784","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                   \u7528\u6237\u5e94\u7528\u5c42                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502              API \u5c42 (sage.core.api)              \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502  \u73af\u5883\u7ba1\u7406   \u2502 \u2502  \u6570\u636e\u6d41API  \u2502 \u2502  \u51fd\u6570\u63a5\u53e3   \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502            \u6838\u5fc3\u5c42 (sage.kernel.kernels)            \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502  \u6838\u5fc3\u5f15\u64ce   \u2502 \u2502  \u53d8\u6362\u7b97\u5b50   \u2502 \u2502  \u6267\u884c\u56fe     \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502           \u8fd0\u884c\u65f6\u5c42 (sage.kernel.runtime)           \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502  \u4efb\u52a1\u8c03\u5ea6   \u2502 \u2502  \u901a\u4fe1\u673a\u5236   \u2502 \u2502  \u670d\u52a1\u7ba1\u7406   \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502            \u5de5\u5177\u5c42 (sage.kernel.utils)              \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502  \u65e5\u5fd7\u7cfb\u7edf   \u2502 \u2502  \u914d\u7f6e\u7ba1\u7406   \u2502 \u2502  \u6027\u80fd\u76d1\u63a7   \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502             CLI\u5c42 (sage.cli)                \u2502\n\u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502\n\u2502  \u2502  \u547d\u4ee4\u5de5\u5177   \u2502 \u2502  \u96c6\u7fa4\u7ba1\u7406   \u2502 \u2502  \u90e8\u7f72\u5de5\u5177   \u2502   \u2502\n\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"kernel/architecture/#_2","title":"\ud83d\udce6 \u6838\u5fc3\u6a21\u5757","text":""},{"location":"kernel/architecture/#1-api-sagecoreapi","title":"1. API \u5c42 (<code>sage.core.api</code>)","text":"<p>\u804c\u8d23: \u4e3a\u7528\u6237\u63d0\u4f9b\u53cb\u597d\u7684\u7f16\u7a0b\u63a5\u53e3</p> <ul> <li>\u73af\u5883\u7ba1\u7406: <code>LocalEnvironment</code>, <code>RemoteEnvironment</code></li> <li>\u6570\u636e\u6d41API: <code>DataStream</code>, <code>ConnectedStreams</code> </li> <li>\u51fd\u6570\u63a5\u53e3: \u5404\u79cd\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u57fa\u7c7b</li> <li>\u7c7b\u578b\u7cfb\u7edf: \u57fa\u4e8e\u6cdb\u578b\u7684\u7c7b\u578b\u5b89\u5168\u4fdd\u8bc1</li> </ul> <p>\u8bbe\u8ba1\u7279\u70b9: - \u58f0\u660e\u5f0fAPI\uff0c\u94fe\u5f0f\u8c03\u7528 - \u5ef6\u8fdf\u6267\u884c\uff0c\u6784\u5efa\u9636\u6bb5\u53ea\u521b\u5efa\u8ba1\u7b97\u56fe - \u7c7b\u578b\u5b89\u5168\uff0c\u7f16\u8bd1\u65f6\u9519\u8bef\u68c0\u67e5</p>"},{"location":"kernel/architecture/#2-sagekernelkernels","title":"2. \u6838\u5fc3\u5c42 (<code>sage.kernel.kernels</code>)","text":"<p>\u804c\u8d23: \u5b9e\u73b0\u6838\u5fc3\u7684\u6d41\u5904\u7406\u903b\u8f91</p> <ul> <li>\u6838\u5fc3\u5f15\u64ce: \u6d41\u5904\u7406\u5f15\u64ce\u5b9e\u73b0</li> <li>\u53d8\u6362\u7b97\u5b50: Map, Filter, Join\u7b49\u8f6c\u6362\u64cd\u4f5c</li> <li>\u6267\u884c\u56fe: DAG\u6784\u5efa\u548c\u4f18\u5316</li> <li>\u4efb\u52a1\u7ba1\u7406: JobManager\u548c\u4f5c\u4e1a\u8c03\u5ea6</li> </ul> <p>\u8bbe\u8ba1\u7279\u70b9: - \u9ad8\u6027\u80fdC++\u5185\u6838 - \u5185\u5b58\u96f6\u62f7\u8d1d\u4f18\u5316 - \u52a8\u6001\u8d1f\u8f7d\u5747\u8861</p>"},{"location":"kernel/architecture/#3-sagekernelruntime","title":"3. \u8fd0\u884c\u65f6\u5c42 (<code>sage.kernel.runtime</code>)","text":"<p>\u804c\u8d23: \u63d0\u4f9b\u5e95\u5c42\u8fd0\u884c\u65f6\u652f\u6301</p> <ul> <li>\u4efb\u52a1\u8c03\u5ea6: \u5206\u5e03\u5f0f\u4efb\u52a1\u8c03\u5ea6\u5668</li> <li>\u901a\u4fe1\u673a\u5236: \u8fdb\u7a0b\u95f4/\u7f51\u7edc\u901a\u4fe1</li> <li>\u670d\u52a1\u7ba1\u7406: \u5fae\u670d\u52a1\u5bb9\u5668\u548c\u751f\u547d\u5468\u671f\u7ba1\u7406</li> <li>\u8d44\u6e90\u7ba1\u7406: \u5185\u5b58\u3001CPU\u3001\u7f51\u7edc\u8d44\u6e90\u7ba1\u7406</li> </ul> <p>\u8bbe\u8ba1\u7279\u70b9: - \u5f02\u6b65I/O\u6a21\u578b - \u5bb9\u9519\u548c\u6545\u969c\u6062\u590d - \u5f39\u6027\u4f38\u7f29</p>"},{"location":"kernel/architecture/#4-sagekernelutils","title":"4. \u5de5\u5177\u5c42 (<code>sage.kernel.utils</code>)","text":"<p>\u804c\u8d23: \u63d0\u4f9b\u901a\u7528\u5de5\u5177\u548c\u8f85\u52a9\u529f\u80fd</p> <ul> <li>\u65e5\u5fd7\u7cfb\u7edf: \u7ed3\u6784\u5316\u65e5\u5fd7\u548c\u76d1\u63a7</li> <li>\u914d\u7f6e\u7ba1\u7406: \u914d\u7f6e\u6587\u4ef6\u548c\u73af\u5883\u53d8\u91cf\u7ba1\u7406</li> <li>\u6027\u80fd\u76d1\u63a7: \u6307\u6807\u6536\u96c6\u548c\u6027\u80fd\u5206\u6790</li> <li>\u5b89\u5168\u8ba4\u8bc1: \u8ba4\u8bc1\u6388\u6743\u673a\u5236</li> </ul>"},{"location":"kernel/architecture/#5-cli-sagecli","title":"5. CLI\u5c42 (<code>sage.cli</code>)","text":"<p>\u804c\u8d23: \u547d\u4ee4\u884c\u5de5\u5177\u548c\u8fd0\u7ef4\u652f\u6301</p> <ul> <li>\u5f00\u53d1\u5de5\u5177: \u9879\u76ee\u811a\u624b\u67b6\u3001\u8c03\u8bd5\u5de5\u5177</li> <li>\u96c6\u7fa4\u7ba1\u7406: \u8282\u70b9\u7ba1\u7406\u3001\u670d\u52a1\u53d1\u73b0</li> <li>\u90e8\u7f72\u5de5\u5177: \u5e94\u7528\u6253\u5305\u3001\u5bb9\u5668\u5316\u90e8\u7f72</li> <li>\u76d1\u63a7\u5de5\u5177: \u5b9e\u65f6\u76d1\u63a7\u3001\u65e5\u5fd7\u67e5\u770b</li> </ul>"},{"location":"kernel/architecture/#_3","title":"\ud83d\udd04 \u6570\u636e\u6d41\u5411","text":"<pre><code>\u7528\u6237\u4ee3\u7801 \u2192 API\u62bd\u8c61 \u2192 \u6267\u884c\u56fe \u2192 \u4efb\u52a1\u8c03\u5ea6 \u2192 \u5206\u5e03\u5f0f\u6267\u884c\n    \u2193         \u2193        \u2193        \u2193         \u2193\n   DSL    \u53d8\u6362\u7b97\u5b50   DAG\u4f18\u5316   \u8d44\u6e90\u5206\u914d   \u6570\u636e\u5904\u7406\n</code></pre>"},{"location":"kernel/architecture/#_4","title":"\ud83c\udf1f \u8bbe\u8ba1\u539f\u5219","text":""},{"location":"kernel/architecture/#1","title":"1. \u5206\u5c42\u89e3\u8026","text":"<ul> <li>\u6e05\u6670\u7684\u6a21\u5757\u8fb9\u754c</li> <li>\u63a5\u53e3\u4e0e\u5b9e\u73b0\u5206\u79bb</li> <li>\u6613\u4e8e\u6d4b\u8bd5\u548c\u7ef4\u62a4</li> </ul>"},{"location":"kernel/architecture/#2","title":"2. \u6027\u80fd\u4f18\u5148","text":"<ul> <li>\u96f6\u62f7\u8d1d\u6570\u636e\u4f20\u8f93</li> <li>\u5f02\u6b65\u5e76\u53d1\u5904\u7406</li> <li>\u5185\u5b58\u6c60\u7ba1\u7406</li> </ul>"},{"location":"kernel/architecture/#3","title":"3. \u53ef\u6269\u5c55\u6027","text":"<ul> <li>\u63d2\u4ef6\u5316\u67b6\u6784</li> <li>\u670d\u52a1\u5316\u7ec4\u4ef6</li> <li>\u6c34\u5e73\u6269\u5c55\u652f\u6301</li> </ul>"},{"location":"kernel/architecture/#4","title":"4. \u6613\u7528\u6027","text":"<ul> <li>\u58f0\u660e\u5f0fAPI</li> <li>\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc</li> <li>\u4e30\u5bcc\u7684\u5de5\u5177\u652f\u6301</li> </ul>"},{"location":"kernel/architecture/#_5","title":"\ud83d\udd17 \u6a21\u5757\u4f9d\u8d56\u5173\u7cfb","text":"<pre><code>API\u5c42 \u2192 \u6838\u5fc3\u5c42 \u2192 \u8fd0\u884c\u65f6\u5c42 \u2192 \u5de5\u5177\u5c42\n \u2193       \u2193       \u2193       \u2193\nCLI\u5c42 \u2190\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>\u6bcf\u4e00\u5c42\u90fd\u6709\u6e05\u6670\u7684\u804c\u8d23\u8fb9\u754c\uff0c\u4e0a\u5c42\u4f9d\u8d56\u4e0b\u5c42\uff0c\u4f46\u4e0b\u5c42\u4e0d\u4f9d\u8d56\u4e0a\u5c42\uff0c\u786e\u4fdd\u4e86\u67b6\u6784\u7684\u7a33\u5b9a\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</p>"},{"location":"kernel/best-practices/","title":"SAGE Kernel Best Practices","text":"<p>This guide covers best practices for developing with SAGE Kernel, based on real-world usage patterns and performance considerations.</p>"},{"location":"kernel/best-practices/#architecture-best-practices","title":"Architecture Best Practices","text":""},{"location":"kernel/best-practices/#environment-selection","title":"Environment Selection","text":"<p>Use LocalEnvironment for: - Development and testing - Single-machine deployments - Prototyping and experimentation - CPU-intensive tasks on local hardware</p> <p>Use RemoteEnvironment for: - Production deployments - Distributed processing - GPU-accelerated workloads - High-availability requirements</p> <pre><code># Development\ndev_env = LocalEnvironment(config={\n    \"debug\": True,\n    \"log_level\": \"DEBUG\"\n})\n\n# Production\nprod_env = RemoteEnvironment(\n    endpoint=\"https://api.sage-cluster.com\",\n    config={\n        \"timeout\": 30,\n        \"retry_attempts\": 3,\n        \"failover_enabled\": True\n    }\n)\n</code></pre>"},{"location":"kernel/best-practices/#stream-design-patterns","title":"Stream Design Patterns","text":""},{"location":"kernel/best-practices/#1-single-responsibility-streams","title":"1. Single Responsibility Streams","text":"<p>Keep each stream focused on a single type of data or operation:</p> <pre><code># Good: Focused streams\nuser_events = env.create_stream(\"user_events\")\nsystem_metrics = env.create_stream(\"system_metrics\")\nerror_logs = env.create_stream(\"error_logs\")\n\n# Avoid: Mixed-purpose streams\neverything_stream = env.create_stream(\"everything\")  # Too broad\n</code></pre>"},{"location":"kernel/best-practices/#2-hierarchical-stream-organization","title":"2. Hierarchical Stream Organization","text":"<p>Organize streams in a hierarchy for complex systems:</p> <pre><code># Main data streams\nraw_data = env.create_stream(\"raw_data\")\n\n# Processing stages\ncleaned_data = raw_data.map(clean_data_func)\nenriched_data = cleaned_data.map(enrich_func)\nfinal_output = enriched_data.filter(quality_filter)\n</code></pre>"},{"location":"kernel/best-practices/#3-error-stream-separation","title":"3. Error Stream Separation","text":"<p>Separate error handling into dedicated streams:</p> <pre><code>def process_with_errors(data):\n    try:\n        return process_data(data), None\n    except Exception as e:\n        return None, str(e)\n\nresults, errors = main_stream.map(process_with_errors).split()\nerrors.filter(lambda x: x is not None).sink(error_handler)\n</code></pre>"},{"location":"kernel/best-practices/#performance-optimization","title":"Performance Optimization","text":""},{"location":"kernel/best-practices/#memory-management","title":"Memory Management","text":""},{"location":"kernel/best-practices/#1-stream-buffer-configuration","title":"1. Stream Buffer Configuration","text":"<p>Configure appropriate buffer sizes based on your data volume:</p> <pre><code># High-throughput streams\nhigh_volume_stream = env.create_stream(\n    \"high_volume\",\n    config={\n        \"buffer_size\": 10000,\n        \"buffer_policy\": \"drop_oldest\"\n    }\n)\n\n# Low-latency streams\nlow_latency_stream = env.create_stream(\n    \"low_latency\", \n    config={\n        \"buffer_size\": 100,\n        \"buffer_policy\": \"block\"\n    }\n)\n</code></pre>"},{"location":"kernel/best-practices/#2-resource-cleanup","title":"2. Resource Cleanup","text":"<p>Always clean up resources properly:</p> <pre><code>try:\n    # Stream processing\n    stream = env.create_stream(\"data\")\n    result = stream.process(processor_func)\nfinally:\n    # Cleanup\n    if stream:\n        stream.close()\n    env.cleanup()\n</code></pre>"},{"location":"kernel/best-practices/#3-lazy-evaluation","title":"3. Lazy Evaluation","text":"<p>Use lazy evaluation for large datasets:</p> <pre><code># Good: Lazy evaluation\nlarge_dataset = env.create_stream(\"large_data\")\nfiltered = large_dataset.filter(filter_func)\nresult = filtered.take(1000)  # Only process what's needed\n\n# Avoid: Eager evaluation of large datasets\nall_data = large_dataset.collect()  # Loads everything into memory\n</code></pre>"},{"location":"kernel/best-practices/#processing-optimization","title":"Processing Optimization","text":""},{"location":"kernel/best-practices/#1-batch-processing","title":"1. Batch Processing","text":"<p>Process data in batches for better throughput:</p> <pre><code>def batch_processor(batch):\n    # Process multiple items together\n    return [process_item(item) for item in batch]\n\n# Process in batches of 100\nstream.batch(100).map(batch_processor)\n</code></pre>"},{"location":"kernel/best-practices/#2-parallel-processing","title":"2. Parallel Processing","text":"<p>Leverage parallelism for CPU-intensive tasks:</p> <pre><code>from concurrent.futures import ThreadPoolExecutor\n\ndef parallel_map(stream, func, max_workers=4):\n    with ThreadPoolExecutor(max_workers=max_workers) as executor:\n        return stream.map_parallel(func, executor)\n\n# Use for I/O bound operations\nresult = parallel_map(stream, io_intensive_func)\n</code></pre>"},{"location":"kernel/best-practices/#3-pipeline-optimization","title":"3. Pipeline Optimization","text":"<p>Optimize processing pipelines:</p> <pre><code># Good: Combine operations\noptimized = (stream\n    .filter(expensive_filter)  # Filter early\n    .map(transform_func)       # Transform remaining items\n    .batch(100)               # Batch for efficiency\n    .map(batch_process)       # Process batches\n)\n\n# Avoid: Inefficient ordering\ninefficient = (stream\n    .map(expensive_transform)  # Transform everything first\n    .filter(simple_filter)     # Then filter (wasteful)\n)\n</code></pre>"},{"location":"kernel/best-practices/#error-handling-and-resilience","title":"Error Handling and Resilience","text":""},{"location":"kernel/best-practices/#exception-management","title":"Exception Management","text":""},{"location":"kernel/best-practices/#1-graceful-degradation","title":"1. Graceful Degradation","text":"<p>Implement graceful degradation for non-critical failures:</p> <pre><code>def resilient_processor(data):\n    try:\n        return expensive_operation(data)\n    except NonCriticalError as e:\n        logger.warning(f\"Non-critical error: {e}\")\n        return fallback_operation(data)\n    except CriticalError:\n        raise  # Let critical errors bubble up\n</code></pre>"},{"location":"kernel/best-practices/#2-circuit-breaker-pattern","title":"2. Circuit Breaker Pattern","text":"<p>Implement circuit breakers for external dependencies:</p> <pre><code>class CircuitBreaker:\n    def __init__(self, failure_threshold=5, timeout=60):\n        self.failure_count = 0\n        self.failure_threshold = failure_threshold\n        self.timeout = timeout\n        self.last_failure_time = 0\n        self.state = \"closed\"  # closed, open, half-open\n\n    def call(self, func, *args, **kwargs):\n        if self.state == \"open\":\n            if time.time() - self.last_failure_time &gt; self.timeout:\n                self.state = \"half-open\"\n            else:\n                raise Exception(\"Circuit breaker is open\")\n\n        try:\n            result = func(*args, **kwargs)\n            if self.state == \"half-open\":\n                self.state = \"closed\"\n                self.failure_count = 0\n            return result\n        except Exception as e:\n            self.failure_count += 1\n            self.last_failure_time = time.time()\n            if self.failure_count &gt;= self.failure_threshold:\n                self.state = \"open\"\n            raise e\n\n# Usage\ncircuit_breaker = CircuitBreaker()\nresult = stream.map(lambda x: circuit_breaker.call(external_api, x))\n</code></pre>"},{"location":"kernel/best-practices/#3-retry-mechanisms","title":"3. Retry Mechanisms","text":"<p>Implement intelligent retry mechanisms:</p> <pre><code>import time\nimport random\n\ndef retry_with_backoff(func, max_retries=3, base_delay=1):\n    def wrapper(*args, **kwargs):\n        for attempt in range(max_retries):\n            try:\n                return func(*args, **kwargs)\n            except Exception as e:\n                if attempt == max_retries - 1:\n                    raise e\n\n                # Exponential backoff with jitter\n                delay = base_delay * (2 ** attempt) + random.uniform(0, 1)\n                time.sleep(delay)\n    return wrapper\n\n# Apply to stream operations\nreliable_processor = retry_with_backoff(unreliable_operation)\nstream.map(reliable_processor)\n</code></pre>"},{"location":"kernel/best-practices/#security-best-practices","title":"Security Best Practices","text":""},{"location":"kernel/best-practices/#data-protection","title":"Data Protection","text":""},{"location":"kernel/best-practices/#1-sensitive-data-handling","title":"1. Sensitive Data Handling","text":"<pre><code>def secure_processor(data):\n    # Remove or mask sensitive fields\n    if \"ssn\" in data:\n        data[\"ssn\"] = \"***-**-\" + data[\"ssn\"][-4:]\n\n    if \"credit_card\" in data:\n        data[\"credit_card\"] = mask_credit_card(data[\"credit_card\"])\n\n    return data\n\n# Apply security processing early in pipeline\nsecure_stream = raw_stream.map(secure_processor)\n</code></pre>"},{"location":"kernel/best-practices/#2-input-validation","title":"2. Input Validation","text":"<pre><code>def validate_input(data):\n    required_fields = [\"id\", \"timestamp\", \"value\"]\n\n    # Check required fields\n    for field in required_fields:\n        if field not in data:\n            raise ValueError(f\"Missing required field: {field}\")\n\n    # Validate data types\n    if not isinstance(data[\"id\"], str):\n        raise ValueError(\"ID must be string\")\n\n    if not isinstance(data[\"value\"], (int, float)):\n        raise ValueError(\"Value must be numeric\")\n\n    return data\n\nvalidated_stream = input_stream.map(validate_input)\n</code></pre>"},{"location":"kernel/best-practices/#authentication-and-authorization","title":"Authentication and Authorization","text":"<pre><code>def authenticate_request(request):\n    token = request.get(\"auth_token\")\n    if not token or not verify_token(token):\n        raise AuthenticationError(\"Invalid token\")\n    return request\n\ndef authorize_operation(request, required_permission):\n    user = get_user_from_token(request[\"auth_token\"])\n    if not user.has_permission(required_permission):\n        raise AuthorizationError(\"Insufficient permissions\")\n    return request\n\n# Apply security checks\nsecure_stream = (input_stream\n    .map(authenticate_request)\n    .map(lambda req: authorize_operation(req, \"data.read\"))\n    .map(process_authorized_request)\n)\n</code></pre>"},{"location":"kernel/best-practices/#testing-strategies","title":"Testing Strategies","text":""},{"location":"kernel/best-practices/#unit-testing","title":"Unit Testing","text":"<pre><code>import unittest\nfrom sage.core.api import LocalEnvironment\n\nclass TestStreamProcessing(unittest.TestCase):\n    def setUp(self):\n        self.env = LocalEnvironment()\n        self.test_data = [1, 2, 3, 4, 5]\n\n    def tearDown(self):\n        self.env.cleanup()\n\n    def test_basic_mapping(self):\n        stream = self.env.create_stream(\"test\")\n\n        # Add test data\n        for item in self.test_data:\n            stream.write(item)\n        stream.close()\n\n        # Test mapping\n        result = stream.map(lambda x: x * 2).collect()\n        expected = [x * 2 for x in self.test_data]\n\n        self.assertEqual(result, expected)\n\n    def test_error_handling(self):\n        stream = self.env.create_stream(\"error_test\")\n\n        def failing_func(x):\n            if x == 3:\n                raise ValueError(\"Test error\")\n            return x\n\n        # Test that errors are handled properly\n        with self.assertRaises(ValueError):\n            stream.map(failing_func).collect()\n</code></pre>"},{"location":"kernel/best-practices/#integration-testing","title":"Integration Testing","text":"<pre><code>class TestIntegration(unittest.TestCase):\n    def test_end_to_end_pipeline(self):\n        env = LocalEnvironment()\n\n        # Create test pipeline\n        input_stream = env.create_stream(\"input\")\n        processed = (input_stream\n            .filter(lambda x: x &gt; 0)\n            .map(lambda x: x * 2)\n            .reduce(lambda a, b: a + b)\n        )\n\n        # Test with known data\n        test_data = [1, -1, 2, -2, 3]\n        for item in test_data:\n            input_stream.write(item)\n\n        result = processed.collect()\n        expected = sum(x * 2 for x in test_data if x &gt; 0)\n\n        self.assertEqual(result, expected)\n</code></pre>"},{"location":"kernel/best-practices/#performance-testing","title":"Performance Testing","text":"<pre><code>import time\nimport psutil\n\ndef measure_performance(stream_operation, data_size=10000):\n    start_time = time.time()\n    start_memory = psutil.Process().memory_info().rss\n\n    # Run operation\n    result = stream_operation(data_size)\n\n    end_time = time.time()\n    end_memory = psutil.Process().memory_info().rss\n\n    return {\n        \"execution_time\": end_time - start_time,\n        \"memory_usage\": end_memory - start_memory,\n        \"result_size\": len(result)\n    }\n\n# Test different configurations\ndef test_buffer_sizes():\n    configs = [100, 1000, 10000]\n    results = {}\n\n    for buffer_size in configs:\n        env = LocalEnvironment(config={\"buffer_size\": buffer_size})\n\n        def operation(size):\n            stream = env.create_stream(\"test\")\n            return stream.map(lambda x: x * 2).take(size)\n\n        results[buffer_size] = measure_performance(operation)\n\n    return results\n</code></pre>"},{"location":"kernel/best-practices/#monitoring-and-observability","title":"Monitoring and Observability","text":""},{"location":"kernel/best-practices/#logging-best-practices","title":"Logging Best Practices","text":"<pre><code>import logging\n\n# Configure structured logging\nlogging.basicConfig(\n    level=logging.INFO,\n    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'\n)\n\nlogger = logging.getLogger(__name__)\n\ndef logged_processor(data):\n    try:\n        logger.info(f\"Processing item: {data.get('id', 'unknown')}\")\n        result = process_data(data)\n        logger.info(f\"Successfully processed item: {data.get('id')}\")\n        return result\n    except Exception as e:\n        logger.error(f\"Failed to process item {data.get('id')}: {str(e)}\")\n        raise\n\nstream.map(logged_processor)\n</code></pre>"},{"location":"kernel/best-practices/#metrics-collection","title":"Metrics Collection","text":"<pre><code>from collections import defaultdict\nimport time\n\nclass StreamMetrics:\n    def __init__(self):\n        self.counters = defaultdict(int)\n        self.timers = defaultdict(list)\n        self.gauges = defaultdict(float)\n\n    def increment(self, name, value=1):\n        self.counters[name] += value\n\n    def time_operation(self, name, func, *args, **kwargs):\n        start_time = time.time()\n        try:\n            result = func(*args, **kwargs)\n            self.increment(f\"{name}.success\")\n            return result\n        except Exception as e:\n            self.increment(f\"{name}.error\")\n            raise\n        finally:\n            duration = time.time() - start_time\n            self.timers[name].append(duration)\n\n    def set_gauge(self, name, value):\n        self.gauges[name] = value\n\n# Usage\nmetrics = StreamMetrics()\n\ndef monitored_processor(data):\n    return metrics.time_operation(\"process_data\", process_data, data)\n\nstream.map(monitored_processor)\n</code></pre>"},{"location":"kernel/best-practices/#health-checks","title":"Health Checks","text":"<pre><code>class HealthChecker:\n    def __init__(self, environment):\n        self.environment = environment\n        self.checks = []\n\n    def add_check(self, name, check_func):\n        self.checks.append((name, check_func))\n\n    def run_checks(self):\n        results = {}\n        for name, check_func in self.checks:\n            try:\n                results[name] = {\n                    \"status\": \"healthy\" if check_func() else \"unhealthy\",\n                    \"timestamp\": time.time()\n                }\n            except Exception as e:\n                results[name] = {\n                    \"status\": \"error\",\n                    \"error\": str(e),\n                    \"timestamp\": time.time()\n                }\n        return results\n\n# Setup health checks\nhealth = HealthChecker(env)\nhealth.add_check(\"stream_connectivity\", lambda: env.test_connection())\nhealth.add_check(\"memory_usage\", lambda: psutil.virtual_memory().percent &lt; 80)\n\n# Run periodically\nhealth_status = health.run_checks()\n</code></pre>"},{"location":"kernel/best-practices/#deployment-best-practices","title":"Deployment Best Practices","text":""},{"location":"kernel/best-practices/#configuration-management","title":"Configuration Management","text":"<pre><code>import os\nfrom typing import Dict, Any\n\nclass Config:\n    def __init__(self):\n        self.config = self._load_config()\n\n    def _load_config(self) -&gt; Dict[str, Any]:\n        return {\n            \"environment\": os.getenv(\"SAGE_ENV\", \"development\"),\n            \"log_level\": os.getenv(\"LOG_LEVEL\", \"INFO\"),\n            \"buffer_size\": int(os.getenv(\"BUFFER_SIZE\", \"1000\")),\n            \"max_workers\": int(os.getenv(\"MAX_WORKERS\", \"4\")),\n            \"redis_url\": os.getenv(\"REDIS_URL\", \"redis://localhost:6379\"),\n            \"database_url\": os.getenv(\"DATABASE_URL\", \"sqlite:///local.db\")\n        }\n\n    def get(self, key: str, default: Any = None) -&gt; Any:\n        return self.config.get(key, default)\n\n# Usage\nconfig = Config()\nenv = LocalEnvironment(config={\n    \"buffer_size\": config.get(\"buffer_size\"),\n    \"log_level\": config.get(\"log_level\")\n})\n</code></pre>"},{"location":"kernel/best-practices/#container-deployment","title":"Container Deployment","text":"<pre><code># Dockerfile\nFROM python:3.11-slim\n\nWORKDIR /app\n\n# Install dependencies\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\n\n# Copy application\nCOPY . .\n\n# Set environment variables\nENV SAGE_ENV=production\nENV LOG_LEVEL=INFO\n\n# Run application\nCMD [\"python\", \"-m\", \"sage.cli\", \"serve\"]\n</code></pre> <pre><code># docker-compose.yml\nversion: '3.8'\nservices:\n  sage-kernel:\n    build: .\n    environment:\n      - SAGE_ENV=production\n      - REDIS_URL=redis://redis:6379\n    depends_on:\n      - redis\n    ports:\n      - \"8000:8000\"\n\n  redis:\n    image: redis:alpine\n    ports:\n      - \"6379:6379\"\n</code></pre>"},{"location":"kernel/best-practices/#production-monitoring","title":"Production Monitoring","text":"<pre><code># monitoring.py\nimport prometheus_client\nfrom prometheus_client import Counter, Histogram, Gauge\n\n# Define metrics\nREQUEST_COUNT = Counter('sage_requests_total', 'Total requests', ['method', 'endpoint'])\nREQUEST_DURATION = Histogram('sage_request_duration_seconds', 'Request duration')\nACTIVE_STREAMS = Gauge('sage_active_streams', 'Number of active streams')\n\ndef monitor_stream_operation(operation_name):\n    def decorator(func):\n        def wrapper(*args, **kwargs):\n            REQUEST_COUNT.labels(method='stream', endpoint=operation_name).inc()\n\n            with REQUEST_DURATION.time():\n                result = func(*args, **kwargs)\n\n            return result\n        return wrapper\n    return decorator\n\n# Usage in stream operations\n@monitor_stream_operation('data_processing')\ndef process_data(data):\n    return transform(data)\n</code></pre> <p>This comprehensive guide should help you build robust, performant, and maintainable applications with SAGE Kernel.</p>"},{"location":"kernel/concepts/","title":"\u6838\u5fc3\u6982\u5ff5","text":"<p>\u7406\u89e3 SAGE Kernel \u7684\u6838\u5fc3\u6982\u5ff5\u662f\u9ad8\u6548\u4f7f\u7528\u6846\u67b6\u7684\u57fa\u7840\u3002\u672c\u6587\u6863\u4ecb\u7ecd\u6846\u67b6\u4e2d\u7684\u5173\u952e\u6982\u5ff5\u548c\u672f\u8bed\u3002</p>"},{"location":"kernel/concepts/#datastream","title":"\ud83c\udf0a \u6570\u636e\u6d41 (DataStream)","text":""},{"location":"kernel/concepts/#_2","title":"\u5b9a\u4e49","text":"<p>DataStream \u662f SAGE Kernel \u4e2d\u7684\u6838\u5fc3\u62bd\u8c61\uff0c\u4ee3\u8868\u4e00\u4e2a**\u6709\u754c**\u6216**\u65e0\u754c**\u7684\u6570\u636e\u5e8f\u5217\u3002</p>"},{"location":"kernel/concepts/#_3","title":"\u7279\u6027","text":"<ul> <li>\u4e0d\u53ef\u53d8\u6027: \u6bcf\u6b21\u8f6c\u6362\u90fd\u521b\u5efa\u65b0\u7684\u6570\u636e\u6d41</li> <li>\u5ef6\u8fdf\u6267\u884c: \u6784\u5efa\u9636\u6bb5\u53ea\u521b\u5efa\u8ba1\u7b97\u56fe\uff0c\u8c03\u7528 <code>submit()</code> \u65f6\u624d\u6267\u884c</li> <li>\u7c7b\u578b\u5b89\u5168: \u57fa\u4e8e\u6cdb\u578b\u7684\u7f16\u8bd1\u65f6\u7c7b\u578b\u68c0\u67e5</li> <li>\u94fe\u5f0f\u8c03\u7528: \u652f\u6301\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c</li> </ul>"},{"location":"kernel/concepts/#_4","title":"\u793a\u4f8b","text":"<pre><code># \u6709\u754c\u6570\u636e\u6d41\uff08\u6279\u5904\u7406\uff09\nbatch_stream = env.from_batch([1, 2, 3, 4, 5])\n\n# \u65e0\u754c\u6570\u636e\u6d41\uff08\u6d41\u5904\u7406\uff09\nstream = env.from_kafka_source(\"localhost:9092\", \"events\", \"group1\")\n\n# \u94fe\u5f0f\u8f6c\u6362\nresult = (stream\n    .map(parse_json)\n    .filter(is_valid)\n    .key_by(extract_key)\n    .reduce(aggregate))\n</code></pre>"},{"location":"kernel/concepts/#environment","title":"\ud83c\udfd7\ufe0f \u73af\u5883 (Environment)","text":""},{"location":"kernel/concepts/#_5","title":"\u5b9a\u4e49","text":"<p>Environment \u5b9a\u4e49\u4e86\u6570\u636e\u6d41\u5e94\u7528\u7684\u6267\u884c\u4e0a\u4e0b\u6587\uff0c\u7ba1\u7406\u8ba1\u7b97\u8d44\u6e90\u3001\u8c03\u5ea6\u7b56\u7565\u548c\u670d\u52a1\u914d\u7f6e\u3002</p>"},{"location":"kernel/concepts/#_6","title":"\u7c7b\u578b","text":"<ul> <li>LocalEnvironment: \u672c\u5730\u5355\u673a\u73af\u5883</li> <li>\u9002\u7528\u4e8e\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u5c0f\u89c4\u6a21\u5904\u7406</li> <li> <p>\u7b80\u5355\u6613\u7528\uff0c\u65e0\u9700\u989d\u5916\u914d\u7f6e</p> </li> <li> <p>RemoteEnvironment: \u5206\u5e03\u5f0f\u96c6\u7fa4\u73af\u5883</p> </li> <li>\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u548c\u5927\u89c4\u6a21\u5904\u7406</li> <li>\u652f\u6301\u5bb9\u9519\u3001\u72b6\u6001\u7ba1\u7406\u3001\u5f39\u6027\u4f38\u7f29</li> </ul>"},{"location":"kernel/concepts/#_7","title":"\u793a\u4f8b","text":"<pre><code># \u672c\u5730\u73af\u5883\nlocal_env = LocalEnvironment(\"my_app\", config={\n    \"parallelism\": 4,\n    \"buffer_size\": 10000\n})\n\n# \u8fdc\u7a0b\u73af\u5883\nremote_env = RemoteEnvironment(\"production_app\", config={\n    \"jobmanager_host\": \"cluster-master\",\n    \"jobmanager_port\": 8081,\n    \"parallelism\": 16\n})\n</code></pre>"},{"location":"kernel/concepts/#transformation","title":"\ud83d\udd04 \u8f6c\u6362 (Transformation)","text":""},{"location":"kernel/concepts/#_8","title":"\u5b9a\u4e49","text":"<p>\u8f6c\u6362\u662f\u5bf9\u6570\u636e\u6d41\u7684\u64cd\u4f5c\uff0c\u5c06\u4e00\u4e2a\u6570\u636e\u6d41\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u6570\u636e\u6d41\u3002</p>"},{"location":"kernel/concepts/#_9","title":"\u5206\u7c7b","text":""},{"location":"kernel/concepts/#1","title":"1. \u4e00\u5bf9\u4e00\u8f6c\u6362","text":"<ul> <li>Map: <code>f(x) \u2192 y</code></li> <li>Filter: <code>f(x) \u2192 boolean</code></li> </ul> <pre><code># Map \u793a\u4f8b\nnumbers.map(lambda x: x * 2)\n\n# Filter \u793a\u4f8b  \nnumbers.filter(lambda x: x &gt; 0)\n</code></pre>"},{"location":"kernel/concepts/#2","title":"2. \u4e00\u5bf9\u591a\u8f6c\u6362","text":"<ul> <li>FlatMap: <code>f(x) \u2192 [y1, y2, ...]</code></li> </ul> <pre><code># FlatMap \u793a\u4f8b\nsentences.flat_map(lambda s: s.split())\n</code></pre>"},{"location":"kernel/concepts/#3","title":"3. \u805a\u5408\u8f6c\u6362","text":"<ul> <li>Reduce: \u540c\u952e\u503c\u5f52\u7ea6</li> <li>Aggregate: \u81ea\u5b9a\u4e49\u805a\u5408\u903b\u8f91</li> </ul> <pre><code># Reduce \u793a\u4f8b\nkeyed_stream.reduce(lambda a, b: a + b)\n\n# Aggregate \u793a\u4f8b\nkeyed_stream.aggregate(CountAggregateFunction())\n</code></pre>"},{"location":"kernel/concepts/#keyed-stream","title":"\ud83d\udd11 \u952e\u503c\u6d41 (Keyed Stream)","text":""},{"location":"kernel/concepts/#_10","title":"\u5b9a\u4e49","text":"<p>\u901a\u8fc7 <code>key_by()</code> \u64cd\u4f5c\u5c06\u6570\u636e\u6d41\u6309\u952e\u5206\u533a\uff0c\u76f8\u540c\u952e\u7684\u5143\u7d20\u8def\u7531\u5230\u540c\u4e00\u4e2a\u5904\u7406\u5668\u3002</p>"},{"location":"kernel/concepts/#_11","title":"\u7528\u9014","text":"<ul> <li>\u72b6\u6001\u7ba1\u7406\uff1a\u6bcf\u4e2a\u952e\u7ef4\u62a4\u72ec\u7acb\u72b6\u6001</li> <li>\u5e76\u884c\u5904\u7406\uff1a\u4e0d\u540c\u952e\u53ef\u4ee5\u5e76\u884c\u5904\u7406</li> <li>\u4e00\u81f4\u6027\u4fdd\u8bc1\uff1a\u540c\u952e\u5143\u7d20\u6709\u5e8f\u5904\u7406</li> </ul>"},{"location":"kernel/concepts/#_12","title":"\u793a\u4f8b","text":"<pre><code># \u6309\u7528\u6237ID\u5206\u7ec4\nuser_events = events.key_by(lambda event: event[\"user_id\"])\n\n# \u7528\u6237\u4f1a\u8bdd\u7edf\u8ba1\nuser_sessions = user_events.reduce(merge_sessions)\n\n# \u590d\u5408\u952e\nsales.key_by(lambda sale: (sale[\"region\"], sale[\"category\"]))\n</code></pre>"},{"location":"kernel/concepts/#_13","title":"\u23f0 \u65f6\u95f4\u8bed\u4e49","text":""},{"location":"kernel/concepts/#_14","title":"\u65f6\u95f4\u7c7b\u578b","text":""},{"location":"kernel/concepts/#1-event-time","title":"1. \u4e8b\u4ef6\u65f6\u95f4 (Event Time)","text":"<ul> <li>\u6570\u636e\u5b9e\u9645\u53d1\u751f\u7684\u65f6\u95f4</li> <li>\u5185\u5d4c\u5728\u6570\u636e\u4e2d</li> <li>\u652f\u6301\u4e71\u5e8f\u5904\u7406</li> </ul>"},{"location":"kernel/concepts/#2-processing-time","title":"2. \u5904\u7406\u65f6\u95f4 (Processing Time)","text":"<ul> <li>\u6570\u636e\u88ab\u5904\u7406\u7684\u65f6\u95f4</li> <li>\u7cfb\u7edf\u65f6\u949f\u65f6\u95f4</li> <li>\u7b80\u5355\u4f46\u4e0d\u51c6\u786e</li> </ul>"},{"location":"kernel/concepts/#3-ingestion-time","title":"3. \u6444\u5165\u65f6\u95f4 (Ingestion Time)","text":"<ul> <li>\u6570\u636e\u8fdb\u5165\u7cfb\u7edf\u7684\u65f6\u95f4</li> <li>\u4e8b\u4ef6\u65f6\u95f4\u548c\u5904\u7406\u65f6\u95f4\u7684\u6298\u4e2d</li> </ul>"},{"location":"kernel/concepts/#_15","title":"\u793a\u4f8b","text":"<pre><code># \u914d\u7f6e\u4e8b\u4ef6\u65f6\u95f4\nenv.set_time_characteristic(TimeCharacteristic.EVENT_TIME)\n\n# \u63d0\u53d6\u65f6\u95f4\u6233\nstream.assign_timestamps_and_watermarks(\n    timestamp_extractor=lambda event: event[\"timestamp\"],\n    watermark_strategy=BoundedOutOfOrdernessWatermarks(Duration.seconds(5))\n)\n</code></pre>"},{"location":"kernel/concepts/#window","title":"\ud83e\ude9f \u7a97\u53e3 (Window)","text":""},{"location":"kernel/concepts/#_16","title":"\u5b9a\u4e49","text":"<p>\u7a97\u53e3\u5c06\u65e0\u754c\u6d41\u5206\u5272\u6210\u6709\u754c\u7684\u6570\u636e\u5757\uff0c\u652f\u6301\u5728\u6d41\u4e0a\u8fdb\u884c\u805a\u5408\u64cd\u4f5c\u3002</p>"},{"location":"kernel/concepts/#_17","title":"\u7a97\u53e3\u7c7b\u578b","text":""},{"location":"kernel/concepts/#1_1","title":"1. \u65f6\u95f4\u7a97\u53e3","text":"<ul> <li>\u6eda\u52a8\u7a97\u53e3: \u56fa\u5b9a\u5927\u5c0f\uff0c\u65e0\u91cd\u53e0</li> <li>\u6ed1\u52a8\u7a97\u53e3: \u56fa\u5b9a\u5927\u5c0f\uff0c\u53ef\u91cd\u53e0</li> <li>\u4f1a\u8bdd\u7a97\u53e3: \u52a8\u6001\u5927\u5c0f\uff0c\u57fa\u4e8e\u6d3b\u52a8\u95f4\u9694</li> </ul> <pre><code># \u6eda\u52a8\u65f6\u95f4\u7a97\u53e3 - \u6bcf5\u5206\u949f\nwindowed = keyed_stream.window(TumblingTimeWindows.of(Duration.minutes(5)))\n\n# \u6ed1\u52a8\u65f6\u95f4\u7a97\u53e3 - 10\u5206\u949f\u7a97\u53e3\uff0c\u6bcf1\u5206\u949f\u6ed1\u52a8\nwindowed = keyed_stream.window(SlidingTimeWindows.of(\n    Duration.minutes(10), Duration.minutes(1)))\n\n# \u4f1a\u8bdd\u7a97\u53e3 - 30\u79d2\u4e0d\u6d3b\u8dc3\u5173\u95ed\nwindowed = keyed_stream.window(SessionWindows.withGap(Duration.seconds(30)))\n</code></pre>"},{"location":"kernel/concepts/#2_1","title":"2. \u8ba1\u6570\u7a97\u53e3","text":"<ul> <li>\u6eda\u52a8\u8ba1\u6570\u7a97\u53e3: \u56fa\u5b9a\u5143\u7d20\u6570\u91cf</li> <li>\u6ed1\u52a8\u8ba1\u6570\u7a97\u53e3: \u56fa\u5b9a\u6570\u91cf\uff0c\u53ef\u91cd\u53e0</li> </ul> <pre><code># \u6eda\u52a8\u8ba1\u6570\u7a97\u53e3 - \u6bcf100\u4e2a\u5143\u7d20\nwindowed = keyed_stream.window(TumblingCountWindows.of(100))\n\n# \u6ed1\u52a8\u8ba1\u6570\u7a97\u53e3 - 100\u4e2a\u5143\u7d20\uff0c\u6bcf10\u4e2a\u6ed1\u52a8\nwindowed = keyed_stream.window(SlidingCountWindows.of(100, 10))\n</code></pre>"},{"location":"kernel/concepts/#watermark","title":"\ud83d\udeb0 \u6c34\u4f4d\u7ebf (Watermark)","text":""},{"location":"kernel/concepts/#_18","title":"\u5b9a\u4e49","text":"<p>\u6c34\u4f4d\u7ebf\u662f\u8861\u91cf\u4e8b\u4ef6\u65f6\u95f4\u8fdb\u5ea6\u7684\u673a\u5236\uff0c\u7528\u4e8e\u5904\u7406\u4e71\u5e8f\u6570\u636e\u548c\u89e6\u53d1\u7a97\u53e3\u8ba1\u7b97\u3002</p>"},{"location":"kernel/concepts/#_19","title":"\u7279\u6027","text":"<ul> <li>\u8868\u793a\"\u65f6\u95f4\u6233T\u4e4b\u524d\u7684\u4e8b\u4ef6\u5df2\u5168\u90e8\u5230\u8fbe\"</li> <li>\u5141\u8bb8\u4e00\u5b9a\u7a0b\u5ea6\u7684\u5ef6\u8fdf\u548c\u4e71\u5e8f</li> <li>\u89e6\u53d1\u7a97\u53e3\u7684\u5173\u95ed\u548c\u8ba1\u7b97</li> </ul>"},{"location":"kernel/concepts/#_20","title":"\u793a\u4f8b","text":"<pre><code># \u56fa\u5b9a\u5ef6\u8fdf\u6c34\u4f4d\u7ebf\nwatermark_strategy = BoundedOutOfOrdernessWatermarks(Duration.seconds(5))\n\n# \u81ea\u5b9a\u4e49\u6c34\u4f4d\u7ebf\u751f\u6210\u5668\nclass CustomWatermarkStrategy(WatermarkStrategy):\n    def create_watermark_generator(self):\n        return CustomWatermarkGenerator()\n\nstream.assign_timestamps_and_watermarks(watermark_strategy)\n</code></pre>"},{"location":"kernel/concepts/#_21","title":"\ud83d\udd04 \u72b6\u6001\u7ba1\u7406","text":""},{"location":"kernel/concepts/#_22","title":"\u72b6\u6001\u7c7b\u578b","text":""},{"location":"kernel/concepts/#1-keyed-state","title":"1. \u952e\u63a7\u72b6\u6001 (Keyed State)","text":"<ul> <li>\u4e0e\u7279\u5b9a\u952e\u5173\u8054</li> <li>\u81ea\u52a8\u5206\u533a\u548c\u6062\u590d</li> <li>\u652f\u6301\u591a\u79cd\u72b6\u6001\u7c7b\u578b</li> </ul> <pre><code>class StatefulFunction(ProcessFunction):\n    def __init__(self):\n        self.value_state = None  # \u5355\u503c\u72b6\u6001\n        self.list_state = None   # \u5217\u8868\u72b6\u6001\n        self.map_state = None    # \u6620\u5c04\u72b6\u6001\n\n    def open(self, context):\n        # \u521d\u59cb\u5316\u72b6\u6001\n        self.value_state = context.get_keyed_state(\"count\", int, 0)\n        self.list_state = context.get_list_state(\"history\", str)\n        self.map_state = context.get_map_state(\"cache\", str, dict)\n</code></pre>"},{"location":"kernel/concepts/#2-operator-state","title":"2. \u7b97\u5b50\u72b6\u6001 (Operator State)","text":"<ul> <li>\u4e0e\u7b97\u5b50\u5b9e\u4f8b\u5173\u8054</li> <li>\u624b\u52a8\u5206\u533a\u548c\u6062\u590d</li> <li>\u7528\u4e8e\u975e\u952e\u63a7\u573a\u666f</li> </ul>"},{"location":"kernel/concepts/#_23","title":"\u72b6\u6001\u540e\u7aef","text":"<ul> <li>\u5185\u5b58\u72b6\u6001\u540e\u7aef: \u5feb\u901f\u4f46\u4e0d\u6301\u4e45</li> <li>\u6587\u4ef6\u7cfb\u7edf\u72b6\u6001\u540e\u7aef: \u6301\u4e45\u5316\u5230\u78c1\u76d8</li> <li>RocksDB\u72b6\u6001\u540e\u7aef: \u5927\u72b6\u6001\u652f\u6301</li> </ul>"},{"location":"kernel/concepts/#_24","title":"\ud83d\udee1\ufe0f \u5bb9\u9519\u673a\u5236","text":""},{"location":"kernel/concepts/#checkpoint","title":"\u68c0\u67e5\u70b9 (Checkpoint)","text":""},{"location":"kernel/concepts/#_25","title":"\u5b9a\u4e49","text":"<p>\u5b9a\u671f\u4fdd\u5b58\u5e94\u7528\u72b6\u6001\u5feb\u7167\uff0c\u7528\u4e8e\u6545\u969c\u6062\u590d\u3002</p>"},{"location":"kernel/concepts/#_26","title":"\u7279\u6027","text":"<ul> <li>\u5206\u5e03\u5f0f\u5feb\u7167\u7b97\u6cd5</li> <li>\u7cbe\u786e\u4e00\u6b21\u8bed\u4e49\u4fdd\u8bc1</li> <li>\u5f02\u6b65\u975e\u963b\u585e</li> </ul> <pre><code># \u542f\u7528\u68c0\u67e5\u70b9\nenv.enable_checkpointing(Duration.seconds(30))\n\n# \u68c0\u67e5\u70b9\u914d\u7f6e\nenv.set_checkpoint_config(CheckpointConfig(\n    min_pause_between_checkpoints=Duration.seconds(5),\n    max_concurrent_checkpoints=1,\n    checkpoint_timeout=Duration.minutes(10)\n))\n</code></pre>"},{"location":"kernel/concepts/#savepoint","title":"\u4fdd\u5b58\u70b9 (Savepoint)","text":""},{"location":"kernel/concepts/#_27","title":"\u5b9a\u4e49","text":"<p>\u624b\u52a8\u89e6\u53d1\u7684\u68c0\u67e5\u70b9\uff0c\u7528\u4e8e\u5e94\u7528\u5347\u7ea7\u3001\u8fc1\u79fb\u7b49\u573a\u666f\u3002</p> <pre><code># \u521b\u5efa\u4fdd\u5b58\u70b9\nsavepoint_path = env.create_savepoint()\n\n# \u4ece\u4fdd\u5b58\u70b9\u6062\u590d\nenv.restore_from_savepoint(\"hdfs://path/to/savepoint\")\n</code></pre>"},{"location":"kernel/concepts/#_28","title":"\u91cd\u542f\u7b56\u7565","text":"<pre><code># \u56fa\u5b9a\u5ef6\u8fdf\u91cd\u542f\nenv.set_restart_strategy(RestartStrategies.fixed_delay(\n    restart_attempts=3,\n    delay=Duration.seconds(10)\n))\n\n# \u6307\u6570\u9000\u907f\u91cd\u542f\nenv.set_restart_strategy(RestartStrategies.exponential_delay(\n    initial_backoff=Duration.seconds(1),\n    max_backoff=Duration.minutes(1),\n    backoff_multiplier=2.0,\n    reset_backoff_threshold=Duration.minutes(10)\n))\n</code></pre>"},{"location":"kernel/concepts/#connector","title":"\ud83d\udd17 \u8fde\u63a5\u5668 (Connector)","text":""},{"location":"kernel/concepts/#_29","title":"\u5b9a\u4e49","text":"<p>\u8fde\u63a5\u5668\u662f\u8fde\u63a5\u5916\u90e8\u7cfb\u7edf\u7684\u7ec4\u4ef6\uff0c\u5305\u62ec\u6570\u636e\u6e90\u548c\u6570\u636e\u6c47\u3002</p>"},{"location":"kernel/concepts/#_30","title":"\u5e38\u7528\u8fde\u63a5\u5668","text":""},{"location":"kernel/concepts/#_31","title":"\u6570\u636e\u6e90","text":"<ul> <li>KafkaSource: \u4eceKafka\u6d88\u8d39\u6570\u636e</li> <li>FileSource: \u4ece\u6587\u4ef6\u7cfb\u7edf\u8bfb\u53d6</li> <li>SocketSource: \u4eceSocket\u8fde\u63a5\u8bfb\u53d6</li> </ul>"},{"location":"kernel/concepts/#_32","title":"\u6570\u636e\u6c47","text":"<ul> <li>KafkaSink: \u5199\u5165Kafka</li> <li>FileSink: \u5199\u5165\u6587\u4ef6\u7cfb\u7edf</li> <li>DatabaseSink: \u5199\u5165\u6570\u636e\u5e93</li> </ul>"},{"location":"kernel/concepts/#_33","title":"\u793a\u4f8b","text":"<pre><code># Kafka\u6e90\nkafka_source = env.from_kafka_source(\n    bootstrap_servers=\"localhost:9092\",\n    topic=\"input_topic\",\n    group_id=\"my_consumer_group\"\n)\n\n# \u6587\u4ef6\u6c47\nresult.sink_to_file(\"output.txt\", format=\"json\")\n</code></pre>"},{"location":"kernel/concepts/#execution-graph","title":"\ud83d\udcca \u6267\u884c\u56fe (Execution Graph)","text":""},{"location":"kernel/concepts/#_34","title":"\u5b9a\u4e49","text":"<p>\u6267\u884c\u56fe\u662f\u6570\u636e\u6d41\u5e94\u7528\u7684\u5185\u90e8\u8868\u793a\uff0c\u63cf\u8ff0\u4e86\u6570\u636e\u6d41\u52a8\u548c\u8f6c\u6362\u5173\u7cfb\u3002</p>"},{"location":"kernel/concepts/#_35","title":"\u7ec4\u6210","text":"<ul> <li>\u8282\u70b9: \u8f6c\u6362\u7b97\u5b50</li> <li>\u8fb9: \u6570\u636e\u6d41\u52a8</li> <li>\u5206\u533a: \u6570\u636e\u5206\u5e03\u7b56\u7565</li> </ul>"},{"location":"kernel/concepts/#_36","title":"\u4f18\u5316","text":"<ul> <li>\u7b97\u5b50\u94fe\u63a5 (Operator Chaining)</li> <li>\u7b97\u5b50\u878d\u5408 (Operator Fusion)</li> <li>\u8d44\u6e90\u5206\u914d\u4f18\u5316</li> </ul>"},{"location":"kernel/concepts/#_37","title":"\ud83c\udfaf \u8bed\u4e49\u4fdd\u8bc1","text":""},{"location":"kernel/concepts/#exactly-once","title":"\u7cbe\u786e\u4e00\u6b21 (Exactly-Once)","text":"<ul> <li>\u6bcf\u6761\u8bb0\u5f55\u88ab\u7cbe\u786e\u5904\u7406\u4e00\u6b21</li> <li>\u9700\u8981\u652f\u6301\u7684\u6e90\u548c\u6c47</li> <li>\u5f00\u542f\u68c0\u67e5\u70b9</li> </ul>"},{"location":"kernel/concepts/#at-least-once","title":"\u81f3\u5c11\u4e00\u6b21 (At-Least-Once)","text":"<ul> <li>\u6bcf\u6761\u8bb0\u5f55\u81f3\u5c11\u88ab\u5904\u7406\u4e00\u6b21</li> <li>\u53ef\u80fd\u6709\u91cd\u590d\u5904\u7406</li> <li>\u66f4\u5bb9\u6613\u5b9e\u73b0</li> </ul>"},{"location":"kernel/concepts/#at-most-once","title":"\u81f3\u591a\u4e00\u6b21 (At-Most-Once)","text":"<ul> <li>\u6bcf\u6761\u8bb0\u5f55\u6700\u591a\u88ab\u5904\u7406\u4e00\u6b21</li> <li>\u53ef\u80fd\u6709\u6570\u636e\u4e22\u5931</li> <li>\u6027\u80fd\u6700\u597d</li> </ul>"},{"location":"kernel/concepts/#_38","title":"\ud83d\udcda \u603b\u7ed3","text":"<p>\u8fd9\u4e9b\u6838\u5fc3\u6982\u5ff5\u6784\u6210\u4e86 SAGE Kernel \u7684\u7406\u8bba\u57fa\u7840\uff1a</p> <ol> <li>DataStream: \u6570\u636e\u62bd\u8c61</li> <li>Environment: \u6267\u884c\u4e0a\u4e0b\u6587</li> <li>Transformation: \u6570\u636e\u8f6c\u6362</li> <li>Time &amp; Window: \u65f6\u95f4\u5904\u7406</li> <li>State: \u72b6\u6001\u7ba1\u7406</li> <li>Fault Tolerance: \u5bb9\u9519\u673a\u5236</li> </ol> <p>\u7406\u89e3\u8fd9\u4e9b\u6982\u5ff5\u5c06\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u8bbe\u8ba1\u548c\u5b9e\u73b0\u6d41\u6570\u636e\u5904\u7406\u5e94\u7528\u3002</p>"},{"location":"kernel/faq/","title":"Frequently Asked Questions (FAQ)","text":""},{"location":"kernel/faq/#general-questions","title":"General Questions","text":""},{"location":"kernel/faq/#what-is-sage-kernel","title":"What is SAGE Kernel?","text":"<p>SAGE Kernel is a high-performance streaming framework designed for real-time data processing. It provides APIs for creating data streams, processing pipelines, and managing execution environments.</p>"},{"location":"kernel/faq/#how-does-sage-kernel-differ-from-other-streaming-frameworks","title":"How does SAGE Kernel differ from other streaming frameworks?","text":"<ul> <li>Lightweight: Minimal overhead with efficient memory management</li> <li>Flexible: Supports both local and remote execution environments</li> <li>Extensible: Plugin architecture for custom functionality</li> <li>Developer-friendly: Simple API with comprehensive documentation</li> </ul>"},{"location":"kernel/faq/#what-are-the-system-requirements","title":"What are the system requirements?","text":"<ul> <li>Python 3.8 or higher</li> <li>4GB RAM minimum (8GB recommended for production)</li> <li>Linux, macOS, or Windows</li> <li>Optional: Redis for distributed operations</li> </ul>"},{"location":"kernel/faq/#installation-and-setup","title":"Installation and Setup","text":""},{"location":"kernel/faq/#how-do-i-install-sage-kernel","title":"How do I install SAGE Kernel?","text":"<pre><code>pip install intsage-kernel\n</code></pre> <p>For development: <pre><code>pip install intsage-kernel[dev]\n</code></pre></p>"},{"location":"kernel/faq/#why-am-i-getting-import-errors","title":"Why am I getting import errors?","text":"<p>Common causes: 1. Wrong package name: Use <code>from sage.core.api import LocalEnvironment</code> 2. Missing dependencies: Install with <code>pip install intsage-kernel[all]</code> 3. Virtual environment: Ensure you're in the correct environment</p>"},{"location":"kernel/faq/#how-do-i-configure-the-environment","title":"How do I configure the environment?","text":"<p>Create a configuration file or use environment variables:</p> <pre><code>from sage.core.api import LocalEnvironment\n\nenv = LocalEnvironment(config={\n    \"log_level\": \"INFO\",\n    \"buffer_size\": 1000,\n    \"max_workers\": 4\n})\n</code></pre>"},{"location":"kernel/faq/#api-usage","title":"API Usage","text":""},{"location":"kernel/faq/#how-do-i-create-a-basic-stream","title":"How do I create a basic stream?","text":"<pre><code>from sage.core.api import LocalEnvironment\n\nenv = LocalEnvironment()\nstream = env.create_stream(\"my_data\")\n\n# Add data\nstream.write({\"key\": \"value\"})\n\n# Process data\nresult = stream.map(lambda x: x[\"key\"]).collect()\n</code></pre>"},{"location":"kernel/faq/#whats-the-difference-between-localenvironment-and-remoteenvironment","title":"What's the difference between LocalEnvironment and RemoteEnvironment?","text":"<ul> <li>LocalEnvironment: Runs on your local machine, good for development and small-scale processing</li> <li>RemoteEnvironment: Connects to remote SAGE clusters, used for production and distributed processing</li> </ul>"},{"location":"kernel/faq/#how-do-i-handle-errors-in-streams","title":"How do I handle errors in streams?","text":"<pre><code>def safe_processor(data):\n    try:\n        return process_data(data)\n    except Exception as e:\n        logger.error(f\"Processing error: {e}\")\n        return None\n\n# Filter out None results\nresult = stream.map(safe_processor).filter(lambda x: x is not None)\n</code></pre>"},{"location":"kernel/faq/#can-i-process-multiple-streams-together","title":"Can I process multiple streams together?","text":"<p>Yes, use ConnectedStreams:</p> <pre><code>from sage.core.api.connected_streams import ConnectedStreams\n\nstream1 = env.create_stream(\"source1\")\nstream2 = env.create_stream(\"source2\")\n\nconnected = ConnectedStreams([stream1, stream2])\nresult = connected.process(your_processor_function)\n</code></pre>"},{"location":"kernel/faq/#performance","title":"Performance","text":""},{"location":"kernel/faq/#my-streams-are-running-slowly-how-can-i-optimize","title":"My streams are running slowly. How can I optimize?","text":"<ol> <li> <p>Increase buffer size:    <pre><code>stream = env.create_stream(\"data\", config={\"buffer_size\": 10000})\n</code></pre></p> </li> <li> <p>Use batch processing:    <pre><code>stream.batch(100).map(batch_processor)\n</code></pre></p> </li> <li> <p>Enable parallel processing:    <pre><code>stream.map_parallel(processor_func, max_workers=8)\n</code></pre></p> </li> <li> <p>Optimize your processing functions:</p> </li> <li>Avoid expensive operations in tight loops</li> <li>Use generators for large datasets</li> <li>Cache expensive computations</li> </ol>"},{"location":"kernel/faq/#how-much-memory-does-sage-kernel-use","title":"How much memory does SAGE Kernel use?","text":"<p>Memory usage depends on: - Buffer sizes (configurable) - Number of active streams - Size of processed data - Processing complexity</p> <p>Monitor with: <pre><code>import psutil\nmemory_usage = psutil.Process().memory_info().rss / 1024 / 1024  # MB\n</code></pre></p>"},{"location":"kernel/faq/#can-i-control-the-number-of-worker-threads","title":"Can I control the number of worker threads?","text":"<p>Yes, configure when creating the environment:</p> <pre><code>env = LocalEnvironment(config={\"max_workers\": 8})\n</code></pre> <p>Or per operation: <pre><code>stream.map_parallel(func, max_workers=4)\n</code></pre></p>"},{"location":"kernel/faq/#data-handling","title":"Data Handling","text":""},{"location":"kernel/faq/#what-data-types-can-i-process","title":"What data types can I process?","text":"<p>SAGE Kernel can process any Python object: - Dictionaries (most common) - Lists and tuples - Custom classes - Pandas DataFrames - NumPy arrays - Binary data</p>"},{"location":"kernel/faq/#how-do-i-handle-large-datasets","title":"How do I handle large datasets?","text":"<ol> <li>Use streaming: Process data incrementally rather than loading everything into memory</li> <li>Implement windowing: Process data in time or count-based windows</li> <li>Use lazy evaluation: Only compute what you need</li> </ol> <pre><code># Good: Streaming approach\nlarge_stream = env.create_stream(\"large_data\")\nresult = large_stream.filter(filter_func).take(1000)\n\n# Avoid: Loading everything\nall_data = large_stream.collect()  # May run out of memory\n</code></pre>"},{"location":"kernel/faq/#can-i-process-real-time-data","title":"Can I process real-time data?","text":"<p>Yes, SAGE Kernel is designed for real-time processing:</p> <pre><code># Real-time data ingestion\ndef ingest_realtime_data():\n    while True:\n        data = get_next_data_point()\n        stream.write(data)\n        time.sleep(0.1)\n\n# Background ingestion\nthreading.Thread(target=ingest_realtime_data, daemon=True).start()\n\n# Real-time processing\nprocessed = stream.map(process_realtime).sink(output_handler)\n</code></pre>"},{"location":"kernel/faq/#integration","title":"Integration","text":""},{"location":"kernel/faq/#how-do-i-integrate-with-databases","title":"How do I integrate with databases?","text":"<pre><code>import sqlite3\n\ndef save_to_db(data):\n    conn = sqlite3.connect('data.db')\n    cursor = conn.cursor()\n    cursor.execute(\"INSERT INTO table (data) VALUES (?)\", (str(data),))\n    conn.commit()\n    conn.close()\n\nstream.sink(save_to_db)\n</code></pre>"},{"location":"kernel/faq/#can-i-use-sage-kernel-with-pandas","title":"Can I use SAGE Kernel with Pandas?","text":"<p>Yes, SAGE Kernel works well with Pandas:</p> <pre><code>import pandas as pd\n\ndef process_dataframe(df_dict):\n    df = pd.DataFrame(df_dict)\n    # Process with pandas\n    result = df.groupby('category').sum()\n    return result.to_dict()\n\nstream.map(process_dataframe)\n</code></pre>"},{"location":"kernel/faq/#how-do-i-integrate-with-apache-kafka","title":"How do I integrate with Apache Kafka?","text":"<pre><code>from kafka import KafkaProducer, KafkaConsumer\n\n# Kafka consumer to SAGE stream\nconsumer = KafkaConsumer('input_topic')\nfor message in consumer:\n    stream.write(json.loads(message.value))\n\n# SAGE stream to Kafka producer\nproducer = KafkaProducer()\nstream.sink(lambda data: producer.send('output_topic', json.dumps(data)))\n</code></pre>"},{"location":"kernel/faq/#can-i-use-custom-functions","title":"Can I use custom functions?","text":"<p>Yes, register custom functions:</p> <pre><code>from sage.core.api.functions import register_function\n\n@register_function\ndef my_custom_function(data):\n    return process_data(data)\n\n# Use in streams\nstream.map(my_custom_function)\n</code></pre>"},{"location":"kernel/faq/#debugging","title":"Debugging","text":""},{"location":"kernel/faq/#how-do-i-debug-stream-processing","title":"How do I debug stream processing?","text":"<ol> <li> <p>Enable debug logging:    <pre><code>import logging\nlogging.basicConfig(level=logging.DEBUG)\n</code></pre></p> </li> <li> <p>Add debug prints:    <pre><code>def debug_processor(data):\n    print(f\"Processing: {data}\")\n    result = process_data(data)\n    print(f\"Result: {result}\")\n    return result\n\nstream.map(debug_processor)\n</code></pre></p> </li> <li> <p>Use peek() for inspection:    <pre><code>stream.peek(lambda x: print(f\"Data: {x}\")).map(processor)\n</code></pre></p> </li> </ol>"},{"location":"kernel/faq/#my-stream-seems-to-hang-what-should-i-check","title":"My stream seems to hang. What should I check?","text":"<ol> <li>Buffer full: Check if buffers are full and increase size</li> <li>Blocking operations: Ensure processing functions don't block</li> <li>Deadlocks: Check for circular dependencies between streams</li> <li>Resource limits: Monitor CPU and memory usage</li> </ol>"},{"location":"kernel/faq/#how-do-i-handle-connection-failures-in-remoteenvironment","title":"How do I handle connection failures in RemoteEnvironment?","text":"<pre><code>from sage.core.api import RemoteEnvironment\n\nenv = RemoteEnvironment(\n    endpoint=\"https://api.sage-cluster.com\",\n    config={\n        \"timeout\": 30,\n        \"retry_attempts\": 3,\n        \"retry_delay\": 5\n    }\n)\n\n# Test connection\nif not env.test_connection():\n    print(\"Failed to connect to remote environment\")\n</code></pre>"},{"location":"kernel/faq/#production-deployment","title":"Production Deployment","text":""},{"location":"kernel/faq/#how-do-i-deploy-sage-kernel-in-production","title":"How do I deploy SAGE Kernel in production?","text":"<ol> <li> <p>Use containers:    <pre><code>FROM python:3.11-slim\nRUN pip install intsage-kernel\nCMD [\"python\", \"my_sage_app.py\"]\n</code></pre></p> </li> <li> <p>Configure for production:    <pre><code>env = LocalEnvironment(config={\n    \"log_level\": \"WARNING\",\n    \"buffer_size\": 10000,\n    \"max_workers\": 16\n})\n</code></pre></p> </li> <li> <p>Monitor performance: Use metrics and logging</p> </li> </ol>"},{"location":"kernel/faq/#how-do-i-scale-sage-kernel-applications","title":"How do I scale SAGE Kernel applications?","text":"<ol> <li>Horizontal scaling: Deploy multiple instances</li> <li>Vertical scaling: Increase resources per instance</li> <li>Use RemoteEnvironment: Distribute across cluster</li> <li>Optimize processing: Batch operations, use efficient algorithms</li> </ol>"},{"location":"kernel/faq/#what-about-security-considerations","title":"What about security considerations?","text":"<ol> <li>Input validation: Always validate incoming data</li> <li>Authentication: Use tokens for RemoteEnvironment</li> <li>Network security: Use HTTPS for remote connections</li> <li>Resource limits: Set appropriate memory and CPU limits</li> </ol> <pre><code>def validate_input(data):\n    if not isinstance(data, dict):\n        raise ValueError(\"Data must be dictionary\")\n    if \"id\" not in data:\n        raise ValueError(\"Missing required field: id\")\n    return data\n\nstream.map(validate_input)\n</code></pre>"},{"location":"kernel/faq/#troubleshooting","title":"Troubleshooting","text":""},{"location":"kernel/faq/#common-error-messages","title":"Common Error Messages","text":""},{"location":"kernel/faq/#stream-buffer-is-full","title":"\"Stream buffer is full\"","text":"<ul> <li>Cause: Data being written faster than processed</li> <li>Solution: Increase buffer size or optimize processing</li> </ul>"},{"location":"kernel/faq/#connection-timeout","title":"\"Connection timeout\"","text":"<ul> <li>Cause: Network issues with RemoteEnvironment</li> <li>Solution: Check network connectivity, increase timeout</li> </ul>"},{"location":"kernel/faq/#memory-allocation-failed","title":"\"Memory allocation failed\"","text":"<ul> <li>Cause: Insufficient memory</li> <li>Solution: Reduce buffer sizes, optimize data structures</li> </ul>"},{"location":"kernel/faq/#function-not-found","title":"\"Function not found\"","text":"<ul> <li>Cause: Custom function not registered</li> <li>Solution: Use <code>@register_function</code> decorator</li> </ul>"},{"location":"kernel/faq/#performance-issues","title":"Performance Issues","text":""},{"location":"kernel/faq/#slow-processing","title":"Slow processing","text":"<ol> <li>Profile your processing functions</li> <li>Use batch processing for small operations</li> <li>Enable parallel processing</li> <li>Optimize data structures</li> </ol>"},{"location":"kernel/faq/#high-memory-usage","title":"High memory usage","text":"<ol> <li>Reduce buffer sizes</li> <li>Process data in smaller chunks</li> <li>Use generators instead of lists</li> <li>Clean up resources properly</li> </ol>"},{"location":"kernel/faq/#cpu-usage-high","title":"CPU usage high","text":"<ol> <li>Reduce number of worker threads</li> <li>Optimize processing algorithms</li> <li>Use more efficient data structures</li> <li>Consider caching expensive operations</li> </ol>"},{"location":"kernel/faq/#getting-help","title":"Getting Help","text":""},{"location":"kernel/faq/#where-can-i-find-more-documentation","title":"Where can I find more documentation?","text":"<ul> <li>API Reference</li> <li>Architecture Guide</li> <li>Best Practices</li> <li>Examples</li> </ul>"},{"location":"kernel/faq/#how-do-i-report-bugs","title":"How do I report bugs?","text":"<ol> <li>Check existing issues on GitHub</li> <li>Create a minimal reproduction case</li> <li>Include version information and logs</li> <li>Submit issue with clear description</li> </ol>"},{"location":"kernel/faq/#how-do-i-contribute","title":"How do I contribute?","text":"<ol> <li>Fork the repository</li> <li>Create a feature branch</li> <li>Add tests for new functionality</li> <li>Submit a pull request</li> </ol>"},{"location":"kernel/faq/#community-support","title":"Community Support","text":"<ul> <li>GitHub Issues: Bug reports and feature requests</li> <li>Discussions: General questions and community help</li> <li>Documentation: Comprehensive guides and examples</li> </ul> <p>Still have questions? Check our GitHub repository or create an issue for support.</p>"},{"location":"kernel/api/","title":"SAGE Kernel API \u6a21\u5757","text":"<p>SAGE Kernel API \u6a21\u5757\u4e3a\u6d41\u6570\u636e\u5904\u7406\u63d0\u4f9b\u4e86\u7b80\u6d01\u800c\u5f3a\u5927\u7684\u7f16\u7a0b\u63a5\u53e3\u3002\u91c7\u7528\u58f0\u660e\u5f0f\u7f16\u7a0b\u8303\u5f0f\uff0c\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u4e13\u6ce8\u4e8e\u4e1a\u52a1\u903b\u8f91\u800c\u4e0d\u662f\u5e95\u5c42\u5b9e\u73b0\u7ec6\u8282\u3002</p>"},{"location":"kernel/api/#api","title":"\ud83d\udccb API \u6a21\u5757\u6982\u89c8","text":"<pre><code>sage.core.api/\n\u251c\u2500\u2500 __init__.py              # API \u4e3b\u5165\u53e3\uff0c\u5bfc\u51fa\u6240\u6709\u516c\u5171\u63a5\u53e3\n\u251c\u2500\u2500 base_environment.py      # \u73af\u5883\u57fa\u7c7b\uff0c\u5b9a\u4e49\u901a\u7528\u63a5\u53e3\n\u251c\u2500\u2500 local_environment.py     # \u672c\u5730\u73af\u5883\u5b9e\u73b0\n\u251c\u2500\u2500 remote_environment.py    # \u8fdc\u7a0b/\u5206\u5e03\u5f0f\u73af\u5883\u5b9e\u73b0\n\u251c\u2500\u2500 datastream.py           # \u6570\u636e\u6d41\u6838\u5fc3\u7c7b\n\u251c\u2500\u2500 connected_streams.py     # \u8fde\u63a5\u6d41\u7ba1\u7406\n\u2514\u2500\u2500 function/               # \u51fd\u6570\u63a5\u53e3\u76ee\u5f55\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 base_function.py     # \u51fd\u6570\u57fa\u7c7b\n    \u251c\u2500\u2500 map_function.py      # Map\u51fd\u6570\n    \u251c\u2500\u2500 filter_function.py   # Filter\u51fd\u6570\n    \u251c\u2500\u2500 sink_function.py     # Sink\u51fd\u6570\n    \u251c\u2500\u2500 source_function.py   # Source\u51fd\u6570\n    \u251c\u2500\u2500 keyby_function.py    # KeyBy\u51fd\u6570\n    \u251c\u2500\u2500 flatmap_function.py  # FlatMap\u51fd\u6570\n    \u251c\u2500\u2500 comap_function.py    # CoMap\u51fd\u6570\n    \u2514\u2500\u2500 join_function.py     # Join\u51fd\u6570\n</code></pre>"},{"location":"kernel/api/#_1","title":"\ud83c\udfaf \u6838\u5fc3\u7ec4\u4ef6","text":""},{"location":"kernel/api/#1-environments","title":"1. \u73af\u5883\u7ba1\u7406 (Environments)","text":"<ul> <li>BaseEnvironment: \u73af\u5883\u62bd\u8c61\u57fa\u7c7b</li> <li>LocalEnvironment: \u672c\u5730\u5355\u673a\u73af\u5883</li> <li>RemoteEnvironment: \u5206\u5e03\u5f0f\u96c6\u7fa4\u73af\u5883</li> </ul>"},{"location":"kernel/api/#2-datastreams","title":"2. \u6570\u636e\u6d41\u5904\u7406 (DataStreams)","text":"<ul> <li>DataStream: \u6838\u5fc3\u6570\u636e\u6d41\u7c7b\uff0c\u652f\u6301\u94fe\u5f0f\u64cd\u4f5c</li> <li>ConnectedStreams: \u591a\u6d41\u8fde\u63a5\u548c\u534f\u540c\u5904\u7406</li> </ul>"},{"location":"kernel/api/#3-functions","title":"3. \u51fd\u6570\u63a5\u53e3 (Functions)","text":"<ul> <li>\u8f6c\u6362\u51fd\u6570: Map, FlatMap, Filter\u7b49</li> <li>\u8def\u7531\u51fd\u6570: KeyBy, Partition\u7b49</li> <li>\u8f93\u51fa\u51fd\u6570: Sink, Print\u7b49</li> <li>\u8fde\u63a5\u51fd\u6570: Join, CoMap\u7b49</li> </ul>"},{"location":"kernel/api/#_2","title":"\ud83d\udd04 \u5178\u578b\u5de5\u4f5c\u6d41\u7a0b","text":"<pre><code># 1. \u521b\u5efa\u73af\u5883\nenv = LocalEnvironment(\"my_app\")\n\n# 2. \u521b\u5efa\u6570\u636e\u6e90\nstream = env.from_batch([1, 2, 3, 4, 5])\n\n# 3. \u6570\u636e\u8f6c\u6362 (\u6784\u5efa\u8ba1\u7b97\u56fe)\nresult = (stream\n    .map(lambda x: x * 2)\n    .filter(lambda x: x &gt; 5)\n    .sink(print))\n\n# 4. \u63d0\u4ea4\u6267\u884c\nenv.submit()\n</code></pre>"},{"location":"kernel/api/#_3","title":"\ud83d\udcda \u8be6\u7ec6\u6587\u6863","text":"<ul> <li>\u73af\u5883\u7ba1\u7406 - \u521b\u5efa\u548c\u7ba1\u7406\u6267\u884c\u73af\u5883</li> <li>\u6570\u636e\u6d41\u5904\u7406 - \u6570\u636e\u6d41\u64cd\u4f5c\u548c\u8f6c\u6362  </li> <li>\u51fd\u6570\u63a5\u53e3 - \u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u89c4\u8303</li> <li>\u8fde\u63a5\u6d41 - \u591a\u6d41\u8fde\u63a5\u548c\u534f\u540c\u5904\u7406</li> </ul>"},{"location":"kernel/api/#_4","title":"\ud83c\udf1f \u8bbe\u8ba1\u7279\u6027","text":""},{"location":"kernel/api/#_5","title":"\u7c7b\u578b\u5b89\u5168","text":"<pre><code>from typing import TypeVar\n\nT = TypeVar('T')\nU = TypeVar('U')\n\nclass DataStream(Generic[T]):\n    def map(self, func: Callable[[T], U]) -&gt; DataStream[U]:\n        # \u7f16\u8bd1\u65f6\u7c7b\u578b\u68c0\u67e5\n        pass\n</code></pre>"},{"location":"kernel/api/#_6","title":"\u5ef6\u8fdf\u6267\u884c","text":"<pre><code># \u6784\u5efa\u9636\u6bb5 - \u53ea\u521b\u5efa\u8ba1\u7b97\u56fe\uff0c\u4e0d\u6267\u884c\nstream = env.from_kafka(\"topic\").map(process).sink(output)\n\n# \u6267\u884c\u9636\u6bb5 - \u8c03\u7528submit()\u65f6\u624d\u5f00\u59cb\u5904\u7406\u6570\u636e\nenv.submit()\n</code></pre>"},{"location":"kernel/api/#_7","title":"\u94fe\u5f0f\u8c03\u7528","text":"<pre><code># \u652f\u6301\u6d41\u7545\u7684\u94fe\u5f0fAPI\nresult = (data_stream\n    .map(transform1)\n    .filter(condition)\n    .map(transform2)\n    .sink(output))\n</code></pre>"},{"location":"kernel/api/#_8","title":"\ud83d\udd0c \u6269\u5c55\u673a\u5236","text":""},{"location":"kernel/api/#_9","title":"\u81ea\u5b9a\u4e49\u51fd\u6570","text":"<pre><code>class MyMapFunction(MapFunction[int, str]):\n    def map(self, value: int) -&gt; str:\n        return f\"Value: {value}\"\n\nstream.map(MyMapFunction())\n</code></pre>"},{"location":"kernel/api/#_10","title":"\u81ea\u5b9a\u4e49\u6570\u636e\u6e90","text":"<pre><code>class MySourceFunction(SourceFunction[dict]):\n    def run(self, ctx: SourceContext[dict]):\n        # \u81ea\u5b9a\u4e49\u6570\u636e\u6e90\u903b\u8f91\n        pass\n\nstream = env.add_source(MySourceFunction())\n</code></pre>"},{"location":"kernel/api/#_11","title":"\ud83d\udcd6 \u6700\u4f73\u5b9e\u8df5","text":"<ol> <li>\u73af\u5883\u9694\u79bb: \u4e0d\u540c\u5e94\u7528\u4f7f\u7528\u72ec\u7acb\u73af\u5883</li> <li>\u8d44\u6e90\u7ba1\u7406: \u53ca\u65f6\u5173\u95ed\u73af\u5883\u91ca\u653e\u8d44\u6e90</li> <li>\u9519\u8bef\u5904\u7406: \u5b9e\u73b0\u9002\u5f53\u7684\u9519\u8bef\u5904\u7406\u903b\u8f91</li> <li>\u6027\u80fd\u4f18\u5316: \u5408\u7406\u8bbe\u7f6e\u5e76\u884c\u5ea6\u548c\u7f13\u51b2\u533a\u5927\u5c0f</li> <li>\u7c7b\u578b\u6ce8\u89e3: \u4f7f\u7528\u7c7b\u578b\u6ce8\u89e3\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027</li> </ol>"},{"location":"kernel/api/#_12","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":"<p>\u67e5\u770b \u5feb\u901f\u5f00\u59cb\u6307\u5357 \u4e86\u89e3\u5982\u4f55\u5feb\u901f\u4e0a\u624b SAGE Kernel API\u3002</p>"},{"location":"kernel/api/connected-streams/","title":"Connected Streams API","text":"<p>The Connected Streams API provides advanced stream processing capabilities for building complex data pipelines with inter-stream dependencies.</p>"},{"location":"kernel/api/connected-streams/#overview","title":"Overview","text":"<p>Connected streams allow you to: - Link multiple data streams together - Share state between stream operations - Build complex event processing pipelines - Handle stream dependencies and ordering</p>"},{"location":"kernel/api/connected-streams/#core-classes","title":"Core Classes","text":""},{"location":"kernel/api/connected-streams/#connectedstreams","title":"ConnectedStreams","text":"<p>Main class for managing connected stream operations.</p> <pre><code>from sage.core.api.connected_streams import ConnectedStreams\n\n# Create connected streams from multiple sources\nstream1 = environment.create_stream(\"source1\")\nstream2 = environment.create_stream(\"source2\")\n\nconnected = ConnectedStreams([stream1, stream2])\n</code></pre>"},{"location":"kernel/api/connected-streams/#methods","title":"Methods","text":""},{"location":"kernel/api/connected-streams/#processprocessor_func-kwargs","title":"<code>process(processor_func, **kwargs)</code>","text":"<p>Process connected streams with a custom function.</p> <pre><code>def merge_processor(streams, state):\n    \"\"\"Merge data from multiple streams\"\"\"\n    merged_data = []\n    for stream in streams:\n        for item in stream.read():\n            merged_data.append(item)\n    return merged_data\n\nresult = connected.process(merge_processor)\n</code></pre>"},{"location":"kernel/api/connected-streams/#joinjoin_typeinner-key_funcnone","title":"<code>join(join_type=\"inner\", key_func=None)</code>","text":"<p>Join streams based on keys or conditions.</p> <pre><code># Join by key\ndef get_user_id(item):\n    return item.get(\"user_id\")\n\njoined = connected.join(\n    join_type=\"inner\",\n    key_func=get_user_id\n)\n\n# Custom join condition\ndef join_condition(item1, item2):\n    return item1[\"timestamp\"] == item2[\"timestamp\"]\n\njoined = connected.join(\n    join_type=\"outer\",\n    condition=join_condition\n)\n</code></pre>"},{"location":"kernel/api/connected-streams/#windowwindow_type-size-slidenone","title":"<code>window(window_type, size, slide=None)</code>","text":"<p>Apply windowing operations across connected streams.</p> <pre><code># Tumbling window\nwindowed = connected.window(\n    window_type=\"tumbling\",\n    size=60  # 60 seconds\n)\n\n# Sliding window\nwindowed = connected.window(\n    window_type=\"sliding\",\n    size=300,  # 5 minutes\n    slide=60   # 1 minute slide\n)\n\n# Session window\nwindowed = connected.window(\n    window_type=\"session\",\n    timeout=30  # 30 seconds timeout\n)\n</code></pre>"},{"location":"kernel/api/connected-streams/#streamstate","title":"StreamState","text":"<p>Shared state management for connected streams.</p> <pre><code>from sage.core.api.connected_streams import StreamState\n\n# Create shared state\nstate = StreamState()\n\n# Store values\nstate.set(\"counter\", 0)\nstate.set(\"last_timestamp\", time.time())\n\n# Retrieve values\ncounter = state.get(\"counter\", default=0)\n\n# Atomic operations\nstate.increment(\"counter\")\nstate.append(\"events\", new_event)\n</code></pre>"},{"location":"kernel/api/connected-streams/#methods_1","title":"Methods","text":""},{"location":"kernel/api/connected-streams/#getkey-defaultnone","title":"<code>get(key, default=None)</code>","text":"<p>Get value from shared state.</p> <pre><code>value = state.get(\"my_key\", default=0)\n</code></pre>"},{"location":"kernel/api/connected-streams/#setkey-value","title":"<code>set(key, value)</code>","text":"<p>Set value in shared state.</p> <pre><code>state.set(\"status\", \"processing\")\n</code></pre>"},{"location":"kernel/api/connected-streams/#incrementkey-amount1","title":"<code>increment(key, amount=1)</code>","text":"<p>Atomically increment a numeric value.</p> <pre><code>state.increment(\"processed_count\")\nstate.increment(\"total_bytes\", data_size)\n</code></pre>"},{"location":"kernel/api/connected-streams/#appendkey-value","title":"<code>append(key, value)</code>","text":"<p>Append to a list in shared state.</p> <pre><code>state.append(\"errors\", error_message)\n</code></pre>"},{"location":"kernel/api/connected-streams/#updatekey-update_func","title":"<code>update(key, update_func)</code>","text":"<p>Atomically update a value using a function.</p> <pre><code>def update_stats(current_stats):\n    current_stats[\"last_update\"] = time.time()\n    current_stats[\"count\"] += 1\n    return current_stats\n\nstate.update(\"statistics\", update_stats)\n</code></pre>"},{"location":"kernel/api/connected-streams/#advanced-features","title":"Advanced Features","text":""},{"location":"kernel/api/connected-streams/#stream-synchronization","title":"Stream Synchronization","text":"<p>Synchronize streams based on timestamps or events.</p> <pre><code># Timestamp-based synchronization\nsynchronized = connected.synchronize(\n    sync_type=\"timestamp\",\n    tolerance=1.0  # 1 second tolerance\n)\n\n# Event-based synchronization\nsynchronized = connected.synchronize(\n    sync_type=\"event\",\n    sync_event=\"marker\"\n)\n</code></pre>"},{"location":"kernel/api/connected-streams/#error-handling","title":"Error Handling","text":"<p>Handle errors across connected streams.</p> <pre><code>def error_handler(stream_id, error, context):\n    print(f\"Error in stream {stream_id}: {error}\")\n    # Log error and continue processing\n    return \"continue\"\n\nconnected.on_error(error_handler)\n</code></pre>"},{"location":"kernel/api/connected-streams/#backpressure-management","title":"Backpressure Management","text":"<p>Control data flow when streams process at different rates.</p> <pre><code># Configure backpressure\nconnected.configure_backpressure(\n    strategy=\"block\",  # or \"drop\", \"buffer\"\n    buffer_size=1000,\n    timeout=30\n)\n</code></pre>"},{"location":"kernel/api/connected-streams/#examples","title":"Examples","text":""},{"location":"kernel/api/connected-streams/#simple-stream-merge","title":"Simple Stream Merge","text":"<pre><code>from sage.core.api import LocalEnvironment\nfrom sage.core.api.connected_streams import ConnectedStreams\n\n# Setup\nenv = LocalEnvironment()\nstream1 = env.create_stream(\"data1\")\nstream2 = env.create_stream(\"data2\")\n\n# Connect and merge\nconnected = ConnectedStreams([stream1, stream2])\n\ndef merge_data(streams, state):\n    merged = []\n    for stream in streams:\n        while stream.has_data():\n            item = stream.read()\n            item[\"source\"] = stream.name\n            merged.append(item)\n    return merged\n\nresult_stream = connected.process(merge_data)\n</code></pre>"},{"location":"kernel/api/connected-streams/#time-window-aggregation","title":"Time-Window Aggregation","text":"<pre><code>def window_aggregator(window_data, state):\n    \"\"\"Aggregate data within time windows\"\"\"\n    total = 0\n    count = 0\n\n    for stream_data in window_data:\n        for item in stream_data:\n            total += item.get(\"value\", 0)\n            count += 1\n\n    return {\n        \"window_start\": window_data.start_time,\n        \"window_end\": window_data.end_time,\n        \"total\": total,\n        \"average\": total / count if count &gt; 0 else 0,\n        \"count\": count\n    }\n\n# Apply windowing\nwindowed = connected.window(\"tumbling\", size=60)\naggregated = windowed.process(window_aggregator)\n</code></pre>"},{"location":"kernel/api/connected-streams/#complex-event-processing","title":"Complex Event Processing","text":"<pre><code>from sage.core.api.connected_streams import StreamState\n\ndef event_processor(streams, state):\n    \"\"\"Process complex event patterns\"\"\"\n    events = []\n\n    # Collect events from all streams\n    for stream in streams:\n        while stream.has_data():\n            event = stream.read()\n            events.append(event)\n\n    # Sort by timestamp\n    events.sort(key=lambda x: x[\"timestamp\"])\n\n    # Detect patterns\n    patterns = []\n    for i in range(len(events) - 1):\n        current = events[i]\n        next_event = events[i + 1]\n\n        # Example: detect login followed by purchase\n        if (current[\"type\"] == \"login\" and \n            next_event[\"type\"] == \"purchase\" and\n            current[\"user_id\"] == next_event[\"user_id\"]):\n\n            patterns.append({\n                \"pattern\": \"login_purchase\",\n                \"user_id\": current[\"user_id\"],\n                \"login_time\": current[\"timestamp\"],\n                \"purchase_time\": next_event[\"timestamp\"],\n                \"purchase_amount\": next_event[\"amount\"]\n            })\n\n    return patterns\n\nresult = connected.process(event_processor)\n</code></pre>"},{"location":"kernel/api/connected-streams/#stream-join-example","title":"Stream Join Example","text":"<pre><code># User activity and user profile streams\nactivity_stream = env.create_stream(\"user_activity\")\nprofile_stream = env.create_stream(\"user_profiles\")\n\nconnected = ConnectedStreams([activity_stream, profile_stream])\n\n# Join on user_id\ndef get_user_id(item):\n    return item.get(\"user_id\")\n\njoined = connected.join(\n    join_type=\"inner\",\n    key_func=get_user_id\n)\n\ndef enrich_activity(joined_data, state):\n    \"\"\"Enrich activity with profile data\"\"\"\n    enriched = []\n\n    for activity, profile in joined_data:\n        enriched_activity = activity.copy()\n        enriched_activity.update({\n            \"user_name\": profile.get(\"name\"),\n            \"user_tier\": profile.get(\"tier\"),\n            \"user_location\": profile.get(\"location\")\n        })\n        enriched.append(enriched_activity)\n\n    return enriched\n\nenriched_stream = joined.process(enrich_activity)\n</code></pre>"},{"location":"kernel/api/connected-streams/#best-practices","title":"Best Practices","text":""},{"location":"kernel/api/connected-streams/#performance-optimization","title":"Performance Optimization","text":"<ol> <li>Minimize State Size: Keep shared state minimal and clean up unused data</li> <li>Efficient Joins: Use appropriate join types and optimize key functions</li> <li>Window Management: Choose appropriate window sizes for your use case</li> <li>Backpressure: Configure backpressure to handle varying processing speeds</li> </ol>"},{"location":"kernel/api/connected-streams/#error-handling_1","title":"Error Handling","text":"<ol> <li>Graceful Degradation: Handle stream failures without stopping the entire pipeline</li> <li>Error Isolation: Isolate errors to prevent cascade failures</li> <li>Recovery Strategies: Implement retry and recovery mechanisms</li> </ol>"},{"location":"kernel/api/connected-streams/#memory-management","title":"Memory Management","text":"<ol> <li>Buffer Limits: Set appropriate buffer sizes to prevent memory overflow</li> <li>State Cleanup: Regularly clean up old state data</li> <li>Window Expiry: Ensure windows expire to free memory</li> </ol>"},{"location":"kernel/api/connected-streams/#monitoring","title":"Monitoring","text":"<ol> <li>Stream Health: Monitor individual stream health and performance</li> <li>Join Efficiency: Track join hit rates and performance</li> <li>State Growth: Monitor shared state size and growth patterns</li> </ol>"},{"location":"kernel/api/connected-streams/#error-handling_2","title":"Error Handling","text":"<p>Common error scenarios and solutions:</p> <pre><code>def robust_processor(streams, state):\n    try:\n        # Processing logic\n        return process_streams(streams)\n    except Exception as e:\n        # Log error\n        state.append(\"errors\", str(e))\n        # Return empty result or default\n        return []\n\n# Configure error handling\nconnected.on_error(lambda stream_id, error, context: \"continue\")\nconnected.set_error_threshold(max_errors=10, time_window=60)\n</code></pre>"},{"location":"kernel/api/connected-streams/#integration-with-other-apis","title":"Integration with Other APIs","text":""},{"location":"kernel/api/connected-streams/#with-datastream-api","title":"With DataStream API","text":"<pre><code>from sage.core.api import DataStream\n\n# Create individual streams\nstream1 = DataStream(\"stream1\")\nstream2 = DataStream(\"stream2\")\n\n# Connect them\nconnected = ConnectedStreams([stream1, stream2])\n</code></pre>"},{"location":"kernel/api/connected-streams/#with-functions-api","title":"With Functions API","text":"<pre><code>from sage.core.api.functions import register_function\n\n@register_function\ndef connected_processor(connected_streams):\n    return connected_streams.process(my_processor)\n</code></pre> <p>This Connected Streams API enables sophisticated stream processing patterns while maintaining the simplicity and flexibility of the SAGE kernel architecture.</p>"},{"location":"kernel/api/datastreams/","title":"\u6570\u636e\u6d41\u5904\u7406 (DataStreams)","text":"<p>DataStream \u662f SAGE Kernel \u7684\u6838\u5fc3\u62bd\u8c61\uff0c\u4ee3\u8868\u4e00\u4e2a\u6570\u636e\u6d41\u3002\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u8f6c\u6362\u64cd\u4f5c\uff0c\u652f\u6301\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\u7684\u94fe\u5f0f\u8c03\u7528\u3002</p>"},{"location":"kernel/api/datastreams/#datastream","title":"\ud83c\udf0a DataStream \u57fa\u7840","text":""},{"location":"kernel/api/datastreams/#_1","title":"\u521b\u5efa\u6570\u636e\u6d41","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\n\nenv = LocalEnvironment(\"stream_demo\")\n\n# \u4ece\u96c6\u5408\u521b\u5efa\nnumbers = env.from_batch([1, 2, 3, 4, 5])\n\n# \u4ece\u6587\u4ef6\u521b\u5efa\nlines = env.from_text_file(\"data.txt\")\n\n# \u4eceKafka\u521b\u5efa\nevents = env.from_kafka_source(\n    bootstrap_servers=\"localhost:9092\",\n    topic=\"events\",\n    group_id=\"processors\"\n)\n</code></pre>"},{"location":"kernel/api/datastreams/#_2","title":"\u57fa\u672c\u6982\u5ff5","text":"<pre><code>from typing import TypeVar, Generic\n\nT = TypeVar('T')  # \u5143\u7d20\u7c7b\u578b\nU = TypeVar('U')  # \u8f6c\u6362\u540e\u7c7b\u578b\n\nclass DataStream(Generic[T]):\n    \"\"\"\u7c7b\u578b\u5b89\u5168\u7684\u6570\u636e\u6d41\"\"\"\n\n    def map(self, func: Callable[[T], U]) -&gt; DataStream[U]:\n        \"\"\"\u4e00\u5bf9\u4e00\u8f6c\u6362\"\"\"\n\n    def filter(self, predicate: Callable[[T], bool]) -&gt; DataStream[T]:\n        \"\"\"\u8fc7\u6ee4\u64cd\u4f5c\"\"\"\n\n    def flat_map(self, func: Callable[[T], Iterable[U]]) -&gt; DataStream[U]:\n        \"\"\"\u4e00\u5bf9\u591a\u8f6c\u6362\"\"\"\n</code></pre>"},{"location":"kernel/api/datastreams/#_3","title":"\ud83d\udd04 \u8f6c\u6362\u64cd\u4f5c","text":""},{"location":"kernel/api/datastreams/#map","title":"Map \u8f6c\u6362","text":"<p>\u4e00\u5bf9\u4e00\u7684\u5143\u7d20\u8f6c\u6362\u64cd\u4f5c\u3002</p> <pre><code># \u4f7f\u7528Lambda\u51fd\u6570\nnumbers = env.from_batch([1, 2, 3, 4, 5])\nsquared = numbers.map(lambda x: x * x)\n\n# \u4f7f\u7528\u547d\u540d\u51fd\u6570\ndef double(x: int) -&gt; int:\n    return x * 2\n\ndoubled = numbers.map(double)\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7c7b\nclass SquareFunction(MapFunction[int, int]):\n    def map(self, value: int) -&gt; int:\n        return value * value\n\nsquared = numbers.map(SquareFunction())\n\n# \u590d\u6742\u8f6c\u6362\nclass ParseJson(MapFunction[str, dict]):\n    def map(self, json_str: str) -&gt; dict:\n        try:\n            return json.loads(json_str)\n        except:\n            return {\"error\": \"invalid_json\", \"raw\": json_str}\n\nparsed = json_lines.map(ParseJson())\n</code></pre>"},{"location":"kernel/api/datastreams/#filter","title":"Filter \u64cd\u4f5c","text":"<p>\u6839\u636e\u6761\u4ef6\u8fc7\u6ee4\u5143\u7d20\u3002</p> <pre><code># \u7b80\u5355\u8fc7\u6ee4\neven_numbers = numbers.filter(lambda x: x % 2 == 0)\n\n# \u590d\u6742\u8fc7\u6ee4\u6761\u4ef6\nclass ValidUserFilter(FilterFunction[dict]):\n    def filter(self, user: dict) -&gt; bool:\n        return (user.get(\"age\", 0) &gt;= 18 and \n                user.get(\"email\") is not None and\n                \"@\" in user.get(\"email\", \"\"))\n\nvalid_users = users.filter(ValidUserFilter())\n\n# \u7a7a\u503c\u8fc7\u6ee4\nnon_null = stream.filter(lambda x: x is not None)\n</code></pre>"},{"location":"kernel/api/datastreams/#flatmap","title":"FlatMap \u8f6c\u6362","text":"<p>\u4e00\u5bf9\u591a\u7684\u8f6c\u6362\u64cd\u4f5c\uff0c\u5c06\u6bcf\u4e2a\u5143\u7d20\u8f6c\u6362\u4e3a\u591a\u4e2a\u5143\u7d20\u3002</p> <pre><code># \u5b57\u7b26\u4e32\u5206\u8bcd\nsentences = env.from_batch([\"hello world\", \"sage kernel\", \"stream processing\"])\nwords = sentences.flat_map(lambda s: s.split())\n\n# \u81ea\u5b9a\u4e49FlatMap\nclass SplitLines(FlatMapFunction[str, str]):\n    def flat_map(self, value: str) -&gt; Iterable[str]:\n        return value.strip().split('\\n')\n\nlines = text_blocks.flat_map(SplitLines())\n\n# \u6570\u636e\u5c55\u5f00\nclass ExpandEvents(FlatMapFunction[dict, dict]):\n    def flat_map(self, batch: dict) -&gt; Iterable[dict]:\n        events = batch.get(\"events\", [])\n        for event in events:\n            event[\"batch_id\"] = batch[\"id\"]\n            yield event\n\nevents = batches.flat_map(ExpandEvents())\n</code></pre>"},{"location":"kernel/api/datastreams/#_4","title":"\ud83d\udd11 \u952e\u503c\u64cd\u4f5c","text":""},{"location":"kernel/api/datastreams/#keyby","title":"KeyBy \u5206\u7ec4","text":"<p>\u6839\u636e\u952e\u5bf9\u6570\u636e\u6d41\u8fdb\u884c\u5206\u533a\uff0c\u76f8\u540c\u952e\u7684\u5143\u7d20\u4f1a\u8def\u7531\u5230\u540c\u4e00\u4e2a\u5904\u7406\u5668\u3002</p> <pre><code># \u7b80\u5355\u952e\u63d0\u53d6\nuser_events = events.key_by(lambda event: event[\"user_id\"])\n\n# \u590d\u6742\u952e\u63d0\u53d6\nclass UserRegionKeySelector(KeySelector[dict, tuple]):\n    def get_key(self, event: dict) -&gt; tuple:\n        return (event[\"user_id\"], event[\"region\"])\n\ngrouped = events.key_by(UserRegionKeySelector())\n\n# \u805a\u5408\u64cd\u4f5c\nclass SumAggregator(AggregateFunction[int, int, int]):\n    def add(self, acc: int, value: int) -&gt; int:\n        return acc + value\n\n    def get_result(self, acc: int) -&gt; int:\n        return acc\n\n    def create_accumulator(self) -&gt; int:\n        return 0\n\n# \u6309\u952e\u805a\u5408\nsums = numbers.key_by(lambda x: x % 2).aggregate(SumAggregator())\n</code></pre>"},{"location":"kernel/api/datastreams/#reduce","title":"Reduce \u64cd\u4f5c","text":"<p>\u5bf9\u76f8\u540c\u952e\u7684\u5143\u7d20\u8fdb\u884c\u5f52\u7ea6\u64cd\u4f5c\u3002</p> <pre><code># \u7b80\u5355\u5f52\u7ea6\nmax_values = keyed_stream.reduce(lambda a, b: max(a, b))\n\n# \u81ea\u5b9a\u4e49\u5f52\u7ea6\nclass MergeUsers(ReduceFunction[dict]):\n    def reduce(self, user1: dict, user2: dict) -&gt; dict:\n        # \u5408\u5e76\u7528\u6237\u4fe1\u606f\uff0c\u4fdd\u7559\u6700\u65b0\u6570\u636e\n        result = user1.copy()\n        result.update(user2)\n        result[\"last_updated\"] = max(\n            user1.get(\"last_updated\", 0),\n            user2.get(\"last_updated\", 0)\n        )\n        return result\n\nmerged_users = user_updates.key_by(lambda u: u[\"id\"]).reduce(MergeUsers())\n</code></pre>"},{"location":"kernel/api/datastreams/#_5","title":"\ud83c\udfea \u7a97\u53e3\u64cd\u4f5c","text":""},{"location":"kernel/api/datastreams/#_6","title":"\u65f6\u95f4\u7a97\u53e3","text":"<pre><code>from sage.core.api.window import TumblingTimeWindows, SlidingTimeWindows\nfrom datetime import timedelta\n\n# \u6eda\u52a8\u65f6\u95f4\u7a97\u53e3\nwindowed = events.key_by(lambda e: e[\"sensor_id\"]) \\\n    .window(TumblingTimeWindows.of(timedelta(minutes=5))) \\\n    .aggregate(AvgAggregator())\n\n# \u6ed1\u52a8\u65f6\u95f4\u7a97\u53e3  \nsliding = events.key_by(lambda e: e[\"user_id\"]) \\\n    .window(SlidingTimeWindows.of(\n        size=timedelta(minutes=10),\n        slide=timedelta(minutes=1)\n    )) \\\n    .aggregate(CountAggregator())\n</code></pre>"},{"location":"kernel/api/datastreams/#_7","title":"\u8ba1\u6570\u7a97\u53e3","text":"<pre><code>from sage.core.api.window import TumblingCountWindows\n\n# \u6bcf100\u4e2a\u5143\u7d20\u4e00\u4e2a\u7a97\u53e3\ncount_windowed = stream.key_by(key_selector) \\\n    .window(TumblingCountWindows.of(100)) \\\n    .aggregate(SumAggregator())\n</code></pre>"},{"location":"kernel/api/datastreams/#_8","title":"\u4f1a\u8bdd\u7a97\u53e3","text":"<pre><code>from sage.core.api.window import SessionWindows\n\n# \u4f1a\u8bdd\u7a97\u53e3 - 30\u79d2\u4e0d\u6d3b\u8dc3\u5219\u5173\u95ed\u7a97\u53e3\nsession_windowed = events.key_by(lambda e: e[\"session_id\"]) \\\n    .window(SessionWindows.with_gap(timedelta(seconds=30))) \\\n    .aggregate(SessionAggregator())\n</code></pre>"},{"location":"kernel/api/datastreams/#_9","title":"\ud83d\udd17 \u8fde\u63a5\u64cd\u4f5c","text":""},{"location":"kernel/api/datastreams/#join","title":"Join \u8fde\u63a5","text":"<pre><code># \u5185\u8fde\u63a5\njoined = stream1.join(stream2) \\\n    .where(lambda x: x[\"id\"]) \\\n    .equal_to(lambda y: y[\"user_id\"]) \\\n    .window(TumblingTimeWindows.of(timedelta(minutes=5))) \\\n    .apply(JoinFunction())\n\n# \u81ea\u5b9a\u4e49\u8fde\u63a5\u51fd\u6570\nclass UserOrderJoin(JoinFunction[dict, dict, dict]):\n    def join(self, user: dict, order: dict) -&gt; dict:\n        return {\n            \"user_name\": user[\"name\"],\n            \"order_id\": order[\"id\"],\n            \"order_amount\": order[\"amount\"],\n            \"join_time\": time.time()\n        }\n\nresult = users.join(orders) \\\n    .where(lambda u: u[\"id\"]) \\\n    .equal_to(lambda o: o[\"user_id\"]) \\\n    .window(TumblingTimeWindows.of(timedelta(hours=1))) \\\n    .apply(UserOrderJoin())\n</code></pre>"},{"location":"kernel/api/datastreams/#comap","title":"CoMap \u534f\u540c\u5904\u7406","text":"<pre><code># \u8fde\u63a5\u4e24\u4e2a\u6d41\nconnected = stream1.connect(stream2)\n\n# \u534f\u540c\u5904\u7406\u51fd\u6570\nclass AlertCoMapFunction(CoMapFunction[dict, dict, str]):\n    def map1(self, user_event: dict) -&gt; str:\n        if user_event[\"action\"] == \"login_failed\":\n            return f\"Failed login: {user_event['user_id']}\"\n        return None\n\n    def map2(self, system_event: dict) -&gt; str:\n        if system_event[\"level\"] == \"ERROR\":\n            return f\"System error: {system_event['message']}\"\n        return None\n\nalerts = connected.map(AlertCoMapFunction()).filter(lambda x: x is not None)\n</code></pre>"},{"location":"kernel/api/datastreams/#_10","title":"\ud83d\udce4 \u8f93\u51fa\u64cd\u4f5c","text":""},{"location":"kernel/api/datastreams/#sink","title":"Sink \u64cd\u4f5c","text":"<pre><code># \u7b80\u5355\u8f93\u51fa\nnumbers.sink(print)\n\n# \u81ea\u5b9a\u4e49Sink\nclass DatabaseSink(SinkFunction[dict]):\n    def __init__(self, connection_string: str):\n        self.connection_string = connection_string\n        self.connection = None\n\n    def open(self, context):\n        self.connection = create_connection(self.connection_string)\n\n    def sink(self, record: dict):\n        insert_query = \"INSERT INTO events VALUES (%s, %s, %s)\"\n        self.connection.execute(insert_query, \n            (record[\"id\"], record[\"timestamp\"], record[\"data\"]))\n\n    def close(self):\n        if self.connection:\n            self.connection.close()\n\nevents.sink(DatabaseSink(\"postgresql://localhost/mydb\"))\n\n# \u6587\u4ef6\u8f93\u51fa\nresults.sink_to_file(\"./output/results.txt\")\n\n# Kafka\u8f93\u51fa\nevents.sink_to_kafka(\n    bootstrap_servers=\"localhost:9092\",\n    topic=\"processed_events\",\n    serializer=\"json\"\n)\n</code></pre>"},{"location":"kernel/api/datastreams/#_11","title":"\u526f\u8f93\u51fa\u6d41","text":"<pre><code># \u5b9a\u4e49\u526f\u8f93\u51fa\u6807\u7b7e\nerror_tag = OutputTag(\"errors\", str)\nwarning_tag = OutputTag(\"warnings\", str)\n\n# \u5728\u5904\u7406\u51fd\u6570\u4e2d\u4f7f\u7528\u526f\u8f93\u51fa\nclass ValidateAndRoute(ProcessFunction[dict, dict]):\n    def process(self, record: dict, ctx: ProcessContext[dict]):\n        if not self.is_valid(record):\n            ctx.output(error_tag, f\"Invalid record: {record}\")\n            return\n\n        if self.is_suspicious(record):\n            ctx.output(warning_tag, f\"Suspicious record: {record}\")\n\n        yield record  # \u4e3b\u8f93\u51fa\n\nmain_stream = events.process(ValidateAndRoute())\nerror_stream = main_stream.get_side_output(error_tag)\nwarning_stream = main_stream.get_side_output(warning_tag)\n</code></pre>"},{"location":"kernel/api/datastreams/#_12","title":"\ud83d\udd00 \u6d41\u63a7\u5236\u64cd\u4f5c","text":""},{"location":"kernel/api/datastreams/#split","title":"Split \u5206\u6d41","text":"<pre><code># \u6761\u4ef6\u5206\u6d41\neven_tag = OutputTag(\"even\", int)\nodd_tag = OutputTag(\"odd\", int)\n\nclass SplitByParity(ProcessFunction[int, int]):\n    def process(self, value: int, ctx: ProcessContext[int]):\n        if value % 2 == 0:\n            ctx.output(even_tag, value)\n        else:\n            ctx.output(odd_tag, value)\n\nsplit_stream = numbers.process(SplitByParity())\neven_stream = split_stream.get_side_output(even_tag)\nodd_stream = split_stream.get_side_output(odd_tag)\n</code></pre>"},{"location":"kernel/api/datastreams/#union","title":"Union \u5408\u6d41","text":"<pre><code># \u5408\u5e76\u591a\u4e2a\u6d41\nall_events = stream1.union(stream2, stream3)\n\n# \u7c7b\u578b\u5fc5\u987b\u76f8\u540c\nnumbers1 = env.from_batch([1, 2, 3])\nnumbers2 = env.from_batch([4, 5, 6])\nall_numbers = numbers1.union(numbers2)\n</code></pre>"},{"location":"kernel/api/datastreams/#_13","title":"\u26a1 \u6027\u80fd\u4f18\u5316","text":""},{"location":"kernel/api/datastreams/#_14","title":"\u5e76\u884c\u5ea6\u8bbe\u7f6e","text":"<pre><code># \u8bbe\u7f6e\u7b97\u5b50\u5e76\u884c\u5ea6\nprocessed = stream.map(heavy_computation).set_parallelism(8)\n\n# \u8bbe\u7f6e\u5168\u5c40\u5e76\u884c\u5ea6\nenv.set_parallelism(4)\n</code></pre>"},{"location":"kernel/api/datastreams/#_15","title":"\u5bf9\u8c61\u91cd\u7528","text":"<pre><code># \u542f\u7528\u5bf9\u8c61\u91cd\u7528\uff08\u51cf\u5c11GC\u538b\u529b\uff09\nenv.enable_object_reuse()\n\n# \u5728\u51fd\u6570\u4e2d\u91cd\u7528\u5bf9\u8c61\nclass ReuseObjectMap(MapFunction[str, dict]):\n    def __init__(self):\n        self.reuse_dict = {}  # \u91cd\u7528\u7684\u5b57\u5178\u5bf9\u8c61\n\n    def map(self, value: str) -&gt; dict:\n        self.reuse_dict.clear()\n        self.reuse_dict[\"input\"] = value\n        self.reuse_dict[\"processed\"] = process(value)\n        return self.reuse_dict\n</code></pre>"},{"location":"kernel/api/datastreams/#_16","title":"\u7f13\u51b2\u8bbe\u7f6e","text":"<pre><code># \u8bbe\u7f6e\u7f13\u51b2\u533a\u5927\u5c0f\nstream.map(function).set_buffer_timeout(100)  # 100ms\nstream.map(function).set_buffer_size(1000)    # 1000\u6761\u8bb0\u5f55\n</code></pre>"},{"location":"kernel/api/datastreams/#_17","title":"\ud83c\udff7\ufe0f \u7c7b\u578b\u7cfb\u7edf","text":""},{"location":"kernel/api/datastreams/#_18","title":"\u6cdb\u578b\u652f\u6301","text":"<pre><code>from typing import TypeVar, Generic, Callable\n\nT = TypeVar('T')\nU = TypeVar('U')\nK = TypeVar('K')\n\nclass TypedDataStream(Generic[T]):\n    def map(self, func: Callable[[T], U]) -&gt; 'TypedDataStream[U]':\n        \"\"\"\u7c7b\u578b\u5b89\u5168\u7684map\u64cd\u4f5c\"\"\"\n\n    def filter(self, predicate: Callable[[T], bool]) -&gt; 'TypedDataStream[T]':\n        \"\"\"\u7c7b\u578b\u5b89\u5168\u7684filter\u64cd\u4f5c\"\"\"\n\n    def key_by(self, key_selector: Callable[[T], K]) -&gt; 'KeyedStream[T, K]':\n        \"\"\"\u7c7b\u578b\u5b89\u5168\u7684keyBy\u64cd\u4f5c\"\"\"\n</code></pre>"},{"location":"kernel/api/datastreams/#_19","title":"\u7c7b\u578b\u8f6c\u6362","text":"<pre><code># \u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\nstr_stream: DataStream[str] = numbers.map(str)\nint_stream: DataStream[int] = str_stream.map(int)\n\n# \u7c7b\u578b\u6ce8\u89e3\ndef process_user(user: dict) -&gt; UserProfile:\n    return UserProfile(**user)\n\nprofiles: DataStream[UserProfile] = users.map(process_user)\n</code></pre>"},{"location":"kernel/api/datastreams/#_20","title":"\ud83d\udcda \u6700\u4f73\u5b9e\u8df5","text":"<ol> <li>\u94fe\u5f0f\u8c03\u7528: \u4f7f\u7528\u94fe\u5f0f\u8c03\u7528\u6784\u5efa\u6e05\u6670\u7684\u6570\u636e\u5904\u7406\u7ba1\u9053</li> <li>\u51fd\u6570\u91cd\u7528: \u5c06\u590d\u6742\u903b\u8f91\u5c01\u88c5\u4e3a\u53ef\u91cd\u7528\u7684\u51fd\u6570\u7c7b</li> <li>\u9519\u8bef\u5904\u7406: \u5b9e\u73b0\u9002\u5f53\u7684\u9519\u8bef\u5904\u7406\u548c\u6570\u636e\u9a8c\u8bc1</li> <li>\u6027\u80fd\u4f18\u5316: \u5408\u7406\u8bbe\u7f6e\u5e76\u884c\u5ea6\u548c\u7f13\u51b2\u533a\u53c2\u6570</li> <li>\u7c7b\u578b\u5b89\u5168: \u4f7f\u7528\u7c7b\u578b\u6ce8\u89e3\u63d0\u9ad8\u4ee3\u7801\u53ef\u8bfb\u6027\u548c\u5b89\u5168\u6027</li> </ol>"},{"location":"kernel/api/datastreams/#_21","title":"\ud83d\udcd6 \u76f8\u5173\u6587\u6863","text":"<ul> <li>\u51fd\u6570\u63a5\u53e3 - \u8be6\u7ec6\u7684\u51fd\u6570\u63a5\u53e3\u8bf4\u660e</li> <li>\u8fde\u63a5\u6d41 - \u591a\u6d41\u5904\u7406</li> </ul> <ul> <li>\u6027\u80fd\u4f18\u5316 - \u6027\u80fd\u8c03\u4f18\u6307\u5357</li> </ul>"},{"location":"kernel/api/environments/","title":"\u73af\u5883\u7ba1\u7406 (Environments)","text":"<p>\u73af\u5883 (Environment) \u662f SAGE Kernel \u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u5b83\u5b9a\u4e49\u4e86\u6570\u636e\u6d41\u5e94\u7528\u7684\u6267\u884c\u4e0a\u4e0b\u6587\u3002\u73af\u5883\u8d1f\u8d23\u7ba1\u7406\u8ba1\u7b97\u8d44\u6e90\u3001\u8c03\u5ea6\u4efb\u52a1\u3001\u5904\u7406\u670d\u52a1\u6ce8\u518c\u7b49\u3002</p>"},{"location":"kernel/api/environments/#_1","title":"\ud83c\udf0d \u73af\u5883\u7c7b\u578b","text":""},{"location":"kernel/api/environments/#1-localenvironment","title":"1. LocalEnvironment (\u672c\u5730\u73af\u5883)","text":"<p>\u9002\u7528\u4e8e\u5355\u673a\u5f00\u53d1\u3001\u6d4b\u8bd5\u548c\u5c0f\u89c4\u6a21\u6570\u636e\u5904\u7406\u3002</p> <pre><code>from sage.core.api.local_environment import LocalEnvironment\n\n# \u521b\u5efa\u672c\u5730\u73af\u5883\nenv = LocalEnvironment(\"my_local_app\")\n\n# \u914d\u7f6e\u9009\u9879\nenv = LocalEnvironment(\n    name=\"my_app\",\n    config={\n        \"parallelism\": 4,          # \u5e76\u884c\u5ea6\n        \"buffer_size\": 10000,      # \u7f13\u51b2\u533a\u5927\u5c0f\n        \"checkpoint_interval\": 30  # \u68c0\u67e5\u70b9\u95f4\u9694(\u79d2)\n    }\n)\n</code></pre>"},{"location":"kernel/api/environments/#2-remoteenvironment","title":"2. RemoteEnvironment (\u8fdc\u7a0b\u73af\u5883)","text":"<p>\u9002\u7528\u4e8e\u751f\u4ea7\u73af\u5883\u548c\u5206\u5e03\u5f0f\u96c6\u7fa4\u90e8\u7f72\u3002</p> <pre><code>from sage.core.api.remote_environment import RemoteEnvironment\n\n# \u521b\u5efa\u8fdc\u7a0b\u73af\u5883\nenv = RemoteEnvironment(\n    name=\"my_cluster_app\",\n    config={\n        \"jobmanager_host\": \"cluster-master\",\n        \"jobmanager_port\": 8081,\n        \"taskmanager_slots\": 8\n    }\n)\n</code></pre>"},{"location":"kernel/api/environments/#_2","title":"\ud83d\udd27 \u73af\u5883\u914d\u7f6e","text":""},{"location":"kernel/api/environments/#_3","title":"\u57fa\u7840\u914d\u7f6e","text":"<pre><code>config = {\n    # \u6267\u884c\u914d\u7f6e\n    \"parallelism\": 4,              # \u9ed8\u8ba4\u5e76\u884c\u5ea6\n    \"max_parallelism\": 128,        # \u6700\u5927\u5e76\u884c\u5ea6\n    \"buffer_size\": 10000,          # \u6570\u636e\u7f13\u51b2\u533a\u5927\u5c0f\n\n    # \u5bb9\u9519\u914d\u7f6e\n    \"restart_strategy\": \"fixed-delay\",\n    \"restart_attempts\": 3,\n    \"restart_delay\": \"10s\",\n\n    # \u68c0\u67e5\u70b9\u914d\u7f6e\n    \"checkpointing_enabled\": True,\n    \"checkpoint_interval\": \"30s\",\n    \"checkpoint_timeout\": \"10m\",\n\n    # \u65e5\u5fd7\u914d\u7f6e\n    \"log_level\": \"INFO\",\n    \"log_file\": \"./logs/sage.log\"\n}\n\nenv = LocalEnvironment(\"my_app\", config=config)\n</code></pre>"},{"location":"kernel/api/environments/#_4","title":"\u9ad8\u7ea7\u914d\u7f6e","text":"<pre><code># \u6027\u80fd\u8c03\u4f18\u914d\u7f6e\nperformance_config = {\n    \"network_buffer_size\": \"64mb\",\n    \"sort_buffer_size\": \"64mb\", \n    \"hash_table_size\": \"1gb\",\n    \"managed_memory_fraction\": 0.7,\n    \"network_memory_fraction\": 0.1,\n    \"jvm_heap_size\": \"2g\"\n}\n\n# \u5b89\u5168\u914d\u7f6e  \nsecurity_config = {\n    \"security_enabled\": True,\n    \"kerberos_principal\": \"sage@REALM.COM\",\n    \"ssl_enabled\": True,\n    \"ssl_keystore\": \"./ssl/keystore.jks\"\n}\n</code></pre>"},{"location":"kernel/api/environments/#_5","title":"\ud83d\udcca \u6570\u636e\u6e90\u521b\u5efa","text":""},{"location":"kernel/api/environments/#_6","title":"\u6279\u5904\u7406\u6570\u636e\u6e90","text":"<pre><code># \u4ece\u96c6\u5408\u521b\u5efa\nstream = env.from_batch([1, 2, 3, 4, 5])\n\n# \u4ece\u6587\u4ef6\u521b\u5efa\nstream = env.from_text_file(\"./data/input.txt\")\n\n# \u4ece\u591a\u4e2a\u6587\u4ef6\u521b\u5efa\nstream = env.from_text_files(\"./data/*.txt\")\n</code></pre>"},{"location":"kernel/api/environments/#_7","title":"\u6d41\u6570\u636e\u6e90","text":"<pre><code># Kafka\u6570\u636e\u6e90\nstream = env.from_kafka_source(\n    bootstrap_servers=\"localhost:9092\",\n    topic=\"my_topic\",\n    group_id=\"my_consumer_group\",\n    auto_offset_reset=\"latest\"\n)\n\n# Socket\u6570\u636e\u6e90\nstream = env.from_socket_text_stream(\"localhost\", 9999)\n\n# \u81ea\u5b9a\u4e49\u6570\u636e\u6e90\nclass MySource(SourceFunction[str]):\n    def run(self, ctx):\n        for i in range(100):\n            ctx.emit(f\"Message {i}\")\n            time.sleep(1)\n\nstream = env.add_source(MySource())\n</code></pre>"},{"location":"kernel/api/environments/#_8","title":"\ud83d\udee0\ufe0f \u670d\u52a1\u7ba1\u7406","text":""},{"location":"kernel/api/environments/#_9","title":"\u670d\u52a1\u6ce8\u518c","text":"<pre><code># \u6ce8\u518c\u670d\u52a1\u7c7b\nenv.register_service(\"cache\", RedisCacheService, \n                    host=\"localhost\", port=6379)\n\n# \u6ce8\u518c\u670d\u52a1\u5de5\u5382\nfrom sage.middleware import create_kv_service_factory\n\nkv_factory = create_kv_service_factory(\"my_kv\", backend_type=\"memory\")\nenv.register_service_factory(\"my_kv\", kv_factory)\n</code></pre>"},{"location":"kernel/api/environments/#_10","title":"\u670d\u52a1\u4f7f\u7528","text":"<pre><code># \u5728\u5904\u7406\u51fd\u6570\u4e2d\u4f7f\u7528\u670d\u52a1\nclass ProcessFunction(MapFunction[str, str]):\n    def map(self, value: str) -&gt; str:\n        # \u83b7\u53d6\u670d\u52a1\u4ee3\u7406\n        cache = self.get_runtime_context().get_service(\"cache\")\n\n        # \u4f7f\u7528\u670d\u52a1\n        result = cache.get(value)\n        if result is None:\n            result = expensive_computation(value)\n            cache.put(value, result)\n\n        return result\n\nstream.map(ProcessFunction())\n</code></pre>"},{"location":"kernel/api/environments/#_11","title":"\ud83d\ude80 \u4efb\u52a1\u63d0\u4ea4\u548c\u7ba1\u7406","text":""},{"location":"kernel/api/environments/#_12","title":"\u63d0\u4ea4\u4efb\u52a1","text":"<pre><code># \u540c\u6b65\u63d0\u4ea4 (\u963b\u585e)\nenv.submit()\n\n# \u5f02\u6b65\u63d0\u4ea4 (\u975e\u963b\u585e)\njob_id = env.submit_async()\n\n# \u5e26\u53c2\u6570\u63d0\u4ea4\nenv.submit(\n    job_name=\"my_processing_job\",\n    save_point_path=\"./savepoints/sp_001\",\n    allow_non_restored_state=False\n)\n</code></pre>"},{"location":"kernel/api/environments/#_13","title":"\u4efb\u52a1\u63a7\u5236","text":"<pre><code># \u505c\u6b62\u4efb\u52a1\nenv.stop()\n\n# \u53d6\u6d88\u4efb\u52a1\nenv.cancel()\n\n# \u6682\u505c\u4efb\u52a1\nenv.pause()\n\n# \u6062\u590d\u4efb\u52a1\nenv.resume()\n\n# \u521b\u5efa\u4fdd\u5b58\u70b9\nsavepoint_path = env.create_savepoint()\n\n# \u4ece\u4fdd\u5b58\u70b9\u6062\u590d\nenv.restore_from_savepoint(\"./savepoints/sp_001\")\n</code></pre>"},{"location":"kernel/api/environments/#_14","title":"\ud83d\udcca \u76d1\u63a7\u548c\u8c03\u8bd5","text":""},{"location":"kernel/api/environments/#_15","title":"\u6027\u80fd\u76d1\u63a7","text":"<pre><code># \u542f\u7528\u6307\u6807\u6536\u96c6\nenv.enable_metrics(\n    reporters=[\"jmx\", \"prometheus\"],\n    interval=\"10s\"\n)\n\n# \u81ea\u5b9a\u4e49\u6307\u6807\ncounter = env.get_metric_group().counter(\"my_counter\")\nhistogram = env.get_metric_group().histogram(\"my_histogram\")\n\nclass MyMapFunction(MapFunction[str, str]):\n    def map(self, value: str) -&gt; str:\n        counter.inc()  # \u589e\u52a0\u8ba1\u6570\u5668\n\n        start_time = time.time()\n        result = process(value)\n        histogram.update(time.time() - start_time)  # \u8bb0\u5f55\u5904\u7406\u65f6\u95f4\n\n        return result\n</code></pre>"},{"location":"kernel/api/environments/#_16","title":"\u65e5\u5fd7\u914d\u7f6e","text":"<pre><code># \u914d\u7f6e\u65e5\u5fd7\nenv.set_log_level(\"DEBUG\")\nenv.set_log_file(\"./logs/my_app.log\")\n\n# \u7ed3\u6784\u5316\u65e5\u5fd7\nlogger = env.get_logger(\"MyFunction\")\nlogger.info(\"Processing record\", extra={\"record_id\": 123})\n</code></pre>"},{"location":"kernel/api/environments/#_17","title":"\ud83d\udd27 \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"kernel/api/environments/#1","title":"1. \u73af\u5883\u751f\u547d\u5468\u671f\u7ba1\u7406","text":"<pre><code>def main():\n    env = None\n    try:\n        env = LocalEnvironment(\"my_app\")\n\n        # \u6784\u5efa\u6570\u636e\u6d41\u7ba1\u9053\n        stream = env.from_batch(data)\n        stream.map(process).sink(output)\n\n        # \u63d0\u4ea4\u6267\u884c\n        env.submit()\n\n    except Exception as e:\n        logger.error(f\"Job failed: {e}\")\n    finally:\n        if env:\n            env.close()  # \u786e\u4fdd\u8d44\u6e90\u6e05\u7406\n</code></pre>"},{"location":"kernel/api/environments/#2","title":"2. \u914d\u7f6e\u5916\u90e8\u5316","text":"<pre><code># config.yaml\nparallelism: 4\nbuffer_size: 10000\ncheckpoint_interval: 30s\n\n# Python\u4ee3\u7801\nimport yaml\n\nwith open(\"config.yaml\") as f:\n    config = yaml.safe_load(f)\n\nenv = LocalEnvironment(\"my_app\", config=config)\n</code></pre>"},{"location":"kernel/api/environments/#3","title":"3. \u9519\u8bef\u5904\u7406","text":"<pre><code># \u8bbe\u7f6e\u91cd\u542f\u7b56\u7565\nenv.set_restart_strategy(\n    strategy=\"exponential-delay\",\n    max_attempts=5,\n    initial_delay=\"1s\",\n    max_delay=\"1m\",\n    backoff_multiplier=2.0\n)\n\n# \u81ea\u5b9a\u4e49\u9519\u8bef\u5904\u7406\nclass ErrorHandler(ProcessFunction[str, str]):\n    def process(self, value: str, ctx: ProcessContext) -&gt; str:\n        try:\n            return risky_operation(value)\n        except Exception as e:\n            # \u53d1\u9001\u5230\u9519\u8bef\u6d41\n            ctx.output_to_side(\"errors\", f\"Error: {e}, Value: {value}\")\n            return None  # \u8fc7\u6ee4\u6389\u9519\u8bef\u6570\u636e\n\nmain_stream, error_stream = stream.process(ErrorHandler()).split()\n</code></pre>"},{"location":"kernel/api/environments/#4","title":"4. \u8d44\u6e90\u4f18\u5316","text":"<pre><code># \u5408\u7406\u8bbe\u7f6e\u5e76\u884c\u5ea6\nenv.set_parallelism(min(cpu_count(), len(input_partitions)))\n\n# \u542f\u7528\u5bf9\u8c61\u91cd\u7528\nenv.enable_object_reuse()\n\n# \u914d\u7f6e\u5185\u5b58\u7ba1\u7406\nenv.set_managed_memory_fraction(0.7)\nenv.set_network_memory_fraction(0.1)\n</code></pre>"},{"location":"kernel/api/environments/#_18","title":"\ud83d\udcda \u76f8\u5173\u6587\u6863","text":"<ul> <li>\u6570\u636e\u6d41\u5904\u7406 - \u6570\u636e\u6d41\u64cd\u4f5c\u8be6\u89e3</li> <li>\u51fd\u6570\u63a5\u53e3 - \u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570</li> </ul> <ul> <li>\u5206\u5e03\u5f0f\u90e8\u7f72 - \u96c6\u7fa4\u90e8\u7f72\u6307\u5357</li> </ul> <ul> <li>\u6027\u80fd\u4f18\u5316 - \u6027\u80fd\u8c03\u4f18\u6280\u5de7</li> </ul>"},{"location":"kernel/api/functions/","title":"\u51fd\u6570\u63a5\u53e3 (Functions)","text":"<p>SAGE Kernel \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u51fd\u6570\u63a5\u53e3\uff0c\u652f\u6301\u7528\u6237\u5b9a\u4e49\u5404\u79cd\u6570\u636e\u5904\u7406\u903b\u8f91\u3002\u6240\u6709\u51fd\u6570\u90fd\u7ee7\u627f\u81ea\u57fa\u7840\u51fd\u6570\u7c7b\uff0c\u63d0\u4f9b\u7c7b\u578b\u5b89\u5168\u548c\u6027\u80fd\u4f18\u5316\u3002</p>"},{"location":"kernel/api/functions/#_1","title":"\ud83e\udde9 \u51fd\u6570\u7c7b\u578b\u6982\u89c8","text":"<pre><code>BaseFunction (\u62bd\u8c61\u57fa\u7c7b)\n\u251c\u2500\u2500 MapFunction          # \u4e00\u5bf9\u4e00\u8f6c\u6362\n\u251c\u2500\u2500 FlatMapFunction      # \u4e00\u5bf9\u591a\u8f6c\u6362  \n\u251c\u2500\u2500 FilterFunction       # \u8fc7\u6ee4\u64cd\u4f5c\n\u251c\u2500\u2500 ReduceFunction       # \u5f52\u7ea6\u64cd\u4f5c\n\u251c\u2500\u2500 AggregateFunction    # \u805a\u5408\u64cd\u4f5c\n\u251c\u2500\u2500 ProcessFunction      # \u901a\u7528\u5904\u7406\u51fd\u6570\n\u251c\u2500\u2500 SinkFunction         # \u8f93\u51fa\u51fd\u6570\n\u251c\u2500\u2500 SourceFunction       # \u6570\u636e\u6e90\u51fd\u6570\n\u251c\u2500\u2500 KeySelector          # \u952e\u9009\u62e9\u5668\n\u251c\u2500\u2500 JoinFunction         # \u8fde\u63a5\u51fd\u6570\n\u2514\u2500\u2500 CoMapFunction        # \u534f\u540c\u6620\u5c04\u51fd\u6570\n</code></pre>"},{"location":"kernel/api/functions/#_2","title":"\ud83d\udd04 \u8f6c\u6362\u51fd\u6570","text":""},{"location":"kernel/api/functions/#mapfunction-","title":"MapFunction - \u4e00\u5bf9\u4e00\u8f6c\u6362","text":"<pre><code>from sage.core.api.function import MapFunction\nfrom typing import TypeVar\n\nT = TypeVar('T')\nU = TypeVar('U')\n\nclass MapFunction(BaseFunction[T, U]):\n    \"\"\"\u4e00\u5bf9\u4e00\u8f6c\u6362\u51fd\u6570\u57fa\u7c7b\"\"\"\n\n    def map(self, value: T) -&gt; U:\n        \"\"\"\u8f6c\u6362\u5355\u4e2a\u5143\u7d20\"\"\"\n        raise NotImplementedError()\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass SquareFunction(MapFunction[int, int]):\n    def map(self, value: int) -&gt; int:\n        return value * value\n\nclass ParseJsonFunction(MapFunction[str, dict]):\n    def map(self, json_str: str) -&gt; dict:\n        try:\n            return json.loads(json_str)\n        except json.JSONDecodeError:\n            return {\"error\": \"invalid_json\", \"raw\": json_str}\n\nclass UserProfileExtractor(MapFunction[dict, UserProfile]):\n    def map(self, user_data: dict) -&gt; UserProfile:\n        return UserProfile(\n            id=user_data[\"id\"],\n            name=user_data[\"name\"],\n            email=user_data.get(\"email\"),\n            age=user_data.get(\"age\", 0)\n        )\n\n# \u4f7f\u7528\u65b9\u5f0f\nnumbers.map(SquareFunction())\njson_lines.map(ParseJsonFunction())\nuser_data.map(UserProfileExtractor())\n</code></pre>"},{"location":"kernel/api/functions/#flatmapfunction-","title":"FlatMapFunction - \u4e00\u5bf9\u591a\u8f6c\u6362","text":"<pre><code>from sage.core.api.function import FlatMapFunction\nfrom typing import Iterable\n\nclass FlatMapFunction(BaseFunction[T, Iterable[U]]):\n    \"\"\"\u4e00\u5bf9\u591a\u8f6c\u6362\u51fd\u6570\u57fa\u7c7b\"\"\"\n\n    def flat_map(self, value: T) -&gt; Iterable[U]:\n        \"\"\"\u5c06\u4e00\u4e2a\u5143\u7d20\u8f6c\u6362\u4e3a\u591a\u4e2a\u5143\u7d20\"\"\"\n        raise NotImplementedError()\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass SplitWordsFunction(FlatMapFunction[str, str]):\n    def flat_map(self, sentence: str) -&gt; Iterable[str]:\n        return sentence.lower().split()\n\nclass ExpandEventsFunction(FlatMapFunction[dict, dict]):\n    def flat_map(self, batch: dict) -&gt; Iterable[dict]:\n        for event in batch.get(\"events\", []):\n            event[\"batch_id\"] = batch[\"id\"]\n            event[\"batch_timestamp\"] = batch[\"timestamp\"]\n            yield event\n\nclass GenerateNGramsFunction(FlatMapFunction[str, str]):\n    def __init__(self, n: int = 2):\n        self.n = n\n\n    def flat_map(self, text: str) -&gt; Iterable[str]:\n        words = text.split()\n        for i in range(len(words) - self.n + 1):\n            yield \" \".join(words[i:i + self.n])\n\n# \u4f7f\u7528\u65b9\u5f0f\nsentences.flat_map(SplitWordsFunction())\nbatches.flat_map(ExpandEventsFunction())\ntext.flat_map(GenerateNGramsFunction(3))  # 3-grams\n</code></pre>"},{"location":"kernel/api/functions/#filterfunction-","title":"FilterFunction - \u8fc7\u6ee4\u64cd\u4f5c","text":"<pre><code>from sage.core.api.function import FilterFunction\n\nclass FilterFunction(BaseFunction[T, bool]):\n    \"\"\"\u8fc7\u6ee4\u51fd\u6570\u57fa\u7c7b\"\"\"\n\n    def filter(self, value: T) -&gt; bool:\n        \"\"\"\u5224\u65ad\u662f\u5426\u4fdd\u7559\u8be5\u5143\u7d20\"\"\"\n        raise NotImplementedError()\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass AdultUserFilter(FilterFunction[dict]):\n    def filter(self, user: dict) -&gt; bool:\n        return user.get(\"age\", 0) &gt;= 18\n\nclass ValidEmailFilter(FilterFunction[str]):\n    def filter(self, email: str) -&gt; bool:\n        return \"@\" in email and \".\" in email.split(\"@\")[1]\n\nclass PriceRangeFilter(FilterFunction[dict]):\n    def __init__(self, min_price: float, max_price: float):\n        self.min_price = min_price\n        self.max_price = max_price\n\n    def filter(self, product: dict) -&gt; bool:\n        price = product.get(\"price\", 0)\n        return self.min_price &lt;= price &lt;= self.max_price\n\n# \u4f7f\u7528\u65b9\u5f0f\nusers.filter(AdultUserFilter())\nemails.filter(ValidEmailFilter())\nproducts.filter(PriceRangeFilter(10.0, 100.0))\n</code></pre>"},{"location":"kernel/api/functions/#_3","title":"\ud83d\udd11 \u952e\u503c\u51fd\u6570","text":""},{"location":"kernel/api/functions/#keyselector-","title":"KeySelector - \u952e\u9009\u62e9\u5668","text":"<pre><code>from sage.core.api.function import KeySelector\n\nK = TypeVar('K')  # \u952e\u7c7b\u578b\n\nclass KeySelector(BaseFunction[T, K]):\n    \"\"\"\u952e\u9009\u62e9\u5668\u57fa\u7c7b\"\"\"\n\n    def get_key(self, value: T) -&gt; K:\n        \"\"\"\u63d0\u53d6\u5143\u7d20\u7684\u952e\"\"\"\n        raise NotImplementedError()\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass UserIdKeySelector(KeySelector[dict, str]):\n    def get_key(self, user: dict) -&gt; str:\n        return user[\"id\"]\n\nclass TimestampKeySelector(KeySelector[dict, int]):\n    def get_key(self, event: dict) -&gt; int:\n        # \u6309\u5c0f\u65f6\u5206\u7ec4\n        return event[\"timestamp\"] // 3600\n\nclass CompositeKeySelector(KeySelector[dict, tuple]):\n    def get_key(self, record: dict) -&gt; tuple:\n        return (record[\"category\"], record[\"region\"])\n\n# \u4f7f\u7528\u65b9\u5f0f\nusers.key_by(UserIdKeySelector())\nevents.key_by(TimestampKeySelector())\nsales.key_by(CompositeKeySelector())\n</code></pre>"},{"location":"kernel/api/functions/#reducefunction-","title":"ReduceFunction - \u5f52\u7ea6\u64cd\u4f5c","text":"<pre><code>from sage.core.api.function import ReduceFunction\n\nclass ReduceFunction(BaseFunction[T, T]):\n    \"\"\"\u5f52\u7ea6\u51fd\u6570\u57fa\u7c7b\"\"\"\n\n    def reduce(self, value1: T, value2: T) -&gt; T:\n        \"\"\"\u5408\u5e76\u4e24\u4e2a\u76f8\u540c\u952e\u7684\u503c\"\"\"\n        raise NotImplementedError()\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass SumReduceFunction(ReduceFunction[int]):\n    def reduce(self, value1: int, value2: int) -&gt; int:\n        return value1 + value2\n\nclass MaxReduceFunction(ReduceFunction[float]):\n    def reduce(self, value1: float, value2: float) -&gt; float:\n        return max(value1, value2)\n\nclass MergeUserFunction(ReduceFunction[dict]):\n    def reduce(self, user1: dict, user2: dict) -&gt; dict:\n        # \u5408\u5e76\u7528\u6237\u4fe1\u606f\uff0c\u4fdd\u7559\u6700\u65b0\u65f6\u95f4\u6233\u7684\u6570\u636e\n        if user1.get(\"timestamp\", 0) &gt;= user2.get(\"timestamp\", 0):\n            result = user1.copy()\n            result.update({k: v for k, v in user2.items() if k != \"timestamp\"})\n        else:\n            result = user2.copy()\n            result.update({k: v for k, v in user1.items() if k != \"timestamp\"})\n        return result\n\n# \u4f7f\u7528\u65b9\u5f0f\nnumbers.key_by(lambda x: x % 2).reduce(SumReduceFunction())\nscores.key_by(lambda x: x[\"user_id\"]).reduce(MaxReduceFunction())\nuser_updates.key_by(lambda x: x[\"id\"]).reduce(MergeUserFunction())\n</code></pre>"},{"location":"kernel/api/functions/#_4","title":"\ud83d\udcca \u805a\u5408\u51fd\u6570","text":""},{"location":"kernel/api/functions/#aggregatefunction-","title":"AggregateFunction - \u805a\u5408\u64cd\u4f5c","text":"<pre><code>from sage.core.api.function import AggregateFunction\n\nACC = TypeVar('ACC')  # \u7d2f\u52a0\u5668\u7c7b\u578b\nOUT = TypeVar('OUT')  # \u8f93\u51fa\u7c7b\u578b\n\nclass AggregateFunction(BaseFunction[T, ACC, OUT]):\n    \"\"\"\u805a\u5408\u51fd\u6570\u57fa\u7c7b\"\"\"\n\n    def create_accumulator(self) -&gt; ACC:\n        \"\"\"\u521b\u5efa\u7d2f\u52a0\u5668\u521d\u59cb\u503c\"\"\"\n        raise NotImplementedError()\n\n    def add(self, accumulator: ACC, value: T) -&gt; ACC:\n        \"\"\"\u5c06\u65b0\u503c\u6dfb\u52a0\u5230\u7d2f\u52a0\u5668\"\"\"\n        raise NotImplementedError()\n\n    def get_result(self, accumulator: ACC) -&gt; OUT:\n        \"\"\"\u4ece\u7d2f\u52a0\u5668\u83b7\u53d6\u6700\u7ec8\u7ed3\u679c\"\"\"\n        raise NotImplementedError()\n\n    def merge(self, acc1: ACC, acc2: ACC) -&gt; ACC:\n        \"\"\"\u5408\u5e76\u4e24\u4e2a\u7d2f\u52a0\u5668\uff08\u7528\u4e8e\u5206\u5e03\u5f0f\u805a\u5408\uff09\"\"\"\n        raise NotImplementedError()\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass CountAggregateFunction(AggregateFunction[Any, int, int]):\n    def create_accumulator(self) -&gt; int:\n        return 0\n\n    def add(self, accumulator: int, value: Any) -&gt; int:\n        return accumulator + 1\n\n    def get_result(self, accumulator: int) -&gt; int:\n        return accumulator\n\n    def merge(self, acc1: int, acc2: int) -&gt; int:\n        return acc1 + acc2\n\nclass AvgAggregateFunction(AggregateFunction[float, tuple, float]):\n    def create_accumulator(self) -&gt; tuple:\n        return (0.0, 0)  # (sum, count)\n\n    def add(self, accumulator: tuple, value: float) -&gt; tuple:\n        sum_val, count = accumulator\n        return (sum_val + value, count + 1)\n\n    def get_result(self, accumulator: tuple) -&gt; float:\n        sum_val, count = accumulator\n        return sum_val / count if count &gt; 0 else 0.0\n\n    def merge(self, acc1: tuple, acc2: tuple) -&gt; tuple:\n        return (acc1[0] + acc2[0], acc1[1] + acc2[1])\n\nclass TopKAggregateFunction(AggregateFunction[int, list, list]):\n    def __init__(self, k: int = 10):\n        self.k = k\n\n    def create_accumulator(self) -&gt; list:\n        return []\n\n    def add(self, accumulator: list, value: int) -&gt; list:\n        accumulator.append(value)\n        accumulator.sort(reverse=True)\n        return accumulator[:self.k]\n\n    def get_result(self, accumulator: list) -&gt; list:\n        return accumulator\n\n    def merge(self, acc1: list, acc2: list) -&gt; list:\n        merged = acc1 + acc2\n        merged.sort(reverse=True)\n        return merged[:self.k]\n</code></pre>"},{"location":"kernel/api/functions/#_5","title":"\ud83d\udd27 \u5904\u7406\u51fd\u6570","text":""},{"location":"kernel/api/functions/#processfunction-","title":"ProcessFunction - \u901a\u7528\u5904\u7406","text":"<pre><code>from sage.core.api.function import ProcessFunction, ProcessContext\n\nclass ProcessFunction(BaseFunction[T, U]):\n    \"\"\"\u901a\u7528\u5904\u7406\u51fd\u6570\uff0c\u652f\u6301\u526f\u8f93\u51fa\u3001\u5b9a\u65f6\u5668\u7b49\u9ad8\u7ea7\u529f\u80fd\"\"\"\n\n    def process(self, value: T, ctx: ProcessContext[U]) -&gt; None:\n        \"\"\"\u5904\u7406\u5355\u4e2a\u5143\u7d20\"\"\"\n        raise NotImplementedError()\n\n    def on_timer(self, timestamp: int, ctx: ProcessContext[U]) -&gt; None:\n        \"\"\"\u5b9a\u65f6\u5668\u56de\u8c03\"\"\"\n        pass\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass ValidationFunction(ProcessFunction[dict, dict]):\n    def process(self, record: dict, ctx: ProcessContext[dict]):\n        # \u6570\u636e\u9a8c\u8bc1\n        if self.is_valid(record):\n            ctx.emit(record)  # \u8f93\u51fa\u5230\u4e3b\u6d41\n        else:\n            # \u8f93\u51fa\u5230\u9519\u8bef\u6d41\n            ctx.output_to_side(\"errors\", f\"Invalid: {record}\")\n\n    def is_valid(self, record: dict) -&gt; bool:\n        required_fields = [\"id\", \"timestamp\", \"data\"]\n        return all(field in record for field in required_fields)\n\nclass SessionTimeoutFunction(ProcessFunction[dict, dict]):\n    def __init__(self, timeout_ms: int = 30000):\n        self.timeout_ms = timeout_ms\n        self.sessions = {}\n\n    def process(self, event: dict, ctx: ProcessContext[dict]):\n        session_id = event[\"session_id\"]\n        current_time = ctx.timestamp()\n\n        # \u66f4\u65b0\u4f1a\u8bdd\n        self.sessions[session_id] = current_time\n\n        # \u8bbe\u7f6e\u8d85\u65f6\u5b9a\u65f6\u5668\n        ctx.register_timer(current_time + self.timeout_ms)\n\n        ctx.emit(event)\n\n    def on_timer(self, timestamp: int, ctx: ProcessContext[dict]):\n        # \u6e05\u7406\u8d85\u65f6\u4f1a\u8bdd\n        expired_sessions = [\n            sid for sid, last_time in self.sessions.items()\n            if timestamp - last_time &gt;= self.timeout_ms\n        ]\n\n        for session_id in expired_sessions:\n            del self.sessions[session_id]\n            ctx.output_to_side(\"timeouts\", {\"session_id\": session_id, \"timeout\": timestamp})\n</code></pre>"},{"location":"kernel/api/functions/#_6","title":"\ud83d\udce4 \u8f93\u5165\u8f93\u51fa\u51fd\u6570","text":""},{"location":"kernel/api/functions/#sourcefunction-","title":"SourceFunction - \u6570\u636e\u6e90","text":"<pre><code>from sage.core.api.function import SourceFunction, SourceContext\n\nclass SourceFunction(BaseFunction[None, T]):\n    \"\"\"\u6570\u636e\u6e90\u51fd\u6570\u57fa\u7c7b\"\"\"\n\n    def run(self, ctx: SourceContext[T]) -&gt; None:\n        \"\"\"\u751f\u6210\u6570\u636e\"\"\"\n        raise NotImplementedError()\n\n    def cancel(self) -&gt; None:\n        \"\"\"\u53d6\u6d88\u6570\u636e\u6e90\"\"\"\n        pass\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass CounterSourceFunction(SourceFunction[int]):\n    def __init__(self, max_count: int = 100, interval_ms: int = 1000):\n        self.max_count = max_count\n        self.interval_ms = interval_ms\n        self.running = True\n\n    def run(self, ctx: SourceContext[int]):\n        count = 0\n        while self.running and count &lt; self.max_count:\n            ctx.emit(count)\n            count += 1\n            time.sleep(self.interval_ms / 1000.0)\n\n    def cancel(self):\n        self.running = False\n\nclass FileSourceFunction(SourceFunction[str]):\n    def __init__(self, file_path: str):\n        self.file_path = file_path\n\n    def run(self, ctx: SourceContext[str]):\n        with open(self.file_path, 'r') as f:\n            for line in f:\n                ctx.emit(line.strip())\n\nclass KafkaSourceFunction(SourceFunction[dict]):\n    def __init__(self, bootstrap_servers: str, topic: str, group_id: str):\n        self.bootstrap_servers = bootstrap_servers\n        self.topic = topic\n        self.group_id = group_id\n        self.running = True\n\n    def run(self, ctx: SourceContext[dict]):\n        from kafka import KafkaConsumer\n\n        consumer = KafkaConsumer(\n            self.topic,\n            bootstrap_servers=self.bootstrap_servers,\n            group_id=self.group_id,\n            value_deserializer=lambda x: json.loads(x.decode('utf-8'))\n        )\n\n        for message in consumer:\n            if not self.running:\n                break\n            ctx.emit(message.value)\n\n    def cancel(self):\n        self.running = False\n</code></pre>"},{"location":"kernel/api/functions/#sinkfunction-","title":"SinkFunction - \u6570\u636e\u8f93\u51fa","text":"<pre><code>from sage.core.api.function import SinkFunction\n\nclass SinkFunction(BaseFunction[T, None]):\n    \"\"\"\u6570\u636e\u8f93\u51fa\u51fd\u6570\u57fa\u7c7b\"\"\"\n\n    def open(self, context) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u8d44\u6e90\"\"\"\n        pass\n\n    def sink(self, value: T) -&gt; None:\n        \"\"\"\u8f93\u51fa\u5355\u4e2a\u5143\u7d20\"\"\"\n        raise NotImplementedError()\n\n    def close(self) -&gt; None:\n        \"\"\"\u6e05\u7406\u8d44\u6e90\"\"\"\n        pass\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass PrintSinkFunction(SinkFunction[Any]):\n    def __init__(self, prefix: str = \"\"):\n        self.prefix = prefix\n\n    def sink(self, value: Any):\n        print(f\"{self.prefix}{value}\")\n\nclass FileSinkFunction(SinkFunction[str]):\n    def __init__(self, file_path: str):\n        self.file_path = file_path\n        self.file = None\n\n    def open(self, context):\n        self.file = open(self.file_path, 'w')\n\n    def sink(self, value: str):\n        self.file.write(f\"{value}\\n\")\n        self.file.flush()\n\n    def close(self):\n        if self.file:\n            self.file.close()\n\nclass DatabaseSinkFunction(SinkFunction[dict]):\n    def __init__(self, connection_string: str, table_name: str):\n        self.connection_string = connection_string\n        self.table_name = table_name\n        self.connection = None\n\n    def open(self, context):\n        import psycopg2\n        self.connection = psycopg2.connect(self.connection_string)\n\n    def sink(self, record: dict):\n        cursor = self.connection.cursor()\n        columns = list(record.keys())\n        values = list(record.values())\n\n        query = f\"INSERT INTO {self.table_name} ({','.join(columns)}) VALUES ({','.join(['%s'] * len(values))})\"\n        cursor.execute(query, values)\n        self.connection.commit()\n        cursor.close()\n\n    def close(self):\n        if self.connection:\n            self.connection.close()\n</code></pre>"},{"location":"kernel/api/functions/#_7","title":"\ud83d\udd17 \u8fde\u63a5\u51fd\u6570","text":""},{"location":"kernel/api/functions/#joinfunction-","title":"JoinFunction - \u6d41\u8fde\u63a5","text":"<pre><code>from sage.core.api.function import JoinFunction\n\nclass JoinFunction(BaseFunction[T1, T2, OUT]):\n    \"\"\"\u8fde\u63a5\u51fd\u6570\u57fa\u7c7b\"\"\"\n\n    def join(self, left: T1, right: T2) -&gt; OUT:\n        \"\"\"\u8fde\u63a5\u4e24\u4e2a\u6d41\u7684\u5143\u7d20\"\"\"\n        raise NotImplementedError()\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass UserOrderJoinFunction(JoinFunction[dict, dict, dict]):\n    def join(self, user: dict, order: dict) -&gt; dict:\n        return {\n            \"order_id\": order[\"id\"],\n            \"user_name\": user[\"name\"],\n            \"user_email\": user[\"email\"],\n            \"order_amount\": order[\"amount\"],\n            \"order_time\": order[\"timestamp\"]\n        }\n\nclass ClickImpressionJoinFunction(JoinFunction[dict, dict, dict]):\n    def join(self, click: dict, impression: dict) -&gt; dict:\n        return {\n            \"ad_id\": click[\"ad_id\"],\n            \"user_id\": click[\"user_id\"],\n            \"click_time\": click[\"timestamp\"],\n            \"impression_time\": impression[\"timestamp\"],\n            \"conversion_delay\": click[\"timestamp\"] - impression[\"timestamp\"]\n        }\n</code></pre>"},{"location":"kernel/api/functions/#comapfunction-","title":"CoMapFunction - \u534f\u540c\u6620\u5c04","text":"<pre><code>from sage.core.api.function import CoMapFunction\n\nclass CoMapFunction(BaseFunction[T1, T2, OUT]):\n    \"\"\"\u534f\u540c\u6620\u5c04\u51fd\u6570\u57fa\u7c7b\"\"\"\n\n    def map1(self, value: T1) -&gt; OUT:\n        \"\"\"\u5904\u7406\u7b2c\u4e00\u4e2a\u6d41\u7684\u5143\u7d20\"\"\"\n        raise NotImplementedError()\n\n    def map2(self, value: T2) -&gt; OUT:\n        \"\"\"\u5904\u7406\u7b2c\u4e8c\u4e2a\u6d41\u7684\u5143\u7d20\"\"\"\n        raise NotImplementedError()\n\n# \u793a\u4f8b\u5b9e\u73b0\nclass AlertCoMapFunction(CoMapFunction[dict, dict, str]):\n    def map1(self, user_action: dict) -&gt; str:\n        if user_action[\"action\"] == \"login_failed\":\n            return f\"Security Alert: Failed login attempt by user {user_action['user_id']}\"\n        return None\n\n    def map2(self, system_event: dict) -&gt; str:\n        if system_event[\"level\"] == \"ERROR\":\n            return f\"System Alert: {system_event['message']}\"\n        return None\n\nclass MetricsCoMapFunction(CoMapFunction[dict, dict, dict]):\n    def map1(self, user_metric: dict) -&gt; dict:\n        return {\n            \"type\": \"user_metric\",\n            \"metric\": user_metric[\"metric_name\"],\n            \"value\": user_metric[\"value\"],\n            \"timestamp\": user_metric[\"timestamp\"]\n        }\n\n    def map2(self, system_metric: dict) -&gt; dict:\n        return {\n            \"type\": \"system_metric\", \n            \"metric\": system_metric[\"metric_name\"],\n            \"value\": system_metric[\"value\"],\n            \"timestamp\": system_metric[\"timestamp\"]\n        }\n</code></pre>"},{"location":"kernel/api/functions/#_8","title":"\ud83c\udfaf \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"kernel/api/functions/#1","title":"1. \u51fd\u6570\u72b6\u6001\u7ba1\u7406","text":"<pre><code>class StatefulProcessFunction(ProcessFunction[str, int]):\n    def __init__(self):\n        self.word_count = {}  # \u72b6\u6001\n\n    def process(self, word: str, ctx: ProcessContext[int]):\n        self.word_count[word] = self.word_count.get(word, 0) + 1\n        ctx.emit(self.word_count[word])\n</code></pre>"},{"location":"kernel/api/functions/#2","title":"2. \u9519\u8bef\u5904\u7406","text":"<pre><code>class RobustMapFunction(MapFunction[str, dict]):\n    def map(self, json_str: str) -&gt; dict:\n        try:\n            return json.loads(json_str)\n        except Exception as e:\n            return {\n                \"error\": str(e),\n                \"raw_input\": json_str,\n                \"timestamp\": time.time()\n            }\n</code></pre>"},{"location":"kernel/api/functions/#3","title":"3. \u6027\u80fd\u4f18\u5316","text":"<pre><code>class OptimizedAggregateFunction(AggregateFunction[int, int, int]):\n    def __init__(self):\n        self.batch_size = 1000\n        self.batch = []\n\n    def add(self, accumulator: int, value: int) -&gt; int:\n        self.batch.append(value)\n        if len(self.batch) &gt;= self.batch_size:\n            # \u6279\u91cf\u5904\u7406\n            accumulator += sum(self.batch)\n            self.batch.clear()\n        return accumulator\n</code></pre>"},{"location":"kernel/api/functions/#4","title":"4. \u8d44\u6e90\u7ba1\u7406","text":"<pre><code>class DatabaseSinkFunction(SinkFunction[dict]):\n    def open(self, context):\n        self.connection_pool = create_connection_pool()\n\n    def sink(self, record: dict):\n        with self.connection_pool.get_connection() as conn:\n            # \u4f7f\u7528\u8fde\u63a5\u6c60\n            self.insert_record(conn, record)\n\n    def close(self):\n        self.connection_pool.close()\n</code></pre>"},{"location":"kernel/api/functions/#_9","title":"\ud83d\udcda \u76f8\u5173\u6587\u6863","text":"<ul> <li>\u6570\u636e\u6d41\u5904\u7406 - \u6570\u636e\u6d41\u64cd\u4f5c\u8be6\u89e3</li> <li>\u8fde\u63a5\u6d41 - \u591a\u6d41\u5904\u7406</li> <li>\u73af\u5883\u7ba1\u7406 - \u6267\u884c\u73af\u5883\u914d\u7f6e</li> </ul>"},{"location":"kernel/components/cli/","title":"CLI \u547d\u4ee4\u884c\u5de5\u5177","text":"<p>SAGE Kernel \u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u547d\u4ee4\u884c\u5de5\u5177\u96c6\uff0c\u652f\u6301\u5f00\u53d1\u3001\u8c03\u8bd5\u3001\u90e8\u7f72\u548c\u76d1\u63a7\u7b49\u5168\u751f\u547d\u5468\u671f\u64cd\u4f5c\u3002</p>"},{"location":"kernel/components/cli/#_1","title":"\ud83d\udd27 \u4e3b\u8981\u547d\u4ee4","text":""},{"location":"kernel/components/cli/#sage-","title":"sage - \u4e3b\u5165\u53e3\u547d\u4ee4","text":"<pre><code># \u67e5\u770b\u7248\u672c\u4fe1\u606f\nsage --version\n\n# \u67e5\u770b\u5e2e\u52a9\nsage --help\n\n# \u663e\u793a\u7cfb\u7edf\u4fe1\u606f\nsage info\n\n# \u914d\u7f6e\u7ba1\u7406\nsage config list\nsage config set parallelism 8\nsage config get checkpoint_interval\n</code></pre>"},{"location":"kernel/components/cli/#sage-core-","title":"sage-core - \u6838\u5fc3\u7ba1\u7406\u547d\u4ee4","text":"<pre><code># \u542f\u52a8\u4f5c\u4e1a\u7ba1\u7406\u5668\nsage-core jobmanager start\n\n# \u542f\u52a8\u5de5\u4f5c\u8282\u70b9\nsage-core worker start --slots 4\n\n# \u542f\u52a8\u96c6\u7fa4\u5934\u8282\u70b9\nsage-core head start --port 8081\n\n# \u96c6\u7fa4\u7ba1\u7406\nsage-core cluster list\nsage-core cluster status\nsage-core cluster scale --workers 5\n</code></pre>"},{"location":"kernel/components/cli/#_2","title":"\ud83d\udcca \u4f5c\u4e1a\u7ba1\u7406","text":""},{"location":"kernel/components/cli/#_3","title":"\u4f5c\u4e1a\u63d0\u4ea4\u548c\u63a7\u5236","text":"<pre><code># \u63d0\u4ea4\u4f5c\u4e1a\nsage job submit my_app.py --parallelism 4\n\n# \u5217\u51fa\u4f5c\u4e1a\nsage job list\n\n# \u67e5\u770b\u4f5c\u4e1a\u72b6\u6001\nsage job status &lt;job-id&gt;\n\n# \u505c\u6b62\u4f5c\u4e1a\nsage job stop &lt;job-id&gt;\n\n# \u53d6\u6d88\u4f5c\u4e1a\nsage job cancel &lt;job-id&gt;\n\n# \u91cd\u542f\u4f5c\u4e1a\nsage job restart &lt;job-id&gt;\n</code></pre>"},{"location":"kernel/components/cli/#_4","title":"\u4f5c\u4e1a\u76d1\u63a7","text":"<pre><code># \u67e5\u770b\u4f5c\u4e1a\u8be6\u60c5\nsage job describe &lt;job-id&gt;\n\n# \u67e5\u770b\u4f5c\u4e1a\u65e5\u5fd7\nsage job logs &lt;job-id&gt;\n\n# \u5b9e\u65f6\u8ddf\u8e2a\u65e5\u5fd7\nsage job logs &lt;job-id&gt; --follow\n\n# \u67e5\u770b\u6307\u6807\nsage job metrics &lt;job-id&gt;\n\n# \u6027\u80fd\u5206\u6790\nsage job profile &lt;job-id&gt;\n</code></pre>"},{"location":"kernel/components/cli/#_5","title":"\ud83d\ude80 \u90e8\u7f72\u5de5\u5177","text":""},{"location":"kernel/components/cli/#_6","title":"\u5e94\u7528\u6253\u5305","text":"<pre><code># \u521b\u5efa\u90e8\u7f72\u5305\nsage deploy package my_app/ --output my_app.sage\n\n# \u9a8c\u8bc1\u90e8\u7f72\u5305\nsage deploy validate my_app.sage\n\n# \u63d0\u53d6\u90e8\u7f72\u5305\nsage deploy extract my_app.sage --target ./extracted/\n</code></pre>"},{"location":"kernel/components/cli/#_7","title":"\ud83d\udee0\ufe0f \u5f00\u53d1\u5de5\u5177","text":""},{"location":"kernel/components/cli/#_8","title":"\u9879\u76ee\u811a\u624b\u67b6","text":"<pre><code># \u521b\u5efa\u65b0\u9879\u76ee\nsage create project my-stream-app --template basic\n\n# \u53ef\u7528\u6a21\u677f\nsage create project --list-templates\n\n# \u521b\u5efa\u51fd\u6570\u6a21\u677f\nsage create function MyMapFunction --type map --output-dir src/functions/\n</code></pre>"},{"location":"kernel/components/cli/#_9","title":"\u672c\u5730\u5f00\u53d1","text":"<pre><code># \u542f\u52a8\u672c\u5730\u5f00\u53d1\u73af\u5883\nsage dev start\n\n# \u70ed\u91cd\u8f7d\u6a21\u5f0f\u8fd0\u884c\nsage dev run my_app.py --watch\n\n# \u8c03\u8bd5\u6a21\u5f0f\nsage dev debug my_app.py --breakpoint MyFunction.map\n\n# \u6027\u80fd\u5206\u6790\nsage dev profile my_app.py --output profile.html\n</code></pre>"},{"location":"kernel/components/cli/#_10","title":"\u6d4b\u8bd5\u5de5\u5177","text":"<pre><code># \u8fd0\u884c\u6d4b\u8bd5\nsage test run tests/\n\n# \u8fd0\u884c\u7279\u5b9a\u6d4b\u8bd5\nsage test run tests/test_my_function.py::test_map\n\n# \u6027\u80fd\u6d4b\u8bd5\nsage test benchmark my_app.py --iterations 100\n\n# \u751f\u6210\u6d4b\u8bd5\u62a5\u544a\nsage test report --format html --output test-report.html\n</code></pre>"},{"location":"kernel/components/cli/#_11","title":"\ud83d\udcc8 \u76d1\u63a7\u548c\u8bca\u65ad","text":""},{"location":"kernel/components/cli/#_12","title":"\u7cfb\u7edf\u76d1\u63a7","text":"<pre><code># \u67e5\u770b\u96c6\u7fa4\u72b6\u6001\nsage cluster status\n\n# \u67e5\u770b\u8282\u70b9\u4fe1\u606f\nsage cluster nodes\n\n# \u67e5\u770b\u8d44\u6e90\u4f7f\u7528\nsage cluster resources\n\n# \u67e5\u770b\u7f51\u7edc\u72b6\u6001\nsage cluster network\n</code></pre>"},{"location":"kernel/components/cli/#_13","title":"\u65e5\u5fd7\u7ba1\u7406","text":"<pre><code># \u67e5\u770b\u7cfb\u7edf\u65e5\u5fd7\nsage logs system\n\n# \u67e5\u770b\u7ec4\u4ef6\u65e5\u5fd7\nsage logs jobmanager\nsage logs worker --node worker-01\n\n# \u65e5\u5fd7\u641c\u7d22\nsage logs search \"ERROR\" --since 1h\n\n# \u65e5\u5fd7\u5bfc\u51fa\nsage logs export --output logs.tar.gz --since 24h\n</code></pre>"},{"location":"kernel/components/cli/#_14","title":"\u6027\u80fd\u5206\u6790","text":"<pre><code># CPU\u6027\u80fd\u5206\u6790\nsage profile cpu &lt;job-id&gt; --duration 60s\n\n# \u5185\u5b58\u5206\u6790\nsage profile memory &lt;job-id&gt;\n\n# \u7f51\u7edc\u5206\u6790\nsage profile network &lt;job-id&gt;\n\n# \u751f\u6210\u6027\u80fd\u62a5\u544a\nsage profile report &lt;job-id&gt; --format html\n</code></pre>"},{"location":"kernel/components/cli/#_15","title":"\u2699\ufe0f \u914d\u7f6e\u7ba1\u7406","text":""},{"location":"kernel/components/cli/#_16","title":"\u5168\u5c40\u914d\u7f6e","text":"<pre><code># \u67e5\u770b\u6240\u6709\u914d\u7f6e\nsage config list\n\n# \u8bbe\u7f6e\u914d\u7f6e\u9879\nsage config set logging.level DEBUG\nsage config set cluster.default_parallelism 8\n\n# \u83b7\u53d6\u914d\u7f6e\u9879\nsage config get logging.level\n\n# \u91cd\u7f6e\u914d\u7f6e\nsage config reset logging.level\n\n# \u5bfc\u5165\u914d\u7f6e\nsage config import config.yaml\n\n# \u5bfc\u51fa\u914d\u7f6e  \nsage config export --output current-config.yaml\n</code></pre>"},{"location":"kernel/components/cli/#_17","title":"\u73af\u5883\u914d\u7f6e","text":"<pre><code># \u5217\u51fa\u73af\u5883\nsage config env list\n\n# \u521b\u5efa\u73af\u5883\nsage config env create production --from staging\n\n# \u5207\u6362\u73af\u5883\nsage config env use production\n\n# \u5220\u9664\u73af\u5883\nsage config env delete development\n</code></pre>"},{"location":"kernel/components/cli/#_18","title":"\ud83d\udd0c \u6269\u5c55\u7ba1\u7406","text":""},{"location":"kernel/components/cli/#_19","title":"\u63d2\u4ef6\u7ba1\u7406","text":"<pre><code># \u5217\u51fa\u5df2\u5b89\u88c5\u63d2\u4ef6\nsage extensions list\n\n# \u5b89\u88c5\u63d2\u4ef6\nsage extensions install sage-kafka-connector\n\n# \u66f4\u65b0\u63d2\u4ef6\nsage extensions update sage-kafka-connector\n\n# \u5378\u8f7d\u63d2\u4ef6\nsage extensions uninstall sage-kafka-connector\n\n# \u641c\u7d22\u63d2\u4ef6\nsage extensions search kafka\n</code></pre>"},{"location":"kernel/components/cli/#_20","title":"\u81ea\u5b9a\u4e49\u6269\u5c55","text":"<pre><code># \u521b\u5efa\u6269\u5c55\u6a21\u677f\nsage extensions create my-extension --type connector\n\n# \u6784\u5efa\u6269\u5c55\nsage extensions build my-extension/\n\n# \u53d1\u5e03\u6269\u5c55\nsage extensions publish my-extension/ --registry local\n</code></pre>"},{"location":"kernel/components/cli/#_21","title":"\ud83d\udd10 \u5b89\u5168\u548c\u8ba4\u8bc1","text":""},{"location":"kernel/components/cli/#_22","title":"\u7528\u6237\u7ba1\u7406","text":"<pre><code># \u767b\u5f55\nsage auth login --username admin\n\n# \u767b\u51fa\nsage auth logout\n\n# \u67e5\u770b\u5f53\u524d\u7528\u6237\nsage auth whoami\n\n# \u4fee\u6539\u5bc6\u7801\nsage auth passwd\n</code></pre>"},{"location":"kernel/components/cli/#_23","title":"\u8bbf\u95ee\u63a7\u5236","text":"<pre><code># \u5217\u51fa\u89d2\u8272\nsage auth roles list\n\n# \u521b\u5efa\u89d2\u8272\nsage auth roles create developer --permissions job:submit,job:read\n\n# \u5206\u914d\u89d2\u8272\nsage auth users assign-role user1 developer\n\n# \u67e5\u770b\u6743\u9650\nsage auth permissions check user1 job:submit\n</code></pre>"},{"location":"kernel/components/cli/#_24","title":"\ud83d\udcf1 \u4ea4\u4e92\u5f0f\u754c\u9762","text":""},{"location":"kernel/components/cli/#web-ui","title":"Web UI","text":"<pre><code># \u542f\u52a8Web\u754c\u9762\nsage ui start --port 8080\n\n# \u542f\u52a8\u53ea\u8bfb\u6a21\u5f0f\nsage ui start --readonly\n\n# \u542f\u52a8\u5e26\u8ba4\u8bc1\u7684\u754c\u9762\nsage ui start --auth-required\n</code></pre>"},{"location":"kernel/components/cli/#shell","title":"\u4ea4\u4e92\u5f0fShell","text":"<pre><code># \u542f\u52a8\u4ea4\u4e92\u5f0fShell\nsage shell\n\n# \u5728Shell\u4e2d\u6267\u884c\u547d\u4ee4\nsage&gt; job list\nsage&gt; cluster status\nsage&gt; exit\n</code></pre>"},{"location":"kernel/components/cli/#_25","title":"\ud83d\udcca \u793a\u4f8b\u547d\u4ee4\u7ec4\u5408","text":""},{"location":"kernel/components/cli/#_26","title":"\u5f00\u53d1\u5de5\u4f5c\u6d41","text":"<pre><code># 1. \u521b\u5efa\u9879\u76ee\nsage create project stream-analytics --template kafka-processing\n\n# 2. \u542f\u52a8\u5f00\u53d1\u73af\u5883\ncd stream-analytics\nsage dev start\n\n# 3. \u8fd0\u884c\u5e94\u7528\nsage dev run main.py --watch\n\n# 4. \u8fd0\u884c\u6d4b\u8bd5\nsage test run --coverage\n\n# 5. \u6027\u80fd\u5206\u6790\nsage dev profile main.py --output profile.html\n</code></pre>"},{"location":"kernel/components/cli/#_27","title":"\u751f\u4ea7\u90e8\u7f72","text":"<pre><code># 1. \u6253\u5305\u5e94\u7528\nsage deploy package . --output stream-analytics.sage\n\n# 2. \u9a8c\u8bc1\u5305\nsage deploy validate stream-analytics.sage\n\n# 3. \u90e8\u7f72\u5230\u96c6\u7fa4\nsage job submit stream-analytics.sage --env production\n\n# 4. \u76d1\u63a7\u90e8\u7f72\nsage job status &lt;job-id&gt;\nsage job logs &lt;job-id&gt; --follow\n</code></pre>"},{"location":"kernel/components/cli/#_28","title":"\u8fd0\u7ef4\u76d1\u63a7","text":"<pre><code># 1. \u68c0\u67e5\u96c6\u7fa4\u5065\u5eb7\nsage cluster status\nsage cluster resources\n\n# 2. \u67e5\u770b\u4f5c\u4e1a\u72b6\u6001\nsage job list --filter running\nsage job metrics --all\n\n# 3. \u6027\u80fd\u5206\u6790\nsage profile cpu --all-jobs --duration 5m\n\n# 4. \u5bfc\u51fa\u65e5\u5fd7\nsage logs export --output daily-logs.tar.gz --since 24h\n</code></pre>"},{"location":"kernel/components/cli/#_29","title":"\ud83d\udd27 \u6545\u969c\u6392\u9664","text":""},{"location":"kernel/components/cli/#_30","title":"\u5e38\u89c1\u95ee\u9898\u8bca\u65ad","text":"<pre><code># \u68c0\u67e5\u7cfb\u7edf\u72b6\u6001\nsage doctor\n\n# \u7f51\u7edc\u8fde\u63a5\u6d4b\u8bd5\nsage network test\n\n# \u914d\u7f6e\u9a8c\u8bc1\nsage config validate\n\n# \u4f9d\u8d56\u68c0\u67e5\nsage dependencies check\n</code></pre>"},{"location":"kernel/components/cli/#_31","title":"\u8c03\u8bd5\u5de5\u5177","text":"<pre><code># \u8be6\u7ec6\u65e5\u5fd7\u8f93\u51fa\nsage --verbose job submit my_app.py\n\n# \u8ddf\u8e2a\u6a21\u5f0f\nsage --trace job submit my_app.py\n\n# \u8c03\u8bd5\u4fe1\u606f\nsage --debug cluster status\n</code></pre>"},{"location":"kernel/components/cli/#_32","title":"\ud83d\udcda \u66f4\u591a\u4fe1\u606f","text":"<ul> <li>\u67e5\u770b <code>sage &lt;command&gt; --help</code> \u83b7\u53d6\u8be6\u7ec6\u5e2e\u52a9</li> </ul> <ul> <li>\u8bbf\u95ee CLI \u53c2\u8003\u6587\u6863 \u4e86\u89e3\u6240\u6709\u547d\u4ee4</li> </ul> <ul> <li>\u67e5\u770b \u914d\u7f6e\u53c2\u8003 \u4e86\u89e3\u914d\u7f6e\u9009\u9879</li> </ul>"},{"location":"kernel/config/config/","title":"SAGE \u914d\u7f6e\u6587\u6863","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u8bf4\u660e\u4e86 SAGE \u9879\u76ee\u4e2d\u5404\u79cd\u914d\u7f6e\u6587\u4ef6\u7684\u7ed3\u6784\u548c\u914d\u7f6e\u9879\u7684\u4f5c\u7528\u3002</p>"},{"location":"kernel/config/config/#_1","title":"\u914d\u7f6e\u6587\u4ef6\u6982\u89c8","text":"<p>SAGE \u9879\u76ee\u76ee\u524d\u5305\u542b\u4ee5\u4e0b\u4e3b\u8981\u914d\u7f6e\u6587\u4ef6\uff1a</p> <ul> <li><code>config.yaml</code> - \u57fa\u7840\u914d\u7f6e\u6587\u4ef6</li> <li><code>config_adaptive.yaml</code> - \u81ea\u9002\u5e94\u914d\u7f6e</li> <li><code>config_bm25s.yaml</code> - BM25\u641c\u7d22\u914d\u7f6e</li> <li><code>config_for_ingest.yaml</code> - \u6570\u636e\u6444\u53d6\u914d\u7f6e</li> <li><code>config_for_qa.yaml</code> - \u95ee\u7b54\u7cfb\u7edf\u914d\u7f6e</li> <li><code>config_ray.yaml</code> - Ray\u5206\u5e03\u5f0f\u8ba1\u7b97\u914d\u7f6e</li> <li><code>config_hf.yaml</code> - HuggingFace\u6a21\u578b\u914d\u7f6e</li> <li><code>config_mixed.yaml</code> - \u6df7\u5408\u6a21\u5f0f\u914d\u7f6e</li> <li><code>config_evaluate.yaml</code> - \u8bc4\u4f30\u914d\u7f6e</li> <li><code>multiagent_config.yaml</code> - \u591a\u667a\u80fd\u4f53\u914d\u7f6e</li> <li>\u5176\u4ed6\u4e13\u7528\u914d\u7f6e\u6587\u4ef6</li> </ul>"},{"location":"kernel/config/config/#_2","title":"\u914d\u7f6e\u9879","text":""},{"location":"kernel/config/config/#1-pipeline","title":"1. Pipeline \u914d\u7f6e","text":"<pre><code>pipeline:\n  name: \"sage-api-operator-operator_test\"    # \u7ba1\u9053\u540d\u79f0\n  description: \"Test pipeline for Sage API Operator\"  # \u7ba1\u9053\u63cf\u8ff0\n  version: \"1.0.0\"                          # \u7248\u672c\u53f7\n  type: \"local\"                             # \u8fd0\u884c\u7c7b\u578b\uff1alocal/remote\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>name</code>: \u5b9a\u4e49\u7ba1\u9053\u7684\u552f\u4e00\u6807\u8bc6\u540d\u79f0 - <code>description</code>: \u7ba1\u9053\u529f\u80fd\u7684\u6587\u5b57\u63cf\u8ff0 - <code>version</code>: \u914d\u7f6e\u7248\u672c\u53f7\uff0c\u7528\u4e8e\u7248\u672c\u7ba1\u7406 - <code>type</code>: \u6307\u5b9a\u8fd0\u884c\u6a21\u5f0f\uff0c\u53ef\u9009 <code>local</code>\uff08\u672c\u5730\uff09\u6216 <code>remote</code>\uff08\u8fdc\u7a0b\uff09</p>"},{"location":"kernel/config/config/#2-source","title":"2. Source \u914d\u7f6e","text":"<pre><code>source:\n  data_path: \"data/sample/question.txt\"     # \u6570\u636e\u6587\u4ef6\u8def\u5f84\n  platform: \"local\"                        # \u5e73\u53f0\u7c7b\u578b\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>data_path</code>: \u6307\u5b9a\u8f93\u5165\u6570\u636e\u6587\u4ef6\u7684\u8def\u5f84 - <code>platform</code>: \u6570\u636e\u6e90\u5e73\u53f0\uff0c\u901a\u5e38\u4e3a <code>local</code></p>"},{"location":"kernel/config/config/#3-retriever","title":"3. Retriever \u914d\u7f6e","text":"<pre><code>retriever:\n  platform: \"local\"                        # \u68c0\u7d22\u5e73\u53f0\n  ltm:                                      # \u957f\u671f\u8bb0\u5fc6\u914d\u7f6e\n    topk: 3                                 # \u68c0\u7d22\u8fd4\u56de\u7684top-k\u7ed3\u679c\u6570\n  kv_collection:                            # \u952e\u503c\u96c6\u5408\u914d\u7f6e\uff08\u53ef\u9009\uff09\n    bm25s: True                             # \u542f\u7528BM25\u641c\u7d22\n    topk: 3                                 # BM25\u68c0\u7d22\u7684top-k\u6570\u91cf\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>platform</code>: \u68c0\u7d22\u5668\u8fd0\u884c\u5e73\u53f0\uff0c\u53ef\u9009 <code>local</code> \u6216 <code>remote</code> - <code>ltm.topk</code>: \u957f\u671f\u8bb0\u5fc6\u68c0\u7d22\u8fd4\u56de\u7684\u7ed3\u679c\u6570\u91cf - <code>kv_collection.bm25s</code>: \u662f\u5426\u542f\u7528BM25\u641c\u7d22\u7b97\u6cd5 - <code>kv_collection.topk</code>: BM25\u641c\u7d22\u8fd4\u56de\u7684\u7ed3\u679c\u6570\u91cf</p>"},{"location":"kernel/config/config/#4-reranker","title":"4. Reranker \u914d\u7f6e","text":"<pre><code>reranker:\n  platform: \"local\"                        # \u91cd\u6392\u5e8f\u5e73\u53f0\n  model_name: \"BAAI/bge-reranker-v2-m3\"    # \u91cd\u6392\u5e8f\u6a21\u578b\u540d\u79f0\n  top_k: 3                                  # \u91cd\u6392\u5e8f\u540e\u4fdd\u7559\u7684\u7ed3\u679c\u6570\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>platform</code>: \u91cd\u6392\u5e8f\u5668\u8fd0\u884c\u5e73\u53f0 - <code>model_name</code>: \u4f7f\u7528\u7684\u91cd\u6392\u5e8f\u6a21\u578b\uff0c\u901a\u5e38\u4e3aBGE\u7cfb\u5217\u6a21\u578b - <code>top_k</code>: \u91cd\u6392\u5e8f\u540e\u4fdd\u7559\u7684\u6587\u6863\u6570\u91cf</p>"},{"location":"kernel/config/config/#5-refiner","title":"5. Refiner \u914d\u7f6e","text":"<pre><code>refiner:\n  platform: \"local\"                        # \u7cbe\u70bc\u5668\u5e73\u53f0\n  method: \"openai\"                          # API\u65b9\u6cd5\u7c7b\u578b\n  model_name: \"qwen-turbo-0919\"            # \u6a21\u578b\u540d\u79f0\n  base_url: \"https://dashscope.aliyuncs.com/compatible-mode/v1\"  # API\u57fa\u7840URL\n  api_key: \"\"                               # API\u5bc6\u94a5\n  seed: 42                                  # \u968f\u673a\u79cd\u5b50\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>platform</code>: \u7cbe\u70bc\u5668\u8fd0\u884c\u5e73\u53f0 - <code>method</code>: API\u8c03\u7528\u65b9\u6cd5\uff0c\u901a\u5e38\u4e3a <code>openai</code> - <code>model_name</code>: \u4f7f\u7528\u7684\u8bed\u8a00\u6a21\u578b\u540d\u79f0 - <code>base_url</code>: API\u670d\u52a1\u7684\u57fa\u7840URL - <code>api_key</code>: \u8bbf\u95eeAPI\u6240\u9700\u7684\u5bc6\u94a5 - <code>seed</code>: \u968f\u673a\u79cd\u5b50\uff0c\u7528\u4e8e\u4fdd\u8bc1\u7ed3\u679c\u7684\u53ef\u91cd\u73b0\u6027</p>"},{"location":"kernel/config/config/#6-generator","title":"6. Generator \u914d\u7f6e","text":"<p>\u751f\u6210\u5668\u652f\u6301\u591a\u79cd\u8fd0\u884c\u6a21\u5f0f\uff1a</p>"},{"location":"kernel/config/config/#local","title":"\u672c\u5730\u6a21\u5f0f (Local)","text":"<pre><code>generator:\n  local:\n    method: \"hf\"                            # \u4f7f\u7528HuggingFace\n    model_name: \"meta-llama/Llama-2-13b-chat-hf\"  # \u6a21\u578b\u540d\u79f0\n    seed: 42                                # \u968f\u673a\u79cd\u5b50\n</code></pre>"},{"location":"kernel/config/config/#vllm","title":"VLLM\u6a21\u5f0f","text":"<pre><code>generator:\n  vllm:\n    api_key: \"token-abc123\"                 # VLLM\u8bbf\u95ee\u4ee4\u724c\n    method: \"openai\"                        # API\u65b9\u6cd5\n    model_name: \"meta-llama/Llama-2-13b-chat-hf\"  # \u6a21\u578b\u540d\u79f0\n    base_url: \"http://localhost:8000/v1\"    # VLLM\u670d\u52a1URL\n    seed: 42                                # \u968f\u673a\u79cd\u5b50\n</code></pre>"},{"location":"kernel/config/config/#remote","title":"\u8fdc\u7a0b\u6a21\u5f0f (Remote)","text":"<pre><code>generator:\n  remote:\n    api_key: \"\"                             # \u8fdc\u7a0bAPI\u5bc6\u94a5\n    method: \"openai\"                        # API\u65b9\u6cd5\n    model_name: \"qwen-turbo-0919\"          # \u8fdc\u7a0b\u6a21\u578b\u540d\u79f0\n    base_url: \"https://dashscope.aliyuncs.com/compatible-mode/v1\"  # \u8fdc\u7a0bAPI URL\n    seed: 42                                # \u968f\u673a\u79cd\u5b50\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>method</code>: \u751f\u6210\u65b9\u6cd5\uff0c\u53ef\u9009 <code>hf</code>\uff08HuggingFace\uff09\u3001<code>openai</code>\uff08OpenAI API\uff09 - <code>model_name</code>: \u4f7f\u7528\u7684\u8bed\u8a00\u6a21\u578b\u540d\u79f0 - <code>base_url</code>: API\u670d\u52a1\u5730\u5740 - <code>api_key</code>: API\u8bbf\u95ee\u5bc6\u94a5 - <code>seed</code>: \u968f\u673a\u79cd\u5b50</p>"},{"location":"kernel/config/config/#7-chunk","title":"7. Chunk (\u5206\u5757\u914d\u7f6e)","text":"<pre><code>chunk:\n  chunk_size: 512                           # \u6587\u672c\u5757\u5927\u5c0f\n  overlap: 128                              # \u91cd\u53e0\u5b57\u7b26\u6570\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>chunk_size</code>: \u6587\u672c\u5206\u5757\u7684\u5927\u5c0f\uff08\u5b57\u7b26\u6570\uff09 - <code>overlap</code>: \u76f8\u90bb\u6587\u672c\u5757\u4e4b\u95f4\u7684\u91cd\u53e0\u5b57\u7b26\u6570</p>"},{"location":"kernel/config/config/#8-writer","title":"8. Writer (\u5199\u5165\u5668\u914d\u7f6e)","text":"<pre><code>writer:\n  platform: \"local\"                        # \u5199\u5165\u5e73\u53f0\n  stm: True                                 # \u542f\u7528\u77ed\u671f\u8bb0\u5fc6\n  ltm: False                                # \u7981\u7528\u957f\u671f\u8bb0\u5fc6\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>platform</code>: \u5199\u5165\u5668\u8fd0\u884c\u5e73\u53f0 - <code>stm</code>: \u662f\u5426\u542f\u7528\u77ed\u671f\u8bb0\u5fc6\u5b58\u50a8 - <code>ltm</code>: \u662f\u5426\u542f\u7528\u957f\u671f\u8bb0\u5fc6\u5b58\u50a8</p>"},{"location":"kernel/config/config/#9-sink","title":"9. Sink \u914d\u7f6e","text":"<pre><code>sink:\n  platform: \"local\"                        # \u8f93\u51fa\u5e73\u53f0\n  file_path: \"output.txt\"                   # \u8f93\u51fa\u6587\u4ef6\u8def\u5f84\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>platform</code>: \u8f93\u51fa\u5904\u7406\u5e73\u53f0 - <code>file_path</code>: \u7ed3\u679c\u8f93\u51fa\u6587\u4ef6\u7684\u8def\u5f84</p>"},{"location":"kernel/config/config/#10-prompter","title":"10. Prompter \u914d\u7f6e","text":"<pre><code>promptor:\n  platform: \"local\"                        # \u63d0\u793a\u5668\u5e73\u53f0\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>platform</code>: \u63d0\u793a\u5668\u8fd0\u884c\u5e73\u53f0</p>"},{"location":"kernel/config/config/#11-evaluate","title":"11. Evaluate \u914d\u7f6e","text":"<pre><code>evaluate:\n  platform: \"local\"                        # \u8bc4\u4f30\u5e73\u53f0\n</code></pre> <p>\u914d\u7f6e\u8bf4\u660e\uff1a - <code>platform</code>: \u8bc4\u4f30\u5668\u8fd0\u884c\u5e73\u53f0</p>"},{"location":"kernel/config/config/#multiagent_configyaml","title":"\u591a\u667a\u80fd\u4f53\u914d\u7f6e (multiagent_config.yaml)","text":""},{"location":"kernel/config/config/#question-bot","title":"Question Bot (\u95ee\u9898\u673a\u5668\u4eba)","text":"<pre><code>question_bot:\n  method: \"openai\"                          # API\u65b9\u6cd5\n  model_name: \"qwen-turbo\"                 # \u6a21\u578b\u540d\u79f0\n  api_key: \"sk-xxx\"                        # API\u5bc6\u94a5\n  base_url: \"https://dashscope.aliyuncs.com/compatible-mode/v1\"  # API URL\n\nquestion_bot_sink:\n  stage_directory: \"question_bot\"           # \u9636\u6bb5\u76ee\u5f55\n</code></pre>"},{"location":"kernel/config/config/#chief-bot","title":"Chief Bot (\u4e3b\u63a7\u673a\u5668\u4eba)","text":"<pre><code>chief_bot:\n  llm:\n    method: \"openai\"                        # LLM\u65b9\u6cd5\n    model_name: \"qwen-turbo\"               # \u6a21\u578b\u540d\u79f0\n    api_key: \"sk-xxx\"                      # API\u5bc6\u94a5\n    base_url: \"https://dashscope.aliyuncs.com/compatible-mode/v1\"  # API URL\n\nchief_bot_sink:\n  stage_directory: \"chief_bot\"              # \u9636\u6bb5\u76ee\u5f55\n</code></pre>"},{"location":"kernel/config/config/#searcher-bot","title":"Searcher Bot (\u641c\u7d22\u673a\u5668\u4eba)","text":"<pre><code>searcher_filter:\n  tools: [\"web_search\"]                     # \u53ef\u7528\u5de5\u5177\u5217\u8868\n\nsearcher_bot:\n  method: \"openai\"                          # API\u65b9\u6cd5\n  model_name: \"qwen-turbo\"                 # \u6a21\u578b\u540d\u79f0\n  api_key: \"sk-xxx\"                        # API\u5bc6\u94a5\n  base_url: \"https://dashscope.aliyuncs.com/compatible-mode/v1\"  # API URL\n\nsearcher_tool:\n  url: \"https://api.bochaai.com/v1/web-search\"  # \u641c\u7d22\u5de5\u5177API\n  api_key: \"sk-xxx\"                        # \u641c\u7d22\u5de5\u5177API\u5bc6\u94a5\n\nsearcher_tool_sink:\n  stage_directory: \"searcher_tool\"          # \u641c\u7d22\u5de5\u5177\u8f93\u51fa\u76ee\u5f55\n</code></pre>"},{"location":"kernel/config/config/#answer-bot","title":"Answer Bot (\u56de\u7b54\u673a\u5668\u4eba)","text":"<pre><code>answer_bot:\n  method: \"openai\"                          # API\u65b9\u6cd5\n  model_name: \"qwen-turbo\"                 # \u6a21\u578b\u540d\u79f0\n  api_key: \"sk-xxx\"                        # API\u5bc6\u94a5\n  base_url: \"https://dashscope.aliyuncs.com/compatible-mode/v1\"  # API URL\n</code></pre>"},{"location":"kernel/config/config/#_3","title":"\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528\u573a\u666f","text":""},{"location":"kernel/config/config/#1-configyaml","title":"1. \u57fa\u7840\u95ee\u7b54\u7cfb\u7edf (<code>config.yaml</code>)","text":"<ul> <li>\u9002\u7528\u4e8e\u7b80\u5355\u7684\u95ee\u7b54\u573a\u666f</li> <li>\u4f7f\u7528\u672c\u5730\u5e73\u53f0\u548c\u57fa\u7840\u7ec4\u4ef6</li> </ul>"},{"location":"kernel/config/config/#2-config_for_ingestyaml","title":"2. \u6570\u636e\u6444\u53d6 (<code>config_for_ingest.yaml</code>)","text":"<ul> <li>\u4e13\u95e8\u7528\u4e8e\u6570\u636e\u6444\u53d6\u548c\u9884\u5904\u7406</li> <li>\u914d\u7f6e\u6587\u672c\u5206\u5757\u548c\u5185\u5b58\u5199\u5165</li> </ul>"},{"location":"kernel/config/config/#3-config_for_qayaml","title":"3. \u95ee\u7b54\u7cfb\u7edf (<code>config_for_qa.yaml</code>)","text":"<ul> <li>\u5b8c\u6574\u7684\u95ee\u7b54\u6d41\u7a0b\u914d\u7f6e</li> <li>\u5305\u542b\u68c0\u7d22\u3001\u91cd\u6392\u5e8f\u3001\u7cbe\u70bc\u548c\u751f\u6210</li> </ul>"},{"location":"kernel/config/config/#4-bm25-config_bm25syaml","title":"4. BM25\u641c\u7d22 (<code>config_bm25s.yaml</code>)","text":"<ul> <li>\u542f\u7528BM25\u641c\u7d22\u7b97\u6cd5\u7684\u914d\u7f6e</li> <li>\u9002\u7528\u4e8e\u57fa\u4e8e\u5173\u952e\u8bcd\u7684\u68c0\u7d22\u573a\u666f</li> </ul>"},{"location":"kernel/config/config/#5-config_rayyaml","title":"5. \u5206\u5e03\u5f0f\u96c6\u7fa4 (<code>config_ray.yaml</code>)","text":"<ul> <li>\u4f7f\u7528Ray\u8fdb\u884c\u5206\u5e03\u5f0f\u5904\u7406</li> <li>\u9002\u7528\u4e8e\u5927\u89c4\u6a21\u6570\u636e\u5904\u7406</li> </ul>"},{"location":"kernel/config/config/#6-huggingface-config_hfyaml","title":"6. HuggingFace\u6a21\u578b (<code>config_hf.yaml</code>)","text":"<ul> <li>\u4e13\u95e8\u4f7f\u7528HuggingFace\u6a21\u578b\u7684\u914d\u7f6e</li> <li>\u9002\u7528\u4e8e\u672c\u5730\u6a21\u578b\u63a8\u7406</li> </ul>"},{"location":"kernel/config/config/#7-config_mixedyaml","title":"7. \u6df7\u5408\u6a21\u5f0f (<code>config_mixed.yaml</code>)","text":"<ul> <li>\u7ed3\u5408\u672c\u5730\u548c\u8fdc\u7a0b\u7ec4\u4ef6</li> <li>\u7075\u6d3b\u7684\u90e8\u7f72\u914d\u7f6e</li> </ul>"},{"location":"kernel/config/config/#8-config_evaluateyaml","title":"8. \u8bc4\u4f30\u6a21\u5f0f (<code>config_evaluate.yaml</code>)","text":"<ul> <li>\u4e13\u95e8\u7528\u4e8e\u6a21\u578b\u8bc4\u4f30</li> <li>\u914d\u7f6e\u8bc4\u4f30\u6570\u636e\u548c\u6307\u6807</li> </ul>"},{"location":"kernel/config/config/#9-multiagent_configyaml","title":"9. \u591a\u667a\u80fd\u4f53\u7cfb\u7edf (<code>multiagent_config.yaml</code>)","text":"<ul> <li>\u914d\u7f6e\u591a\u4e2a\u667a\u80fd\u4f53\u534f\u4f5c</li> <li>\u652f\u6301\u590d\u6742\u7684\u4efb\u52a1\u5206\u89e3\u548c\u534f\u4f5c</li> </ul>"},{"location":"kernel/config/config/#_4","title":"\u914d\u7f6e\u6700\u4f73\u5b9e\u8df5","text":"<ol> <li>API\u5bc6\u94a5\u7ba1\u7406: \u5efa\u8bae\u5c06API\u5bc6\u94a5\u5b58\u50a8\u5728\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u907f\u514d\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u786c\u7f16\u7801</li> <li>\u5e73\u53f0\u9009\u62e9: \u6839\u636e\u5b9e\u9645\u90e8\u7f72\u73af\u5883\u9009\u62e9\u5408\u9002\u7684\u5e73\u53f0\uff08local/remote\uff09</li> <li>\u8d44\u6e90\u914d\u7f6e: \u6839\u636e\u786c\u4ef6\u8d44\u6e90\u8c03\u6574\u6a21\u578b\u9009\u62e9\u548c\u53c2\u6570\u8bbe\u7f6e</li> <li>\u7248\u672c\u7ba1\u7406: \u4fdd\u6301\u914d\u7f6e\u6587\u4ef6\u7684\u7248\u672c\u53f7\u66f4\u65b0</li> <li>\u8def\u5f84\u914d\u7f6e: \u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u4ee5\u63d0\u9ad8\u914d\u7f6e\u7684\u53ef\u79fb\u690d\u6027</li> </ol>"},{"location":"kernel/config/config/#_5","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u6240\u6709API\u5bc6\u94a5\u5e94\u59a5\u5584\u4fdd\u7ba1\uff0c\u4e0d\u8981\u63d0\u4ea4\u5230\u7248\u672c\u63a7\u5236\u7cfb\u7edf</li> <li>\u6a21\u578b\u540d\u79f0\u9700\u8981\u4e0e\u5b9e\u9645\u53ef\u7528\u7684\u6a21\u578b\u5339\u914d</li> <li>\u6587\u4ef6\u8def\u5f84\u9700\u8981\u786e\u4fdd\u5b58\u5728\u4e14\u6709\u76f8\u5e94\u7684\u8bfb\u5199\u6743\u9650</li> <li>\u8fdc\u7a0bAPI\u7684base_url\u9700\u8981\u7f51\u7edc\u53ef\u8bbf\u95ee</li> <li>seed\u53c2\u6570\u7528\u4e8e\u4fdd\u8bc1\u7ed3\u679c\u7684\u53ef\u91cd\u73b0\u6027\uff0c\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u56fa\u5b9a\u8bbe\u7f6e</li> </ul>"},{"location":"kernel/core/core_overview/","title":"SAGE Core \u5c42\u6982\u89c8","text":"<p>SAGE Core \u5c42\u662f\u6574\u4e2aSAGE\u6846\u67b6\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u6570\u636e\u6d41\u5904\u7406\u548c\u6d41\u6c34\u7ebf\u7f16\u6392\u529f\u80fd\u3002\u5b83\u91c7\u7528\u5206\u5c42\u67b6\u6784\u8bbe\u8ba1\uff0c\u4ece\u9ad8\u7ea7API\u63a5\u53e3\u5230\u5e95\u5c42\u6267\u884c\u5f15\u64ce\uff0c\u4e3a\u5927\u89c4\u6a21\u8bed\u8a00\u6a21\u578b\u63a8\u7406\u63d0\u4f9b\u4e86\u9ad8\u6548\u3001\u53ef\u6269\u5c55\u7684\u6570\u636e\u6d41\u8ba1\u7b97\u80fd\u529b\u3002</p>"},{"location":"kernel/core/core_overview/#_1","title":"\ud83c\udfd7\ufe0f \u67b6\u6784\u603b\u89c8","text":"<p>SAGE Core \u5c42\u91c7\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u5206\u5c42\u67b6\u6784\uff1a</p> <pre><code>graph TB\n    subgraph \"\u7528\u6237\u5c42\"\n        A[\u7528\u6237\u5e94\u7528\u7a0b\u5e8f]\n    end\n\n    subgraph \"API \u5c42\"\n        B[Environment API]\n        C[DataStream API]\n        D[Connected Streams API]\n        E[Functions API]\n    end\n\n    subgraph \"\u8f6c\u6362\u5c42\"\n        F[Transformation System]\n        G[Compiler &amp; Optimizer]\n        H[Graph Builder]\n    end\n\n    subgraph \"\u6267\u884c\u5c42\"\n        I[Operator System]\n        J[Function System]\n        K[Pipeline Engine]\n    end\n\n    subgraph \"\u8fd0\u884c\u65f6\u5c42\"\n        L[Local Runtime]\n        M[Remote Runtime]\n        N[Distributed Scheduler]\n        O[State Manager]\n    end\n\n    A --&gt; B\n    A --&gt; C\n    A --&gt; D\n    A --&gt; E\n\n    B --&gt; F\n    C --&gt; F\n    D --&gt; F\n    E --&gt; F\n\n    F --&gt; G\n    G --&gt; H\n\n    H --&gt; I\n    H --&gt; J\n    H --&gt; K\n\n    I --&gt; L\n    J --&gt; L\n    K --&gt; L\n\n    L --&gt; M\n    L --&gt; N\n    L --&gt; O</code></pre>"},{"location":"kernel/core/core_overview/#_2","title":"\ud83d\udccb \u6838\u5fc3\u7279\u6027","text":""},{"location":"kernel/core/core_overview/#_3","title":"\ud83d\udd04 \u6570\u636e\u6d41\u7f16\u7a0b\u6a21\u578b","text":"<p>SAGE Core \u63d0\u4f9b\u4e86\u58f0\u660e\u5f0f\u7684\u6570\u636e\u6d41\u7f16\u7a0b\u6a21\u578b\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u94fe\u5f0fAPI\u6784\u5efa\u590d\u6742\u7684\u6570\u636e\u5904\u7406\u6d41\u6c34\u7ebf\uff1a</p> <pre><code># \u793a\u4f8b\uff1a\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u6d41\u6c34\u7ebf\nenv = LocalEnvironment()\nresult = (env\n    .from_source(FileSource, \"input.txt\")\n    .map(text_processor)\n    .filter(lambda x: len(x) &gt; 10)\n    .map(llm_generator)\n    .sink(output_sink)\n)\n</code></pre>"},{"location":"kernel/core/core_overview/#_4","title":"\u26a1 \u5f02\u6b65\u6267\u884c\u5f15\u64ce","text":"<ul> <li>\u975e\u963b\u585e\u6267\u884c: \u6570\u636e\u9a71\u52a8\u7684\u5f02\u6b65\u6267\u884c\u6a21\u5f0f</li> <li>\u4e8b\u4ef6\u9a71\u52a8\u8c03\u5ea6: \u57fa\u4e8e\u6570\u636e\u53ef\u7528\u6027\u7684\u667a\u80fd\u8c03\u5ea6</li> <li>\u80cc\u538b\u63a7\u5236: \u81ea\u52a8\u5904\u7406\u4e0a\u4e0b\u6e38\u5904\u7406\u901f\u5ea6\u5dee\u5f02</li> <li>\u5bb9\u9519\u673a\u5236: \u5185\u7f6e\u7684\u9519\u8bef\u5904\u7406\u548c\u6062\u590d\u7b56\u7565</li> </ul>"},{"location":"kernel/core/core_overview/#_5","title":"\ud83e\udde9 \u6a21\u5757\u5316\u7ec4\u4ef6\u7cfb\u7edf","text":"<ul> <li>\u7b97\u5b50\u7cfb\u7edf: \u53ef\u63d2\u62d4\u7684\u6570\u636e\u5904\u7406\u7b97\u5b50</li> <li>\u51fd\u6570\u7cfb\u7edf: \u7528\u6237\u81ea\u5b9a\u4e49\u903b\u8f91\u7684\u8f7d\u4f53</li> <li>\u8f6c\u6362\u7cfb\u7edf: \u7f16\u8bd1\u65f6\u4f18\u5316\u548c\u56fe\u8f6c\u6362</li> <li>\u6d41\u6c34\u7ebf\u5f15\u64ce: \u7edf\u4e00\u7684\u6267\u884c\u5f15\u64ce</li> </ul>"},{"location":"kernel/core/core_overview/#_6","title":"\ud83c\udf10 \u591a\u73af\u5883\u652f\u6301","text":"<ul> <li>\u672c\u5730\u73af\u5883: \u5355\u673a\u591a\u7ebf\u7a0b\u6267\u884c</li> <li>\u8fdc\u7a0b\u73af\u5883: \u5206\u5e03\u5f0f\u96c6\u7fa4\u6267\u884c</li> <li>\u6df7\u5408\u73af\u5883: \u672c\u5730+\u8fdc\u7a0b\u7684\u6df7\u5408\u90e8\u7f72</li> <li>\u5f39\u6027\u6269\u5c55: \u52a8\u6001\u8d44\u6e90\u5206\u914d\u548c\u6269\u7f29\u5bb9</li> </ul>"},{"location":"kernel/core/core_overview/#_7","title":"\ud83d\udd27 \u6838\u5fc3\u6a21\u5757","text":""},{"location":"kernel/core/core_overview/#api-api","title":"API \u6a21\u5757 (<code>api/</code>)","text":"<p>\u63d0\u4f9b\u7528\u6237\u53cb\u597d\u7684\u7f16\u7a0b\u63a5\u53e3\uff1a</p> <ul> <li>Environment API: \u6267\u884c\u73af\u5883\u7ba1\u7406</li> <li>DataStream API: \u6570\u636e\u6d41\u64cd\u4f5c\u63a5\u53e3</li> <li>Connected Streams API: \u591a\u6d41\u8fde\u63a5\u548c\u534f\u540c\u5904\u7406</li> <li>Functions API: \u81ea\u5b9a\u4e49\u51fd\u6570\u6ce8\u518c\u548c\u7ba1\u7406</li> </ul>"},{"location":"kernel/core/core_overview/#operator-operator","title":"Operator \u6a21\u5757 (<code>operator/</code>)","text":"<p>\u8fd0\u884c\u65f6\u6267\u884c\u7ec4\u4ef6\uff1a</p> <ul> <li>Source Operators: \u6570\u636e\u6e90\u7b97\u5b50 (Kafka, File, etc.)</li> <li>Transformation Operators: \u8f6c\u6362\u7b97\u5b50 (Map, Filter, Join, etc.)</li> <li>Sink Operators: \u6570\u636e\u8f93\u51fa\u7b97\u5b50</li> <li>Control Operators: \u6d41\u7a0b\u63a7\u5236\u7b97\u5b50 (Split, Route, etc.)</li> </ul>"},{"location":"kernel/core/core_overview/#function-function","title":"Function \u6a21\u5757 (<code>function/</code>)","text":"<p>\u7528\u6237\u903b\u8f91\u7684\u5b9e\u73b0\u8f7d\u4f53\uff1a</p> <ul> <li>Base Function: \u51fd\u6570\u62bd\u8c61\u57fa\u7c7b</li> <li>Lambda Function: Lambda \u8868\u8fbe\u5f0f\u5305\u88c5</li> <li>User Function: \u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570</li> <li>System Function: \u7cfb\u7edf\u5185\u7f6e\u51fd\u6570</li> </ul>"},{"location":"kernel/core/core_overview/#transformation-transformation","title":"Transformation \u6a21\u5757 (<code>transformation/</code>)","text":"<p>\u7f16\u8bd1\u65f6\u5904\u7406\u7ec4\u4ef6\uff1a</p> <ul> <li>Graph Builder: \u6784\u5efa\u6267\u884c\u56fe</li> <li>Optimizer: \u56fe\u4f18\u5316\u5668</li> <li>Scheduler: \u4efb\u52a1\u8c03\u5ea6\u5668</li> <li>Type Checker: \u7c7b\u578b\u68c0\u67e5\u5668</li> </ul>"},{"location":"kernel/core/core_overview/#_8","title":"\ud83c\udfaf \u5e94\u7528\u573a\u666f","text":""},{"location":"kernel/core/core_overview/#rag","title":"RAG \u7cfb\u7edf","text":"<pre><code># RAG \u6d41\u6c34\u7ebf\u793a\u4f8b\nrag_pipeline = (env\n    .from_source(QuerySource)\n    .map(EmbeddingGenerator)\n    .map(VectorRetriever) \n    .map(ContextAggregator)\n    .map(LLMGenerator)\n    .sink(ResponseSink)\n)\n</code></pre>"},{"location":"kernel/core/core_overview/#_9","title":"\u667a\u80fd\u4ee3\u7406","text":"<pre><code># \u667a\u80fd\u4ee3\u7406\u6d41\u6c34\u7ebf\nagent_pipeline = (env\n    .from_source(MessageSource)\n    .map(IntentClassifier)\n    .route(intent_router)  # \u6839\u636e\u610f\u56fe\u8def\u7531\n    .map(ActionExecutor)\n    .map(ResponseGenerator)\n    .sink(MessageSink)\n)\n</code></pre>"},{"location":"kernel/core/core_overview/#_10","title":"\u6d41\u5f0f\u6570\u636e\u5904\u7406","text":"<pre><code># \u6d41\u5f0f\u5904\u7406\u6d41\u6c34\u7ebf\nstreaming_pipeline = (env\n    .from_stream(KafkaSource)\n    .window(time_window=60)  # 60\u79d2\u65f6\u95f4\u7a97\u53e3\n    .map(BatchProcessor)\n    .keyBy(user_id)\n    .map(UserStateUpdater)\n    .sink(DatabaseSink)\n)\n</code></pre>"},{"location":"kernel/core/core_overview/#_11","title":"\ud83d\ude80 \u6027\u80fd\u7279\u70b9","text":""},{"location":"kernel/core/core_overview/#_12","title":"\u9ad8\u541e\u5410\u91cf","text":"<ul> <li>\u6279\u5904\u7406\u4f18\u5316: \u81ea\u52a8\u6279\u91cf\u5904\u7406\u63d0\u5347\u541e\u5410\u91cf</li> <li>\u5e76\u884c\u6267\u884c: \u667a\u80fd\u5e76\u884c\u5ea6\u63a8\u5bfc\u548c\u6267\u884c</li> <li>\u5185\u5b58\u7ba1\u7406: \u9ad8\u6548\u7684\u5185\u5b58\u6c60\u548c\u7f13\u5b58\u673a\u5236</li> </ul>"},{"location":"kernel/core/core_overview/#_13","title":"\u4f4e\u5ef6\u8fdf","text":"<ul> <li>\u6d41\u6c34\u7ebf\u5e76\u884c: \u7b97\u5b50\u95f4\u7684\u6d41\u6c34\u7ebf\u5e76\u884c\u6267\u884c</li> <li>\u5f02\u6b65I/O: \u975e\u963b\u585eI/O\u64cd\u4f5c</li> <li>\u96f6\u62f7\u8d1d: \u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u6570\u636e\u62f7\u8d1d</li> </ul>"},{"location":"kernel/core/core_overview/#_14","title":"\u53ef\u6269\u5c55\u6027","text":"<ul> <li>\u6c34\u5e73\u6269\u5c55: \u652f\u6301\u52a8\u6001\u589e\u51cf\u8ba1\u7b97\u8282\u70b9</li> <li>\u5f39\u6027\u8c03\u5ea6: \u6839\u636e\u8d1f\u8f7d\u81ea\u52a8\u8c03\u6574\u8d44\u6e90</li> <li>\u72b6\u6001\u5206\u7247: \u5927\u72b6\u6001\u7684\u81ea\u52a8\u5206\u7247\u548c\u7ba1\u7406</li> </ul>"},{"location":"kernel/core/core_overview/#_15","title":"\ud83d\udee0\ufe0f \u5f00\u53d1\u5de5\u5177","text":""},{"location":"kernel/core/core_overview/#_16","title":"\u53ef\u89c6\u5316\u8c03\u8bd5","text":"<ul> <li>\u6267\u884c\u56fe\u53ef\u89c6\u5316: \u5b9e\u65f6\u67e5\u770b\u6d41\u6c34\u7ebf\u6267\u884c\u72b6\u6001</li> <li>\u6027\u80fd\u76d1\u63a7: \u7b97\u5b50\u7ea7\u522b\u7684\u6027\u80fd\u6307\u6807</li> <li>\u6570\u636e\u6d41\u8ffd\u8e2a: \u7aef\u5230\u7aef\u7684\u6570\u636e\u6d41\u8ffd\u8e2a</li> </ul>"},{"location":"kernel/core/core_overview/#_17","title":"\u5f00\u53d1\u652f\u6301","text":"<ul> <li>\u7c7b\u578b\u68c0\u67e5: \u7f16\u8bd1\u65f6\u7c7b\u578b\u5b89\u5168\u68c0\u67e5</li> <li>\u5355\u5143\u6d4b\u8bd5: \u5b8c\u5584\u7684\u6d4b\u8bd5\u6846\u67b6</li> <li>\u672c\u5730\u8c03\u8bd5: \u672c\u5730\u73af\u5883\u7684\u5feb\u901f\u8c03\u8bd5</li> </ul>"},{"location":"kernel/core/core_overview/#_18","title":"\u8fd0\u7ef4\u76d1\u63a7","text":"<ul> <li>\u6307\u6807\u6536\u96c6: \u4e30\u5bcc\u7684\u8fd0\u884c\u65f6\u6307\u6807</li> <li>\u65e5\u5fd7\u805a\u5408: \u7ed3\u6784\u5316\u65e5\u5fd7\u6536\u96c6</li> <li>\u544a\u8b66\u673a\u5236: \u5f02\u5e38\u60c5\u51b5\u7684\u53ca\u65f6\u544a\u8b66</li> </ul>"},{"location":"kernel/core/core_overview/#_19","title":"\ud83d\udcd6 \u5b66\u4e60\u8def\u5f84","text":""},{"location":"kernel/core/core_overview/#_20","title":"\u521d\u5b66\u8005","text":"<ol> <li>\u5feb\u901f\u5165\u95e8 - 5\u5206\u949f\u4e0a\u624bSAGE Core</li> <li>\u6838\u5fc3\u6982\u5ff5 - \u7406\u89e3\u57fa\u672c\u6982\u5ff5</li> <li>\u57fa\u7840\u6559\u7a0b - \u8ddf\u968f\u6559\u7a0b\u5b66\u4e60</li> </ol>"},{"location":"kernel/core/core_overview/#_21","title":"\u8fdb\u9636\u5f00\u53d1\u8005","text":"<ol> <li> \u6570\u636e\u6d41\u5f00\u53d1\u6307\u5357 - \u6df1\u5165\u7406\u89e3\u6570\u636e\u6d41\u7f16\u7a0b</li> <li> \u81ea\u5b9a\u4e49\u7b97\u5b50\u5f00\u53d1 - \u6269\u5c55\u7cfb\u7edf\u529f\u80fd</li> <li> \u6027\u80fd\u8c03\u4f18 - \u4f18\u5316\u7cfb\u7edf\u6027\u80fd</li> </ol>"},{"location":"kernel/core/core_overview/#_22","title":"\u7cfb\u7edf\u7ba1\u7406\u5458","text":"<ol> <li>\u7cfb\u7edf\u914d\u7f6e - \u914d\u7f6e\u751f\u4ea7\u73af\u5883</li> <li> \u76d1\u63a7\u914d\u7f6e - \u8bbe\u7f6e\u76d1\u63a7\u544a\u8b66</li> <li> \u6545\u969c\u6392\u9664 - \u89e3\u51b3\u5e38\u89c1\u95ee\u9898</li> </ol> <p>\u4e0b\u4e00\u6b65: \u4e86\u89e3 \u6570\u636e\u6d41\u7f16\u7a0b\u6a21\u578b \u7684\u8be6\u7ec6\u8bbe\u8ba1\u548c\u4f7f\u7528\u65b9\u6cd5\u3002</p>"},{"location":"kernel/core/dataflow_model/","title":"\u6570\u636e\u6d41\u7f16\u7a0b\u6a21\u578b","text":"<p>SAGE Core \u91c7\u7528\u6570\u636e\u6d41\u7f16\u7a0b\u6a21\u578b\uff0c\u5c06\u8ba1\u7b97\u903b\u8f91\u8868\u793a\u4e3a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\uff0c\u5176\u4e2d\u8282\u70b9\u4ee3\u8868\u8ba1\u7b97\u64cd\u4f5c\uff0c\u8fb9\u4ee3\u8868\u6570\u636e\u6d41\u52a8\u3002\u8fd9\u79cd\u6a21\u578b\u7279\u522b\u9002\u5408\u5927\u8bed\u8a00\u6a21\u578b\u63a8\u7406\u573a\u666f\uff0c\u80fd\u591f\u6709\u6548\u5904\u7406\u590d\u6742\u7684\u6570\u636e\u4f9d\u8d56\u548c\u5f02\u6b65\u6267\u884c\u9700\u6c42\u3002</p>"},{"location":"kernel/core/dataflow_model/#_2","title":"\ud83c\udfaf \u6838\u5fc3\u7406\u5ff5","text":""},{"location":"kernel/core/dataflow_model/#_3","title":"\u58f0\u660e\u5f0f\u7f16\u7a0b","text":"<p>\u7528\u6237\u4e13\u6ce8\u4e8e\u63cf\u8ff0**\u8981\u505a\u4ec0\u4e48**\uff0c\u800c\u4e0d\u662f**\u600e\u4e48\u505a**\uff1a</p> <pre><code># \u58f0\u660e\u5f0f\uff1a\u63cf\u8ff0\u6570\u636e\u5904\u7406\u903b\u8f91\nresult = (env\n    .from_source(input_source)\n    .map(preprocess)      # \u9884\u5904\u7406\n    .map(embedding)       # \u5411\u91cf\u5316\n    .map(retrieval)       # \u68c0\u7d22\n    .map(generation)      # \u751f\u6210\n    .sink(output_sink)    # \u8f93\u51fa\n)\n\n# \u547d\u4ee4\u5f0f\uff1a\u63cf\u8ff0\u6267\u884c\u6b65\u9aa4\ndata = read_from_source(input_source)\nfor item in data:\n    processed = preprocess(item)\n    embedded = embedding(processed)\n    retrieved = retrieval(embedded)\n    generated = generation(retrieved)\n    write_to_sink(generated, output_sink)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_4","title":"\u6570\u636e\u9a71\u52a8\u6267\u884c","text":"<p>\u8ba1\u7b97\u7684\u89e6\u53d1\u5b8c\u5168\u7531\u6570\u636e\u53ef\u7528\u6027\u9a71\u52a8\uff0c\u800c\u975e\u7a0b\u5e8f\u63a7\u5236\u6d41\uff1a</p> <pre><code># \u6570\u636e\u5230\u8fbe\u89e6\u53d1\u8ba1\u7b97\nsource \u2192 map1 \u2192 filter \u2192 map2 \u2192 sink\n  \u2191       \u2191       \u2191       \u2191      \u2191\n \u6570\u636e    \u5904\u7406    \u8fc7\u6ee4    \u5904\u7406   \u8f93\u51fa\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_5","title":"\ud83d\udcca \u6570\u636e\u6d41\u56fe\u7ed3\u6784","text":""},{"location":"kernel/core/dataflow_model/#_6","title":"\u57fa\u672c\u7ec4\u4ef6","text":""},{"location":"kernel/core/dataflow_model/#operators","title":"\ud83d\udd04 \u7b97\u5b50 (Operators)","text":"<p>\u7b97\u5b50\u662f\u6570\u636e\u6d41\u56fe\u7684\u8282\u70b9\uff0c\u6267\u884c\u5177\u4f53\u7684\u8ba1\u7b97\u903b\u8f91\uff1a</p> <pre><code>class MapOperator(BaseOperator):\n    def __init__(self, func):\n        self.func = func\n\n    def process(self, input_data):\n        return self.func(input_data)\n\nclass FilterOperator(BaseOperator):\n    def __init__(self, predicate):\n        self.predicate = predicate\n\n    def process(self, input_data):\n        return input_data if self.predicate(input_data) else None\n</code></pre>"},{"location":"kernel/core/dataflow_model/#datastreams","title":"\ud83d\udd17 \u6570\u636e\u6d41 (DataStreams)","text":"<p>\u6570\u636e\u6d41\u662f\u7b97\u5b50\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u5b9a\u4e49\u6570\u636e\u4f20\u8f93\u8def\u5f84\uff1a</p> <pre><code>class DataStream:\n    def __init__(self, source_op, target_op):\n        self.source = source_op\n        self.target = target_op\n        self.buffer = Queue()  # \u7f13\u51b2\u533a\n\n    def send(self, data):\n        self.buffer.put(data)\n\n    def receive(self):\n        return self.buffer.get()\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_7","title":"\u56fe\u7c7b\u578b","text":""},{"location":"kernel/core/dataflow_model/#_8","title":"\u7ebf\u6027\u6d41\u6c34\u7ebf","text":"<p>\u6700\u7b80\u5355\u7684\u6570\u636e\u6d41\u6a21\u5f0f\uff0c\u6570\u636e\u6309\u987a\u5e8f\u6d41\u7ecf\u5404\u4e2a\u7b97\u5b50\uff1a</p> <pre><code>graph LR\n    A[Source] --&gt; B[Map] --&gt; C[Filter] --&gt; D[Sink]</code></pre> <pre><code># \u7ebf\u6027\u6d41\u6c34\u7ebf\u793a\u4f8b\npipeline = (env\n    .from_source(TextSource)\n    .map(tokenizer)           # \u5206\u8bcd\n    .map(embedding_model)     # \u5d4c\u5165\n    .filter(quality_filter)   # \u8d28\u91cf\u8fc7\u6ee4\n    .sink(vector_store)       # \u5b58\u50a8\n)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_9","title":"\u5206\u652f\u5408\u5e76\u6d41","text":"<p>\u652f\u6301\u6570\u636e\u6d41\u7684\u5206\u652f\u548c\u5408\u5e76\uff1a</p> <pre><code>graph LR\n    A[Source] --&gt; B[Split]\n    B --&gt; C[Branch 1]\n    B --&gt; D[Branch 2]\n    C --&gt; E[Merge]\n    D --&gt; E\n    E --&gt; F[Sink]</code></pre> <pre><code># \u5206\u652f\u5408\u5e76\u793a\u4f8b\nmain_stream = env.from_source(QuerySource)\n\n# \u5206\u652f1\uff1a\u68c0\u7d22\nretrieval_stream = main_stream.map(EmbeddingEncoder).map(VectorRetriever)\n\n# \u5206\u652f2\uff1a\u7f13\u5b58\u67e5\u8be2\ncache_stream = main_stream.map(CacheQuery)\n\n# \u4e24\u4e2a\u5206\u652f\u53ef\u4ee5\u5206\u522b\u5904\u7406\u5e76\u8f93\u51fa\u5230\u4e0d\u540c\u7684sink\nretrieval_stream.map(ResponseGenerator).sink(ResponseSink)\ncache_stream.sink(CacheSink)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_10","title":"\u8fde\u63a5\u6d41","text":"<p>\u591a\u4e2a\u6570\u636e\u6d41\u7684\u534f\u540c\u5904\u7406\uff1a</p> <pre><code>graph LR\n    A[Stream 1] --&gt; C[Connect]\n    B[Stream 2] --&gt; C\n    C --&gt; D[CoMap] --&gt; E[Sink]</code></pre> <pre><code># \u8fde\u63a5\u6d41\u793a\u4f8b\nquery_stream = env.from_source(QuerySource)\ncontext_stream = env.from_source(ContextSource)\n\n# \u8fde\u63a5\u4e24\u4e2a\u6d41\u8fdb\u884c\u534f\u540c\u5904\u7406\nconnected = query_stream.connect(context_stream)\nresult = connected.comap(rag_processor).sink(ResponseSink)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#api","title":"\ud83d\udd27 API \u8bbe\u8ba1\u539f\u5219","text":""},{"location":"kernel/core/dataflow_model/#_11","title":"\u94fe\u5f0f\u8c03\u7528","text":"<p>\u652f\u6301\u65b9\u6cd5\u94fe\u5f0f\u8c03\u7528\uff0c\u63d0\u5347\u4ee3\u7801\u53ef\u8bfb\u6027\uff1a</p> <pre><code># \u826f\u597d\u7684\u94fe\u5f0f\u8bbe\u8ba1\nresult = (stream\n    .map(func1)\n    .filter(pred1)\n    .map(func2)\n    .keyby(key_selector)\n    .map(aggregator)\n    .sink(output)\n)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_12","title":"\u7c7b\u578b\u5b89\u5168","text":"<p>\u57fa\u4e8ePython\u7c7b\u578b\u63d0\u793a\u63d0\u4f9b\u7f16\u8bd1\u65f6\u7c7b\u578b\u68c0\u67e5\uff1a</p> <pre><code>from typing import TypeVar, Generic\n\nT = TypeVar('T')\nU = TypeVar('U')\n\nclass DataStream(Generic[T]):\n    def map(self, func: Callable[[T], U]) -&gt; 'DataStream[U]':\n        return DataStream[U](MapOperator(func))\n\n    def filter(self, predicate: Callable[[T], bool]) -&gt; 'DataStream[T]':\n        return DataStream[T](FilterOperator(predicate))\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_13","title":"\u5ef6\u8fdf\u6267\u884c","text":"<p>\u6784\u5efa\u9636\u6bb5\u53ea\u5b9a\u4e49\u8ba1\u7b97\u56fe\uff0c\u6267\u884c\u9636\u6bb5\u624d\u5f00\u59cb\u8ba1\u7b97\uff1a</p> <pre><code># \u6784\u5efa\u9636\u6bb5\uff1a\u5b9a\u4e49\u8ba1\u7b97\u56fe\npipeline = (env\n    .from_source(source)\n    .map(processor)\n    .sink(output)\n)  # \u6b64\u65f6\u8fd8\u6ca1\u6709\u6267\u884c\u4efb\u4f55\u8ba1\u7b97\n\n# \u6267\u884c\u9636\u6bb5\uff1a\u542f\u52a8\u8ba1\u7b97\nenv.submit()  # \u5f00\u59cb\u6267\u884c\u6d41\u6c34\u7ebf\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_14","title":"\ud83c\udfc3 \u6267\u884c\u6a21\u578b","text":""},{"location":"kernel/core/dataflow_model/#_15","title":"\u5f02\u6b65\u6267\u884c","text":"<p>\u7b97\u5b50\u4e4b\u95f4\u5f02\u6b65\u6267\u884c\uff0c\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff1a</p> <pre><code>class AsyncOperator:\n    async def process(self, data):\n        result = await self.async_operation(data)\n        return result\n\n    async def run(self):\n        while True:\n            data = await self.input_queue.get()\n            result = await self.process(data)\n            await self.output_queue.put(result)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_16","title":"\u80cc\u538b\u5904\u7406","text":"<p>\u81ea\u52a8\u5904\u7406\u4e0a\u4e0b\u6e38\u5904\u7406\u901f\u5ea6\u5dee\u5f02\uff1a</p> <pre><code>class BackpressureQueue:\n    def __init__(self, max_size=1000):\n        self.queue = asyncio.Queue(maxsize=max_size)\n\n    async def put(self, item):\n        if self.queue.full():\n            # \u80cc\u538b\u4fe1\u53f7\uff1a\u901a\u77e5\u4e0a\u6e38\u51cf\u7f13\u53d1\u9001\n            await self.notify_backpressure()\n        await self.queue.put(item)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_17","title":"\u72b6\u6001\u7ba1\u7406","text":"<p>\u7b97\u5b50\u53ef\u4ee5\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u5185\u90e8\u72b6\u6001\uff1a</p> <pre><code>import time\nfrom sage.core.api.function.base_function import BaseFunction\n\nclass CounterFunction(BaseFunction):\n    def __init__(self):\n        super().__init__()\n        self.counter = 0  # \u5185\u90e8\u72b6\u6001\n\n    def process(self, data):\n        self.counter += 1\n        return {\n            'data': data,\n            'count': self.counter,\n            'timestamp': time.time()\n        }\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_18","title":"\ud83c\udfa8 \u5e38\u7528\u6a21\u5f0f","text":""},{"location":"kernel/core/dataflow_model/#map","title":"Map \u6a21\u5f0f","text":"<p>\u4e00\u5bf9\u4e00\u7684\u6570\u636e\u8f6c\u6362\uff1a</p> <pre><code># \u6587\u672c\u9884\u5904\u7406\ntext_stream = (env\n    .from_source(TextSource)\n    .map(lambda x: x.lower())          # \u8f6c\u5c0f\u5199\n    .map(lambda x: x.strip())          # \u53bb\u7a7a\u683c\n    .map(tokenize)                     # \u5206\u8bcd\n)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#filter","title":"Filter \u6a21\u5f0f","text":"<p>\u6570\u636e\u8fc7\u6ee4\uff1a</p> <pre><code># \u8d28\u91cf\u8fc7\u6ee4\nquality_stream = (env\n    .from_source(DataSource)\n    .filter(lambda x: len(x.text) &gt; 10)     # \u957f\u5ea6\u8fc7\u6ee4\n    .filter(lambda x: x.score &gt; 0.8)        # \u5206\u6570\u8fc7\u6ee4\n    .filter(is_valid_format)                 # \u683c\u5f0f\u8fc7\u6ee4\n)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#flatmap","title":"FlatMap \u6a21\u5f0f","text":"<p>\u4e00\u5bf9\u591a\u7684\u6570\u636e\u8f6c\u6362\uff1a</p> <pre><code># \u6587\u6863\u5206\u5757\nchunk_stream = (env\n    .from_source(DocumentSource)\n    .flatmap(lambda doc: split_into_chunks(doc))  # \u5206\u5757\n    .map(create_embedding)                         # \u5411\u91cf\u5316\n)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#keyby","title":"KeyBy \u6a21\u5f0f","text":"<p>\u6309\u952e\u5206\u7ec4\u6570\u636e\uff1a</p> <pre><code># \u7528\u6237\u4e8b\u4ef6\u5206\u7ec4\ngrouped_stream = (env\n    .from_source(EventSource)\n    .keyby(lambda event: event.user_id)     # \u6309\u7528\u6237\u5206\u7ec4\n    .map(user_event_processor)              # \u5904\u7406\u7528\u6237\u4e8b\u4ef6\n)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#connect","title":"Connect \u6a21\u5f0f","text":"<p>\u591a\u6d41\u8fde\u63a5\uff1a</p> <pre><code># \u7528\u6237\u67e5\u8be2\u4e0e\u4e0a\u4e0b\u6587\u8fde\u63a5\nconnected_stream = query_stream.connect(context_stream)\nresult = connected_stream.comap(merge_query_context)    # \u5408\u5e76\u903b\u8f91\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_19","title":"\u26a1 \u6027\u80fd\u4f18\u5316","text":""},{"location":"kernel/core/dataflow_model/#_20","title":"\u6267\u884c\u56fe\u4f18\u5316","text":"<p>SAGE Core\u5728\u6267\u884c\u524d\u4f1a\u5bf9\u6570\u636e\u6d41\u56fe\u8fdb\u884c\u4f18\u5316\uff1a</p> <pre><code># \u94fe\u5f0fmap\u64cd\u4f5c\u4f1a\u88ab\u81ea\u52a8\u4f18\u5316\nstream.map(func1).map(func2).map(func3)\n\n# \u7f16\u8bd1\u5668\u4f1a\u5206\u6790\u5e76\u4f18\u5316\u6267\u884c\u8ba1\u5212\nenv.submit()  # \u4f18\u5316\u5728\u63d0\u4ea4\u65f6\u81ea\u52a8\u8fdb\u884c\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_21","title":"\u5e76\u884c\u6267\u884c","text":"<p>\u652f\u6301\u7b97\u5b50\u5e76\u884c\u6267\u884c\uff1a</p> <pre><code># \u901a\u8fc7\u73af\u5883\u914d\u7f6e\u5e76\u884c\u5ea6\nenv.config['parallelism'] = 4  # \u8bbe\u7f6e\u5168\u5c40\u5e76\u884c\u5ea6\nstream.map(expensive_operation)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_22","title":"\u6570\u636e\u5904\u7406","text":"<p>SAGE Core\u63d0\u4f9b\u4e86\u57fa\u7840\u7684\u6279\u91cf\u5904\u7406\u80fd\u529b\uff1a</p> <pre><code># \u6279\u91cf\u6570\u636e\u5904\u7406\nstream.map(operation_function)\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_23","title":"\ud83d\udee0\ufe0f \u8c03\u8bd5\u4e0e\u76d1\u63a7","text":""},{"location":"kernel/core/dataflow_model/#_24","title":"\u65e5\u5fd7\u8bb0\u5f55","text":"<p>SAGE Core\u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u65e5\u5fd7\u8bb0\u5f55\u529f\u80fd\uff1a</p> <pre><code># \u901a\u8fc7print\u65b9\u6cd5\u67e5\u770b\u6570\u636e\u6d41\nstream.map(processor).print(\"\u8c03\u8bd5\u8f93\u51fa\").sink(output)\n\n# \u8bbe\u7f6e\u65e5\u5fd7\u7b49\u7ea7\nenv.set_console_log_level(\"DEBUG\")\n</code></pre>"},{"location":"kernel/core/dataflow_model/#_25","title":"\ud83d\udccb \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"kernel/core/dataflow_model/#1","title":"1. \u51fd\u6570\u8bbe\u8ba1","text":"<ul> <li>\u4fdd\u6301\u51fd\u6570\u7eaf\u51c0\u6027\uff0c\u907f\u514d\u526f\u4f5c\u7528</li> <li>\u4f18\u5148\u4f7f\u7528\u4e0d\u53ef\u53d8\u6570\u636e\u7ed3\u6784</li> <li>\u5408\u7406\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4</li> </ul> <pre><code># \u826f\u597d\u7684\u51fd\u6570\u8bbe\u8ba1\ndef process_text(text: str) -&gt; ProcessedText:\n    # \u7eaf\u51fd\u6570\uff0c\u65e0\u526f\u4f5c\u7528\n    return ProcessedText(\n        content=text.strip().lower(),\n        word_count=len(text.split()),\n        timestamp=datetime.now()\n    )\n</code></pre>"},{"location":"kernel/core/dataflow_model/#2","title":"2. \u9519\u8bef\u5904\u7406","text":"<ul> <li>\u4f7f\u7528try-catch\u5305\u88c5\u53ef\u80fd\u5931\u8d25\u7684\u64cd\u4f5c</li> <li>\u8bbe\u7f6e\u5408\u7406\u7684\u91cd\u8bd5\u7b56\u7565</li> <li>\u63d0\u4f9b\u56de\u9000\u673a\u5236</li> </ul> <pre><code>def robust_processor(data):\n    try:\n        return expensive_operation(data)\n    except ProcessingError as e:\n        # \u8bb0\u5f55\u9519\u8bef\n        logger.error(f\"Processing failed: {e}\")\n        # \u8fd4\u56de\u9ed8\u8ba4\u503c\u6216None\n        return None\n</code></pre>"},{"location":"kernel/core/dataflow_model/#3","title":"3. \u8d44\u6e90\u7ba1\u7406","text":"<ul> <li>\u5408\u7406\u8bbe\u7f6e\u73af\u5883\u914d\u7f6e</li> <li>\u53ca\u65f6\u91ca\u653e\u4e0d\u518d\u9700\u8981\u7684\u8d44\u6e90</li> <li>\u901a\u8fc7\u73af\u5883\u914d\u7f6e\u7ba1\u7406\u5916\u90e8\u8fde\u63a5</li> </ul> <pre><code># \u73af\u5883\u914d\u7f6e\nenv.config.update({\n    'buffer_size': 1000,\n    'timeout': 5000,\n    'max_memory': \"2GB\"\n})\n</code></pre> <p>\u4e0b\u4e00\u6b65: \u4e86\u89e3  \u6d41\u6c34\u7ebf\u7f16\u6392\u7cfb\u7edf \u5982\u4f55\u7ba1\u7406\u590d\u6742\u7684\u6570\u636e\u6d41\u6267\u884c\u3002</p>"},{"location":"kernel/core/execution_environments/","title":"\u6267\u884c\u73af\u5883\u8be6\u89e3","text":"<p>SAGE Core\u652f\u6301\u591a\u79cd\u6267\u884c\u73af\u5883\uff0c\u4ece\u672c\u5730\u5f00\u53d1\u5230\u5206\u5e03\u5f0f\u90e8\u7f72\uff0c\u6bcf\u79cd\u73af\u5883\u90fd\u6709\u5176\u7279\u5b9a\u7684\u7279\u6027\u548c\u7528\u9014\u3002\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u5404\u79cd\u6267\u884c\u73af\u5883\u7684\u914d\u7f6e\u3001\u4f7f\u7528\u548c\u6700\u4f73\u5b9e\u8df5\u3002</p>"},{"location":"kernel/core/execution_environments/#_2","title":"\ud83c\udf1f \u73af\u5883\u6982\u8ff0","text":"<p>SAGE Core\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u6267\u884c\u73af\u5883\u62bd\u8c61\uff0c\u76ee\u524d\u652f\u6301\uff1a</p> <ul> <li>LocalEnvironment: \u672c\u5730\u5355\u673a\u6267\u884c\u73af\u5883</li> <li>RemoteEnvironment: \u8fdc\u7a0b\u5206\u5e03\u5f0f\u6267\u884c\u73af\u5883</li> </ul> <pre><code>graph TB\n    subgraph \"SAGE \u6267\u884c\u73af\u5883\u67b6\u6784\"\n        A[Application Code] --&gt; B[Environment API]\n        B --&gt; C{Environment Type}\n\n        C --&gt;|Local| D[LocalEnvironment]\n        C --&gt;|Remote| E[RemoteEnvironment]\n\n        D --&gt; F[Local JobManager]\n        E --&gt; G[Remote JobManager Client]\n\n        F --&gt; H[Task Execution]\n        G --&gt; I[Distributed Task Execution]\n    end</code></pre>"},{"location":"kernel/core/execution_environments/#localenvironment","title":"\ud83d\udd27 \u672c\u5730\u6267\u884c\u73af\u5883 (LocalEnvironment)","text":""},{"location":"kernel/core/execution_environments/#_3","title":"\u57fa\u672c\u4f7f\u7528","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\n\n# \u521b\u5efa\u672c\u5730\u73af\u5883\nenv = LocalEnvironment(\"my_local_app\")\n\n# \u914d\u7f6e\u9009\u9879\uff08\u901a\u8fc7config\u5b57\u5178\u4f20\u9012\uff09\nenv = LocalEnvironment(\"my_local_app\", config={\n    \"engine_host\": \"127.0.0.1\",\n    \"engine_port\": 19000\n})\n\n# \u8bbe\u7f6e\u63a7\u5236\u53f0\u65e5\u5fd7\u7b49\u7ea7\nenv.set_console_log_level(\"DEBUG\")  # \u53ef\u9009: DEBUG, INFO, WARNING, ERROR\n\n# \u521b\u5efa\u6570\u636e\u6d41\uff08\u4f7f\u7528\u5b9e\u9645\u5b58\u5728\u7684\u65b9\u6cd5\uff09\n# 1. \u4ece\u6279\u5904\u7406\u6570\u636e\u521b\u5efa\ndata_stream = env.from_batch([1, 2, 3, 4, 5])\n\n# 2. \u4eceKafka\u6e90\u521b\u5efa\nkafka_stream = env.from_kafka_source(\n    bootstrap_servers=\"localhost:9092\",\n    topic=\"my_topic\",\n    group_id=\"my_group\"\n)\n\n# 3. \u4ece\u81ea\u5b9a\u4e49\u6e90\u51fd\u6570\u521b\u5efa\nfrom sage.core.api.function.base_function import BaseFunction\n\nclass MySourceFunction(BaseFunction):\n    def get_data_iterator(self):\n        return iter(range(10))\n\nsource_stream = env.from_source(MySourceFunction)\n\n# \u6570\u636e\u5904\u7406 (\u4f7f\u7528\u5b9e\u9645\u7684DataStream API)\nresult = (data_stream\n    .map(lambda x: x * 2)\n    .filter(lambda x: x &gt; 5)\n    # .collect() \u65b9\u6cd5\u9700\u8981\u6839\u636e\u5b9e\u9645DataStream API\u786e\u8ba4\n)\n\n# \u63d0\u4ea4\u4efb\u52a1\u5230JobManager\nenv.submit()\n</code></pre>"},{"location":"kernel/core/execution_environments/#_4","title":"\u670d\u52a1\u6ce8\u518c","text":"<pre><code># \u6ce8\u518c\u81ea\u5b9a\u4e49\u670d\u52a1\nclass MyCacheService:\n    def __init__(self, cache_size=1000):\n        self.cache_size = cache_size\n        self.cache = {}\n\nenv.register_service(\"my_cache\", MyCacheService, cache_size=1000)\n\n# \u6ce8\u518c\u6570\u636e\u5e93\u8fde\u63a5\u670d\u52a1\nclass DatabaseConnection:\n    def __init__(self, host, port, db):\n        self.host = host\n        self.port = port  \n        self.db = db\n\nenv.register_service(\"db_conn\", DatabaseConnection, \n                   host=\"localhost\", port=5432, db=\"mydb\")\n</code></pre>"},{"location":"kernel/core/execution_environments/#_5","title":"\u6570\u636e\u6e90\u521b\u5efa","text":"<pre><code># \u4ece\u5404\u79cd\u6570\u636e\u7c7b\u578b\u521b\u5efa\u6279\u5904\u7406\u6d41\n# 1. \u5217\u8868\u548c\u5143\u7ec4\ndata_list = [\"item1\", \"item2\", \"item3\", \"item4\", \"item5\"]\nlist_stream = env.from_batch(data_list)\n\n# 2. \u4efb\u4f55\u53ef\u8fed\u4ee3\u5bf9\u8c61\nset_stream = env.from_batch({1, 2, 3, 4, 5})\nrange_stream = env.from_batch(range(100))\nstring_stream = env.from_batch(\"hello\")  # \u6309\u5b57\u7b26\u8fed\u4ee3\n\n# 3. \u81ea\u5b9a\u4e49\u6279\u5904\u7406\u51fd\u6570\nclass CustomBatchFunction(BaseFunction):\n    def get_data_iterator(self):\n        return iter(range(50))\n\n    def get_total_count(self):\n        return 50\n\nbatch_stream = env.from_batch(CustomBatchFunction, custom_param=\"value\")\n\n# 4. Future\u6d41\uff08\u7528\u4e8e\u53cd\u9988\u5faa\u73af\uff09\nfuture_stream = env.from_future(\"feedback_loop\")\n</code></pre>"},{"location":"kernel/core/execution_environments/#remoteenvironment","title":"\ud83c\udf10 \u8fdc\u7a0b\u6267\u884c\u73af\u5883 (RemoteEnvironment)","text":""},{"location":"kernel/core/execution_environments/#_6","title":"\u57fa\u672c\u4f7f\u7528","text":"<pre><code>from sage.core.api.remote_environment import RemoteEnvironment\n\n# \u521b\u5efa\u8fdc\u7a0b\u73af\u5883\uff0c\u8fde\u63a5\u5230\u8fdc\u7a0bJobManager\nenv = RemoteEnvironment(\n    name=\"remote_app\",\n    config={\n        \"parallelism\": 8,\n        \"buffer_size\": 10000\n    },\n    host=\"127.0.0.1\",  # JobManager\u670d\u52a1\u4e3b\u673a\n    port=19001         # JobManager\u670d\u52a1\u7aef\u53e3\n)\n\n# \u8bbe\u7f6e\u63a7\u5236\u53f0\u65e5\u5fd7\u7b49\u7ea7\nenv.set_console_log_level(\"INFO\")\n\n# \u521b\u5efa\u6570\u636e\u6d41\uff08\u4e0eLocalEnvironment\u76f8\u540c\u7684API\uff09\ndata_stream = env.from_batch(list(range(1000)))\n\n# \u6570\u636e\u5904\u7406\nprocessed_stream = data_stream.map(lambda x: x * 2)\n\n# \u63d0\u4ea4\u5230\u8fdc\u7a0b\u96c6\u7fa4\nenv_uuid = env.submit()\nprint(f\"Job submitted with UUID: {env_uuid}\")\n\n# \u505c\u6b62\u8fdc\u7a0b\u4efb\u52a1\nresponse = env.stop()\nprint(f\"Stop response: {response}\")\n\n# \u5173\u95ed\u5e76\u6e05\u7406\u8fdc\u7a0b\u73af\u5883\nresponse = env.close()\nprint(f\"Close response: {response}\")\n</code></pre>"},{"location":"kernel/core/execution_environments/#_7","title":"\u8fdc\u7a0b\u914d\u7f6e","text":"<pre><code># \u8be6\u7ec6\u8fdc\u7a0b\u914d\u7f6e\nremote_env = RemoteEnvironment(\n    name=\"production_app\",\n    config={\n        # \u57fa\u7840\u914d\u7f6e\n        \"parallelism\": 16,\n        \"buffer_size\": 50000,\n        \"checkpoint_interval\": 300,  # 5\u5206\u949f\n\n        # \u5bb9\u9519\u914d\u7f6e\n        \"restart_strategy\": \"fixed-delay\",\n        \"max_failures\": 3,\n        \"failure_rate_interval\": 60,\n\n        # \u8d44\u6e90\u914d\u7f6e\n        \"taskmanager_memory\": \"2GB\",\n        \"taskmanager_slots\": 4\n    },\n    host=\"cluster-master.example.com\",\n    port=8081\n)\n\n# \u83b7\u53d6\u5ba2\u6237\u7aef\u72b6\u6001\nclient = remote_env.client\nprint(f\"Connected to JobManager at {client.host}:{client.port}\")\n\n# \u63d0\u4ea4\u5e76\u76d1\u63a7\nenv_uuid = remote_env.submit()\nprint(f\"Remote job submitted: {env_uuid}\")\n\n# \u68c0\u67e5\u4efb\u52a1\u72b6\u6001\uff08\u5982\u679cJobManagerClient\u652f\u6301\uff09\n# status = client.get_job_status(env_uuid)\n</code></pre>"},{"location":"kernel/core/execution_environments/#_8","title":"\u9ad8\u7ea7\u8fdc\u7a0b\u64cd\u4f5c","text":"<pre><code># Kafka\u6e90\u5728\u8fdc\u7a0b\u73af\u5883\u4e2d\u7684\u4f7f\u7528\nkafka_stream = remote_env.from_kafka_source(\n    bootstrap_servers=\"kafka1:9092,kafka2:9092\",\n    topic=\"events\",\n    group_id=\"remote_consumer\",\n    auto_offset_reset=\"earliest\",\n    buffer_size=20000\n)\n\n# \u590d\u6742\u6570\u636e\u5904\u7406\u7ba1\u9053\nresult_stream = (kafka_stream\n    .map(parse_event_function)\n    .filter(is_valid_event_function)\n    .key_by(extract_key_function)\n    .window(tumbling_time_window(minutes=5))\n    .aggregate(count_aggregator)\n)\n\n# \u8f93\u51fa\u5230\u76ee\u6807\u7cfb\u7edf\nresult_stream.add_sink(kafka_output_sink)\n\n# \u63d0\u4ea4\u8fdc\u7a0b\u4efb\u52a1\nenv_uuid = remote_env.submit()\n\n# \u4efb\u52a1\u7ba1\u7406\ntry:\n    # \u7b49\u5f85\u4efb\u52a1\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\n    import time\n    time.sleep(300)  # \u8fd0\u884c5\u5206\u949f\n\n    # \u4f18\u96c5\u505c\u6b62\n    stop_response = remote_env.stop()\n    if stop_response.get(\"status\") == \"success\":\n        print(\"Remote job stopped successfully\")\n    else:\n        print(f\"Stop failed: {stop_response}\")\n\nfinally:\n    # \u786e\u4fdd\u8d44\u6e90\u6e05\u7406\n    remote_env.close()\n</code></pre>"},{"location":"kernel/core/execution_environments/#_9","title":"\ufffd \u73af\u5883\u5bf9\u6bd4\u548c\u9009\u62e9\u6307\u5357","text":""},{"location":"kernel/core/execution_environments/#_10","title":"\u73af\u5883\u7279\u6027\u5bf9\u6bd4","text":"\u7279\u6027 LocalEnvironment RemoteEnvironment \u9002\u7528\u573a\u666f \u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u5c0f\u89c4\u6a21\u5904\u7406 \u751f\u4ea7\u3001\u5927\u89c4\u6a21\u5206\u5e03\u5f0f\u5904\u7406 \u8d44\u6e90\u7ba1\u7406 \u672c\u5730\u8d44\u6e90 \u5206\u5e03\u5f0f\u96c6\u7fa4\u8d44\u6e90 \u5bb9\u9519\u80fd\u529b \u57fa\u7840 \u9ad8\u7ea7\uff08\u6545\u969c\u6062\u590d\u3001\u91cd\u8bd5\uff09 \u6269\u5c55\u6027 \u5355\u673a\u9650\u5236 \u6c34\u5e73\u6269\u5c55 \u914d\u7f6e\u590d\u6742\u5ea6 \u7b80\u5355 \u76f8\u5bf9\u590d\u6742 \u8c03\u8bd5\u4fbf\u5229\u6027 \u9ad8 \u4e2d\u7b49"},{"location":"kernel/core/execution_environments/#_11","title":"\u9009\u62e9\u5efa\u8bae","text":"<p>\u9009\u62e9 LocalEnvironment \u5f53\uff1a - \u5f00\u53d1\u548c\u8c03\u8bd5\u5e94\u7528\u7a0b\u5e8f - \u6570\u636e\u91cf\u8f83\u5c0f\uff08&lt; 1GB\uff09 - \u5904\u7406\u903b\u8f91\u76f8\u5bf9\u7b80\u5355 - \u9700\u8981\u5feb\u901f\u539f\u578b\u9a8c\u8bc1</p> <p>\u9009\u62e9 RemoteEnvironment \u5f53\uff1a - \u751f\u4ea7\u73af\u5883\u90e8\u7f72 - \u5927\u6570\u636e\u5904\u7406\uff08&gt; 1GB\uff09 - \u9700\u8981\u9ad8\u53ef\u7528\u6027\u548c\u5bb9\u9519 - \u9700\u8981\u6c34\u5e73\u6269\u5c55\u80fd\u529b</p>"},{"location":"kernel/core/execution_environments/#_12","title":"\u5b9e\u9645\u4f7f\u7528\u793a\u4f8b","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.remote_environment import RemoteEnvironment\n\n# \u5f00\u53d1\u73af\u5883\uff1a\u4f7f\u7528LocalEnvironment\ndef create_dev_environment():\n    env = LocalEnvironment(\"dev_app\")\n    env.set_console_log_level(\"DEBUG\")  # \u5f00\u53d1\u65f6\u663e\u793a\u8be6\u7ec6\u65e5\u5fd7\n    return env\n\n# \u751f\u4ea7\u73af\u5883\uff1a\u4f7f\u7528RemoteEnvironment  \ndef create_prod_environment():\n    env = RemoteEnvironment(\n        name=\"prod_app\",\n        config={\n            \"parallelism\": 32,\n            \"checkpoint_interval\": 300,\n            \"restart_strategy\": \"exponential-backoff\"\n        },\n        host=\"prod-jobmanager.company.com\",\n        port=8081\n    )\n    env.set_console_log_level(\"INFO\")  # \u751f\u4ea7\u73af\u5883\u51cf\u5c11\u65e5\u5fd7\u8f93\u51fa\n    return env\n\n# \u6839\u636e\u8fd0\u884c\u6a21\u5f0f\u9009\u62e9\u73af\u5883\nimport os\nif os.getenv(\"SAGE_ENV\") == \"production\":\n    env = create_prod_environment()\nelse:\n    env = create_dev_environment()\n\n# \u76f8\u540c\u7684\u5e94\u7528\u903b\u8f91\u4ee3\u7801\ndata_stream = env.from_batch(load_data())\nresult = data_stream.map(process_function).filter(filter_function)\nenv.submit()\n</code></pre>"},{"location":"kernel/core/execution_environments/#_13","title":"\ufffd\ufe0f \u73af\u5883\u914d\u7f6e\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"kernel/core/execution_environments/#_14","title":"\u65e5\u5fd7\u914d\u7f6e","text":"<pre><code># \u5f00\u53d1\u73af\u5883\uff1a\u8be6\u7ec6\u65e5\u5fd7\nenv = LocalEnvironment(\"dev_app\")\nenv.set_console_log_level(\"DEBUG\")\n\n# \u6d4b\u8bd5\u73af\u5883\uff1a\u5173\u952e\u4fe1\u606f\nenv = LocalEnvironment(\"test_app\")  \nenv.set_console_log_level(\"INFO\")\n\n# \u751f\u4ea7\u73af\u5883\uff1a\u9519\u8bef\u548c\u8b66\u544a\nenv = RemoteEnvironment(\"prod_app\")\nenv.set_console_log_level(\"WARNING\")\n</code></pre>"},{"location":"kernel/core/execution_environments/#_15","title":"\u670d\u52a1\u6ce8\u518c\u6a21\u5f0f","text":"<pre><code># \u5355\u4f8b\u670d\u52a1\u6a21\u5f0f\nclass DatabaseService:\n    _instance = None\n\n    def __new__(cls, *args, **kwargs):\n        if not cls._instance:\n            cls._instance = super().__new__(cls)\n        return cls._instance\n\n    def __init__(self, connection_string):\n        if not hasattr(self, 'initialized'):\n            self.connection_string = connection_string\n            self.initialized = True\n\n# \u6ce8\u518c\u5355\u4f8b\u670d\u52a1\nenv.register_service(\"db\", DatabaseService, \"postgresql://localhost:5432/mydb\")\n\n# \u5de5\u5382\u6a21\u5f0f\u670d\u52a1\nclass CacheServiceFactory:\n    @staticmethod\n    def create_cache(cache_type=\"memory\", **kwargs):\n        if cache_type == \"memory\":\n            return MemoryCache(**kwargs)\n        elif cache_type == \"redis\":\n            return RedisCache(**kwargs)\n        else:\n            raise ValueError(f\"Unknown cache type: {cache_type}\")\n\nenv.register_service(\"cache\", CacheServiceFactory.create_cache, \n                   cache_type=\"redis\", host=\"localhost\", port=6379)\n</code></pre>"},{"location":"kernel/core/execution_environments/#_16","title":"\u9519\u8bef\u5904\u7406","text":"<pre><code># \u73af\u5883\u7ea7\u522b\u7684\u9519\u8bef\u5904\u7406\ntry:\n    # \u521b\u5efa\u548c\u914d\u7f6e\u73af\u5883\n    env = RemoteEnvironment(\"my_app\", host=\"jobmanager.example.com\")\n\n    # \u6784\u5efa\u6570\u636e\u6d41\n    stream = env.from_kafka_source(\"localhost:9092\", \"events\", \"group1\")\n    result = stream.map(processing_function)\n\n    # \u63d0\u4ea4\u4efb\u52a1\n    job_id = env.submit()\n    print(f\"Job submitted: {job_id}\")\n\n    # \u76d1\u63a7\u4efb\u52a1\uff08\u53ef\u9009\uff09\n    # monitor_job(job_id)\n\nexcept Exception as e:\n    print(f\"Environment setup failed: {e}\")\n    # \u6e05\u7406\u8d44\u6e90\n    if 'env' in locals():\n        env.close()\n    raise\n</code></pre> <p>\u901a\u8fc7\u9009\u62e9\u5408\u9002\u7684\u6267\u884c\u73af\u5883\uff0c\u60a8\u53ef\u4ee5\uff1a</p> <ul> <li>\ud83d\ude80 \u4f18\u5316\u6027\u80fd: \u6839\u636e\u5e94\u7528\u9700\u6c42\u9009\u62e9\u672c\u5730\u6216\u8fdc\u7a0b\u6267\u884c</li> <li>\ud83d\udd27 \u7b80\u5316\u90e8\u7f72: \u4f7f\u7528\u7edf\u4e00API\u5728\u4e0d\u540c\u73af\u5883\u95f4\u65e0\u7f1d\u5207\u6362</li> <li>\ud83d\udcc8 \u5f39\u6027\u6269\u5c55: \u4ece\u672c\u5730\u5f00\u53d1\u6269\u5c55\u5230\u5206\u5e03\u5f0f\u751f\u4ea7\u73af\u5883</li> <li>\ud83d\udee0\ufe0f \u7075\u6d3b\u914d\u7f6e: \u901a\u8fc7\u670d\u52a1\u6ce8\u518c\u548c\u914d\u7f6e\u7ba1\u7406\u9002\u5e94\u4e0d\u540c\u573a\u666f</li> </ul> <p>\u9009\u62e9\u9002\u5408\u60a8\u573a\u666f\u7684\u6267\u884c\u73af\u5883\uff0c\u91ca\u653eSAGE Core\u7684\u5168\u90e8\u6f5c\u80fd\uff01</p>"},{"location":"kernel/core/execution_environments/#_17","title":"\ud83d\udcda \u76f8\u5173\u6587\u6863","text":"<ul> <li>\u73af\u5883\u7ba1\u7406 API - \u8be6\u7ec6\u7684\u73af\u5883API\u6587\u6863</li> <li> DataStream \u6982\u89c8 - \u6570\u636e\u6d41\u7684\u521b\u5efa\u548c\u64cd\u4f5c</li> <li> \u670d\u52a1\u7ba1\u7406 - \u670d\u52a1\u6ce8\u518c\u548c\u7ba1\u7406</li> <li> JobManager \u67b6\u6784 - JobManager\u7684\u5de5\u4f5c\u539f\u7406</li> </ul>"},{"location":"kernel/core/functions/functions_overview/","title":"Function \u51fd\u6570\u7cfb\u7edf\u6982\u89c8","text":"<p>Function \u51fd\u6570\u7cfb\u7edf\u662f SAGE Core \u4e2d\u7528\u6237\u903b\u8f91\u7684\u8f7d\u4f53\uff0c\u5b83\u5c06\u7528\u6237\u5b9a\u4e49\u7684\u5904\u7406\u51fd\u6570\u5305\u88c5\u6210\u53ef\u5728\u7b97\u5b50\u7cfb\u7edf\u4e2d\u6267\u884c\u7684\u6807\u51c6\u5316\u7ec4\u4ef6\u3002\u51fd\u6570\u7cfb\u7edf\u63d0\u4f9b\u4e86\u7c7b\u578b\u5b89\u5168\u3001\u8d44\u6e90\u7ba1\u7406\u3001\u5f02\u5e38\u5904\u7406\u7b49\u529f\u80fd\uff0c\u662f\u8fde\u63a5\u7528\u6237\u4ee3\u7801\u548c\u5e95\u5c42\u6267\u884c\u5f15\u64ce\u7684\u6865\u6881\u3002</p>"},{"location":"kernel/core/functions/functions_overview/#_1","title":"\ud83c\udfd7\ufe0f \u8bbe\u8ba1\u67b6\u6784","text":"<p>\u51fd\u6570\u7cfb\u7edf\u91c7\u7528\u5206\u5c42\u62bd\u8c61\u8bbe\u8ba1\uff0c\u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684\u7528\u6237\u51fd\u6570\uff1a</p> <pre><code>graph TD\n    A[BaseFunction] --&gt; B[SourceFunction]\n    A --&gt; C[MapFunction] \n    A --&gt; D[FilterFunction]\n    A --&gt; E[SinkFunction]\n    A --&gt; F[FlatMapFunction]\n    A --&gt; G[KeyByFunction]\n    A --&gt; H[JoinFunction]\n    A --&gt; I[BatchFunction]\n    A --&gt; J[StatefulFunction]\n\n    B --&gt; K[LambdaSourceFunction]\n\n    C --&gt; L[LambdaMapFunction]\n\n    D --&gt; M[LambdaFilterFunction]\n\n    E --&gt; N[LambdaSinkFunction]\n\n    F --&gt; O[LambdaFlatMapFunction]</code></pre>"},{"location":"kernel/core/functions/functions_overview/#_2","title":"\ud83e\udde9 \u6838\u5fc3\u7ec4\u4ef6","text":""},{"location":"kernel/core/functions/functions_overview/#1-basefunction","title":"1. \u57fa\u7840\u51fd\u6570\u7c7b (BaseFunction)","text":"<p>\u6240\u6709\u51fd\u6570\u7684\u62bd\u8c61\u57fa\u7c7b\uff0c\u5b9a\u4e49\u4e86\u51fd\u6570\u7684\u901a\u7528\u63a5\u53e3\uff1a</p> <pre><code>from abc import ABC, abstractmethod\nfrom typing import Any, TYPE_CHECKING\nimport logging\n\nif TYPE_CHECKING:\n    from sage.kernel.runtime.task_context import TaskContext\n\nclass BaseFunction(ABC):\n    \"\"\"\n    BaseFunction is the abstract base class for all operator functions in SAGE.\n    It defines the core interface and initializes a logger.\n    \"\"\"\n    def __init__(self, *args, **kwargs):\n        self.ctx: 'TaskContext' = None # \u8fd0\u884c\u65f6\u6ce8\u5165\n        self.router = None  # \u8fd0\u884c\u65f6\u6ce8\u5165\n        self._logger = None\n\n    @property\n    def logger(self):\n        if not hasattr(self, \"_logger\") or self._logger is None:\n            if self.ctx is None:\n                self._logger = logging.getLogger(\"\")\n            else:\n                self._logger = self.ctx.logger\n        return self._logger\n\n    @property\n    def name(self):\n        if self.ctx is None:\n            return self.__class__.__name__\n        return self.ctx.name\n\n    @property\n    def call_service(self):\n        \"\"\"\n        \u540c\u6b65\u670d\u52a1\u8c03\u7528\u8bed\u6cd5\u7cd6\n\n        \u7528\u6cd5:\n            result = self.call_service[\"cache_service\"].get(\"key1\")\n            data = self.call_service[\"db_service\"].query(\"SELECT * FROM users\")\n        \"\"\"\n        if self.ctx is None:\n            raise RuntimeError(\"Runtime context not initialized. Cannot access services.\")\n\n        return self.ctx.call_service()\n\n    @property \n    def call_service_async(self):\n        \"\"\"\n        \u5f02\u6b65\u670d\u52a1\u8c03\u7528\u8bed\u6cd5\u7cd6\n\n        \u7528\u6cd5:\n            future = self.call_service_async[\"cache_service\"].get(\"key1\")\n            result = future.result()  # \u963b\u585e\u7b49\u5f85\u7ed3\u679c\n\n            # \u6216\u8005\u975e\u963b\u585e\u68c0\u67e5\n            if future.done():\n                result = future.result()\n        \"\"\"\n        if self.ctx is None:\n            raise RuntimeError(\"Runtime context not initialized. Cannot access services.\")\n\n        return self.ctx.call_service_async()\n\n    @abstractmethod\n    def execute(self, data: Any):\n        \"\"\"\n        Abstract method to be implemented by subclasses.\n\n        Each function must define its own execute logic that processes input data\n        and returns the output.\n\n        :param data: Input data.\n        :return: Output data.\n        \"\"\"\n        pass\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#2-taskcontext","title":"2. \u4efb\u52a1\u4e0a\u4e0b\u6587 (TaskContext)","text":"<p>\u63d0\u4f9b\u51fd\u6570\u6267\u884c\u65f6\u7684\u73af\u5883\u4fe1\u606f\u548c\u5de5\u5177\uff1a</p> <pre><code>class TaskContext:\n    def __init__(self, graph_node, transformation, env, execution_graph=None):\n        self.name = graph_node.name\n        self.env_name = env.name\n        self.env_base_dir = env.env_base_dir\n        self.parallel_index = graph_node.parallel_index\n        self.parallelism = graph_node.parallelism\n        self._logger = None\n        self.is_spout = transformation.is_spout\n        self.delay = 0.01\n        self.stop_signal_num = graph_node.stop_signal_num\n\n    @property\n    def logger(self):\n        \"\"\"\u83b7\u53d6\u65e5\u5fd7\u8bb0\u5f55\u5668\"\"\"\n        return self._logger\n\n    def call_service(self):\n        \"\"\"\u540c\u6b65\u670d\u52a1\u8c03\u7528\u63a5\u53e3\"\"\"\n        # \u5b9e\u9645\u5b9e\u73b0\u7531\u8fd0\u884c\u65f6\u63d0\u4f9b\n        pass\n\n    def call_service_async(self):\n        \"\"\"\u5f02\u6b65\u670d\u52a1\u8c03\u7528\u63a5\u53e3\"\"\"\n        # \u5b9e\u9645\u5b9e\u73b0\u7531\u8fd0\u884c\u65f6\u63d0\u4f9b\n        pass\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#3-statefulfunction","title":"3. \u6709\u72b6\u6001\u51fd\u6570 (StatefulFunction)","text":"<p>SAGE \u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u72b6\u6001\u7ba1\u7406\u529f\u80fd\uff1a</p> <pre><code>import os\nfrom sage.core.api.function.base_function import BaseFunction\nfrom sage.kernel.utils.persistence.state import load_function_state, save_function_state\n\nclass StatefulFunction(BaseFunction):\n    \"\"\"\n    \u6709\u72b6\u6001\u7b97\u5b50\u57fa\u7c7b\uff1a\u81ea\u52a8\u5728 init \u6062\u590d\u72b6\u6001\uff0c\n    \u5e76\u53ef\u901a\u8fc7 save_state() \u6301\u4e45\u5316\u3002\n    \"\"\"\n    # \u5b50\u7c7b\u53ef\u8986\u76d6\uff1a\u53ea\u4fdd\u5b58 include \u4e2d\u5b57\u6bb5\n    __state_include__ = []\n    # \u9ed8\u8ba4\u6392\u9664 logger\u3001\u79c1\u6709\u5c5e\u6027\u548c runtime_context\n    __state_exclude__ = ['logger', '_logger', 'ctx']\n\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        # \u6062\u590d\u4e0a\u6b21 checkpoint\n        if self.ctx:\n            chkpt_dir = os.path.join(self.ctx.env_base_dir, \".sage_checkpoints\")\n            chkpt_path = os.path.join(chkpt_dir, f\"{self.ctx.name}.chkpt\")\n            load_function_state(self, chkpt_path)\n\n    def save_state(self):\n        \"\"\"\n        \u5c06\u5f53\u524d\u5bf9\u8c61\u72b6\u6001\u6301\u4e45\u5316\u5230 disk\n        \"\"\"\n        if self.ctx:\n            base = os.path.join(self.ctx.env_base_dir, \".sage_checkpoints\")\n            os.makedirs(base, exist_ok=True)\n            path = os.path.join(base, f\"{self.ctx.name}.chkpt\")\n            save_function_state(self, path)\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#_3","title":"\ud83d\udd27 \u51fd\u6570\u7c7b\u578b","text":""},{"location":"kernel/core/functions/functions_overview/#1-source-functions","title":"1. \u6e90\u51fd\u6570 (Source Functions)","text":"<p>\u8d1f\u8d23\u6570\u636e\u751f\u6210\u548c\u8f93\u5165\u7684\u51fd\u6570\uff1a</p> <pre><code>from sage.core.api.function.base_function import BaseFunction\n\nclass StopSignal:\n    \"\"\"\u505c\u6b62\u4fe1\u53f7\u7c7b\uff0c\u7528\u4e8e\u6807\u8bc6\u4efb\u52a1\u505c\u6b62\"\"\"\n    def __init__(self, name: str):\n        self.name = name\n\n    def __repr__(self) -&gt; str:\n        return f\"&lt;StopSignal {self.name}&gt;\"\n\nclass SourceFunction(BaseFunction):\n    \"\"\"\n    \u6e90\u51fd\u6570\u57fa\u7c7b - \u6570\u636e\u751f\u4ea7\u8005\n\n    \u6e90\u51fd\u6570\u4e0d\u63a5\u6536\u8f93\u5165\u6570\u636e\uff0c\u53ea\u4ea7\u751f\u8f93\u51fa\u6570\u636e\n    \u901a\u5e38\u7528\u4e8e\u8bfb\u53d6\u6587\u4ef6\u3001\u6570\u636e\u5e93\u3001API\u7b49\u5916\u90e8\u6570\u636e\u6e90\n    \"\"\"\n\n    @abstractmethod\n    def execute(self) -&gt; Any:\n        \"\"\"\n        \u6267\u884c\u6e90\u51fd\u6570\u903b\u8f91\uff0c\u751f\u4ea7\u6570\u636e\n\n        Returns:\n            \u751f\u4ea7\u7684\u6570\u636e\n        \"\"\"\n        pass\n\n# \u4f7f\u7528\u793a\u4f8b\nclass SimpleSourceFunction(SourceFunction):\n    def __init__(self, data_list):\n        super().__init__()\n        self.data_list = data_list\n        self.index = 0\n\n    def execute(self):\n        if self.index &lt; len(self.data_list):\n            data = self.data_list[self.index]\n            self.index += 1\n            return data\n        else:\n            return StopSignal(\"data_exhausted\")\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#2-map-functions","title":"2. \u6620\u5c04\u51fd\u6570 (Map Functions)","text":"<p>\u5bf9\u6570\u636e\u8fdb\u884c\u4e00\u5bf9\u4e00\u8f6c\u6362\u7684\u51fd\u6570\uff1a</p> <pre><code>from sage.core.api.function.base_function import BaseFunction\nfrom sage.core.api.function.map_function import MapFunction\n\nclass MapFunction(BaseFunction):\n    \"\"\"\n    \u6620\u5c04\u51fd\u6570\u57fa\u7c7b - \u4e00\u5bf9\u4e00\u6570\u636e\u53d8\u6362\n\n    \u6620\u5c04\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u8f93\u5165\uff0c\u4ea7\u751f\u4e00\u4e2a\u8f93\u51fa\n    \u7528\u4e8e\u6570\u636e\u8f6c\u6362\u3001\u589e\u5f3a\u3001\u683c\u5f0f\u5316\u7b49\u64cd\u4f5c\n    \"\"\"\n\n    @abstractmethod\n    def execute(self, data: Any) -&gt; Any:\n        \"\"\"\n        \u6267\u884c\u6620\u5c04\u53d8\u6362\n\n        Args:\n            data: \u8f93\u5165\u6570\u636e\n\n        Returns:\n            \u53d8\u6362\u540e\u7684\u6570\u636e\n        \"\"\"\n        pass\n\n# Lambda\u51fd\u6570\u5305\u88c5\u5668\nfrom typing import Callable\nfrom sage.core.api.function.lambda_function import LambdaMapFunction\n\nclass LambdaMapFunction(MapFunction):\n    \"\"\"\u5c06 lambda \u51fd\u6570\u5305\u88c5\u4e3a MapFunction\"\"\"\n\n    def __init__(self, lambda_func: Callable[[Any], Any], **kwargs):\n        super().__init__(**kwargs)\n        self.lambda_func = lambda_func\n\n    def execute(self, data: Any) -&gt; Any:\n        return self.lambda_func(data)\n\n# \u4f7f\u7528\u793a\u4f8b\ntext_processor = LambdaMapFunction(lambda x: x.strip().upper())\nnumber_doubler = LambdaMapFunction(lambda x: x * 2)\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#3-filter-functions","title":"3. \u8fc7\u6ee4\u51fd\u6570 (Filter Functions)","text":"<p>\u7528\u4e8e\u6570\u636e\u8fc7\u6ee4\u7684\u8c13\u8bcd\u51fd\u6570\uff1a</p> <pre><code>from sage.core.api.function.filter_function import FilterFunction\nfrom sage.core.api.function.lambda_function import LambdaFilterFunction\n\nclass FilterFunction(BaseFunction):\n    \"\"\"\n    FilterFunction \u662f\u4e13\u95e8\u7528\u4e8e Filter \u64cd\u4f5c\u7684\u51fd\u6570\u57fa\u7c7b\u3002\n    \u5b83\u5b9a\u4e49\u4e86\u8fc7\u6ee4\u6761\u4ef6\u51fd\u6570\u7684\u63a5\u53e3\uff0c\u7528\u4e8e\u5224\u65ad\u6570\u636e\u662f\u5426\u5e94\u8be5\u901a\u8fc7\u8fc7\u6ee4\u5668\u3002\n\n    Filter \u51fd\u6570\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u63a5\u6536\u8f93\u5165\u6570\u636e\uff0c\u8fd4\u56de\u5e03\u5c14\u503c\u8868\u793a\u6570\u636e\u662f\u5426\u901a\u8fc7\u8fc7\u6ee4\u6761\u4ef6\u3002\n    \"\"\"\n\n    @abstractmethod\n    def execute(self, data: Any) -&gt; bool:\n        \"\"\"\n        \u62bd\u8c61\u65b9\u6cd5\uff0c\u7531\u5b50\u7c7b\u5b9e\u73b0\u5177\u4f53\u7684\u8fc7\u6ee4\u903b\u8f91\u3002\n\n        Args:\n            data: \u8f93\u5165\u6570\u636e\n\n        Returns:\n            bool: True\u8868\u793a\u6570\u636e\u5e94\u8be5\u901a\u8fc7\uff0cFalse\u8868\u793a\u5e94\u8be5\u88ab\u8fc7\u6ee4\u6389\n        \"\"\"\n        pass\n\nclass LambdaFilterFunction(FilterFunction):\n    \"\"\"\u5c06\u8fd4\u56de\u5e03\u5c14\u503c\u7684 lambda \u51fd\u6570\u5305\u88c5\u4e3a FilterFunction\"\"\"\n\n    def __init__(self, lambda_func: Callable[[Any], bool], **kwargs):\n        super().__init__(**kwargs)\n        self.lambda_func = lambda_func\n\n    def execute(self, data: Any) -&gt; bool:\n        return self.lambda_func(data)\n\n# \u4f7f\u7528\u793a\u4f8b\npositive_filter = LambdaFilterFunction(lambda x: x &gt; 0)\nnon_empty_filter = LambdaFilterFunction(lambda x: x is not None and str(x).strip() != \"\")\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#4-sink-functions","title":"4. \u6c47\u51fd\u6570 (Sink Functions)","text":"<p>\u8d1f\u8d23\u6570\u636e\u8f93\u51fa\u7684\u51fd\u6570\uff1a</p> <pre><code>from sage.core.api.function.sink_function import SinkFunction\nfrom sage.core.api.function.lambda_function import LambdaSinkFunction\n\nclass SinkFunction(BaseFunction):\n    \"\"\"\n    \u6c47\u805a\u51fd\u6570\u57fa\u7c7b - \u6570\u636e\u6d88\u8d39\u8005\n\n    \u6c47\u805a\u51fd\u6570\u63a5\u6536\u8f93\u5165\u6570\u636e\uff0c\u901a\u5e38\u4e0d\u4ea7\u751f\u8f93\u51fa\n    \u7528\u4e8e\u6570\u636e\u5b58\u50a8\u3001\u53d1\u9001\u3001\u6253\u5370\u7b49\u7ec8\u7aef\u64cd\u4f5c\n    \"\"\"\n\n    @abstractmethod\n    def execute(self, data: Any) -&gt; None:\n        \"\"\"\n        \u6267\u884c\u6c47\u805a\u64cd\u4f5c\n\n        Args:\n            data: \u8f93\u5165\u6570\u636e\n        \"\"\"\n        pass\n\nclass LambdaSinkFunction(SinkFunction):\n    \"\"\"\u5c06 lambda \u51fd\u6570\u5305\u88c5\u4e3a SinkFunction\"\"\"\n\n    def __init__(self, lambda_func: Callable[[Any], None], **kwargs):\n        super().__init__(**kwargs)\n        self.lambda_func = lambda_func\n\n    def execute(self, data: Any) -&gt; None:\n        self.lambda_func(data)\n\n# \u4f7f\u7528\u793a\u4f8b\nprint_sink = LambdaSinkFunction(lambda x: print(f\"Processing: {x}\"))\n\nclass FileSinkFunction(SinkFunction):\n    def __init__(self, filename):\n        super().__init__()\n        self.filename = filename\n        self.file_handle = None\n\n    def setup(self):\n        self.file_handle = open(self.filename, 'w')\n\n    def execute(self, data: Any) -&gt; None:\n        if self.file_handle:\n            self.file_handle.write(str(data) + '\\n')\n            self.file_handle.flush()\n\n    def cleanup(self):\n        if self.file_handle:\n            self.file_handle.close()\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#5","title":"5. \u5176\u4ed6\u51fd\u6570\u7c7b\u578b","text":"<p>SAGE \u8fd8\u652f\u6301\u5176\u4ed6\u7c7b\u578b\u7684\u51fd\u6570\uff1a</p>"},{"location":"kernel/core/functions/functions_overview/#flatmapfunction-","title":"FlatMapFunction - \u6241\u5e73\u5316\u6620\u5c04","text":"<pre><code>from sage.core.api.function.flatmap_function import FlatMapFunction\nfrom sage.core.api.function.lambda_function import LambdaFlatMapFunction\n\nclass FlatMapFunction(BaseFunction):\n    \"\"\"\n    \u6241\u5e73\u5316\u6620\u5c04\u51fd\u6570\u57fa\u7c7b - \u4e00\u5bf9\u591a\u6570\u636e\u53d8\u6362\n\n    FlatMap\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u8f93\u5165\uff0c\u4ea7\u751f\u591a\u4e2a\u8f93\u51fa\uff08\u5217\u8868\u5f62\u5f0f\uff09\n    \u7528\u4e8e\u6570\u636e\u5206\u89e3\u3001\u5c55\u5f00\u7b49\u64cd\u4f5c\n    \"\"\"\n\n    @abstractmethod\n    def execute(self, data: Any) -&gt; List[Any]:\n        \"\"\"\n        \u6267\u884c\u6241\u5e73\u5316\u6620\u5c04\u53d8\u6362\n\n        Args:\n            data: \u8f93\u5165\u6570\u636e\n\n        Returns:\n            \u53d8\u6362\u540e\u7684\u6570\u636e\u5217\u8868\n        \"\"\"\n        pass\n\nclass LambdaFlatMapFunction(FlatMapFunction):\n    \"\"\"\u5c06\u8fd4\u56de\u5217\u8868\u7684 lambda \u51fd\u6570\u5305\u88c5\u4e3a FlatMapFunction\"\"\"\n\n    def __init__(self, lambda_func: Callable[[Any], List[Any]], **kwargs):\n        super().__init__(**kwargs)\n        self.lambda_func = lambda_func\n\n    def execute(self, data: Any) -&gt; List[Any]:\n        result = self.lambda_func(data)\n        if not isinstance(result, list):\n            raise TypeError(f\"FlatMap lambda function must return a list, got {type(result)}\")\n        return result\n\n# \u4f7f\u7528\u793a\u4f8b\nsentence_splitter = LambdaFlatMapFunction(lambda x: x.split())\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#keybyfunction-","title":"KeyByFunction - \u952e\u503c\u5206\u7ec4","text":"<pre><code>from sage.core.api.function.keyby_function import KeyByFunction\n\nclass KeyByFunction(BaseFunction):\n    \"\"\"\n    KeyBy\u51fd\u6570\u57fa\u7c7b - \u6570\u636e\u5206\u7ec4\n\n    \u7528\u4e8e\u6839\u636e\u952e\u503c\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u7ec4\u64cd\u4f5c\n    \"\"\"\n\n    @abstractmethod\n    def execute(self, data: Any) -&gt; Any:\n        \"\"\"\n        \u63d0\u53d6\u5206\u7ec4\u952e\n\n        Args:\n            data: \u8f93\u5165\u6570\u636e\n\n        Returns:\n            \u5206\u7ec4\u952e\n        \"\"\"\n        pass\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#_4","title":"\u26a1 \u9ad8\u7ea7\u7279\u6027","text":""},{"location":"kernel/core/functions/functions_overview/#1-lambda","title":"1. Lambda\u51fd\u6570\u5305\u88c5\u5668","text":"<p>SAGE \u63d0\u4f9b\u4e86\u4fbf\u6377\u7684Lambda\u51fd\u6570\u5305\u88c5\u5668\uff0c\u53ef\u4ee5\u5feb\u901f\u5c06\u666e\u901a\u51fd\u6570\u8f6c\u6362\u4e3aSAGE\u51fd\u6570\uff1a</p> <pre><code>from sage.core.api.function.lambda_function import (\n    LambdaMapFunction, LambdaFilterFunction, LambdaFlatMapFunction, \n    LambdaSinkFunction\n)\n\n# \u5feb\u901f\u521b\u5efa\u5404\u79cd\u7c7b\u578b\u7684\u51fd\u6570\nmap_func = LambdaMapFunction(lambda x: x * 2)\nfilter_func = LambdaFilterFunction(lambda x: x &gt; 0)\nflatmap_func = LambdaFlatMapFunction(lambda x: x.split())\nsink_func = LambdaSinkFunction(lambda x: print(x))\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#2","title":"2. \u670d\u52a1\u8c03\u7528\u529f\u80fd","text":"<p>\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u4e0a\u4e0b\u6587\u8c03\u7528\u7cfb\u7edf\u670d\u52a1\uff1a</p> <pre><code>class ServiceCallFunction(BaseFunction):\n    def execute(self, data):\n        # \u540c\u6b65\u8c03\u7528\u670d\u52a1\n        result = self.call_service[\"cache_service\"].get(\"key1\")\n\n        # \u5f02\u6b65\u8c03\u7528\u670d\u52a1\n        future = self.call_service_async[\"db_service\"].query(\"SELECT * FROM users\")\n\n        # \u5904\u7406\u7ed3\u679c\n        if future.done():\n            db_result = future.result()\n\n        return {\"cache\": result, \"db\": db_result}\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#_5","title":"\ud83d\udccb \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"kernel/core/functions/functions_overview/#1","title":"1. \u51fd\u6570\u8bbe\u8ba1","text":"<ul> <li>\u5355\u4e00\u804c\u8d23: \u6bcf\u4e2a\u51fd\u6570\u5e94\u8be5\u53ea\u505a\u4e00\u4ef6\u4e8b\u60c5</li> <li>\u7c7b\u578b\u660e\u786e: \u660e\u786e\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6570\u636e\u7c7b\u578b</li> <li>\u9519\u8bef\u5904\u7406: \u5408\u7406\u5904\u7406\u5f02\u5e38\u5e76\u8bb0\u5f55\u65e5\u5fd7</li> </ul> <pre><code>class TextCleanerFunction(MapFunction):\n    \"\"\"\u6587\u672c\u6e05\u7406\u51fd\u6570 - \u826f\u597d\u7684\u8bbe\u8ba1\u793a\u4f8b\"\"\"\n\n    def execute(self, text: str) -&gt; str:\n        if not isinstance(text, str):\n            self.logger.error(f\"Expected string input, got {type(text)}\")\n            raise TypeError(\"Input must be a string\")\n\n        if not text.strip():\n            return \"\"\n\n        # \u6e05\u7406\u903b\u8f91\n        cleaned = text.strip().lower()\n        cleaned = ' '.join(cleaned.split())  # \u89c4\u8303\u5316\u7a7a\u683c\n\n        return cleaned\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#2_1","title":"2. \u72b6\u6001\u7ba1\u7406","text":"<ul> <li>\u4f7f\u7528StatefulFunction: \u5bf9\u4e8e\u9700\u8981\u7ef4\u62a4\u72b6\u6001\u7684\u51fd\u6570</li> <li>\u5b9a\u671f\u4fdd\u5b58\u72b6\u6001: \u5728\u5173\u952e\u70b9\u8c03\u7528save_state()</li> <li>\u5408\u7406\u8bbe\u8ba1\u72b6\u6001\u7ed3\u6784: \u907f\u514d\u72b6\u6001\u8fc7\u5927\u5bfc\u81f4\u5e8f\u5217\u5316\u95ee\u9898</li> </ul> <pre><code>class CounterFunction(StatefulFunction):\n    def __init__(self):\n        super().__init__()\n        self.count = 0\n\n    def execute(self, data):\n        self.count += 1\n\n        # \u6bcf\u5904\u7406100\u4e2a\u6570\u636e\u4fdd\u5b58\u4e00\u6b21\u72b6\u6001\n        if self.count % 100 == 0:\n            self.save_state()\n\n        return {\"data\": data, \"count\": self.count}\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#3","title":"3. \u670d\u52a1\u8c03\u7528","text":"<ul> <li>\u5f02\u6b65\u4f18\u5148: \u5bf9\u4e8eI/O\u64cd\u4f5c\u4f7f\u7528\u5f02\u6b65\u670d\u52a1\u8c03\u7528</li> <li>\u9519\u8bef\u5904\u7406: \u68c0\u67e5\u670d\u52a1\u8c03\u7528\u7684\u8fd4\u56de\u72b6\u6001</li> <li>\u8d44\u6e90\u7ba1\u7406: \u53ca\u65f6\u91ca\u653e\u670d\u52a1\u8fde\u63a5</li> </ul> <pre><code>class DatabaseQueryFunction(MapFunction):\n    def execute(self, query_params):\n        try:\n            # \u4f7f\u7528\u5f02\u6b65\u670d\u52a1\u8c03\u7528\n            future = self.call_service_async[\"db_service\"].query(query_params)\n\n            if future.done():\n                result = future.result()\n                if result.get(\"success\"):\n                    return result.get(\"data\")\n                else:\n                    self.logger.error(f\"Database query failed: {result.get('error')}\")\n                    return None\n            else:\n                self.logger.warning(\"Database query timeout\")\n                return None\n\n        except Exception as e:\n            self.logger.error(f\"Service call failed: {e}\")\n            return None\n</code></pre>"},{"location":"kernel/core/functions/functions_overview/#4","title":"4. \u6d4b\u8bd5\u548c\u8c03\u8bd5","text":"<ul> <li>\u5355\u5143\u6d4b\u8bd5: \u4e3a\u6bcf\u4e2a\u51fd\u6570\u7f16\u5199\u6d4b\u8bd5</li> <li>\u6a21\u62df\u4e0a\u4e0b\u6587: \u5728\u6d4b\u8bd5\u4e2d\u6a21\u62dfTaskContext</li> <li>\u65e5\u5fd7\u8bb0\u5f55: \u5145\u5206\u5229\u7528logger\u8bb0\u5f55\u5173\u952e\u4fe1\u606f</li> </ul> <pre><code>import unittest\nfrom unittest.mock import Mock\n\nclass TestTextCleanerFunction(unittest.TestCase):\n    def setUp(self):\n        self.function = TextCleanerFunction()\n        # \u6a21\u62df\u4e0a\u4e0b\u6587\n        self.function.ctx = Mock()\n        self.function.ctx.logger = Mock()\n\n    def test_clean_normal_text(self):\n        result = self.function.execute(\"  Hello   World  \")\n        self.assertEqual(result, \"hello world\")\n\n    def test_clean_empty_text(self):\n        result = self.function.execute(\"   \")\n        self.assertEqual(result, \"\")\n\n    def test_invalid_input(self):\n        with self.assertRaises(TypeError):\n            self.function.execute(123)\n</code></pre> <p>\u4e0b\u4e00\u6b65: \u4e86\u89e3  \u8f6c\u6362\u64cd\u4f5c\u6982\u89c8 \u5982\u4f55\u4f18\u5316\u51fd\u6570\u6267\u884c\u3002</p>"},{"location":"kernel/core/operators/operators_overview/","title":"Operator \u7b97\u5b50\u7cfb\u7edf\u6982\u89c8","text":"<p>Operator \u7b97\u5b50\u7cfb\u7edf\u662f SAGE Kernel \u7684\u6267\u884c\u5c42\u6838\u5fc3\u7ec4\u4ef6\uff0c\u8d1f\u8d23\u5728\u8fd0\u884c\u65f6\u6267\u884c\u5177\u4f53\u7684\u6570\u636e\u5904\u7406\u903b\u8f91\u3002\u7b97\u5b50\u57fa\u4e8e\u5305\u88c5\u5668\u6a21\u5f0f\uff0c\u5c06\u7528\u6237\u5b9a\u4e49\u7684 Function \u5305\u88c5\u6210\u53ef\u6267\u884c\u7684\u8fd0\u884c\u65f6\u7ec4\u4ef6\uff0c\u901a\u8fc7 Packet \u548c Router \u8fdb\u884c\u6570\u636e\u4f20\u9012\u3002</p>"},{"location":"kernel/core/operators/operators_overview/#_1","title":"\ud83c\udfd7\ufe0f \u8bbe\u8ba1\u67b6\u6784","text":"<p>\u7b97\u5b50\u7cfb\u7edf\u91c7\u7528 Operator-Function \u5206\u79bb\u8bbe\u8ba1\uff0c\u7b97\u5b50\u8d1f\u8d23\u8fd0\u884c\u65f6\u8c03\u5ea6\uff0cFunction \u8d1f\u8d23\u4e1a\u52a1\u903b\u8f91\uff1a</p> <pre><code>graph TD\n    A[BaseOperator] --&gt; B[SourceOperator]\n    A --&gt; C[MapOperator] \n    A --&gt; D[SinkOperator]\n    A --&gt; E[FilterOperator]\n    A --&gt; F[FlatMapOperator]\n    A --&gt; G[JoinOperator]\n    A --&gt; H[BatchOperator]\n    A --&gt; I[KeyByOperator]\n    A --&gt; J[CoMapOperator]\n    A --&gt; K[FutureOperator]\n\n    L[BaseFunction] --&gt; M[SourceFunction]\n    L --&gt; N[MapFunction] \n    L --&gt; O[SinkFunction]\n    L --&gt; P[FilterFunction]\n    L --&gt; Q[FlatMapFunction]\n    L --&gt; R[JoinFunction]\n    L --&gt; S[BatchFunction]\n\n    B -.-&gt; M\n    C -.-&gt; N\n    D -.-&gt; O\n    E -.-&gt; P\n    F -.-&gt; Q\n    G -.-&gt; R\n    H -.-&gt; S</code></pre>"},{"location":"kernel/core/operators/operators_overview/#_2","title":"\ud83e\udde9 \u6838\u5fc3\u7ec4\u4ef6","text":""},{"location":"kernel/core/operators/operators_overview/#1-baseoperator","title":"1. \u57fa\u7840\u7b97\u5b50\u7c7b (BaseOperator)","text":"<p>\u6240\u6709\u7b97\u5b50\u7684\u62bd\u8c61\u57fa\u7c7b\uff0c\u5b9a\u4e49\u4e86\u7b97\u5b50\u4e0e Function \u534f\u4f5c\u7684\u57fa\u672c\u63a5\u53e3\uff1a</p> <pre><code>from abc import ABC, abstractmethod\nfrom typing import Any, Optional, TYPE_CHECKING\nfrom sage.kernel.runtime.task.base_task import BaseTask\nfrom sage.utils.logging.custom_logger import CustomLogger\n\nif TYPE_CHECKING:\n    from sage.core.api.packet import Packet\n    from sage.core.api.function.base_function import BaseFunction\n    from sage.kernel.runtime.task_context import TaskContext\n    from sage.core.factory.function_factory import FunctionFactory\n    from sage.kernel.runtime.communication.router.router import BaseRouter\n\nclass BaseOperator(ABC):\n    def __init__(self, \n                 function_factory: 'FunctionFactory', \n                 ctx: 'TaskContext', \n                 *args, **kwargs):\n\n        self.ctx: 'TaskContext' = ctx\n        self.function: 'BaseFunction'\n        self.router: 'BaseRouter'\n        self.task: Optional['BaseTask'] = None\n\n        # \u901a\u8fc7\u5de5\u5382\u521b\u5efa\u5bf9\u5e94\u7684Function\u5b9e\u4f8b\n        try:\n            self.function = function_factory.create_function(self.name, ctx)\n            self.logger.debug(f\"Created function instance with {function_factory}\")\n        except Exception as e:\n            self.logger.error(f\"Failed to create function instance: {e}\", exc_info=True)\n            raise\n\n    def inject_router(self, router: 'BaseRouter'):\n        \"\"\"\u6ce8\u5165\u8def\u7531\u5668\u5b9e\u4f8b\uff0c\u7528\u4e8e\u6570\u636e\u5305\u4f20\u9012\"\"\"\n        self.router = router\n        self.logger.debug(f\"Injected router into operator {self.name}\")\n\n    def receive_packet(self, packet: 'Packet'):\n        \"\"\"\u63a5\u6536\u6570\u636e\u5305\u5e76\u5904\u7406\"\"\"\n        if packet is None:\n            self.logger.warning(f\"Received None packet in {self.name}\")\n            return\n        self.logger.debug(f\"Operator {self.name} received packet: {packet}\")\n        self.process_packet(packet)\n\n    @abstractmethod\n    def process_packet(self, packet: 'Packet' = None):\n        \"\"\"\u5904\u7406\u6570\u636e\u5305\u7684\u6838\u5fc3\u903b\u8f91\uff0c\u7531\u5177\u4f53\u7b97\u5b50\u5b9e\u73b0\"\"\"\n        pass\n\n    def save_state(self):\n        \"\"\"\u4fdd\u5b58\u6709\u72b6\u6001Function\u7684\u72b6\u6001\"\"\"\n        from sage.core.api.function.base_function import StatefulFunction\n        if isinstance(self.function, StatefulFunction):\n            self.function.save_state()\n\n    @property\n    def name(self) -&gt; str:\n        \"\"\"\u83b7\u53d6\u4efb\u52a1\u540d\u79f0\"\"\"\n        return self.ctx.name\n\n    @property\n    def logger(self) -&gt; CustomLogger:\n        \"\"\"\u83b7\u53d6\u5f53\u524d\u4efb\u52a1\u7684\u65e5\u5fd7\u8bb0\u5f55\u5668\"\"\"\n        return self.ctx.logger\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#2-packet","title":"2. \u6570\u636e\u5305\u7cfb\u7edf (Packet)","text":"<p>SAGE \u4f7f\u7528 Packet \u4f5c\u4e3a\u7b97\u5b50\u95f4\u6570\u636e\u4f20\u9012\u7684\u8f7d\u4f53\uff1a</p> <pre><code>from typing import Any\nimport time\n\nclass Packet:\n    def __init__(self, payload: Any, input_index: int = 0, \n                 partition_key: Any = None, partition_strategy: str = None):\n        self.payload = payload                    # \u5b9e\u9645\u6570\u636e\n        self.input_index = input_index           # \u8f93\u5165\u7d22\u5f15\n        self.partition_key = partition_key       # \u5206\u533a\u952e\n        self.partition_strategy = partition_strategy  # \u5206\u533a\u7b56\u7565\n        self.timestamp = time.time_ns()          # \u65f6\u95f4\u6233\n\n    def is_keyed(self) -&gt; bool:\n        \"\"\"\u68c0\u67e5packet\u662f\u5426\u5305\u542b\u5206\u533a\u4fe1\u606f\"\"\"\n        return self.partition_key is not None\n\n    def inherit_partition_info(self, new_payload: Any) -&gt; 'Packet':\n        \"\"\"\u521b\u5efa\u65b0packet\uff0c\u7ee7\u627f\u5f53\u524d\u7684\u5206\u533a\u4fe1\u606f\"\"\"\n        return Packet(\n            payload=new_payload,\n            input_index=self.input_index,\n            partition_key=self.partition_key,\n            partition_strategy=self.partition_strategy,\n        )\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#3-function","title":"3. Function \u57fa\u7c7b\u7cfb\u7edf","text":"<p>Function \u5c01\u88c5\u7528\u6237\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u7531 Operator \u8c03\u7528\u6267\u884c\uff1a</p> <pre><code>from abc import ABC, abstractmethod\nfrom typing import Any, TYPE_CHECKING\nfrom sage.kernel.utils.persistence.state import load_function_state, save_function_state\n\nif TYPE_CHECKING:\n    from sage.kernel.runtime.task_context import TaskContext\n\nclass BaseFunction(ABC):\n    \"\"\"\u6240\u6709Function\u7684\u57fa\u7840\u7c7b\"\"\"\n    def __init__(self, *args, **kwargs):\n        self.ctx: 'TaskContext' = None  # \u8fd0\u884c\u65f6\u6ce8\u5165\n        self.router = None              # \u8fd0\u884c\u65f6\u6ce8\u5165\n        self._logger = None\n\n    @property\n    def logger(self):\n        if not hasattr(self, \"_logger\") or self._logger is None:\n            if self.ctx is None:\n                self._logger = logging.getLogger(\"\")\n            else:\n                self._logger = self.ctx.logger\n        return self._logger\n\n    @property\n    def name(self):\n        if self.ctx is None:\n            return self.__class__.__name__\n        return self.ctx.name\n\nclass StatefulFunction(BaseFunction):\n    \"\"\"\n    \u6709\u72b6\u6001\u7684Function\u57fa\u7c7b\uff0c\u652f\u6301\u72b6\u6001\u6301\u4e45\u5316\n    \u5b50\u7c7b\u53ef\u4ee5\u5b9a\u4e49 __state_include__ \u548c __state_exclude__ \u6765\u63a7\u5236\u5e8f\u5217\u5316\n    \"\"\"\n    __state_include__ = []\n    __state_exclude__ = ['logger', '_logger', 'ctx']\n\n    def load_state(self, chkpt_path: str):\n        \"\"\"\u52a0\u8f7d\u72b6\u6001\"\"\"\n        if os.path.exists(chkpt_path):\n            load_function_state(self, chkpt_path)\n\n    def save_state(self):\n        \"\"\"\u4fdd\u5b58\u72b6\u6001\"\"\"\n        if self.ctx is None or not hasattr(self.ctx, 'env_base_dir'):\n            return\n\n        path = os.path.join(self.ctx.env_base_dir, \".sage_states\", \n                           \"function_states\", f\"{self.name}.pkl\")\n        save_function_state(self, path)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#_3","title":"\ud83d\udd04 \u5177\u4f53\u7b97\u5b50\u5b9e\u73b0","text":""},{"location":"kernel/core/operators/operators_overview/#1-sourceoperator","title":"1. \u6e90\u7b97\u5b50 (SourceOperator)","text":"<p>\u8d1f\u8d23\u4ece\u6570\u636e\u6e90\u4ea7\u751f\u6570\u636e\u5e76\u6ce8\u5165\u6570\u636e\u6d41\uff0c\u4e0d\u63a5\u6536\u4e0a\u6e38\u6570\u636e\uff1a</p> <pre><code>from sage.core.operator.base_operator import BaseOperator\nfrom sage.core.api.function.source_function import SourceFunction, StopSignal\nfrom sage.core.api.packet import Packet\n\nclass SourceOperator(BaseOperator):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    def process_packet(self, packet: 'Packet' = None):\n        \"\"\"\u6e90\u7b97\u5b50\u4e0d\u63a5\u6536\u4e0a\u6e38\u6570\u636e\u5305\uff0c\u76f4\u63a5\u6267\u884cFunction\u751f\u6210\u6570\u636e\"\"\"\n        try:\n            # \u8c03\u7528 SourceFunction \u751f\u6210\u6570\u636e\n            result = self.function.execute()\n            self.logger.debug(f\"Operator {self.name} processed data with result: {result}\")\n\n            # \u68c0\u67e5\u662f\u5426\u6536\u5230\u505c\u6b62\u4fe1\u53f7\n            if isinstance(result, StopSignal):\n                self.logger.info(f\"Source Operator {self.name} received stop signal: {result}\")\n                result.name = self.name\n                self.router.send_stop_signal(result)\n                self.task.stop()\n                return\n\n            # \u53d1\u9001\u6570\u636e\u5230\u4e0b\u6e38\n            if result is not None:\n                self.logger.info(f\"SourceOperator {self.name}: Sending packet with payload: {result}\")\n                success = self.router.send(Packet(result))\n                self.logger.info(f\"SourceOperator {self.name}: Send result: {success}\")\n\n                # \u5982\u679c\u53d1\u9001\u5931\u8d25\uff08\u5982\u961f\u5217\u5df2\u5173\u95ed\uff09\uff0c\u505c\u6b62\u4efb\u52a1\n                if not success:\n                    self.logger.warning(f\"Source Operator {self.name} failed to send packet, stopping task\")\n                    if hasattr(self, 'task') and hasattr(self.task, 'stop'):\n                        self.task.stop()\n                    return\n        except Exception as e:\n            self.logger.error(f\"Error in {self.name}.process(): {e}\", exc_info=True)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#2-mapoperator","title":"2. \u6620\u5c04\u7b97\u5b50 (MapOperator)","text":"<p>\u5bf9\u6bcf\u4e2a\u6570\u636e\u5143\u7d20\u5e94\u7528\u8f6c\u6362\u51fd\u6570\uff0c\u4e00\u5bf9\u4e00\u6620\u5c04\uff1a</p> <pre><code>from sage.core.operator.base_operator import BaseOperator\nfrom sage.core.api.packet import Packet\nimport time\nimport os\nimport json\n\nclass MapOperator(BaseOperator):\n    def __init__(self, function_factory, ctx, enable_profile=False, *args, **kwargs):\n        # \u79fb\u9664 enable_profile \u907f\u514d\u4f20\u9012\u7ed9 BaseOperator\n        kwargs.pop('enable_profile', None)\n        super().__init__(function_factory, ctx, *args, **kwargs)\n        self.enable_profile = enable_profile\n        if self.enable_profile:\n            self._setup_time_tracking()\n\n    def _setup_time_tracking(self):\n        \"\"\"\u8bbe\u7f6e\u6027\u80fd\u7edf\u8ba1\"\"\"\n        if hasattr(self.ctx, 'env_base_dir') and self.ctx.env_base_dir:\n            self.time_base_path = os.path.join(self.ctx.env_base_dir, \n                                             \".sage_states\", \"time_records\")\n        else:\n            self.time_base_path = os.path.join(os.getcwd(), \n                                             \".sage_states\", \"time_records\")\n\n        os.makedirs(self.time_base_path, exist_ok=True)\n        self.time_records = []\n\n    def process_packet(self, packet: 'Packet' = None):\n        \"\"\"\u5904\u7406\u6570\u636e\u5305\uff0c\u5e94\u7528\u6620\u5c04\u51fd\u6570\"\"\"\n        try:\n            if packet is None or packet.payload is None:\n                self.logger.warning(f\"Operator {self.name} received empty data\")\n                return\n\n            start_time = time.time() if self.enable_profile else None\n\n            # \u8c03\u7528 MapFunction \u5904\u7406\u6570\u636e\n            result = self.function.execute(packet.payload)\n            self.logger.debug(f\"Operator {self.name} processed data with result: {result}\")\n\n            if self.enable_profile:\n                duration = time.time() - start_time\n                self._save_time_record(duration)\n\n            # \u53d1\u9001\u5904\u7406\u7ed3\u679c\u5230\u4e0b\u6e38\n            if result is not None:\n                # \u7ee7\u627f\u5206\u533a\u4fe1\u606f\n                output_packet = packet.inherit_partition_info(result)\n                success = self.router.send(output_packet)\n                if not success:\n                    self.logger.warning(f\"Map Operator {self.name} failed to send packet\")\n\n        except Exception as e:\n            self.logger.error(f\"Error in {self.name}.process(): {e}\", exc_info=True)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#3-filteroperator","title":"3. \u8fc7\u6ee4\u7b97\u5b50 (FilterOperator)","text":"<p>\u6839\u636e\u8c13\u8bcd\u6761\u4ef6\u8fc7\u6ee4\u6570\u636e\u5143\u7d20\uff1a</p> <pre><code>from sage.core.operator.base_operator import BaseOperator\nfrom sage.core.api.packet import Packet\n\nclass FilterOperator(BaseOperator):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    def process_packet(self, packet: 'Packet' = None):\n        \"\"\"\u5904\u7406\u6570\u636e\u5305\uff0c\u5e94\u7528\u8fc7\u6ee4\u6761\u4ef6\"\"\"\n        try:\n            if packet is None or packet.payload is None:\n                self.logger.warning(f\"Operator {self.name} received empty data\")\n                return\n\n            # \u8c03\u7528 FilterFunction \u68c0\u67e5\u8fc7\u6ee4\u6761\u4ef6\n            should_pass = self.function.execute(packet.payload)\n            self.logger.debug(f\"Operator {self.name} filter result: {should_pass}\")\n\n            # \u53ea\u6709\u901a\u8fc7\u8fc7\u6ee4\u6761\u4ef6\u7684\u6570\u636e\u624d\u53d1\u9001\u5230\u4e0b\u6e38\n            if should_pass:\n                success = self.router.send(packet)\n                if not success:\n                    self.logger.warning(f\"Filter Operator {self.name} failed to send packet\")\n\n        except Exception as e:\n            self.logger.error(f\"Error in {self.name}.process(): {e}\", exc_info=True)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#4-sinkoperator","title":"4. \u6c47\u7b97\u5b50 (SinkOperator)","text":"<p>\u8d1f\u8d23\u5c06\u6570\u636e\u8f93\u51fa\u5230\u5916\u90e8\u7cfb\u7edf\uff0c\u662f\u6570\u636e\u6d41\u7684\u7ec8\u70b9\uff1a</p> <pre><code>from sage.core.operator.base_operator import BaseOperator\nfrom sage.core.api.packet import Packet\n\nclass SinkOperator(BaseOperator):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    def process_packet(self, packet: 'Packet' = None):\n        \"\"\"\u5904\u7406\u6570\u636e\u5305\uff0c\u8f93\u51fa\u5230\u5916\u90e8\u7cfb\u7edf\"\"\"\n        try:\n            if packet is None or packet.payload is None:\n                self.logger.warning(f\"Operator {self.name} received empty data\")\n            else:\n                # \u8c03\u7528 SinkFunction \u8f93\u51fa\u6570\u636e\n                result = self.function.execute(packet.payload)\n                self.logger.debug(f\"Operator {self.name} processed data with result: {result}\")\n        except Exception as e:\n            self.logger.error(f\"Error in {self.name}.process(): {e}\", exc_info=True)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#5-flatmapoperator","title":"5. \u6241\u5e73\u6620\u5c04\u7b97\u5b50 (FlatMapOperator)","text":"<p>\u5c06\u6bcf\u4e2a\u8f93\u5165\u5143\u7d20\u6620\u5c04\u4e3a\u96f6\u4e2a\u6216\u591a\u4e2a\u8f93\u51fa\u5143\u7d20\uff1a</p> <pre><code>from sage.core.operator.base_operator import BaseOperator\nfrom sage.core.api.packet import Packet\n\nclass FlatMapOperator(BaseOperator):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    def process_packet(self, packet: 'Packet' = None):\n        \"\"\"\u5904\u7406\u6570\u636e\u5305\uff0c\u5e94\u7528\u6241\u5e73\u6620\u5c04\"\"\"\n        try:\n            if packet is None or packet.payload is None:\n                self.logger.warning(f\"Operator {self.name} received empty data\")\n                return\n\n            # \u8c03\u7528 FlatMapFunction\uff0c\u53ef\u80fd\u8fd4\u56de\u591a\u4e2a\u7ed3\u679c\n            results = self.function.execute(packet.payload)\n            self.logger.debug(f\"Operator {self.name} processed data with results: {results}\")\n\n            # \u53d1\u9001\u6240\u6709\u7ed3\u679c\u5230\u4e0b\u6e38\n            if results:\n                for result in results:\n                    if result is not None:\n                        output_packet = packet.inherit_partition_info(result)\n                        success = self.router.send(output_packet)\n                        if not success:\n                            self.logger.warning(f\"FlatMap Operator {self.name} failed to send packet\")\n                            break\n\n            # \u4fdd\u5b58\u72b6\u6001\uff08\u5982\u679c\u662f\u6709\u72b6\u6001Function\uff09\n            from sage.core.api.function.base_function import StatefulFunction\n            if isinstance(self.function, StatefulFunction):\n                self.function.save_state()\n\n        except Exception as e:\n            self.logger.error(f\"Error in {self.name}.process(): {e}\", exc_info=True)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#6-keybyoperator","title":"6. \u5206\u7ec4\u7b97\u5b50 (KeyByOperator)","text":"<p>\u6839\u636e\u952e\u51fd\u6570\u5bf9\u6570\u636e\u91cd\u65b0\u5206\u533a\uff1a</p> <pre><code>from sage.core.operator.base_operator import BaseOperator\nfrom sage.core.api.packet import Packet\n\nclass KeyByOperator(BaseOperator):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    def process_packet(self, packet: 'Packet' = None):\n        \"\"\"\u5904\u7406\u6570\u636e\u5305\uff0c\u91cd\u65b0\u5206\u533a\"\"\"\n        try:\n            if packet is None or packet.payload is None:\n                self.logger.warning(f\"Operator {self.name} received empty data\")\n                return\n\n            # \u8c03\u7528 KeyByFunction \u8ba1\u7b97\u65b0\u7684\u5206\u533a\u952e\n            new_key = self.function.execute(packet.payload)\n            self.logger.debug(f\"Operator {self.name} computed key: {new_key}\")\n\n            # \u66f4\u65b0\u5206\u533a\u4fe1\u606f\u5e76\u53d1\u9001\n            if new_key is not None:\n                output_packet = packet.update_key(new_key, \"hash\")\n                success = self.router.send(output_packet)\n                if not success:\n                    self.logger.warning(f\"KeyBy Operator {self.name} failed to send packet\")\n\n        except Exception as e:\n            self.logger.error(f\"Error in {self.name}.process(): {e}\", exc_info=True)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#_4","title":"\u26a1 \u9ad8\u7ea7\u7279\u6027","text":""},{"location":"kernel/core/operators/operators_overview/#1","title":"1. \u72b6\u6001\u7ba1\u7406","text":"<p>SAGE \u901a\u8fc7 StatefulFunction \u652f\u6301\u6709\u72b6\u6001\u7684\u7b97\u5b50\uff1a</p> <pre><code>from sage.core.api.function.base_function import StatefulFunction\n\nclass CounterFunction(StatefulFunction):\n    \"\"\"\u8ba1\u6570\u5668\u51fd\u6570\u793a\u4f8b\"\"\"\n    __state_include__ = ['count']  # \u6307\u5b9a\u9700\u8981\u6301\u4e45\u5316\u7684\u5b57\u6bb5\n\n    def __init__(self):\n        super().__init__()\n        self.count = 0\n\n    def execute(self, data):\n        self.count += 1\n        return f\"Processed {self.count} items: {data}\"\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#2","title":"2. \u6279\u5904\u7406\u7b97\u5b50","text":"<p>\u652f\u6301\u6279\u91cf\u5904\u7406\u6570\u636e\u4ee5\u63d0\u9ad8\u6548\u7387\uff1a</p> <pre><code>from sage.core.operator.base_operator import BaseOperator\nfrom sage.core.api.packet import Packet\n\nclass BatchOperator(BaseOperator):\n    def __init__(self, batch_size: int = 32, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.batch_size = batch_size\n        self.batch_buffer = []\n\n    def process_packet(self, packet: 'Packet' = None):\n        \"\"\"\u7d2f\u79ef\u6570\u636e\u5230\u6279\u6b21\uff0c\u8fbe\u5230\u6279\u6b21\u5927\u5c0f\u65f6\u5904\u7406\"\"\"\n        try:\n            if packet is None or packet.payload is None:\n                self.logger.warning(f\"Operator {self.name} received empty data\")\n                return\n\n            self.batch_buffer.append(packet.payload)\n\n            # \u5f53\u6279\u6b21\u6ee1\u65f6\u5904\u7406\n            if len(self.batch_buffer) &gt;= self.batch_size:\n                batch_data = list(self.batch_buffer)\n                self.batch_buffer.clear()\n\n                # \u8c03\u7528 BatchFunction \u5904\u7406\u6279\u91cf\u6570\u636e\n                results = self.function.execute(batch_data)\n\n                # \u53d1\u9001\u6279\u6b21\u7ed3\u679c\n                if results:\n                    for result in results:\n                        if result is not None:\n                            output_packet = packet.inherit_partition_info(result)\n                            success = self.router.send(output_packet)\n                            if not success:\n                                self.logger.warning(f\"Batch Operator {self.name} failed to send packet\")\n                                break\n\n        except Exception as e:\n            self.logger.error(f\"Error in {self.name}.process(): {e}\", exc_info=True)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#3-joinoperator","title":"3. \u8fde\u63a5\u7b97\u5b50 (JoinOperator)","text":"<p>\u652f\u6301\u591a\u6d41\u8fde\u63a5\u64cd\u4f5c\uff1a</p> <pre><code>from sage.core.operator.base_operator import BaseOperator\nfrom sage.core.api.function.base_function import StatefulFunction\nfrom sage.core.api.packet import Packet\n\nclass JoinOperator(BaseOperator):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    def process_packet(self, packet: 'Packet' = None):\n        \"\"\"\u5904\u7406\u8fde\u63a5\u64cd\u4f5c\"\"\"\n        try:\n            if packet is None or packet.payload is None:\n                self.logger.warning(f\"Operator {self.name} received empty data\")\n                return\n\n            # \u8c03\u7528 JoinFunction \u8fdb\u884c\u8fde\u63a5\u903b\u8f91\n            results = self.function.execute(packet.payload, packet.input_index)\n\n            # \u53d1\u9001\u8fde\u63a5\u7ed3\u679c\n            if results:\n                for result in results:\n                    if result is not None:\n                        output_packet = packet.inherit_partition_info(result)\n                        success = self.router.send(output_packet)\n                        if not success:\n                            self.logger.warning(f\"Join Operator {self.name} failed to send packet\")\n                            break\n\n        except Exception as e:\n            self.logger.error(f\"Error in {self.name}.process(): {e}\", exc_info=True)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#4","title":"4. \u6027\u80fd\u76d1\u63a7","text":"<p>MapOperator \u652f\u6301\u6027\u80fd\u76d1\u63a7\u529f\u80fd\uff1a</p> <pre><code>def _save_time_record(self, duration: float):\n    \"\"\"\u4fdd\u5b58\u6267\u884c\u65f6\u95f4\u8bb0\u5f55\"\"\"\n    if not self.enable_profile:\n        return\n\n    record = {\n        'timestamp': time.time(),\n        'duration': duration,\n        'function_name': self.function.__class__.__name__,\n        'operator_name': self.name\n    }\n\n    self.time_records.append(record)\n\n    # \u5b9a\u671f\u4fdd\u5b58\u5230\u6587\u4ef6\n    if len(self.time_records) &gt;= 100:\n        self._flush_time_records()\n\ndef _flush_time_records(self):\n    \"\"\"\u5237\u65b0\u65f6\u95f4\u8bb0\u5f55\u5230\u6587\u4ef6\"\"\"\n    if not self.time_records:\n        return\n\n    file_path = os.path.join(self.time_base_path, f\"{self.name}_timing.jsonl\")\n    with open(file_path, 'a') as f:\n        for record in self.time_records:\n            f.write(json.dumps(record) + '\\n')\n\n    self.time_records.clear()\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#_5","title":"\ud83d\udd27 \u7b97\u5b50\u8fd0\u884c\u65f6\u67b6\u6784","text":""},{"location":"kernel/core/operators/operators_overview/#task-operator","title":"Task \u4e0e Operator \u7684\u5173\u7cfb","text":"<p>\u5728 SAGE \u4e2d\uff0c\u6bcf\u4e2a\u7b97\u5b50\u90fd\u8fd0\u884c\u5728\u4e00\u4e2a\u72ec\u7acb\u7684 Task \u4e2d\uff1a</p> <pre><code>from sage.kernel.runtime.task.base_task import BaseTask\n\nclass OperatorTask(BaseTask):\n    \"\"\"\u7b97\u5b50\u4efb\u52a1\u5305\u88c5\u5668\"\"\"\n    def __init__(self, operator: BaseOperator):\n        super().__init__()\n        self.operator = operator\n        self.operator.task = self  # \u6ce8\u5165\u4efb\u52a1\u5f15\u7528\n\n    async def run(self):\n        \"\"\"\u4efb\u52a1\u8fd0\u884c\u903b\u8f91\"\"\"\n        while self.running:\n            try:\n                # \u7b49\u5f85\u63a5\u6536\u6570\u636e\u5305\n                packet = await self.input_queue.get()\n\n                if packet is None:  # \u505c\u6b62\u4fe1\u53f7\n                    break\n\n                # \u59d4\u6258\u7ed9\u7b97\u5b50\u5904\u7406\n                self.operator.receive_packet(packet)\n\n            except Exception as e:\n                self.logger.error(f\"Task {self.name} error: {e}\")\n                break\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#router","title":"Router \u8def\u7531\u7cfb\u7edf","text":"<p>\u7b97\u5b50\u901a\u8fc7 Router \u8fdb\u884c\u6570\u636e\u4f20\u9012\uff1a</p> <pre><code>from sage.kernel.runtime.communication.router.router import BaseRouter\n\nclass OperatorRouter(BaseRouter):\n    \"\"\"\u7b97\u5b50\u8def\u7531\u5668\"\"\"\n    def __init__(self):\n        self.output_channels = []\n        self.stopped = False\n\n    def send(self, packet: 'Packet') -&gt; bool:\n        \"\"\"\u53d1\u9001\u6570\u636e\u5305\u5230\u4e0b\u6e38\"\"\"\n        if self.stopped:\n            return False\n\n        for channel in self.output_channels:\n            try:\n                channel.send(packet)\n            except Exception as e:\n                self.logger.error(f\"Failed to send packet: {e}\")\n                return False\n        return True\n\n    def send_stop_signal(self, stop_signal):\n        \"\"\"\u53d1\u9001\u505c\u6b62\u4fe1\u53f7\"\"\"\n        self.stopped = True\n        # \u901a\u77e5\u4e0b\u6e38\u4efb\u52a1\u505c\u6b62\n        for channel in self.output_channels:\n            channel.send_stop_signal(stop_signal)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#function-factory","title":"Function Factory","text":"<p>\u901a\u8fc7\u5de5\u5382\u6a21\u5f0f\u521b\u5efa Function \u5b9e\u4f8b\uff1a</p> <pre><code>from sage.core.factory.function_factory import FunctionFactory\n\nclass DefaultFunctionFactory(FunctionFactory):\n    \"\"\"\u9ed8\u8ba4Function\u5de5\u5382\"\"\"\n    def __init__(self):\n        self.function_registry = {}\n\n    def register_function(self, name: str, function_class):\n        \"\"\"\u6ce8\u518cFunction\u7c7b\"\"\"\n        self.function_registry[name] = function_class\n\n    def create_function(self, name: str, ctx: 'TaskContext'):\n        \"\"\"\u521b\u5efaFunction\u5b9e\u4f8b\"\"\"\n        if name not in self.function_registry:\n            raise ValueError(f\"Unknown function: {name}\")\n\n        function_class = self.function_registry[name]\n        function = function_class()\n\n        # \u6ce8\u5165\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\n        function.ctx = ctx\n        return function\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#_6","title":"\ud83d\udcca \u5b9e\u9645\u5e94\u7528\u793a\u4f8b","text":""},{"location":"kernel/core/operators/operators_overview/#1_1","title":"1. \u7b80\u5355\u7684\u6570\u636e\u5904\u7406\u6d41\u6c34\u7ebf","text":"<pre><code>from sage.core.api.function.source_function import SourceFunction\nfrom sage.core.api.function.map_function import MapFunction\nfrom sage.core.api.function.sink_function import SinkFunction\n\n# \u5b9a\u4e49\u6570\u636e\u6e90\nclass NumberSourceFunction(SourceFunction):\n    def __init__(self):\n        super().__init__()\n        self.current = 0\n\n    def execute(self):\n        if self.current &lt; 10:\n            self.current += 1\n            return self.current\n        else:\n            return StopSignal(\"Finished generating numbers\")\n\n# \u5b9a\u4e49\u6620\u5c04\u51fd\u6570\nclass SquareMapFunction(MapFunction):\n    def execute(self, data):\n        return data * data\n\n# \u5b9a\u4e49\u8f93\u51fa\u51fd\u6570\nclass PrintSinkFunction(SinkFunction):\n    def execute(self, data):\n        print(f\"Result: {data}\")\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#2_1","title":"2. \u6709\u72b6\u6001\u7684\u8ba1\u6570\u5668","text":"<pre><code>from sage.core.api.function.base_function import StatefulFunction\n\nclass CounterMapFunction(StatefulFunction):\n    __state_include__ = ['total_count']\n\n    def __init__(self):\n        super().__init__()\n        self.total_count = 0\n\n    def execute(self, data):\n        self.total_count += 1\n        return f\"Item {self.total_count}: {data}\"\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#3","title":"3. \u6279\u5904\u7406\u793a\u4f8b","text":"<pre><code>from sage.core.api.function.batch_function import BatchFunction\n\nclass SumBatchFunction(BatchFunction):\n    def execute(self, batch_data):\n        \"\"\"\u5bf9\u6279\u6b21\u6570\u636e\u6c42\u548c\"\"\"\n        total = sum(batch_data)\n        return [f\"Batch sum: {total}\"]\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#_7","title":"\ud83d\udee0\ufe0f \u5f00\u53d1\u6307\u5357","text":""},{"location":"kernel/core/operators/operators_overview/#1_2","title":"1. \u521b\u5efa\u81ea\u5b9a\u4e49\u7b97\u5b50","text":"<p>\u867d\u7136 SAGE \u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u7b97\u5b50\u96c6\u5408\uff0c\u4f46\u5982\u679c\u9700\u8981\u7279\u6b8a\u7684\u5904\u7406\u903b\u8f91\uff0c\u53ef\u4ee5\u6269\u5c55 BaseOperator\uff1a</p> <pre><code>class CustomOperator(BaseOperator):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        # \u81ea\u5b9a\u4e49\u521d\u59cb\u5316\u903b\u8f91\n\n    def process_packet(self, packet: 'Packet' = None):\n        \"\"\"\u81ea\u5b9a\u4e49\u5904\u7406\u903b\u8f91\"\"\"\n        try:\n            if packet is None or packet.payload is None:\n                return\n\n            # \u6267\u884c\u81ea\u5b9a\u4e49\u5904\u7406\n            result = self.function.execute(packet.payload)\n\n            # \u53d1\u9001\u7ed3\u679c\n            if result is not None:\n                output_packet = packet.inherit_partition_info(result)\n                success = self.router.send(output_packet)\n                if not success:\n                    self.logger.warning(\"Failed to send packet\")\n\n        except Exception as e:\n            self.logger.error(f\"Error in {self.name}: {e}\", exc_info=True)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#2-function","title":"2. \u81ea\u5b9a\u4e49 Function","text":"<p>\u7ee7\u627f\u9002\u5f53\u7684 Function \u57fa\u7c7b\u6765\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\uff1a</p> <pre><code>from sage.core.api.function.map_function import MapFunction\n\nclass MyCustomFunction(MapFunction):\n    def __init__(self, multiplier=2):\n        super().__init__()\n        self.multiplier = multiplier\n\n    def execute(self, data):\n        # \u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u6620\u5c04\u903b\u8f91\n        return data * self.multiplier\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#3-function_1","title":"3. \u6709\u72b6\u6001 Function","text":"<pre><code>from sage.core.api.function.base_function import StatefulFunction\n\nclass WindowAverageFunction(StatefulFunction):\n    __state_include__ = ['window_data', 'window_size']\n\n    def __init__(self, window_size=5):\n        super().__init__()\n        self.window_size = window_size\n        self.window_data = []\n\n    def execute(self, data):\n        self.window_data.append(data)\n        if len(self.window_data) &gt; self.window_size:\n            self.window_data.pop(0)\n\n        return sum(self.window_data) / len(self.window_data)\n</code></pre>"},{"location":"kernel/core/operators/operators_overview/#_8","title":"\ud83d\udccb \u5173\u952e\u7279\u6027\u603b\u7ed3","text":""},{"location":"kernel/core/operators/operators_overview/#1_3","title":"1. \u6838\u5fc3\u8bbe\u8ba1\u539f\u5219","text":"<ul> <li>\u5206\u5c42\u67b6\u6784: Operator \u8d1f\u8d23\u8fd0\u884c\u65f6\u8c03\u5ea6\uff0cFunction \u8d1f\u8d23\u4e1a\u52a1\u903b\u8f91</li> <li>\u6570\u636e\u5305\u4f20\u9012: \u901a\u8fc7 Packet \u548c Router \u5b9e\u73b0\u7b97\u5b50\u95f4\u901a\u4fe1</li> <li>\u5de5\u5382\u6a21\u5f0f: \u901a\u8fc7 FunctionFactory \u52a8\u6001\u521b\u5efa Function \u5b9e\u4f8b</li> <li>\u72b6\u6001\u7ba1\u7406: \u652f\u6301 StatefulFunction \u7684\u81ea\u52a8\u72b6\u6001\u6301\u4e45\u5316</li> </ul>"},{"location":"kernel/core/operators/operators_overview/#2_2","title":"2. \u7b97\u5b50\u7c7b\u578b","text":"\u7b97\u5b50\u7c7b\u578b \u529f\u80fd\u63cf\u8ff0 \u5bf9\u5e94Function SourceOperator \u6570\u636e\u6e90\uff0c\u751f\u6210\u6570\u636e\u6d41 SourceFunction MapOperator \u4e00\u5bf9\u4e00\u6570\u636e\u8f6c\u6362 MapFunction FilterOperator \u6761\u4ef6\u8fc7\u6ee4 FilterFunction FlatMapOperator \u4e00\u5bf9\u591a\u6570\u636e\u8f6c\u6362 FlatMapFunction SinkOperator \u6570\u636e\u8f93\u51fa SinkFunction BatchOperator \u6279\u91cf\u5904\u7406 BatchFunction JoinOperator \u591a\u6d41\u8fde\u63a5 JoinFunction KeyByOperator \u6570\u636e\u91cd\u5206\u533a KeyByFunction"},{"location":"kernel/core/operators/operators_overview/#3_1","title":"3. \u8fd0\u884c\u65f6\u7279\u6027","text":"<ul> <li>\u5f02\u6b65\u5904\u7406: \u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\u5f02\u6b65\u5904\u7406\u6a21\u578b</li> <li>\u9519\u8bef\u5904\u7406: \u5b8c\u5584\u7684\u5f02\u5e38\u5904\u7406\u548c\u65e5\u5fd7\u8bb0\u5f55</li> <li>\u6027\u80fd\u76d1\u63a7: \u652f\u6301\u6267\u884c\u65f6\u95f4\u7edf\u8ba1\u548c\u6027\u80fd\u5206\u6790</li> <li>\u5bb9\u9519\u673a\u5236: \u652f\u6301\u72b6\u6001\u68c0\u67e5\u70b9\u548c\u6062\u590d</li> </ul>"},{"location":"kernel/core/operators/operators_overview/#4_1","title":"4. \u6700\u4f73\u5b9e\u8df5","text":"<ol> <li>Function \u8bbe\u8ba1:</li> <li>\u4fdd\u6301 Function \u7684\u7eaf\u51fd\u6570\u7279\u6027</li> <li>\u4f7f\u7528 <code>__state_include__</code> \u7cbe\u786e\u63a7\u5236\u72b6\u6001\u5e8f\u5217\u5316</li> <li> <p>\u907f\u514d\u5728 Function \u4e2d\u8fdb\u884c I/O \u64cd\u4f5c</p> </li> <li> <p>\u9519\u8bef\u5904\u7406:</p> </li> <li>\u5728 Function \u4e2d\u629b\u51fa\u5177\u4f53\u7684\u5f02\u5e38</li> <li> <p>\u4f9d\u8d56 Operator \u8fdb\u884c\u7edf\u4e00\u7684\u9519\u8bef\u5904\u7406\u548c\u65e5\u5fd7\u8bb0\u5f55</p> </li> <li> <p>\u6027\u80fd\u4f18\u5316:</p> </li> <li>\u4f7f\u7528 BatchOperator \u8fdb\u884c\u6279\u91cf\u5904\u7406</li> <li>\u5408\u7406\u8bbe\u7f6e\u5206\u533a\u7b56\u7565\u63d0\u9ad8\u5e76\u884c\u5ea6</li> <li> <p>\u542f\u7528\u6027\u80fd\u76d1\u63a7\u5206\u6790\u74f6\u9888</p> </li> <li> <p>\u72b6\u6001\u7ba1\u7406:</p> </li> <li>\u53ea\u6709\u9700\u8981\u8de8\u6279\u6b21\u4fdd\u6301\u72b6\u6001\u7684 Function \u624d\u7ee7\u627f StatefulFunction</li> <li>\u5b9a\u671f\u8c03\u7528 save_state() \u8fdb\u884c\u72b6\u6001\u6301\u4e45\u5316</li> </ol> <p>\u76f8\u5173\u6587\u6863:  - Function \u51fd\u6570\u7cfb\u7edf\u8be6\u89e3 -  \u4efb\u52a1\u6982\u89c8 -  \u901a\u4fe1\u8def\u7531\u6982\u89c8</p>"},{"location":"kernel/examples/","title":"SAGE Kernel Examples","text":"<p>This directory contains practical examples demonstrating how to use SAGE Kernel components and APIs.</p>"},{"location":"kernel/examples/#example-categories","title":"Example Categories","text":""},{"location":"kernel/examples/#basic-usage","title":"Basic Usage","text":"<ul> <li> \u7b80\u5355\u6d41\u5904\u7406\u793a\u4f8b - Basic streaming operations</li> <li> \u73af\u5883\u8bbe\u7f6e\u793a\u4f8b - Setting up local and remote environments</li> <li> \u6570\u636e\u5904\u7406\u793a\u4f8b - Simple data processing pipelines</li> </ul>"},{"location":"kernel/examples/#advanced-streaming","title":"Advanced Streaming","text":"<ul> <li> \u8fde\u63a5\u6d41\u793a\u4f8b - Multi-stream processing</li> <li> \u7a97\u53e3\u64cd\u4f5c\u793a\u4f8b - Time and count-based windows</li> <li> \u590d\u6742\u4e8b\u4ef6\u5904\u7406\u793a\u4f8b - Pattern detection</li> </ul>"},{"location":"kernel/examples/#integration-examples","title":"Integration Examples","text":"<ul> <li> \u4e2d\u95f4\u4ef6\u96c6\u6210\u793a\u4f8b - Using with sage-middleware</li> <li> \u81ea\u5b9a\u4e49\u51fd\u6570\u793a\u4f8b - Custom function development</li> <li> \u63d2\u4ef6\u5f00\u53d1\u793a\u4f8b - Creating kernel plugins</li> </ul>"},{"location":"kernel/examples/#real-world-use-cases","title":"Real-World Use Cases","text":"<ul> <li> \u65e5\u5fd7\u5904\u7406\u793a\u4f8b - Log analysis pipeline</li> <li> IoT\u6570\u636e\u6d41\u793a\u4f8b - IoT sensor data processing</li> <li> \u91d1\u878d\u4ea4\u6613\u793a\u4f8b - Real-time trading data analysis</li> </ul>"},{"location":"kernel/examples/#running-examples","title":"Running Examples","text":"<p>Each example can be run independently:</p> <pre><code>cd packages/sage-kernel\npython examples/basic/simple-streaming.py\n</code></pre> <p>Or using the sage CLI:</p> <pre><code>sage run examples/basic/simple-streaming.py\n</code></pre>"},{"location":"kernel/examples/#example-requirements","title":"Example Requirements","text":"<p>Some examples may require additional dependencies: - <code>pandas</code> for data manipulation examples - <code>numpy</code> for numerical computation examples - <code>matplotlib</code> for visualization examples</p> <p>Install with: <pre><code>pip install intsage-kernel[examples]\n</code></pre></p>"},{"location":"kernel/examples/#contributing-examples","title":"Contributing Examples","text":"<p>When adding new examples: 1. Place them in the appropriate category directory 2. Include clear documentation and comments 3. Add any required dependencies to the example header 4. Update this README with the new example</p>"},{"location":"kernel/examples/basic_tutorials/","title":"\u57fa\u7840\u6559\u7a0b","text":"<p>\u6b22\u8fce\u6765\u5230SAGE\u7684\u57fa\u7840\u6559\u7a0b\uff01\u672c\u6559\u7a0b\u5c06\u901a\u8fc7\u4e00\u7cfb\u5217\u5faa\u5e8f\u6e10\u8fdb\u7684\u793a\u4f8b\uff0c\u5e2e\u52a9\u60a8\u638c\u63e1SAGE\u6570\u636e\u6d41\u7f16\u7a0b\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u6bcf\u4e2a\u793a\u4f8b\u90fd\u5305\u542b\u5b8c\u6574\u7684\u4ee3\u7801\u548c\u8be6\u7ec6\u7684\u89e3\u91ca\u3002</p>"},{"location":"kernel/examples/basic_tutorials/#_2","title":"\ud83c\udfaf \u5b66\u4e60\u76ee\u6807","text":"<p>\u5b8c\u6210\u672c\u6559\u7a0b\u540e\uff0c\u60a8\u5c06\u80fd\u591f\uff1a - \u7406\u89e3SAGE\u6570\u636e\u6d41\u7f16\u7a0b\u7684\u57fa\u672c\u6982\u5ff5 - \u4f7f\u7528SAGE API\u6784\u5efa\u7b80\u5355\u7684\u6570\u636e\u5904\u7406\u6d41\u6c34\u7ebf - \u638c\u63e1\u5e38\u7528\u7684\u6570\u636e\u8f6c\u6362\u64cd\u4f5c - \u4e86\u89e3\u5982\u4f55\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u6e90\u548c\u8f93\u51fa</p>"},{"location":"kernel/examples/basic_tutorials/#_3","title":"\ud83d\udccb \u51c6\u5907\u5de5\u4f5c","text":""},{"location":"kernel/examples/basic_tutorials/#sage","title":"\u5b89\u88c5SAGE","text":"<pre><code>pip install sage-framework\n</code></pre>"},{"location":"kernel/examples/basic_tutorials/#_4","title":"\u5bfc\u5165\u5fc5\u8981\u7684\u6a21\u5757","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.remote_environment import RemoteEnvironment\nfrom sage.lib.io_utils.source import FileSource, ListSource\nfrom sage.lib.io_utils.sink import FileSink, ConsoleSink\nimport time\n</code></pre>"},{"location":"kernel/examples/basic_tutorials/#1","title":"\ud83d\udcda \u6559\u7a0b1\uff1a\u7b2c\u4e00\u4e2a\u6570\u636e\u6d41\u7a0b\u5e8f","text":"<p>\u8ba9\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u5f00\u59cb - \u5904\u7406\u4e00\u4e2a\u6570\u5b57\u5217\u8868\uff1a</p> <pre><code>def tutorial_01_hello_sage():\n    \"\"\"\u7b2c\u4e00\u4e2aSAGE\u7a0b\u5e8f\uff1a\u5904\u7406\u6570\u5b57\u5217\u8868\"\"\"\n\n    # \u521b\u5efa\u672c\u5730\u6267\u884c\u73af\u5883\n    env = LocalEnvironment()\n\n    # \u521b\u5efa\u6570\u636e\u6e90\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n    # \u6784\u5efa\u6570\u636e\u6d41\u6c34\u7ebf\n    result = (env\n        .from_batch(numbers)                    # \u4ece\u5217\u8868\u521b\u5efa\u6570\u636e\u6d41\n         - [\u6570\u636e\u6d41\u5f00\u53d1\u6307\u5357](../guides/dataflow_development.md) - \u66f4\u6df1\u5165\u7684\u5f00\u53d1\u6280\u5de7\n   - [\u81ea\u5b9a\u4e49\u7b97\u5b50\u5f00\u53d1](../guides/custom_operators.md) - \u6269\u5c55SAGE\u529f\u80fdmap(lambda x: x * 2)                   # \u6bcf\u4e2a\u6570\u5b57\u4e58\u4ee52\n        .filter(lambda x: x &gt; 10)               # \u8fc7\u6ee4\u5927\u4e8e10\u7684\u6570\u5b57\n        .map(lambda x: f\"Result: {x}\")          # \u683c\u5f0f\u5316\u8f93\u51fa\n        .sink(ConsoleSink())                    # \u8f93\u51fa\u5230\u63a7\u5236\u53f0\n    )\n\n    # \u6267\u884c\u6d41\u6c34\u7ebf\n    env.submit()\n    print(\"\u7b2c\u4e00\u4e2aSAGE\u7a0b\u5e8f\u6267\u884c\u5b8c\u6210\uff01\")\n\n# \u8fd0\u884c\u793a\u4f8b\ntutorial_01_hello_sage()\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\uff1a <pre><code>Result: 12\nResult: 14\nResult: 16\nResult: 18\nResult: 20\n\u7b2c\u4e00\u4e2aSAGE\u7a0b\u5e8f\u6267\u884c\u5b8c\u6210\uff01\n</code></pre></p> <p>\u89e3\u91ca\uff1a - <code>from_batch()</code>: \u4ecePython\u5217\u8868\u521b\u5efa\u6570\u636e\u6d41 - <code>map()</code>: \u5bf9\u6bcf\u4e2a\u6570\u636e\u9879\u5e94\u7528\u8f6c\u6362\u51fd\u6570 - <code>filter()</code>: \u6839\u636e\u6761\u4ef6\u8fc7\u6ee4\u6570\u636e - <code>sink()</code>: \u6307\u5b9a\u6570\u636e\u8f93\u51fa\u76ee\u6807 - <code>submit()</code>: \u5f00\u59cb\u6267\u884c\u6d41\u6c34\u7ebf</p>"},{"location":"kernel/examples/basic_tutorials/#2","title":"\ud83d\udcda \u6559\u7a0b2\uff1a\u6587\u4ef6\u5904\u7406","text":"<p>\u5904\u7406\u6587\u672c\u6587\u4ef6\u662f\u5e38\u89c1\u9700\u6c42\uff0c\u8ba9\u6211\u4eec\u5b66\u4e60\u5982\u4f55\u8bfb\u53d6\u548c\u5904\u7406\u6587\u4ef6\uff1a</p> <pre><code>def tutorial_02_file_processing():\n    \"\"\"\u6587\u4ef6\u5904\u7406\uff1a\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\u5e76\u7edf\u8ba1\u5355\u8bcd\"\"\"\n\n    # \u51c6\u5907\u6d4b\u8bd5\u6587\u4ef6\n    test_content = \"\"\"Hello World\n    This is SAGE tutorial\n    We are learning dataflow programming\n    SAGE makes data processing easy\"\"\"\n\n    with open(\"test_input.txt\", \"w\") as f:\n        f.write(test_content)\n\n    # \u521b\u5efa\u73af\u5883\n    env = LocalEnvironment()\n\n    # \u6587\u672c\u5904\u7406\u51fd\u6570\n    def process_line(line):\n        \"\"\"\u5904\u7406\u5355\u884c\u6587\u672c\"\"\"\n        # \u6e05\u7406\u548c\u5206\u8bcd\n        words = line.strip().lower().split()\n        return {\n            'line': line.strip(),\n            'word_count': len(words),\n            'words': words\n        }\n\n    def extract_words(processed_line):\n        \"\"\"\u63d0\u53d6\u5355\u8bcd\u5217\u8868\"\"\"\n        return processed_line['words']\n\n    # \u6784\u5efa\u6587\u4ef6\u5904\u7406\u6d41\u6c34\u7ebf\n    word_stream = (env\n        .from_source(FileSource, \"test_input.txt\")  # \u8bfb\u53d6\u6587\u4ef6\n        .filter(lambda line: line.strip())          # \u8fc7\u6ee4\u7a7a\u884c\n        .map(process_line)                          # \u5904\u7406\u6bcf\u4e00\u884c\n        .flatmap(extract_words)                     # \u5c55\u5f00\u5355\u8bcd\u5217\u8868\n        .filter(lambda word: len(word) &gt; 2)         # \u8fc7\u6ee4\u77ed\u5355\u8bcd\n        .sink(FileSink, \"processed_words.txt\")      # \u8f93\u51fa\u5230\u6587\u4ef6\n    )\n\n    # \u6267\u884c\u6d41\u6c34\u7ebf\n    env.submit()\n\n    # \u8bfb\u53d6\u5e76\u663e\u793a\u7ed3\u679c\n    with open(\"processed_words.txt\", \"r\") as f:\n        words = f.readlines()\n        print(f\"\u5904\u7406\u5b8c\u6210\uff0c\u5171\u63d0\u53d6 {len(words)} \u4e2a\u5355\u8bcd\")\n        print(\"\u524d10\u4e2a\u5355\u8bcd:\", words[:10])\n\n# \u8fd0\u884c\u793a\u4f8b\ntutorial_02_file_processing()\n</code></pre> <p>\u65b0\u6982\u5ff5\uff1a - <code>from_source()</code>: \u4ece\u6587\u4ef6\u6e90\u521b\u5efa\u6570\u636e\u6d41 - <code>flatmap()</code>: \u4e00\u5bf9\u591a\u6620\u5c04\uff0c\u5c06\u5217\u8868\u5c55\u5f00\u4e3a\u591a\u4e2a\u6570\u636e\u9879 - <code>FileSink</code>: \u6587\u4ef6\u8f93\u51fa\u6c47</p>"},{"location":"kernel/examples/basic_tutorials/#3","title":"\ud83d\udcda \u6559\u7a0b3\uff1a\u6570\u636e\u805a\u5408\u548c\u7edf\u8ba1","text":"<p>\u5b66\u4e60\u5982\u4f55\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u8ba1\u7b97\uff1a</p> <pre><code>def tutorial_03_data_aggregation():\n    \"\"\"\u6570\u636e\u805a\u5408\uff1a\u7edf\u8ba1\u5206\u6790\u793a\u4f8b\"\"\"\n\n    # \u6a21\u62df\u7528\u6237\u884c\u4e3a\u6570\u636e\n    user_events = [\n        {'user_id': 'user1', 'action': 'click', 'timestamp': 1000, 'value': 10},\n        {'user_id': 'user2', 'action': 'view', 'timestamp': 1001, 'value': 5},\n        {'user_id': 'user1', 'action': 'purchase', 'timestamp': 1002, 'value': 100},\n        {'user_id': 'user3', 'action': 'click', 'timestamp': 1003, 'value': 8},\n        {'user_id': 'user2', 'action': 'click', 'timestamp': 1004, 'value': 15},\n        {'user_id': 'user1', 'action': 'view', 'timestamp': 1005, 'value': 3},\n    ]\n\n    env = LocalEnvironment()\n\n    # \u7528\u6237\u6d3b\u52a8\u7edf\u8ba1\u51fd\u6570\n    def aggregate_by_user(events):\n        \"\"\"\u6309\u7528\u6237\u805a\u5408\u7edf\u8ba1\"\"\"\n        from collections import defaultdict\n\n        user_stats = defaultdict(lambda: {\n            'user_id': '', 'total_events': 0, 'total_value': 0, 'actions': []\n        })\n\n        for event in events:\n            user_id = event['user_id']\n            user_stats[user_id]['user_id'] = user_id\n            user_stats[user_id]['total_events'] += 1\n            user_stats[user_id]['total_value'] += event['value']\n            user_stats[user_id]['actions'].append(event['action'])\n\n        return list(user_stats.values())\n\n    def format_user_stats(stats):\n        \"\"\"\u683c\u5f0f\u5316\u7528\u6237\u7edf\u8ba1\u4fe1\u606f\"\"\"\n        return {\n            'user_id': stats['user_id'],\n            'total_events': stats['total_events'],\n            'total_value': stats['total_value'],\n            'avg_value': stats['total_value'] / stats['total_events'],\n            'unique_actions': len(set(stats['actions']))\n        }\n\n    # \u6784\u5efa\u805a\u5408\u6d41\u6c34\u7ebf\n    user_stats_stream = (env\n        .from_batch(user_events)                    # \u52a0\u8f7d\u4e8b\u4ef6\u6570\u636e\n        .keyBy(lambda event: event['user_id'])      # \u6309\u7528\u6237ID\u5206\u7ec4\n        .window(count_window=100)                   # \u7a97\u53e3\u805a\u5408\uff08\u8fd9\u91cc\u7528\u8ba1\u6570\u7a97\u53e3\uff09\n        .reduce(lambda acc, event: acc + [event] if isinstance(acc, list) else [acc, event])  # \u6536\u96c6\u4e8b\u4ef6\n        .map(aggregate_by_user)                     # \u805a\u5408\u7edf\u8ba1\n        .flatmap(lambda user_list: user_list)       # \u5c55\u5f00\u7528\u6237\u5217\u8868\n        .map(format_user_stats)                     # \u683c\u5f0f\u5316\u7ed3\u679c\n        .sink(ConsoleSink())                        # \u8f93\u51fa\u7ed3\u679c\n    )\n\n    env.submit()\n\n# \u8fd0\u884c\u793a\u4f8b\ntutorial_03_data_aggregation()\n</code></pre> <p>\u65b0\u6982\u5ff5\uff1a - <code>keyBy()</code>: \u6309\u952e\u5206\u7ec4\u6570\u636e\u6d41 - <code>window()</code>: \u521b\u5efa\u65f6\u95f4\u6216\u8ba1\u6570\u7a97\u53e3 - <code>reduce()</code>: \u805a\u5408\u64cd\u4f5c</p>"},{"location":"kernel/examples/basic_tutorials/#4","title":"\ud83d\udcda \u6559\u7a0b4\uff1a\u5f02\u6b65\u5904\u7406","text":"<p>\u5b66\u4e60\u5982\u4f55\u5904\u7406\u9700\u8981\u5f02\u6b65\u64cd\u4f5c\u7684\u573a\u666f\uff1a</p> <pre><code>import asyncio\nimport aiohttp\nimport json\n\ndef tutorial_04_async_processing():\n    \"\"\"\u5f02\u6b65\u5904\u7406\uff1a\u6a21\u62dfAPI\u8c03\u7528\"\"\"\n\n    # \u6a21\u62dfAPI\u5904\u7406\u51fd\u6570\n    class MockAPIProcessor:\n        def __init__(self, delay=0.1):\n            self.delay = delay\n\n        async def __call__(self, data):\n            \"\"\"\u5f02\u6b65\u5904\u7406\u51fd\u6570\"\"\"\n            # \u6a21\u62dfAPI\u5ef6\u8fdf\n            await asyncio.sleep(self.delay)\n\n            # \u6a21\u62dfAPI\u54cd\u5e94\n            response = {\n                'input': data,\n                'processed': data * 2 if isinstance(data, (int, float)) else f\"processed_{data}\",\n                'timestamp': time.time(),\n                'status': 'success'\n            }\n\n            return response\n\n    # \u6279\u91cf\u5904\u7406\u51fd\u6570\n    async def batch_api_call(batch_data):\n        \"\"\"\u6279\u91cfAPI\u8c03\u7528\"\"\"\n        processor = MockAPIProcessor(delay=0.05)  # \u6279\u5904\u7406\u5ef6\u8fdf\u66f4\u77ed\n        results = []\n\n        # \u5e76\u884c\u5904\u7406\u6279\u6b21\u4e2d\u7684\u6240\u6709\u9879\u76ee\n        tasks = [processor(item) for item in batch_data]\n        results = await asyncio.gather(*tasks)\n\n        return results\n\n    env = LocalEnvironment()\n\n    # \u6d4b\u8bd5\u6570\u636e\n    test_data = list(range(1, 21))  # 1\u523020\u7684\u6570\u5b57\n\n    # \u6784\u5efa\u5f02\u6b65\u5904\u7406\u6d41\u6c34\u7ebf\n    async_stream = (env\n        .from_batch(test_data)                      # \u52a0\u8f7d\u6d4b\u8bd5\u6570\u636e\n        .batch(size=5)                              # 5\u4e2a\u4e00\u6279\n        .map(batch_api_call)                        # \u6279\u91cf\u5f02\u6b65\u5904\u7406\n        .flatmap(lambda batch_result: batch_result) # \u5c55\u5f00\u6279\u5904\u7406\u7ed3\u679c\n        .filter(lambda result: result['status'] == 'success')  # \u8fc7\u6ee4\u6210\u529f\u7ed3\u679c\n        .map(lambda result: {                       # \u63d0\u53d6\u6709\u7528\u4fe1\u606f\n            'input': result['input'],\n            'output': result['processed'],\n            'processing_time': time.time() - result['timestamp']\n        })\n        .sink(ConsoleSink())                        # \u8f93\u51fa\u7ed3\u679c\n    )\n\n    print(\"\u5f00\u59cb\u5f02\u6b65\u5904\u7406...\")\n    start_time = time.time()\n    env.submit()\n    end_time = time.time()\n\n    print(f\"\u5f02\u6b65\u5904\u7406\u5b8c\u6210\uff0c\u603b\u7528\u65f6: {end_time - start_time:.2f}\u79d2\")\n\n# \u8fd0\u884c\u793a\u4f8b\ntutorial_04_async_processing()\n</code></pre> <p>\u65b0\u6982\u5ff5\uff1a - \u5f02\u6b65\u51fd\u6570\uff1a\u4f7f\u7528<code>async def</code>\u5b9a\u4e49\u7684\u5904\u7406\u51fd\u6570 - <code>batch()</code>: \u5c06\u6570\u636e\u6253\u5305\u6210\u6279\u6b21 - \u5e76\u884c\u5904\u7406\uff1a\u4f7f\u7528<code>asyncio.gather()</code>\u5e76\u884c\u6267\u884c\u591a\u4e2a\u5f02\u6b65\u4efb\u52a1</p>"},{"location":"kernel/examples/basic_tutorials/#5","title":"\ud83d\udcda \u6559\u7a0b5\uff1a\u9519\u8bef\u5904\u7406","text":"<p>\u5b66\u4e60\u5982\u4f55\u5728\u6570\u636e\u6d41\u4e2d\u5904\u7406\u9519\u8bef\u548c\u5f02\u5e38\uff1a</p> <pre><code>def tutorial_05_error_handling():\n    \"\"\"\u9519\u8bef\u5904\u7406\uff1a\u5bb9\u9519\u6570\u636e\u5904\u7406\"\"\"\n\n    # \u53ef\u80fd\u51fa\u9519\u7684\u5904\u7406\u51fd\u6570\n    def risky_processor(data):\n        \"\"\"\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u5904\u7406\u5668\"\"\"\n        if data % 3 == 0:  # \u6a21\u62df\u5904\u7406\u5931\u8d25\n            raise ValueError(f\"\u5904\u7406\u5931\u8d25: {data}\")\n        return data * 10\n\n    # \u5bb9\u9519\u5904\u7406\u51fd\u6570\n    def safe_processor(data):\n        \"\"\"\u5b89\u5168\u7684\u5904\u7406\u5668\"\"\"\n        try:\n            result = risky_processor(data)\n            return {'status': 'success', 'data': data, 'result': result}\n        except Exception as e:\n            return {'status': 'error', 'data': data, 'error': str(e)}\n\n    # \u91cd\u8bd5\u5904\u7406\u5668\n    def retry_processor(data, max_retries=2):\n        \"\"\"\u5e26\u91cd\u8bd5\u7684\u5904\u7406\u5668\"\"\"\n        for attempt in range(max_retries + 1):\n            try:\n                result = risky_processor(data)\n                return {'status': 'success', 'data': data, 'result': result, 'attempts': attempt + 1}\n            except Exception as e:\n                if attempt == max_retries:\n                    return {'status': 'failed', 'data': data, 'error': str(e), 'attempts': attempt + 1}\n                time.sleep(0.1 * (attempt + 1))  # \u6307\u6570\u9000\u907f\n\n    env = LocalEnvironment()\n\n    # \u6d4b\u8bd5\u6570\u636e\uff08\u5305\u542b\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u6570\u636e\uff09\n    test_data = list(range(1, 16))  # 3, 6, 9, 12, 15 \u4f1a\u51fa\u9519\n\n    print(\"=== \u57fa\u672c\u9519\u8bef\u5904\u7406\u793a\u4f8b ===\")\n    basic_error_stream = (env\n        .from_batch(test_data)\n        .map(safe_processor)                        # \u5b89\u5168\u5904\u7406\n        .sink(ConsoleSink())\n    )\n    env.submit()\n\n    print(\"\\n=== \u91cd\u8bd5\u673a\u5236\u793a\u4f8b ===\")\n    env = LocalEnvironment()  # \u521b\u5efa\u65b0\u73af\u5883\n    retry_stream = (env\n        .from_batch(test_data)\n        .map(retry_processor)                       # \u91cd\u8bd5\u5904\u7406\n        .sink(ConsoleSink())\n    )\n    env.submit()\n\n    print(\"\\n=== \u9519\u8bef\u8fc7\u6ee4\u548c\u7edf\u8ba1 ===\")\n    env = LocalEnvironment()  # \u521b\u5efa\u65b0\u73af\u5883\n\n    def collect_stats(results):\n        \"\"\"\u7edf\u8ba1\u5904\u7406\u7ed3\u679c\"\"\"\n        success_count = len([r for r in results if r['status'] == 'success'])\n        error_count = len([r for r in results if r['status'] == 'error'])\n\n        return {\n            'total': len(results),\n            'success': success_count,\n            'errors': error_count,\n            'success_rate': success_count / len(results) if results else 0\n        }\n\n    stats_stream = (env\n        .from_batch(test_data)\n        .map(safe_processor)                        # \u5b89\u5168\u5904\u7406\n        .collect()                                  # \u6536\u96c6\u6240\u6709\u7ed3\u679c\n        .map(collect_stats)                         # \u7edf\u8ba1\n        .sink(ConsoleSink())\n    )\n    env.submit()\n\n# \u8fd0\u884c\u793a\u4f8b\ntutorial_05_error_handling()\n</code></pre> <p>\u65b0\u6982\u5ff5\uff1a - \u5f02\u5e38\u5904\u7406\uff1a\u5728\u5904\u7406\u51fd\u6570\u4e2d\u6355\u83b7\u548c\u5904\u7406\u5f02\u5e38 - \u91cd\u8bd5\u673a\u5236\uff1a\u5bf9\u5931\u8d25\u7684\u64cd\u4f5c\u8fdb\u884c\u91cd\u8bd5 - <code>collect()</code>: \u6536\u96c6\u6240\u6709\u6570\u636e\u9879\u5230\u4e00\u4e2a\u5217\u8868\u4e2d</p>"},{"location":"kernel/examples/basic_tutorials/#6","title":"\ud83d\udcda \u6559\u7a0b6\uff1a\u591a\u6d41\u8fde\u63a5","text":"<p>\u5b66\u4e60\u5982\u4f55\u5904\u7406\u591a\u4e2a\u6570\u636e\u6d41\u7684\u8fde\u63a5\uff1a</p> <pre><code>def tutorial_06_stream_joining():\n    \"\"\"\u591a\u6d41\u8fde\u63a5\uff1a\u7528\u6237\u6570\u636e\u5173\u8054\"\"\"\n\n    # \u7528\u6237\u57fa\u672c\u4fe1\u606f\n    users = [\n        {'user_id': 1, 'name': 'Alice', 'age': 25},\n        {'user_id': 2, 'name': 'Bob', 'age': 30},\n        {'user_id': 3, 'name': 'Charlie', 'age': 35},\n    ]\n\n    # \u7528\u6237\u8ba2\u5355\u4fe1\u606f\n    orders = [\n        {'order_id': 101, 'user_id': 1, 'amount': 100, 'product': 'Book'},\n        {'order_id': 102, 'user_id': 2, 'amount': 200, 'product': 'Phone'},\n        {'order_id': 103, 'user_id': 1, 'amount': 50, 'product': 'Coffee'},\n        {'order_id': 104, 'user_id': 4, 'amount': 300, 'product': 'Laptop'},  # \u7528\u6237\u4e0d\u5b58\u5728\n    ]\n\n    env = LocalEnvironment()\n\n    # \u521b\u5efa\u7528\u6237\u6d41\u548c\u8ba2\u5355\u6d41\n    user_stream = env.from_batch(users)\n    order_stream = env.from_batch(orders)\n\n    # \u8fde\u63a5\u4e24\u4e2a\u6d41\n    def join_user_orders(user_data, order_data):\n        \"\"\"\u8fde\u63a5\u7528\u6237\u548c\u8ba2\u5355\u6570\u636e\"\"\"\n        user_dict = {u['user_id']: u for u in user_data}\n\n        joined_results = []\n        for order in order_data:\n            user_id = order['user_id']\n            if user_id in user_dict:\n                user = user_dict[user_id]\n                joined_results.append({\n                    'user_id': user_id,\n                    'user_name': user['name'],\n                    'user_age': user['age'],\n                    'order_id': order['order_id'],\n                    'amount': order['amount'],\n                    'product': order['product']\n                })\n            else:\n                # \u5904\u7406\u627e\u4e0d\u5230\u7528\u6237\u7684\u8ba2\u5355\n                joined_results.append({\n                    'user_id': user_id,\n                    'user_name': 'Unknown',\n                    'user_age': None,\n                    'order_id': order['order_id'],\n                    'amount': order['amount'],\n                    'product': order['product'],\n                    'status': 'orphaned_order'\n                })\n\n        return joined_results\n\n    # \u4f7f\u7528connect\u8fdb\u884c\u6d41\u8fde\u63a5\n    connected_stream = user_stream.connect(order_stream)\n\n    # \u5904\u7406\u8fde\u63a5\u540e\u7684\u6570\u636e\n    result_stream = (connected_stream\n        .comap(join_user_orders)                    # \u534f\u540c\u5904\u7406\u4e24\u4e2a\u6d41\u7684\u6570\u636e\n        .flatmap(lambda results: results)          # \u5c55\u5f00\u7ed3\u679c\u5217\u8868\n        .sink(ConsoleSink())                        # \u8f93\u51fa\u7ed3\u679c\n    )\n\n    print(\"=== \u6d41\u8fde\u63a5\u793a\u4f8b ===\")\n    env.submit()\n\n    # \u53e6\u4e00\u79cd\u8fde\u63a5\u65b9\u5f0f\uff1a\u4f7f\u7528\u7a97\u53e3\u8fde\u63a5\n    print(\"\\n=== \u7a97\u53e3\u8fde\u63a5\u793a\u4f8b ===\")\n    env = LocalEnvironment()\n\n    # \u6a21\u62df\u65f6\u95f4\u5e8f\u5217\u6570\u636e\n    user_actions = [\n        {'user_id': 1, 'action': 'login', 'timestamp': 1000},\n        {'user_id': 2, 'action': 'view_product', 'timestamp': 1001},\n        {'user_id': 1, 'action': 'add_to_cart', 'timestamp': 1002},\n    ]\n\n    user_profiles = [\n        {'user_id': 1, 'segment': 'premium', 'timestamp': 999},\n        {'user_id': 2, 'segment': 'regular', 'timestamp': 1000},\n    ]\n\n    action_stream = env.from_batch(user_actions)\n    profile_stream = env.from_batch(user_profiles)\n\n    # \u57fa\u4e8e\u65f6\u95f4\u7a97\u53e3\u7684\u8fde\u63a5\n    def time_window_join(actions, profiles):\n        \"\"\"\u57fa\u4e8e\u65f6\u95f4\u7a97\u53e3\u8fde\u63a5\u7528\u6237\u884c\u4e3a\u548c\u6863\u6848\"\"\"\n        profile_dict = {p['user_id']: p for p in profiles}\n\n        enriched_actions = []\n        for action in actions:\n            user_id = action['user_id']\n            if user_id in profile_dict:\n                profile = profile_dict[user_id]\n                # \u7b80\u5355\u7684\u65f6\u95f4\u5339\u914d\uff08\u5b9e\u9645\u5e94\u7528\u4e2d\u4f1a\u66f4\u590d\u6742\uff09\n                if abs(action['timestamp'] - profile['timestamp']) &lt;= 10:\n                    enriched_actions.append({\n                        **action,\n                        'user_segment': profile['segment']\n                    })\n\n        return enriched_actions\n\n    windowed_stream = (action_stream.connect(profile_stream)\n        .comap(time_window_join)\n        .flatmap(lambda results: results)\n        .sink(ConsoleSink())\n    )\n\n    env.submit()\n\n# \u8fd0\u884c\u793a\u4f8b\ntutorial_06_stream_joining()\n</code></pre> <p>\u65b0\u6982\u5ff5\uff1a - <code>connect()</code>: \u8fde\u63a5\u4e24\u4e2a\u6570\u636e\u6d41 - <code>comap()</code>: \u534f\u540c\u5904\u7406\u8fde\u63a5\u7684\u6570\u636e\u6d41 - \u65f6\u95f4\u7a97\u53e3\u8fde\u63a5\uff1a\u57fa\u4e8e\u65f6\u95f4\u6233\u8fdb\u884c\u6570\u636e\u5173\u8054</p>"},{"location":"kernel/examples/basic_tutorials/#7","title":"\ud83d\udcda \u6559\u7a0b7\uff1a\u72b6\u6001\u7ba1\u7406","text":"<p>\u5b66\u4e60\u5982\u4f55\u5728\u6570\u636e\u6d41\u4e2d\u7ef4\u62a4\u72b6\u6001\uff1a</p> <pre><code>def tutorial_07_stateful_processing():\n    \"\"\"\u6709\u72b6\u6001\u5904\u7406\uff1a\u8fd0\u884c\u7edf\u8ba1\u548c\u4f1a\u8bdd\u7ba1\u7406\"\"\"\n\n    # \u6709\u72b6\u6001\u8ba1\u6570\u5668\n    class StatefulCounter:\n        def __init__(self):\n            self.counts = {}\n\n        def __call__(self, item):\n            key = item.get('category', 'default')\n            self.counts[key] = self.counts.get(key, 0) + 1\n\n            return {\n                'item': item,\n                'category_count': self.counts[key],\n                'total_categories': len(self.counts)\n            }\n\n    # \u6ed1\u52a8\u7a97\u53e3\u5e73\u5747\n    class MovingAverageCalculator:\n        def __init__(self, window_size=5):\n            self.window_size = window_size\n            self.window = []\n\n        def __call__(self, value):\n            self.window.append(value)\n            if len(self.window) &gt; self.window_size:\n                self.window.pop(0)  # \u79fb\u9664\u6700\u65e7\u7684\u5143\u7d20\n\n            avg = sum(self.window) / len(self.window)\n            return {\n                'value': value,\n                'moving_average': avg,\n                'window_size': len(self.window)\n            }\n\n    # \u4f1a\u8bdd\u7ba1\u7406\u5668\n    class SessionManager:\n        def __init__(self, timeout=10):\n            self.sessions = {}\n            self.timeout = timeout\n\n        def __call__(self, event):\n            user_id = event['user_id']\n            current_time = event['timestamp']\n\n            # \u68c0\u67e5\u73b0\u6709\u4f1a\u8bdd\n            if user_id in self.sessions:\n                last_activity = self.sessions[user_id]['last_activity']\n                if current_time - last_activity &gt; self.timeout:\n                    # \u4f1a\u8bdd\u8d85\u65f6\uff0c\u5f00\u59cb\u65b0\u4f1a\u8bdd\n                    self.sessions[user_id] = {\n                        'session_id': f\"session_{current_time}\",\n                        'start_time': current_time,\n                        'last_activity': current_time,\n                        'event_count': 1\n                    }\n                else:\n                    # \u66f4\u65b0\u73b0\u6709\u4f1a\u8bdd\n                    self.sessions[user_id]['last_activity'] = current_time\n                    self.sessions[user_id]['event_count'] += 1\n            else:\n                # \u65b0\u7528\u6237\u4f1a\u8bdd\n                self.sessions[user_id] = {\n                    'session_id': f\"session_{current_time}\",\n                    'start_time': current_time,\n                    'last_activity': current_time,\n                    'event_count': 1\n                }\n\n            session_info = self.sessions[user_id].copy()\n            session_info.update({\n                'user_id': user_id,\n                'event': event['action'],\n                'session_duration': current_time - session_info['start_time']\n            })\n\n            return session_info\n\n    env = LocalEnvironment()\n\n    print(\"=== \u6709\u72b6\u6001\u8ba1\u6570\u5668\u793a\u4f8b ===\")\n    counter = StatefulCounter()\n\n    # \u6d4b\u8bd5\u6570\u636e\n    items = [\n        {'name': 'item1', 'category': 'A'},\n        {'name': 'item2', 'category': 'B'},\n        {'name': 'item3', 'category': 'A'},\n        {'name': 'item4', 'category': 'C'},\n        {'name': 'item5', 'category': 'A'},\n        {'name': 'item6', 'category': 'B'},\n    ]\n\n    counter_stream = (env\n        .from_batch(items)\n        .map(counter)                               # \u6709\u72b6\u6001\u8ba1\u6570\n        .sink(ConsoleSink())\n    )\n    env.submit()\n\n    print(\"\\n=== \u6ed1\u52a8\u7a97\u53e3\u5e73\u5747\u793a\u4f8b ===\")\n    env = LocalEnvironment()\n    moving_avg = MovingAverageCalculator(window_size=3)\n\n    values = [10, 15, 20, 12, 18, 25, 8, 30]\n\n    avg_stream = (env\n        .from_batch(values)\n        .map(moving_avg)                            # \u6ed1\u52a8\u7a97\u53e3\u5e73\u5747\n        .sink(ConsoleSink())\n    )\n    env.submit()\n\n    print(\"\\n=== \u4f1a\u8bdd\u7ba1\u7406\u793a\u4f8b ===\")\n    env = LocalEnvironment()\n    session_mgr = SessionManager(timeout=5)\n\n    # \u6a21\u62df\u7528\u6237\u4e8b\u4ef6\uff08\u5305\u542b\u4f1a\u8bdd\u8d85\u65f6\uff09\n    events = [\n        {'user_id': 'user1', 'action': 'login', 'timestamp': 1000},\n        {'user_id': 'user1', 'action': 'view', 'timestamp': 1002},\n        {'user_id': 'user2', 'action': 'login', 'timestamp': 1003},\n        {'user_id': 'user1', 'action': 'click', 'timestamp': 1004},\n        {'user_id': 'user1', 'action': 'purchase', 'timestamp': 1015},  # \u8d85\u65f6\uff0c\u65b0\u4f1a\u8bdd\n        {'user_id': 'user2', 'action': 'logout', 'timestamp': 1016},\n    ]\n\n    session_stream = (env\n        .from_batch(events)\n        .map(session_mgr)                           # \u4f1a\u8bdd\u7ba1\u7406\n        .sink(ConsoleSink())\n    )\n    env.submit()\n\n# \u8fd0\u884c\u793a\u4f8b\ntutorial_07_stateful_processing()\n</code></pre> <p>\u65b0\u6982\u5ff5\uff1a - \u6709\u72b6\u6001\u5904\u7406\uff1a\u5904\u7406\u51fd\u6570\u7ef4\u62a4\u5185\u90e8\u72b6\u6001 - \u6ed1\u52a8\u7a97\u53e3\uff1a\u7ef4\u62a4\u56fa\u5b9a\u5927\u5c0f\u7684\u5386\u53f2\u6570\u636e\u7a97\u53e3 - \u4f1a\u8bdd\u7ba1\u7406\uff1a\u57fa\u4e8e\u65f6\u95f4\u548c\u7528\u6237\u884c\u4e3a\u7ba1\u7406\u4f1a\u8bdd\u72b6\u6001</p>"},{"location":"kernel/examples/basic_tutorials/#8-rag","title":"\ud83d\udcda \u6559\u7a0b8\uff1a\u7efc\u5408\u793a\u4f8b - \u7b80\u5355\u7684RAG\u7cfb\u7edf","text":"<p>\u73b0\u5728\u8ba9\u6211\u4eec\u6784\u5efa\u4e00\u4e2a\u7efc\u5408\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u4f7f\u7528SAGE\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u7684RAG\uff08\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff09\u7cfb\u7edf\uff1a</p> <pre><code>def tutorial_08_simple_rag_system():\n    \"\"\"\u7efc\u5408\u793a\u4f8b\uff1a\u7b80\u5355\u7684RAG\u7cfb\u7edf\"\"\"\n\n    # \u6a21\u62df\u77e5\u8bc6\u5e93\n    knowledge_base = [\n        {\"id\": 1, \"content\": \"Python\u662f\u4e00\u79cd\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\", \"category\": \"programming\"},\n        {\"id\": 2, \"content\": \"\u673a\u5668\u5b66\u4e60\u662f\u4eba\u5de5\u667a\u80fd\u7684\u4e00\u4e2a\u5206\u652f\", \"category\": \"ai\"},\n        {\"id\": 3, \"content\": \"\u6570\u636e\u6d41\u7f16\u7a0b\u662f\u4e00\u79cd\u7f16\u7a0b\u8303\u5f0f\", \"category\": \"programming\"},\n        {\"id\": 4, \"content\": \"SAGE\u662f\u4e00\u4e2a\u6570\u636e\u6d41\u5904\u7406\u6846\u67b6\", \"category\": \"framework\"},\n        {\"id\": 5, \"content\": \"\u5f02\u6b65\u7f16\u7a0b\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\", \"category\": \"programming\"},\n    ]\n\n    # \u67e5\u8be2\u5d4c\u5165\u5668\uff08\u7b80\u5316\u7248\uff09\n    class SimpleEmbedder:\n        def __call__(self, text):\n            \"\"\"\u7b80\u5355\u7684\u6587\u672c\u5d4c\u5165\uff08\u4f7f\u7528\u5173\u952e\u8bcd\u5339\u914d\uff09\"\"\"\n            keywords = text.lower().split()\n            return {\n                'text': text,\n                'keywords': keywords,\n                'embedding': keywords  # \u7b80\u5316\uff1a\u76f4\u63a5\u4f7f\u7528\u5173\u952e\u8bcd\u4f5c\u4e3a\u5d4c\u5165\n            }\n\n    # \u68c0\u7d22\u5668\n    class SimpleRetriever:\n        def __init__(self, knowledge_base, top_k=2):\n            self.knowledge_base = knowledge_base\n            self.top_k = top_k\n\n        def __call__(self, query_data):\n            \"\"\"\u68c0\u7d22\u76f8\u5173\u6587\u6863\"\"\"\n            query_keywords = set(query_data['keywords'])\n            scores = []\n\n            for doc in self.knowledge_base:\n                doc_keywords = set(doc['content'].lower().split())\n                # \u7b80\u5355\u7684\u76f8\u4f3c\u5ea6\u8ba1\u7b97\uff08\u4ea4\u96c6\u5927\u5c0f\uff09\n                similarity = len(query_keywords &amp; doc_keywords)\n                scores.append({\n                    'document': doc,\n                    'similarity': similarity\n                })\n\n            # \u6309\u76f8\u4f3c\u5ea6\u6392\u5e8f\u5e76\u8fd4\u56detop-k\n            scores.sort(key=lambda x: x['similarity'], reverse=True)\n            top_docs = scores[:self.top_k]\n\n            return {\n                'query': query_data['text'],\n                'retrieved_docs': [item['document'] for item in top_docs],\n                'similarities': [item['similarity'] for item in top_docs]\n            }\n\n    # \u751f\u6210\u5668\n    class SimpleGenerator:\n        def __call__(self, retrieval_result):\n            \"\"\"\u57fa\u4e8e\u68c0\u7d22\u7ed3\u679c\u751f\u6210\u56de\u7b54\"\"\"\n            query = retrieval_result['query']\n            docs = retrieval_result['retrieved_docs']\n\n            if not docs or all(sim == 0 for sim in retrieval_result['similarities']):\n                return {\n                    'query': query,\n                    'answer': \"\u62b1\u6b49\uff0c\u6211\u65e0\u6cd5\u627e\u5230\u76f8\u5173\u4fe1\u606f\u6765\u56de\u7b54\u60a8\u7684\u95ee\u9898\u3002\",\n                    'sources': []\n                }\n\n            # \u7b80\u5355\u7684\u7b54\u6848\u751f\u6210\n            context = \" \".join([doc['content'] for doc in docs])\n            answer = f\"\u6839\u636e\u76f8\u5173\u8d44\u6599\uff1a{context}\u3002\u8fd9\u4e9b\u4fe1\u606f\u53ef\u80fd\u5bf9\u60a8\u7684\u95ee\u9898 '{query}' \u6709\u6240\u5e2e\u52a9\u3002\"\n\n            return {\n                'query': query,\n                'answer': answer,\n                'sources': [doc['id'] for doc in docs],\n                'context_length': len(context)\n            }\n\n    # \u67e5\u8be2\u8d28\u91cf\u8fc7\u6ee4\u5668\n    def query_filter(query):\n        \"\"\"\u8fc7\u6ee4\u67e5\u8be2\u8d28\u91cf\"\"\"\n        return len(query.strip()) &gt; 3 and not query.strip().isdigit()\n\n    # \u7ed3\u679c\u683c\u5f0f\u5316\u5668\n    def format_response(result):\n        \"\"\"\u683c\u5f0f\u5316\u6700\u7ec8\u54cd\u5e94\"\"\"\n        return f\"\"\"\n\u95ee\u9898: {result['query']}\n\u56de\u7b54: {result['answer']}\n\u53c2\u8003\u6587\u6863: {', '.join(map(str, result['sources'])) if result['sources'] else '\u65e0'}\n\u4e0a\u4e0b\u6587\u957f\u5ea6: {result.get('context_length', 0)} \u5b57\u7b26\n---\"\"\"\n\n    env = LocalEnvironment()\n\n    # \u6d4b\u8bd5\u67e5\u8be2\n    queries = [\n        \"\u4ec0\u4e48\u662fPython\uff1f\",\n        \"\u673a\u5668\u5b66\u4e60\u662f\u4ec0\u4e48\",\n        \"SAGE\u6846\u67b6\u4ecb\u7ecd\",\n        \"\u5f02\u6b65\u7f16\u7a0b\",\n        \"xyz\",  # \u4f4e\u8d28\u91cf\u67e5\u8be2\n        \"123\",  # \u6570\u5b57\u67e5\u8be2\n    ]\n\n    # \u521b\u5efa\u5904\u7406\u7ec4\u4ef6\n    embedder = SimpleEmbedder()\n    retriever = SimpleRetriever(knowledge_base, top_k=2)\n    generator = SimpleGenerator()\n\n    print(\"=== \u7b80\u5355RAG\u7cfb\u7edf\u793a\u4f8b ===\")\n\n    # \u6784\u5efaRAG\u5904\u7406\u6d41\u6c34\u7ebf\n    rag_pipeline = (env\n        .from_batch(queries)                        # \u8f93\u5165\u67e5\u8be2\n        .filter(query_filter)                       # \u8fc7\u6ee4\u4f4e\u8d28\u91cf\u67e5\u8be2\n        .map(embedder)                              # \u67e5\u8be2\u5d4c\u5165\n        .map(retriever)                             # \u6587\u6863\u68c0\u7d22\n        .map(generator)                             # \u7b54\u6848\u751f\u6210\n        .map(format_response)                       # \u683c\u5f0f\u5316\u54cd\u5e94\n        .sink(ConsoleSink())                        # \u8f93\u51fa\u7ed3\u679c\n    )\n\n    env.submit()\n\n    print(\"\\n=== \u5e26\u9519\u8bef\u5904\u7406\u7684RAG\u7cfb\u7edf ===\")\n\n    # \u5e26\u9519\u8bef\u5904\u7406\u7684RAG\u7cfb\u7edf\n    def safe_rag_step(step_func, step_name):\n        \"\"\"\u4e3aRAG\u6b65\u9aa4\u6dfb\u52a0\u9519\u8bef\u5904\u7406\"\"\"\n        def wrapper(data):\n            try:\n                result = step_func(data)\n                return {'status': 'success', 'data': result, 'step': step_name}\n            except Exception as e:\n                return {'status': 'error', 'error': str(e), 'step': step_name, 'input': data}\n        return wrapper\n\n    def extract_successful_data(result):\n        \"\"\"\u63d0\u53d6\u6210\u529f\u5904\u7406\u7684\u6570\u636e\"\"\"\n        if result['status'] == 'success':\n            return result['data']\n        else:\n            print(f\"\u6b65\u9aa4 {result['step']} \u5931\u8d25: {result['error']}\")\n            return None\n\n    env = LocalEnvironment()\n    safe_rag_pipeline = (env\n        .from_batch(queries)\n        .filter(query_filter)\n        .map(safe_rag_step(embedder, \"embedding\"))\n        .map(extract_successful_data)\n        .filter(lambda x: x is not None)\n        .map(safe_rag_step(retriever, \"retrieval\"))\n        .map(extract_successful_data)\n        .filter(lambda x: x is not None)\n        .map(safe_rag_step(generator, \"generation\"))\n        .map(extract_successful_data)\n        .filter(lambda x: x is not None)\n        .map(format_response)\n        .sink(ConsoleSink())\n    )\n\n    env.submit()\n\n# \u8fd0\u884c\u793a\u4f8b\ntutorial_08_simple_rag_system()\n</code></pre>"},{"location":"kernel/examples/basic_tutorials/#_5","title":"\ud83c\udf93 \u603b\u7ed3","text":"<p>\u606d\u559c\u60a8\u5b8c\u6210\u4e86SAGE\u57fa\u7840\u6559\u7a0b\uff01\u60a8\u5df2\u7ecf\u5b66\u4f1a\u4e86\uff1a</p>"},{"location":"kernel/examples/basic_tutorials/#_6","title":"\u6838\u5fc3\u6982\u5ff5","text":"<ul> <li>\u6570\u636e\u6d41\u7f16\u7a0b\u6a21\u578b\uff1a\u58f0\u660e\u5f0f\u7684\u6570\u636e\u5904\u7406\u65b9\u5f0f</li> <li>\u7b97\u5b50\u94fe\u5f0f\u8c03\u7528\uff1a\u4f7f\u7528map\u3001filter\u3001sink\u7b49\u6784\u5efa\u5904\u7406\u6d41\u6c34\u7ebf</li> <li>\u6267\u884c\u73af\u5883\uff1aLocalEnvironment\u7684\u4f7f\u7528</li> </ul>"},{"location":"kernel/examples/basic_tutorials/#_7","title":"\u57fa\u672c\u64cd\u4f5c","text":"<ul> <li>\u6570\u636e\u6e90\uff1afrom_batch\u3001from_source\u7b49\u521b\u5efa\u6570\u636e\u6d41</li> <li>\u8f6c\u6362\u64cd\u4f5c\uff1amap\u3001filter\u3001flatmap\u7b49\u6570\u636e\u8f6c\u6362</li> <li>\u8f93\u51fa\u64cd\u4f5c\uff1asink\u5230\u4e0d\u540c\u76ee\u6807\uff08\u63a7\u5236\u53f0\u3001\u6587\u4ef6\u7b49\uff09</li> </ul>"},{"location":"kernel/examples/basic_tutorials/#_8","title":"\u9ad8\u7ea7\u7279\u6027","text":"<ul> <li>\u6279\u5904\u7406\uff1a\u63d0\u5347\u5904\u7406\u6548\u7387</li> <li>\u5f02\u6b65\u5904\u7406\uff1a\u5904\u7406I/O\u5bc6\u96c6\u578b\u64cd\u4f5c</li> <li>\u9519\u8bef\u5904\u7406\uff1a\u6784\u5efa\u5065\u58ee\u7684\u6570\u636e\u5904\u7406\u7cfb\u7edf</li> <li>\u591a\u6d41\u8fde\u63a5\uff1a\u5904\u7406\u590d\u6742\u7684\u6570\u636e\u5173\u8054</li> <li>\u72b6\u6001\u7ba1\u7406\uff1a\u7ef4\u62a4\u5904\u7406\u72b6\u6001\u548c\u4e0a\u4e0b\u6587</li> </ul>"},{"location":"kernel/examples/basic_tutorials/#_9","title":"\u5b9e\u9645\u5e94\u7528","text":"<ul> <li>\u6587\u4ef6\u5904\u7406\uff1a\u8bfb\u53d6\u548c\u5904\u7406\u6587\u672c\u6587\u4ef6</li> <li>\u6570\u636e\u805a\u5408\uff1a\u7edf\u8ba1\u548c\u5206\u6790\u6570\u636e</li> <li>RAG\u7cfb\u7edf\uff1a\u68c0\u7d22\u589e\u5f3a\u751f\u6210\u7684\u5b8c\u6574\u5b9e\u73b0</li> </ul>"},{"location":"kernel/examples/basic_tutorials/#_10","title":"\ud83d\udcda \u4e0b\u4e00\u6b65\u5b66\u4e60","text":"<p>\u73b0\u5728\u60a8\u53ef\u4ee5\uff1a</p> <ol> <li>\u6df1\u5165\u5b66\u4e60\uff1a</li> <li> \u6570\u636e\u6d41\u5f00\u53d1 - \u66f4\u6df1\u5165\u7684\u5f00\u53d1\u6280\u5de7</li> <li> \u81ea\u5b9a\u4e49\u7b97\u5b50 - \u6269\u5c55\u7cfb\u7edf\u529f\u80fd</li> <li> <p> \u6027\u80fd\u8c03\u4f18 - \u4f18\u5316\u7cfb\u7edf\u6027\u80fd</p> </li> <li> <p>\u5b9e\u8df5\u9879\u76ee\uff1a</p> </li> <li>\u6784\u5efa\u66f4\u590d\u6742\u7684RAG\u7cfb\u7edf</li> <li>\u5b9e\u73b0\u5b9e\u65f6\u6570\u636e\u5904\u7406\u6d41\u6c34\u7ebf</li> <li> <p>\u5f00\u53d1\u591a\u6a21\u6001\u6570\u636e\u5904\u7406\u5e94\u7528</p> </li> <li> <p>\u63a2\u7d22\u9ad8\u7ea7\u7279\u6027\uff1a</p> </li> <li>\u5206\u5e03\u5f0f\u5904\u7406</li> <li>\u53ef\u89c6\u5316\u76d1\u63a7</li> <li>\u751f\u4ea7\u73af\u5883\u90e8\u7f72</li> </ol> <p>\u7ee7\u7eed\u63a2\u7d22SAGE\u7684\u5f3a\u5927\u529f\u80fd\uff0c\u6784\u5efa\u5c5e\u4e8e\u60a8\u7684\u667a\u80fd\u6570\u636e\u5904\u7406\u5e94\u7528\u5427\uff01</p>"},{"location":"kernel/guides/quickstart/","title":"\u5feb\u901f\u5f00\u59cb\u6307\u5357","text":"<p>\u8fd9\u4e2a\u6307\u5357\u5c06\u5e2e\u52a9\u4f60\u57285\u5206\u949f\u5185\u4e0a\u624b SAGE Kernel\uff0c\u5f00\u59cb\u4f60\u7684\u7b2c\u4e00\u4e2a\u6d41\u6570\u636e\u5904\u7406\u5e94\u7528\u3002</p>"},{"location":"kernel/guides/quickstart/#_2","title":"\ud83d\udce6 \u5b89\u88c5","text":""},{"location":"kernel/guides/quickstart/#pip","title":"\u4f7f\u7528 pip \u5b89\u88c5","text":"<pre><code># \u5b89\u88c5\u6838\u5fc3\u5305\npip install intsage-kernel\n\n# \u5b89\u88c5\u5f00\u53d1\u4f9d\u8d56\uff08\u53ef\u9009\uff09\npip install intsage-kernel[dev]\n\n# \u5b89\u88c5\u4f01\u4e1a\u7248\u529f\u80fd\uff08\u9700\u8981\u8bb8\u53ef\u8bc1\uff09\npip install intsage-kernel[enterprise]\n</code></pre>"},{"location":"kernel/guides/quickstart/#_3","title":"\u4ece\u6e90\u7801\u5b89\u88c5","text":"<pre><code>git clone https://github.com/intellistream/SAGE.git\ncd SAGE/packages/sage-kernel\npip install -e .\n</code></pre>"},{"location":"kernel/guides/quickstart/#_4","title":"\ud83d\ude80 \u7b2c\u4e00\u4e2a\u4f8b\u5b50","text":""},{"location":"kernel/guides/quickstart/#1","title":"1. \u7b80\u5355\u7684\u6570\u636e\u8f6c\u6362","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\n\n# \u521b\u5efa\u672c\u5730\u73af\u5883\nenv = LocalEnvironment(\"hello_sage\")\n\n# \u521b\u5efa\u6570\u636e\u6d41\nnumbers = env.from_batch([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# \u6570\u636e\u8f6c\u6362\uff1a\u5e73\u65b9\u5e76\u8fc7\u6ee4\u5076\u6570\nresult = (numbers\n    .map(lambda x: x * x)           # \u5e73\u65b9: [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n    .filter(lambda x: x % 2 == 0)   # \u8fc7\u6ee4\u5076\u6570: [4, 16, 36, 64, 100]\n    .sink(print))                   # \u8f93\u51fa\u7ed3\u679c\n\n# \u63d0\u4ea4\u6267\u884c\nenv.submit()\n</code></pre>"},{"location":"kernel/guides/quickstart/#2","title":"2. \u6587\u672c\u5904\u7406\u793a\u4f8b","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\n\nenv = LocalEnvironment(\"text_processing\")\n\n# \u6a21\u62df\u6587\u672c\u6570\u636e\nsentences = env.from_batch([\n    \"Hello SAGE Kernel\",\n    \"Stream processing made easy\", \n    \"Build powerful data pipelines\",\n    \"Real-time analytics with Python\"\n])\n\n# \u6587\u672c\u5904\u7406\u7ba1\u9053\nword_count = (sentences\n    .flat_map(lambda s: s.lower().split())  # \u5206\u8bcd\n    .map(lambda word: (word, 1))            # \u8f6c\u6362\u4e3a(word, 1)\n    .key_by(lambda pair: pair[0])           # \u6309\u5355\u8bcd\u5206\u7ec4\n    .reduce(lambda a, b: (a[0], a[1] + b[1]))  # \u7edf\u8ba1\u8bcd\u9891\n    .sink(print))                           # \u8f93\u51fa\u7ed3\u679c\n\nenv.submit()\n</code></pre>"},{"location":"kernel/guides/quickstart/#3","title":"3. \u5b9e\u65f6\u6570\u636e\u5904\u7406","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function import SourceFunction, SourceContext\nimport time\nimport random\n\n# \u81ea\u5b9a\u4e49\u6570\u636e\u6e90\nclass SensorDataSource(SourceFunction[dict]):\n    def __init__(self, sensor_id: str):\n        self.sensor_id = sensor_id\n        self.running = True\n\n    def run(self, ctx: SourceContext[dict]):\n        while self.running:\n            # \u6a21\u62df\u4f20\u611f\u5668\u6570\u636e\n            data = {\n                \"sensor_id\": self.sensor_id,\n                \"temperature\": random.uniform(20.0, 35.0),\n                \"humidity\": random.uniform(30.0, 80.0),\n                \"timestamp\": int(time.time())\n            }\n            ctx.emit(data)\n            time.sleep(1)  # \u6bcf\u79d2\u4ea7\u751f\u4e00\u6761\u6570\u636e\n\n    def cancel(self):\n        self.running = False\n\n# \u521b\u5efa\u73af\u5883\nenv = LocalEnvironment(\"sensor_monitoring\")\n\n# \u6dfb\u52a0\u6570\u636e\u6e90\nsensor_stream = env.add_source(SensorDataSource(\"sensor_001\"))\n\n# \u6570\u636e\u5904\u7406\uff1a\u68c0\u6d4b\u5f02\u5e38\u6e29\u5ea6\nalerts = (sensor_stream\n    .filter(lambda data: data[\"temperature\"] &gt; 30.0)  # \u6e29\u5ea6\u8fc7\u9ad8\n    .map(lambda data: f\"\ud83d\udea8 Alert: High temperature {data['temperature']:.1f}\u00b0C from {data['sensor_id']}\")\n    .sink(print))\n\n# \u542f\u52a8\u5904\u7406\uff08\u8fd0\u884c5\u79d2\u540e\u505c\u6b62\uff09\nenv.submit()\n</code></pre>"},{"location":"kernel/guides/quickstart/#_5","title":"\ud83d\udd27 \u57fa\u672c\u6982\u5ff5","text":""},{"location":"kernel/guides/quickstart/#environment","title":"Environment (\u73af\u5883)","text":"<ul> <li>\u7ba1\u7406\u8ba1\u7b97\u8d44\u6e90\u548c\u6267\u884c\u4e0a\u4e0b\u6587</li> <li><code>LocalEnvironment</code>: \u5355\u673a\u73af\u5883\uff0c\u9002\u5408\u5f00\u53d1\u6d4b\u8bd5</li> <li><code>RemoteEnvironment</code>: \u5206\u5e03\u5f0f\u73af\u5883\uff0c\u9002\u5408\u751f\u4ea7\u90e8\u7f72</li> </ul>"},{"location":"kernel/guides/quickstart/#datastream","title":"DataStream (\u6570\u636e\u6d41)","text":"<ul> <li>\u4ee3\u8868\u6570\u636e\u7684\u6d41\u52a8\u5e8f\u5217</li> <li>\u652f\u6301\u94fe\u5f0f\u8c03\u7528\u7684\u8f6c\u6362\u64cd\u4f5c</li> <li>\u5ef6\u8fdf\u6267\u884c\uff0c\u6784\u5efa\u8ba1\u7b97\u56fe</li> </ul>"},{"location":"kernel/guides/quickstart/#function","title":"Function (\u51fd\u6570)","text":"<ul> <li>\u7528\u6237\u5b9a\u4e49\u7684\u6570\u636e\u5904\u7406\u903b\u8f91</li> <li>\u7c7b\u578b\u5b89\u5168\uff0c\u652f\u6301\u6cdb\u578b</li> <li>\u5185\u7f6e\u5e38\u7528\u51fd\u6570\u7c7b\u578b</li> </ul>"},{"location":"kernel/guides/quickstart/#_6","title":"\ud83d\udee0\ufe0f \u5e38\u7528\u64cd\u4f5c","text":""},{"location":"kernel/guides/quickstart/#_7","title":"\u6570\u636e\u6e90\u521b\u5efa","text":"<pre><code># \u4ece\u96c6\u5408\u521b\u5efa\nstream = env.from_batch([1, 2, 3, 4, 5])\n\n# \u4ece\u6587\u4ef6\u521b\u5efa\nstream = env.from_text_file(\"data.txt\")\n\n# \u4ece\u591a\u4e2a\u6587\u4ef6\u521b\u5efa  \nstream = env.from_text_files(\"data/*.txt\")\n\n# \u81ea\u5b9a\u4e49\u6570\u636e\u6e90\nstream = env.add_source(MySourceFunction())\n</code></pre>"},{"location":"kernel/guides/quickstart/#_8","title":"\u6570\u636e\u8f6c\u6362","text":"<pre><code># Map: \u4e00\u5bf9\u4e00\u8f6c\u6362\ndoubled = numbers.map(lambda x: x * 2)\n\n# Filter: \u8fc7\u6ee4\nevens = numbers.filter(lambda x: x % 2 == 0)\n\n# FlatMap: \u4e00\u5bf9\u591a\u8f6c\u6362\nwords = sentences.flat_map(lambda s: s.split())\n\n# KeyBy: \u5206\u7ec4\ngrouped = words.key_by(lambda word: word[0])  # \u6309\u9996\u5b57\u6bcd\u5206\u7ec4\n\n# Reduce: \u5f52\u7ea6\nsums = grouped.reduce(lambda a, b: a + b)\n</code></pre>"},{"location":"kernel/guides/quickstart/#_9","title":"\u6570\u636e\u8f93\u51fa","text":"<pre><code># \u6253\u5370\u8f93\u51fa\nstream.sink(print)\n\n# \u6587\u4ef6\u8f93\u51fa\nstream.sink_to_file(\"output.txt\")\n\n# \u81ea\u5b9a\u4e49\u8f93\u51fa\nstream.sink(MySinkFunction())\n</code></pre>"},{"location":"kernel/guides/quickstart/#_10","title":"\ud83d\udcca \u5b8c\u6574\u793a\u4f8b\uff1a\u7f51\u7ad9\u8bbf\u95ee\u65e5\u5fd7\u5206\u6790","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function import MapFunction, FilterFunction\nimport json\nfrom datetime import datetime\n\nclass LogParser(MapFunction[str, dict]):\n    \"\"\"\u89e3\u6790\u65e5\u5fd7\u884c\"\"\"\n    def map(self, log_line: str) -&gt; dict:\n        try:\n            # \u5047\u8bbe\u662fJSON\u683c\u5f0f\u7684\u65e5\u5fd7\n            return json.loads(log_line)\n        except:\n            return {\"error\": True, \"raw\": log_line}\n\nclass ValidLogFilter(FilterFunction[dict]):\n    \"\"\"\u8fc7\u6ee4\u6709\u6548\u65e5\u5fd7\"\"\"\n    def filter(self, log: dict) -&gt; bool:\n        return not log.get(\"error\", False) and \"url\" in log\n\nclass PageViewExtractor(MapFunction[dict, tuple]):\n    \"\"\"\u63d0\u53d6\u9875\u9762\u8bbf\u95ee\u4fe1\u606f\"\"\"\n    def map(self, log: dict) -&gt; tuple:\n        return (log[\"url\"], 1)\n\ndef main():\n    env = LocalEnvironment(\"log_analysis\")\n\n    # \u6a21\u62df\u65e5\u5fd7\u6570\u636e\n    log_lines = env.from_batch([\n        '{\"timestamp\": \"2025-01-01T10:00:00\", \"url\": \"/home\", \"status\": 200, \"user_id\": \"user1\"}',\n        '{\"timestamp\": \"2025-01-01T10:01:00\", \"url\": \"/about\", \"status\": 200, \"user_id\": \"user2\"}',\n        '{\"timestamp\": \"2025-01-01T10:02:00\", \"url\": \"/home\", \"status\": 200, \"user_id\": \"user3\"}',\n        '{\"timestamp\": \"2025-01-01T10:03:00\", \"url\": \"/contact\", \"status\": 404, \"user_id\": \"user1\"}',\n        'invalid log line',\n        '{\"timestamp\": \"2025-01-01T10:04:00\", \"url\": \"/home\", \"status\": 200, \"user_id\": \"user2\"}'\n    ])\n\n    # \u65e5\u5fd7\u5904\u7406\u7ba1\u9053\n    page_views = (log_lines\n        .map(LogParser())                    # \u89e3\u6790\u65e5\u5fd7\n        .filter(ValidLogFilter())           # \u8fc7\u6ee4\u6709\u6548\u65e5\u5fd7\n        .filter(lambda log: log[\"status\"] == 200)  # \u53ea\u7edf\u8ba1\u6210\u529f\u8bbf\u95ee\n        .map(PageViewExtractor())           # \u63d0\u53d6\u9875\u9762\u4fe1\u606f\n        .key_by(lambda pair: pair[0])       # \u6309URL\u5206\u7ec4\n        .reduce(lambda a, b: (a[0], a[1] + b[1]))  # \u7edf\u8ba1\u8bbf\u95ee\u6b21\u6570\n        .map(lambda pair: f\"Page {pair[0]}: {pair[1]} views\")\n        .sink(print))\n\n    env.submit()\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"kernel/guides/quickstart/#_11","title":"\ud83c\udfaf \u6700\u4f73\u5b9e\u8df5","text":""},{"location":"kernel/guides/quickstart/#1_1","title":"1. \u9519\u8bef\u5904\u7406","text":"<pre><code>class RobustMapFunction(MapFunction[str, dict]):\n    def map(self, input_str: str) -&gt; dict:\n        try:\n            return json.loads(input_str)\n        except Exception as e:\n            # \u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u800c\u4e0d\u662f\u629b\u51fa\u5f02\u5e38\n            return {\n                \"error\": True,\n                \"message\": str(e),\n                \"input\": input_str\n            }\n</code></pre>"},{"location":"kernel/guides/quickstart/#2_1","title":"2. \u914d\u7f6e\u7ba1\u7406","text":"<pre><code># config.py\nCONFIG = {\n    \"parallelism\": 4,\n    \"buffer_size\": 10000,\n    \"checkpoint_interval\": \"30s\"\n}\n\n# main.py\nenv = LocalEnvironment(\"my_app\", config=CONFIG)\n</code></pre>"},{"location":"kernel/guides/quickstart/#3_1","title":"3. \u65e5\u5fd7\u8bb0\u5f55","text":"<pre><code>import logging\n\n# \u914d\u7f6e\u65e5\u5fd7\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\nclass LoggedMapFunction(MapFunction[str, str]):\n    def map(self, value: str) -&gt; str:\n        logger.info(f\"Processing: {value}\")\n        result = process(value)\n        logger.info(f\"Result: {result}\")\n        return result\n</code></pre>"},{"location":"kernel/guides/quickstart/#4","title":"4. \u6027\u80fd\u76d1\u63a7","text":"<pre><code>import time\n\nclass TimedMapFunction(MapFunction[str, str]):\n    def __init__(self):\n        self.total_time = 0\n        self.count = 0\n\n    def map(self, value: str) -&gt; str:\n        start = time.time()\n        result = expensive_operation(value)\n        self.total_time += time.time() - start\n        self.count += 1\n\n        if self.count % 1000 == 0:\n            avg_time = self.total_time / self.count\n            print(f\"Processed {self.count} items, avg time: {avg_time:.3f}s\")\n\n        return result\n</code></pre>"},{"location":"kernel/guides/quickstart/#_12","title":"\ud83d\ude80 \u4e0b\u4e00\u6b65","text":"<p>\u606d\u559c\uff01\u4f60\u5df2\u7ecf\u638c\u63e1\u4e86 SAGE Kernel \u7684\u57fa\u7840\u7528\u6cd5\u3002\u73b0\u5728\u53ef\u4ee5\uff1a</p> <ol> <li>\ud83d\udcd6 \u9605\u8bfb API \u8be6\u7ec6\u6587\u6863</li> <li>\ud83c\udf10 \u5b66\u4e60 \u6838\u5fc3\u6982\u5ff5</li> <li>\u26a1 \u4e86\u89e3  \u6570\u636e\u6d41\u5f00\u53d1\u6307\u5357</li> <li>\ud83d\udd0d \u67e5\u770b \u66f4\u591a\u793a\u4f8b</li> </ol>"},{"location":"kernel/guides/quickstart/#_13","title":"\ud83d\udcde \u83b7\u53d6\u5e2e\u52a9","text":"<ul> <li>GitHub Issues - \u62a5\u544a\u95ee\u9898</li> <li>\u6587\u6863\u4e2d\u5fc3 - \u5b8c\u6574\u6587\u6863</li> <li>\u793a\u4f8b\u4ee3\u7801 - \u66f4\u591a\u793a\u4f8b</li> </ul>"},{"location":"librarys/","title":"SAGE Applications \u5e94\u7528\u7ec4\u4ef6","text":"<p>SAGE Applications \u662f\u57fa\u4e8e SAGE Kernel \u548c Middleware \u6784\u5efa\u7684\u9ad8\u7ea7\u5e94\u7528\u7ec4\u4ef6\u5e93\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5f00\u7bb1\u5373\u7528\u7684AI\u548c\u6570\u636e\u5904\u7406\u5e94\u7528\u6a21\u5757\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u72ec\u7acb\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u7ec4\u5408\u6784\u5efa\u590d\u6742\u7684\u667a\u80fd\u5e94\u7528\u3002</p>"},{"location":"librarys/#_1","title":"\ud83c\udfd7\ufe0f \u67b6\u6784\u5b9a\u4f4d","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Applications  \u2502  \u2190 \u9ad8\u7ea7\u5e94\u7528\u7ec4\u4ef6 (\u5f53\u524d\u6587\u6863)\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   Middleware    \u2502  \u2190 \u4e2d\u95f4\u4ef6\u670d\u52a1\u5c42\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \n\u2502   SAGE Kernel   \u2502  \u2190 \u6838\u5fc3\u6d41\u5904\u7406\u5f15\u64ce\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Applications \u5c42\u662f\u9762\u5411\u6700\u7ec8\u7528\u6237\u7684\u9ad8\u7ea7\u62bd\u8c61\uff0c\u5c06\u590d\u6742\u7684AI\u4efb\u52a1\u5c01\u88c5\u4e3a\u7b80\u5355\u6613\u7528\u7684\u7ec4\u4ef6\uff0c\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u5feb\u901f\u6784\u5efa\u751f\u4ea7\u7ea7\u7684\u667a\u80fd\u5e94\u7528\u3002</p>"},{"location":"librarys/#_2","title":"\ud83e\udde9 \u6838\u5fc3\u7ec4\u4ef6","text":""},{"location":"librarys/#rag","title":"RAG (\u68c0\u7d22\u589e\u5f3a\u751f\u6210)","text":"<p>\u6784\u5efa\u5f3a\u5927\u7684\u95ee\u7b54\u548c\u5185\u5bb9\u751f\u6210\u7cfb\u7edf\uff1a</p> <ul> <li>RAG \u5e94\u7528 - \u68c0\u7d22\u589e\u5f3a\u751f\u6210\u7684\u5b8c\u6574\u89e3\u51b3\u65b9\u6848</li> <li>\u652f\u6301\u591a\u79cd\u68c0\u7d22\u7b56\u7565\uff08\u7a00\u758f\u3001\u5bc6\u96c6\u3001\u6df7\u5408\uff09</li> <li>\u5185\u7f6e\u91cd\u6392\u5e8f\u548c\u7ed3\u679c\u4f18\u5316</li> <li>\u652f\u6301\u591a\u79cdLLM\u540e\u7aef</li> </ul>"},{"location":"librarys/#agents","title":"Agents (\u667a\u80fd\u4ee3\u7406)","text":"<p>\u81ea\u4e3b\u51b3\u7b56\u548c\u4efb\u52a1\u6267\u884c\u7684\u667a\u80fd\u4f53\uff1a</p> <ul> <li>\u667a\u80fd\u4ee3\u7406 - \u81ea\u4e3b\u89c4\u5212\u548c\u6267\u884c\u7684AI\u4ee3\u7406</li> <li>\u652f\u6301\u5de5\u5177\u8c03\u7528\u548c\u73af\u5883\u4ea4\u4e92</li> <li>\u591a\u4ee3\u7406\u534f\u4f5c\u6846\u67b6</li> <li>\u53ef\u63d2\u62d4\u7684\u63a8\u7406\u5f15\u64ce</li> </ul>"},{"location":"librarys/#tools","title":"Tools (\u5de5\u5177\u96c6)","text":"<p>\u5373\u63d2\u5373\u7528\u7684\u529f\u80fd\u7ec4\u4ef6\uff1a</p> <ul> <li>\u5de5\u5177\u6982\u89c8 - \u5de5\u5177\u751f\u6001\u7cfb\u7edf\u4ecb\u7ecd</li> <li>Arxiv Paper Searcher - \u5b66\u672f\u8bba\u6587\u641c\u7d22</li> <li>Image Captioner - \u56fe\u50cf\u63cf\u8ff0\u751f\u6210</li> <li>Nature News Fetcher - \u79d1\u5b66\u65b0\u95fb\u83b7\u53d6</li> <li>Searcher Tool - \u901a\u7528\u641c\u7d22\u5de5\u5177</li> <li>Text Detector - \u6587\u672c\u68c0\u6d4b\u5206\u6790</li> <li>URL Text Extractor - \u7f51\u9875\u6587\u672c\u63d0\u53d6</li> </ul>"},{"location":"librarys/#io","title":"IO \u7ec4\u4ef6","text":"<p>\u6570\u636e\u8f93\u5165\u8f93\u51fa\u7684\u6807\u51c6\u5316\u63a5\u53e3\uff1a</p> <ul> <li>IO \u6a21\u5757 - \u7edf\u4e00\u7684\u6570\u636e\u8f93\u5165\u8f93\u51fa\u63a5\u53e3</li> <li>\u652f\u6301\u591a\u79cd\u6570\u636e\u6e90\uff08\u6587\u4ef6\u3001\u6570\u636e\u5e93\u3001API\uff09</li> <li>\u6807\u51c6\u5316\u7684\u6570\u636e\u683c\u5f0f\u8f6c\u6362</li> <li>\u6d41\u5f0f\u548c\u6279\u91cf\u5904\u7406\u6a21\u5f0f</li> </ul>"},{"location":"librarys/#context","title":"Context \u7ba1\u7406","text":"<p>\u4e0a\u4e0b\u6587\u548c\u72b6\u6001\u7ba1\u7406\uff1a</p> <ul> <li>Context \u7ba1\u7406 - \u5e94\u7528\u4e0a\u4e0b\u6587\u548c\u72b6\u6001\u7ba1\u7406</li> <li>\u8de8\u7ec4\u4ef6\u7684\u72b6\u6001\u5171\u4eab</li> <li>\u4f1a\u8bdd\u548c\u7528\u6237\u4e0a\u4e0b\u6587</li> <li>\u5206\u5e03\u5f0f\u72b6\u6001\u540c\u6b65</li> </ul>"},{"location":"librarys/#embedding","title":"Embedding \u670d\u52a1","text":"<p>\u5411\u91cf\u5316\u548c\u76f8\u4f3c\u6027\u8ba1\u7b97\uff1a</p> <ul> <li>Embedding \u670d\u52a1 - \u6587\u672c\u548c\u591a\u6a21\u6001\u5411\u91cf\u5316</li> <li>\u652f\u6301\u591a\u79cd\u9884\u8bad\u7ec3\u6a21\u578b</li> <li>\u6279\u91cf\u5411\u91cf\u5316\u5904\u7406</li> <li>\u76f8\u4f3c\u6027\u641c\u7d22\u4f18\u5316</li> </ul>"},{"location":"librarys/#_3","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"librarys/#rag_1","title":"RAG \u5e94\u7528\u793a\u4f8b","text":"<pre><code>from sage.applications.rag import RAGPipeline\nfrom sage.applications.io import FileSource\n\n# \u521b\u5efaRAG\u7ba1\u9053\nrag = RAGPipeline(\n    model_name=\"gpt-3.5-turbo\",\n    retriever_type=\"hybrid\"  # \u6df7\u5408\u68c0\u7d22\n)\n\n# \u6dfb\u52a0\u77e5\u8bc6\u5e93\ndocs = FileSource(\"knowledge_base/\").load()\nrag.add_documents(docs)\n\n# \u67e5\u8be2\nanswer = rag.query(\"SAGE\u6846\u67b6\u7684\u4e3b\u8981\u7279\u6027\u662f\u4ec0\u4e48\uff1f\")\nprint(answer)\n</code></pre>"},{"location":"librarys/#agent","title":"Agent \u5e94\u7528\u793a\u4f8b","text":"<pre><code>from sage.applications.agents import Agent\nfrom sage.applications.tools import ArxivSearcher, ImageCaptioner\n\n# \u521b\u5efa\u667a\u80fd\u4ee3\u7406\nagent = Agent(\n    name=\"\u7814\u7a76\u52a9\u624b\",\n    description=\"\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5b66\u672f\u7814\u7a76\",\n    tools=[ArxivSearcher(), ImageCaptioner()]\n)\n\n# \u6267\u884c\u4efb\u52a1\nresult = agent.execute(\"\u5e2e\u6211\u641c\u7d22\u5173\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u6700\u65b0\u8bba\u6587\uff0c\u5e76\u751f\u6210\u6458\u8981\")\nprint(result)\n</code></pre>"},{"location":"librarys/#_4","title":"\u5de5\u5177\u7ec4\u5408\u793a\u4f8b","text":"<pre><code>from sage.applications.tools import URLTextExtractor, TextDetector\nfrom sage.core.api import LocalEnvironment\n\n# \u521b\u5efa\u5904\u7406\u7ba1\u9053\nenv = LocalEnvironment(\"text_analysis\")\n\n# \u5de5\u5177\u7ec4\u5408\u5904\u7406\nextractor = URLTextExtractor()\ndetector = TextDetector()\n\ndef analyze_webpage(url):\n    # \u63d0\u53d6\u7f51\u9875\u6587\u672c\n    text = extractor.extract(url)\n\n    # \u68c0\u6d4b\u6587\u672c\u7279\u5f81\n    analysis = detector.analyze(text)\n\n    return {\n        \"url\": url,\n        \"text_length\": len(text),\n        \"language\": analysis[\"language\"],\n        \"sentiment\": analysis[\"sentiment\"],\n        \"topics\": analysis[\"topics\"]\n    }\n\n# \u6279\u91cf\u5904\u7406URL\nurls = [\"https://example1.com\", \"https://example2.com\"]\nresults = [analyze_webpage(url) for url in urls]\n</code></pre>"},{"location":"librarys/#_5","title":"\ud83d\udd27 \u81ea\u5b9a\u4e49\u7ec4\u4ef6","text":""},{"location":"librarys/#rag_2","title":"\u521b\u5efa\u81ea\u5b9a\u4e49RAG\u7ec4\u4ef6","text":"<pre><code>from sage.applications.rag import BaseRetriever, BaseGenerator\n\nclass CustomRetriever(BaseRetriever):\n    def retrieve(self, query, top_k=10):\n        # \u5b9e\u73b0\u81ea\u5b9a\u4e49\u68c0\u7d22\u903b\u8f91\n        pass\n\nclass CustomGenerator(BaseGenerator):\n    def generate(self, context, query):\n        # \u5b9e\u73b0\u81ea\u5b9a\u4e49\u751f\u6210\u903b\u8f91\n        pass\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u7ec4\u4ef6\nrag = RAGPipeline(\n    retriever=CustomRetriever(),\n    generator=CustomGenerator()\n)\n</code></pre>"},{"location":"librarys/#_6","title":"\u521b\u5efa\u81ea\u5b9a\u4e49\u5de5\u5177","text":"<pre><code>from sage.applications.tools import BaseTool\n\nclass WeatherTool(BaseTool):\n    name = \"weather_checker\"\n    description = \"\u83b7\u53d6\u6307\u5b9a\u57ce\u5e02\u7684\u5929\u6c14\u4fe1\u606f\"\n\n    def execute(self, city: str) -&gt; dict:\n        # \u5b9e\u73b0\u5929\u6c14\u67e5\u8be2\u903b\u8f91\n        return {\n            \"city\": city,\n            \"temperature\": \"25\u00b0C\",\n            \"description\": \"\u6674\u5929\"\n        }\n\n# \u6ce8\u518c\u548c\u4f7f\u7528\u5de5\u5177\nagent.add_tool(WeatherTool())\nresult = agent.execute(\"\u67e5\u8be2\u5317\u4eac\u7684\u5929\u6c14\")\n</code></pre>"},{"location":"librarys/#agent_1","title":"\u521b\u5efa\u81ea\u5b9a\u4e49Agent","text":"<pre><code>from sage.applications.agents import BaseAgent\n\nclass ResearchAgent(BaseAgent):\n    def __init__(self):\n        super().__init__(\n            name=\"Research Assistant\",\n            system_prompt=\"\u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u5b66\u672f\u7814\u7a76\u52a9\u624b...\"\n        )\n\n    def plan_task(self, task):\n        # \u4efb\u52a1\u89c4\u5212\u903b\u8f91\n        pass\n\n    def execute_step(self, step):\n        # \u6b65\u9aa4\u6267\u884c\u903b\u8f91\n        pass\n</code></pre>"},{"location":"librarys/#_7","title":"\ud83d\udd17 \u7ec4\u4ef6\u96c6\u6210","text":""},{"location":"librarys/#_8","title":"\u591a\u7ec4\u4ef6\u534f\u4f5c","text":"<pre><code>from sage.applications import RAGPipeline, Agent\nfrom sage.applications.tools import ArxivSearcher\n\n# \u521b\u5efaRAG\u7cfb\u7edf\nrag = RAGPipeline(model_name=\"gpt-4\")\n\n# \u521b\u5efa\u667a\u80fd\u4ee3\u7406\uff0c\u96c6\u6210RAG\nagent = Agent(\n    name=\"\u77e5\u8bc6\u52a9\u624b\",\n    tools=[ArxivSearcher()],\n    knowledge_base=rag\n)\n\n# \u590d\u6742\u67e5\u8be2\u5904\u7406\nresult = agent.execute(\"\"\"\n\u8bf7\u5e2e\u6211\uff1a\n1. \u641c\u7d22\u5173\u4e8eTransformer\u67b6\u6784\u7684\u6700\u65b0\u8bba\u6587\n2. \u603b\u7ed3\u5176\u4e2d\u7684\u5173\u952e\u521b\u65b0\u70b9\n3. \u4e0e\u6211\u7684\u77e5\u8bc6\u5e93\u4e2d\u7684\u76f8\u5173\u5185\u5bb9\u8fdb\u884c\u5bf9\u6bd4\n\"\"\")\n</code></pre>"},{"location":"librarys/#_9","title":"\u6d41\u6c34\u7ebf\u5904\u7406","text":"<pre><code>from sage.core.api import LocalEnvironment\nfrom sage.applications.io import FileSource, FileSink\n\nenv = LocalEnvironment(\"document_processing\")\n\n# \u6784\u5efa\u6587\u6863\u5904\u7406\u6d41\u6c34\u7ebf\nsource = FileSource(\"documents/\")\nrag = RAGPipeline()\nsink = FileSink(\"processed/\")\n\ndef process_document(doc):\n    # \u4f7f\u7528RAG\u5904\u7406\u6587\u6863\n    summary = rag.summarize(doc.content)\n    return {\n        \"filename\": doc.name,\n        \"summary\": summary,\n        \"timestamp\": doc.timestamp\n    }\n\n# \u6d41\u5f0f\u5904\u7406\npipeline = (env\n    .from_source(source)\n    .map(process_document)\n    .sink(sink))\n\npipeline.execute()\n</code></pre>"},{"location":"librarys/#_10","title":"\ud83d\udcca \u6027\u80fd\u4f18\u5316","text":""},{"location":"librarys/#_11","title":"\u6279\u91cf\u5904\u7406","text":"<pre><code>from sage.applications.embedding import EmbeddingService\n\nembedding = EmbeddingService(batch_size=32)\n\n# \u6279\u91cf\u5411\u91cf\u5316\ntexts = [\"\u6587\u672c1\", \"\u6587\u672c2\", \"\u6587\u672c3\", ...]\nvectors = embedding.encode_batch(texts)\n</code></pre>"},{"location":"librarys/#_12","title":"\u7f13\u5b58\u4f18\u5316","text":"<pre><code>from sage.applications.cache import ComponentCache\n\n# \u542f\u7528\u7ec4\u4ef6\u7f13\u5b58\ncache = ComponentCache(redis_url=\"redis://localhost:6379\")\n\nrag = RAGPipeline(cache=cache)\nagent = Agent(cache=cache)\n\n# \u81ea\u52a8\u7f13\u5b58\u67e5\u8be2\u7ed3\u679c\nanswer1 = rag.query(\"\u95ee\u98981\")  # \u9996\u6b21\u67e5\u8be2\uff0c\u8ba1\u7b97\u7ed3\u679c\nanswer2 = rag.query(\"\u95ee\u98981\")  # \u7b2c\u4e8c\u6b21\u67e5\u8be2\uff0c\u8fd4\u56de\u7f13\u5b58\u7ed3\u679c\n</code></pre>"},{"location":"librarys/#_13","title":"\u5e76\u884c\u5904\u7406","text":"<pre><code>import asyncio\nfrom sage.applications.async_support import AsyncRAG\n\n# \u5f02\u6b65\u5904\u7406\nasync def process_queries():\n    rag = AsyncRAG()\n\n    queries = [\"\u95ee\u98981\", \"\u95ee\u98982\", \"\u95ee\u98983\"]\n    tasks = [rag.query_async(q) for q in queries]\n\n    results = await asyncio.gather(*tasks)\n    return results\n</code></pre>"},{"location":"librarys/#_14","title":"\ud83d\udd12 \u5b89\u5168\u548c\u9690\u79c1","text":""},{"location":"librarys/#_15","title":"\u6570\u636e\u8131\u654f","text":"<pre><code>from sage.applications.privacy import DataSanitizer\n\nsanitizer = DataSanitizer()\n\n# \u81ea\u52a8\u8131\u654f\u5904\u7406\nsafe_text = sanitizer.sanitize(user_input)\nanswer = rag.query(safe_text)\n</code></pre>"},{"location":"librarys/#_16","title":"\u8bbf\u95ee\u63a7\u5236","text":"<pre><code>from sage.applications.auth import ComponentAuth\n\nauth = ComponentAuth()\n\n# \u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\n@auth.require_role(\"admin\")\ndef admin_query(query):\n    return rag.query(query)\n\n@auth.require_permission(\"read:documents\")  \ndef read_documents():\n    return document_store.list()\n</code></pre> <p>SAGE Applications \u63d0\u4f9b\u4e86\u6784\u5efa\u667a\u80fd\u5e94\u7528\u7684\u5b8c\u6574\u7ec4\u4ef6\u751f\u6001\uff0c\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u5feb\u901f\u5b9e\u73b0\u4ece\u7b80\u5355\u7684\u6587\u672c\u5904\u7406\u5230\u590d\u6742\u7684\u591a\u6a21\u6001AI\u5e94\u7528\u3002\u901a\u8fc7\u6807\u51c6\u5316\u7684\u63a5\u53e3\u548c\u4e30\u5bcc\u7684\u6269\u5c55\u80fd\u529b\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u9700\u6c42\u7075\u6d3b\u7ec4\u5408\u548c\u5b9a\u5236\u5e94\u7528\u7ec4\u4ef6\u3002</p>"},{"location":"librarys/agents/","title":"agents","text":""},{"location":"librarys/context/","title":"SAGE \u4e0a\u4e0b\u6587\u6570\u636e\u7ed3\u6784 (<code>context</code>)","text":"<p>\u6838\u5fc3\u6570\u636e\u6a21\u578b</p> <p>\u672c\u6587\u6863\u8be6\u7ec6\u63cf\u8ff0\u4e86 SAGE \u7cfb\u7edf\u4e2d\u7528\u4e8e\u5728\u4e0d\u540c\u5904\u7406\u9636\u6bb5\u95f4\u4f20\u9012\u4fe1\u606f\u7684\u7cfb\u5217\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u3002\u8fd9\u4e9b\u6570\u636e\u7c7b\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u540d\u4e3a <code>ModelContext</code> \u7684\u7efc\u5408\u6027\u201c\u6570\u636e\u5305\u201d\uff0c\u5b83\u5982\u540c\u4e00\u4e2a\u6d41\u8f6c\u4e8e\u5404\u4e2a\u5de5\u5177\u548c\u5904\u7406\u8282\u70b9\u4e4b\u95f4\u7684\u201c\u62a4\u7167\u201d\uff0c\u5c01\u88c5\u4e86\u4ece\u539f\u59cb\u95ee\u9898\u3001\u641c\u7d22\u8fc7\u7a0b\u3001\u6a21\u578b\u54cd\u5e94\u5230\u6700\u7ec8\u8bc4\u4f30\u7684\u6240\u6709\u4fe1\u606f\uff0c\u8bb0\u5f55\u4e86\u8bf7\u6c42\u751f\u547d\u5468\u671f\u4e2d\u7684\u6bcf\u4e00\u6b65\u3002</p>"},{"location":"librarys/context/#1","title":"1. \u6574\u4f53\u6570\u636e\u6d41\u4e0e\u5173\u7cfb","text":"<p>\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u88ab\u8bbe\u8ba1\u6210\u4e00\u4e2a\u5206\u5c42\u7684\u3001\u76f8\u4e92\u5173\u8054\u7684\u4f53\u7cfb\uff0c\u5176\u6838\u5fc3\u662f <code>ModelContext</code>\u3002\u4e0b\u56fe\u5c55\u793a\u4e86\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a</p> <pre><code>graph TD\n    A[ModelContext] --&gt; B(SearchSession);\n    A --&gt; C(CriticEvaluation);\n    A --&gt; D(tool_config: Dict);\n    B --&gt; E{List&lt;SearchQueryResults&gt;};\n    E --&gt; F(SearchQueryResults);\n    F --&gt; G{List&lt;SearchResult&gt;};\n    C --&gt; H(QualityLabel);\n\n    subgraph \"\u6838\u5fc3\u5bb9\u5668\"\n        A\n    end\n\n    subgraph \"\u641c\u7d22\u6a21\u5757\"\n        B\n        E\n        F\n        G\n    end\n\n    subgraph \"\u8bc4\u4f30\u6a21\u5757\"\n        C\n        H\n    end</code></pre> <p>\u6570\u636e\u6d41\u8bf4\u660e: 1.  \u4e00\u4e2a\u8bf7\u6c42\u5f00\u59cb\u65f6\uff0c\u7cfb\u7edf\u4f1a\u521b\u5efa\u4e00\u4e2a <code>ModelContext</code> \u5b9e\u4f8b\uff0c\u5e76\u586b\u5165\u7528\u6237\u7684 <code>raw_question</code>\u3002 2.  \u5f53\u9700\u8981\u8fdb\u884c\u641c\u7d22\u65f6\uff0c\u4f1a\u5728 <code>ModelContext</code> \u4e2d\u521b\u5efa\u4e00\u4e2a <code>SearchSession</code>\u3002 3.  \u641c\u7d22\u5de5\u5177\uff08\u5982 <code>BochaSearchTool</code>\uff09\u4f1a\u6267\u884c\u4e00\u4e2a\u6216\u591a\u4e2a\u67e5\u8be2\u3002\u6bcf\u6b21\u67e5\u8be2\u7684\u7ed3\u679c\u88ab\u5c01\u88c5\u6210\u4e00\u4e2a <code>SearchQueryResults</code> \u5bf9\u8c61\u3002 4.  \u6bcf\u4e2a <code>SearchQueryResults</code> \u5185\u90e8\u5305\u542b\u4e00\u4e2a <code>SearchResult</code> \u5bf9\u8c61\u5217\u8868\uff0c\u4ee3\u8868\u8be5\u6b21\u67e5\u8be2\u8fd4\u56de\u7684\u5177\u4f53\u6761\u76ee\u3002 5.  \u6240\u6709 <code>SearchQueryResults</code> \u88ab\u6dfb\u52a0\u5230 <code>SearchSession</code> \u4e2d\u3002 6.  \u540e\u7eed\u7684\u6a21\u5757\uff08\u5982\u5927\u8bed\u8a00\u6a21\u578b\uff09\u5229\u7528\u8fd9\u4e9b\u7ed3\u6784\u5316\u7684\u4fe1\u606f\u751f\u6210 <code>response</code>\u3002 7.  \u6700\u540e\uff0c<code>Critic</code> \u6a21\u5757\u4f1a\u5bf9\u6574\u4e2a <code>ModelContext</code> \u7684\u5904\u7406\u7ed3\u679c\u8fdb\u884c\u8bc4\u4f30\uff0c\u751f\u6210\u4e00\u4e2a <code>CriticEvaluation</code> \u5bf9\u8c61\uff0c\u5e76\u4f7f\u7528 <code>QualityLabel</code> \u6765\u6807\u8bb0\u8d28\u91cf\u3002</p>"},{"location":"librarys/context/#2-quality_labelpy","title":"2. <code>quality_label.py</code>: \u8d28\u91cf\u8bc4\u4f30\u6807\u7b7e","text":"<p>\u8be5\u6587\u4ef6\u5b9a\u4e49\u4e86\u4e00\u4e2a\u679a\u4e3e\u7c7b <code>QualityLabel</code>\uff0c\u4e3a\u8bc4\u4f30\u7ed3\u679c\u63d0\u4f9b\u4e86\u4e00\u5957\u53d7\u63a7\u8bcd\u6c47\u8868\uff0c\u786e\u4fdd\u4e86\u8bc4\u4f30\u6807\u51c6\u7684\u4e00\u81f4\u6027\u3002</p> \u6210\u5458 (Member) \u503c (Value) \u63cf\u8ff0 <code>COMPLETE_EXCELLENT</code> <code>\"complete_excellent\"</code> \u5b8c\u6574\u4e14\u8d28\u91cf\u4f18\u79c0 <code>COMPLETE_GOOD</code> <code>\"complete_good\"</code> \u5b8c\u6574\u4e14\u8d28\u91cf\u826f\u597d <code>PARTIAL_NEEDS_IMPROVEMENT</code> <code>\"partial_needs_improvement\"</code> \u90e8\u5206\u5b8c\u6210\uff0c\u9700\u8981\u6539\u8fdb <code>INCOMPLETE_MISSING_INFO</code> <code>\"incomplete_missing_info\"</code> \u4e0d\u5b8c\u6574\uff0c\u7f3a\u5c11\u4fe1\u606f <code>FAILED_POOR_QUALITY</code> <code>\"failed_poor_quality\"</code> \u5931\u8d25\uff0c\u8d28\u91cf\u5dee <code>ERROR_INVALID</code> <code>\"error_invalid\"</code> \u53d1\u751f\u9519\u8bef\u6216\u7ed3\u679c\u65e0\u6548"},{"location":"librarys/context/#3-critic_evaluationpy-critic","title":"3. <code>critic_evaluation.py</code>: Critic \u8bc4\u4f30\u7ed3\u679c","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u6570\u636e\u7c7b <code>CriticEvaluation</code>\uff0c\u5b83\u50cf\u4e00\u4efd\u201c\u8d28\u68c0\u62a5\u544a\u201d\uff0c\u8be6\u7ec6\u8bb0\u5f55\u4e86\u5bf9 <code>ModelContext</code> \u5904\u7406\u7ed3\u679c\u7684\u8bc4\u4f30\u3002</p> \u5c5e\u6027 (Attribute) \u7c7b\u578b (Type) \u63cf\u8ff0 <code>label</code> <code>QualityLabel</code> \u6765\u81ea <code>QualityLabel</code> \u679a\u4e3e\u7684\u8bc4\u4f30\u6807\u7b7e\u3002 <code>confidence</code> <code>float</code> \u8bc4\u4f30\u7684\u7f6e\u4fe1\u5ea6\uff0c\u8303\u56f4\u4ece 0.0 \u5230 1.0\u3002 <code>reasoning</code> <code>str</code> \u505a\u51fa\u6b64\u8bc4\u4f30\u7684\u8be6\u7ec6\u7406\u7531\uff0c\u89e3\u91ca\u4e3a\u4f55\u7ed9\u51fa\u8be5\u6807\u7b7e\u3002 <code>specific_issues</code> <code>List[str]</code> \u53d1\u73b0\u7684\u5177\u4f53\u95ee\u9898\u5217\u8868\uff0c\u4f8b\u5982\u201c\u4e8b\u5b9e\u6027\u9519\u8bef\u201d\u3001\u201c\u56de\u7b54\u4e0d\u5b8c\u6574\u201d\u7b49\u3002 <code>suggestions</code> <code>List[str]</code> \u9488\u5bf9\u53d1\u73b0\u7684\u95ee\u9898\u63d0\u51fa\u7684\u5177\u4f53\u6539\u8fdb\u5efa\u8bae\u3002 <code>should_return_to_chief</code> <code>bool</code> \u4e00\u4e2a\u91cd\u8981\u7684\u6807\u5fd7\uff0c\u6307\u793a\u662f\u5426\u5e94\u5c06\u6b64\u7ed3\u679c\u8fd4\u56de\u7ed9\u4e3b\u63a7\u6a21\u5757\u8fdb\u884c\u53cd\u601d\u548c\u91cd\u65b0\u5904\u7406\u3002 <code>ready_for_output</code> <code>bool</code> \u6807\u8bb0\u8be5\u7ed3\u679c\u662f\u5426\u5df2\u8fbe\u5230\u53ef\u8f93\u51fa\u7ed9\u7528\u6237\u7684\u6807\u51c6\u3002"},{"location":"librarys/context/#4-search_resultpy","title":"4. <code>search_result.py</code>: \u5355\u4e2a\u641c\u7d22\u7ed3\u679c","text":"<p>\u6570\u636e\u7c7b <code>SearchResult</code> \u662f\u641c\u7d22\u4fe1\u606f\u7684\u6700\u57fa\u672c\u5355\u5143\uff0c\u4ee3\u8868\u4ece\u641c\u7d22\u5f15\u64ce\u8fd4\u56de\u7684\u5355\u4e2a\u6761\u76ee\u3002</p> \u5c5e\u6027 (Attribute) \u7c7b\u578b (Type) \u63cf\u8ff0 <code>title</code> <code>str</code> \u641c\u7d22\u7ed3\u679c\u7684\u6807\u9898\u3002 <code>content</code> <code>str</code> \u641c\u7d22\u7ed3\u679c\u7684\u5185\u5bb9\u7247\u6bb5\u6216\u6458\u8981\u3002 <code>source</code> <code>str</code> \u7ed3\u679c\u7684\u6765\u6e90 URL\uff0c\u7528\u4e8e\u6eaf\u6e90\u548c\u9a8c\u8bc1\u3002 <code>rank</code> <code>int</code> \u7ed3\u679c\u5728\u539f\u59cb\u641c\u7d22\u5217\u8868\u4e2d\u7684\u6392\u540d\uff0c\u6709\u52a9\u4e8e\u5224\u65ad\u5176\u539f\u59cb\u91cd\u8981\u6027\u3002 <code>relevance_score</code> <code>float</code> \u7cfb\u7edf\u6839\u636e\u76f8\u5173\u6027\u7b97\u6cd5\u8ba1\u7b97\u51fa\u7684\u5206\u6570\uff0c\u7528\u4e8e\u7ed3\u679c\u7684\u6392\u5e8f\u548c\u7b5b\u9009\u3002 <code>timestamp</code> <code>int</code> \u521b\u5efa\u8be5\u6761\u76ee\u7684\u65f6\u95f4\u6233\uff08\u6beb\u79d2\uff09\u3002"},{"location":"librarys/context/#5-search_query_resultspy","title":"5. <code>search_query_results.py</code>: \u5355\u6b21\u67e5\u8be2\u7684\u7ed3\u679c\u96c6","text":"<p>\u6570\u636e\u7c7b <code>SearchQueryResults</code> \u5c06\u4e00\u6b21\u7279\u5b9a\u67e5\u8be2\u7684\u6240\u6709\u76f8\u5173\u4fe1\u606f\u7ec4\u7ec7\u5728\u4e00\u8d77\uff0c\u662f\u5206\u6790\u5355\u6b21\u641c\u7d22\u6548\u679c\u7684\u5173\u952e\u3002</p> \u5c5e\u6027 (Attribute) \u7c7b\u578b (Type) \u63cf\u8ff0 <code>query</code> <code>str</code> \u6267\u884c\u7684\u539f\u59cb\u641c\u7d22\u67e5\u8be2\u5b57\u7b26\u4e32\u3002 <code>results</code> <code>List[SearchResult]</code> \u672c\u6b21\u67e5\u8be2\u8fd4\u56de\u7684 <code>SearchResult</code> \u5bf9\u8c61\u5217\u8868\u3002 <code>search_timestamp</code> <code>int</code> \u6267\u884c\u641c\u7d22\u7684\u65f6\u95f4\u6233\uff08\u6beb\u79d2\uff09\u3002 <code>total_results_count</code> <code>int</code> \u641c\u7d22\u5f15\u64ce\u58f0\u79f0\u627e\u5230\u7684\u7ed3\u679c\u603b\u6570\uff0c\u53ef\u80fd\u591a\u4e8e <code>results</code> \u5217\u8868\u7684\u957f\u5ea6\u3002 <code>execution_time_ms</code> <code>int</code> \u672c\u6b21\u67e5\u8be2\u7684\u6267\u884c\u8017\u65f6\uff08\u6beb\u79d2\uff09\uff0c\u7528\u4e8e\u6027\u80fd\u76d1\u63a7\u3002 <code>search_engine</code> <code>str</code> \u4f7f\u7528\u7684\u641c\u7d22\u5f15\u64ce\u540d\u79f0\uff0c\u5982 \"Bocha\" \u6216 \"Google\"\u3002 <code>metadata</code> <code>Dict[str, Any]</code> \u4e00\u4e2a\u7075\u6d3b\u7684\u5b57\u5178\uff0c\u7528\u4e8e\u5b58\u50a8\u989d\u5916\u7684\u641c\u7d22\u5143\u6570\u636e\uff0c\u5982API\u8fd4\u56de\u7684\u539f\u59cb\u6570\u636e\u7247\u6bb5\u3002"},{"location":"librarys/context/#6-search_sessionpy","title":"6. <code>search_session.py</code>: \u5b8c\u6574\u641c\u7d22\u4f1a\u8bdd","text":"<p>\u6570\u636e\u7c7b <code>SearchSession</code> \u4ee3\u8868\u4e86\u4e3a\u56de\u7b54\u4e00\u4e2a <code>original_question</code> \u800c\u8fdb\u884c\u7684\u6240\u6709\u641c\u7d22\u6d3b\u52a8\u7684\u603b\u548c\u3002\u5b83\u5c06\u591a\u6b21\u3001\u53ef\u80fd\u4e0d\u540c\u7684\u67e5\u8be2\u7ec4\u7ec7\u6210\u4e00\u4e2a\u903b\u8f91\u5355\u5143\u3002</p> \u5c5e\u6027 (Attribute) \u7c7b\u578b (Type) \u63cf\u8ff0 <code>session_id</code> <code>str</code> \u6574\u4e2a\u4f1a\u8bdd\u7684\u552f\u4e00\u6807\u8bc6\u7b26 (UUID)\u3002 <code>query_results</code> <code>List[SearchQueryResults]</code> <code>SearchQueryResults</code> \u5bf9\u8c61\u7684\u5217\u8868\uff0c\u4ee3\u8868\u672c\u6b21\u4f1a\u8bdd\u4e2d\u8fdb\u884c\u7684\u6240\u6709\u67e5\u8be2\u3002 <code>session_timestamp</code> <code>int</code> \u4f1a\u8bdd\u521b\u5efa\u65f6\u7684\u65f6\u95f4\u6233\uff08\u6beb\u79d2\uff09\u3002 <code>original_question</code> <code>str</code> \u89e6\u53d1\u672c\u6b21\u641c\u7d22\u4f1a\u8bdd\u7684\u539f\u59cb\u7528\u6237\u95ee\u9898\u3002 <code>session_metadata</code> <code>Dict[str, Any]</code> \u7528\u4e8e\u5b58\u50a8\u4f1a\u8bdd\u7ea7\u522b\u5143\u6570\u636e\u7684\u5b57\u5178\uff0c\u5982\u6574\u4f53\u641c\u7d22\u7b56\u7565\u7b49\u3002"},{"location":"librarys/context/#7-model_contextpy","title":"7. <code>model_context.py</code>: \u6838\u5fc3\u6a21\u578b\u4e0a\u4e0b\u6587","text":"<p><code>ModelContext</code> \u662f\u6240\u6709\u6570\u636e\u7ed3\u6784\u7684\u6c47\u96c6\u70b9\uff0c\u662f\u6574\u4e2a\u5904\u7406\u6d41\u7a0b\u4e2d\u72b6\u6001\u4f20\u9012\u7684\u6838\u5fc3\u3002</p>"},{"location":"librarys/context/#_1","title":"\u4e3b\u8981\u5c5e\u6027","text":"\u5c5e\u6027 (Attribute) \u7c7b\u578b (Type) \u63cf\u8ff0 <code>sequence</code> <code>int</code> \u5904\u7406\u5e8f\u5217\u53f7\uff0c\u7528\u4e8e\u8ffd\u8e2a\u5904\u7406\u6b65\u9aa4\u3002 <code>timestamp</code> <code>int</code> \u4e0a\u4e0b\u6587\u521b\u5efa\u65f6\u7684\u65f6\u95f4\u6233\uff08\u6beb\u79d2\uff09\u3002 <code>raw_question</code> <code>str</code> \u7528\u6237\u8f93\u5165\u7684\u3001\u672a\u7ecf\u4efb\u4f55\u4fee\u6539\u7684\u539f\u59cb\u95ee\u9898\u3002 <code>retriver_chunks</code> <code>List[str]</code> [\u517c\u5bb9\u5b57\u6bb5] \u65e7\u683c\u5f0f\u7684\u3001\u6241\u5e73\u5316\u7684\u68c0\u7d22\u7ed3\u679c\u6587\u672c\u5757\u5217\u8868\u3002\u4e3a\u786e\u4fdd\u65e7\u6a21\u5757\u80fd\u7ee7\u7eed\u5de5\u4f5c\u800c\u4fdd\u7559\u3002 <code>search_session</code> <code>Optional[SearchSession]</code> [\u63a8\u8350\u4f7f\u7528] \u5b8c\u6574\u7684\u3001\u7ed3\u6784\u5316\u7684\u641c\u7d22\u4f1a\u8bdd\u5bf9\u8c61\uff0c\u662f\u65b0\u67b6\u6784\u4e0b\u7684\u6807\u51c6\u6570\u636e\u683c\u5f0f\u3002 <code>prompts</code> <code>List[Dict[str, str]]</code> \u53d1\u9001\u7ed9\u5927\u8bed\u8a00\u6a21\u578b\u7684\u63d0\u793a\uff08Prompts\uff09\u5217\u8868\uff0c\u8bb0\u5f55\u4e86\u4e0e\u6a21\u578b\u4ea4\u4e92\u7684\u5b8c\u6574\u5386\u53f2\u3002 <code>response</code> <code>str</code> \u5927\u8bed\u8a00\u6a21\u578b\u8fd4\u56de\u7684\u6700\u7ec8\u54cd\u5e94\u3002 <code>uuid</code> <code>str</code> \u672c\u6b21\u4e0a\u4e0b\u6587\u7684\u552f\u4e00\u6807\u8bc6\u7b26 (UUID)\u3002 <code>tool_name</code> <code>str</code> \u5728\u6b64\u4e0a\u4e0b\u6587\u4e2d\u4e3b\u8981\u4f7f\u7528\u7684\u5de5\u5177\u540d\u79f0\uff0c\u5982 <code>BochaSearchTool</code>\u3002 <code>evaluation</code> <code>CriticEvaluation</code> \u5bf9\u672c\u6b21\u5904\u7406\u7ed3\u679c\u7684\u8bc4\u4f30\u5bf9\u8c61\uff0c\u7531 Critic \u6a21\u5757\u586b\u5145\u3002 <code>tool_config</code> <code>Dict[str, Any]</code> \u4e00\u4e2a\u7075\u6d3b\u7684\u5b57\u5178\uff0c\u7528\u4f5c\u5de5\u5177\u7684\u201c\u8349\u7a3f\u7eb8\u201d\uff0c\u53ef\u4ee5\u5b58\u50a8\u4efb\u4f55\u5de5\u5177\u7279\u5b9a\u7684\u914d\u7f6e\u3001\u4e2d\u95f4\u7ed3\u679c\u6216\u5143\u6570\u636e\u3002"},{"location":"librarys/context/#_2","title":"\u6838\u5fc3\u65b9\u6cd5\u8be6\u89e3","text":"<ul> <li> <p><code>__str__()</code>: \u63d0\u4f9b\u4e86\u4e00\u4e2a\u683c\u5f0f\u5316\u7cbe\u7f8e\u3001\u5e26 Emoji \u7684\u7ec8\u7aef\u6253\u5370\u89c6\u56fe\uff0c\u5305\u542b\u4e86\u6240\u6709\u5173\u952e\u4fe1\u606f\u7684\u6458\u8981\uff0c\u975e\u5e38\u9002\u5408\u5728\u5f00\u53d1\u548c\u8c03\u8bd5\u65f6\u5feb\u901f\u4e86\u89e3\u4e0a\u4e0b\u6587\u72b6\u6001\u3002</p> </li> <li> <p><code>to_dict()</code> / <code>from_dict(data)</code>: \u8fd9\u662f\u5b9e\u73b0\u5e8f\u5217\u5316\u7684\u57fa\u7840\u3002<code>to_dict</code> \u5c06\u6574\u4e2a\u590d\u6742\u7684\u5d4c\u5957\u5bf9\u8c61\u8f6c\u6362\u4e3a\u7eaf Python \u5b57\u5178\uff0c\u800c <code>from_dict</code> \u5219\u53ef\u4ee5\u4ece\u5b57\u5178\u53cd\u5411\u6784\u9020\u51fa\u5b8c\u6574\u7684 <code>ModelContext</code> \u5bf9\u8c61\u3002</p> </li> <li> <p><code>to_json()</code> / <code>from_json(json_str)</code>: \u57fa\u4e8e <code>to_dict</code>/<code>from_dict</code>\uff0c\u63d0\u4f9b\u4e86\u4e0e JSON \u683c\u5f0f\u7684\u76f4\u63a5\u8f6c\u6362\uff0c\u4f7f\u5f97\u4e0a\u4e0b\u6587\u53ef\u4ee5\u8f7b\u677e\u5730\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u6216\u5b58\u50a8\u5728\u6587\u672c\u6570\u636e\u5e93\u4e2d\u3002</p> </li> <li> <p><code>save_to_file(path)</code> / <code>load_from_file(path)</code>: \u63d0\u4f9b\u4e86\u5c06\u6574\u4e2a\u4e0a\u4e0b\u6587\u5bf9\u8c61\u7684\u72b6\u6001\u5b8c\u6574\u4fdd\u5b58\u5230\u6587\u4ef6\u7cfb\u7edf\uff0c\u4ee5\u53ca\u4ece\u6587\u4ef6\u6062\u590d\u7684\u80fd\u529b\uff0c\u5bf9\u4e8e\u8c03\u8bd5\u3001\u590d\u73b0\u95ee\u9898\u548c\u6570\u636e\u5f52\u6863\u81f3\u5173\u91cd\u8981\u3002</p> </li> <li> <p><code>create_search_session()</code>: \u8fd9\u662f\u4e00\u4e2a\u5de5\u5382\u65b9\u6cd5\uff0c\u7528\u4e8e\u5728\u9700\u8981\u65f6\u65b9\u4fbf\u5730\u521b\u5efa\u5e76\u521d\u59cb\u5316 <code>search_session</code> \u5c5e\u6027\uff0c\u907f\u514d\u4e86\u7e41\u7410\u7684\u624b\u52a8\u5b9e\u4f8b\u5316\u3002</p> </li> <li> <p><code>add_search_results(...)</code>: \u8fd9\u662f\u4e00\u4e2a\u9ad8\u7ea7\u8f85\u52a9\u65b9\u6cd5\uff0c\u5b83\u62bd\u8c61\u4e86\u5c06\u4e00\u6b21\u67e5\u8be2\u7ed3\u679c\u6dfb\u52a0\u5230 <code>search_session</code> \u7684\u590d\u6742\u8fc7\u7a0b\uff0c\u786e\u4fdd\u4e86\u6570\u636e\u4ee5\u6b63\u786e\u7684\u7ed3\u6784\u88ab\u6dfb\u52a0\u3002</p> </li> <li> <p><code>update_evaluation(...)</code>: \u5141\u8bb8 Critic \u6a21\u5757\u65b9\u4fbf\u5730\u66f4\u65b0\u6216\u521b\u5efa <code>evaluation</code> \u5b57\u6bb5\uff0c\u5e76\u81ea\u52a8\u5904\u7406 <code>should_return_to_chief</code> \u548c <code>ready_for_output</code> \u7b49\u5173\u8054\u72b6\u6001\u3002</p> </li> <li> <p><code>get_processing_summary()</code>: \u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5173\u952e\u5904\u7406\u6307\u6807\u7684\u6458\u8981\u5b57\u5178\uff0c\u4fbf\u4e8e\u8fdb\u884c\u9065\u6d4b\u3001\u76d1\u63a7\u548c\u6027\u80fd\u5206\u6790\uff0c\u800c\u65e0\u9700\u89e3\u6790\u6574\u4e2a\u5bf9\u8c61\u3002</p> </li> </ul>"},{"location":"librarys/embedding/","title":"Embedding \u8bed\u8a00\u6a21\u578b\u672c\u5730\u4f7f\u7528\u65b9\u6cd5\u8bf4\u660e","text":""},{"location":"librarys/embedding/#_1","title":"\u6982\u8ff0","text":"<p>\u672c\u6587\u6863\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 <code>sage.utils.embedding_methods</code> \u6a21\u5757\u4e2d\u7684embedding\u529f\u80fd\uff0c\u652f\u6301\u591a\u79cdembedding\u6a21\u578b\u7684\u672c\u5730\u548c\u8fdc\u7a0b\u8c03\u7528\u3002</p>"},{"location":"librarys/embedding/#_2","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"librarys/embedding/#_3","title":"\u57fa\u672c\u7528\u6cd5","text":"<pre><code>from sage.utils.embedding_methods.embedding_api import apply_embedding_model\n\n# \u521b\u5efaembedding\u6a21\u578b\u5b9e\u4f8b\nmodel = apply_embedding_model(name=\"default\")\n\n# \u751f\u6210\u6587\u672cembedding\nembedding = model.embed(\"hello world\")\n\n# \u83b7\u53d6embedding\u7ef4\u5ea6\ndimension = model.get_dim()\n</code></pre>"},{"location":"librarys/embedding/#_4","title":"\u652f\u6301\u7684\u6a21\u578b\u7c7b\u578b","text":""},{"location":"librarys/embedding/#default","title":"Default","text":"<p>\u4f7f\u7528\u9ed8\u8ba4\u7684\u672c\u80fd\u5730embedding\u6a21\u578b\uff1a <pre><code>from sage.utils.embedding_methods.embedding_api import apply_embedding_model\nmodel = apply_embedding_model(\"default\")\nembedding = model.embed(\"hello world\")\ndimension = model.get_dim()\n</code></pre></p>"},{"location":"librarys/embedding/#hugging-face","title":"Hugging Face \u6a21\u578b","text":"<p>\u4f7f\u7528Hugging Face\u7684\u9884\u8bad\u7ec3\u6a21\u578b\uff1a <pre><code>model = apply_embedding_model(\n    name=\"hf\", \n    model=\"sentence-transformers/all-MiniLM-L6-v2\"\n)\nembedding = model.embed(\"This is huggingface.\")\ndimension = model.get_dim()\n</code></pre> \u53c2\u6570\u8bf4\u660e\uff1a model: Hugging Face\u6a21\u578b\u540d\u79f0</p>"},{"location":"librarys/embedding/#openai-api","title":"OpenAI \u517c\u5bb9API","text":"<p>\u4f7f\u7528OpenAI\u683c\u5f0f\u7684API\u63a5\u53e3\uff1a</p> <p><pre><code>model = apply_embedding_model(\n    name=\"openai\",\n    model=\"BAAI/bge-m3\",\n    base_url=\"https://api.siliconflow.cn/v1\",\n    api_key=\"your_api_key_here\"\n)\nembedding = model.embed(\"this is openai\")\ndimension = model.get_dim()\n</code></pre> model: \u6a21\u578b\u540d\u79f0 base_url: API\u57fa\u7840URL api_key: API\u5bc6\u94a5</p>"},{"location":"librarys/embedding/#jina-ai","title":"Jina AI","text":"<p>\u4f7f\u7528Jina AI\u7684embedding\u670d\u52a1\uff1a <pre><code>model = apply_embedding_model(\n    name=\"jina\",\n    model=\"jina-embeddings-v3\",\n    api_key=\"your_jina_api_key\"\n)\nembedding = model.embed(\"this is jina\")\ndimension = model.get_dim()\n</code></pre> \u53c2\u6570\u8bf4\u660e\uff1a model: Jina\u6a21\u578b\u540d\u79f0 api_key: Jina API\u5bc6\u94a5</p>"},{"location":"librarys/embedding/#_5","title":"\u73af\u5883\u914d\u7f6e","text":""},{"location":"librarys/embedding/#_6","title":"\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e","text":"<p>\u4e3a\u4e86\u5b89\u5168\u4f7f\u7528API\u5bc6\u94a5\uff0c\u5efa\u8bae\u4f7f\u7528\u73af\u5883\u53d8\u91cf\uff1a <pre><code>export SILICONCLOUD_API_KEY=your_siliconcloud_key\nexport JINA_API_KEY=your_jina_key\nexport OPENAI_API_KEY=your_openai_key\n...\n</code></pre> \u6216\u8005\u521b\u5efa<code>.env</code>\u6587\u4ef6\uff1a <pre><code>SILICONCLOUD_API_KEY=your_siliconcloud_key\nJINA_API_KEY=your_jina_key\nOPENAI_API_KEY=your_openai_key\n</code></pre></p>"},{"location":"librarys/embedding/#_7","title":"\u5728\u4ee3\u7801\u4e2d\u52a0\u8f7d\u73af\u5883\u53d8\u91cf","text":"<pre><code>from dotenv import load_dotenv\nimport os\n\nload_dotenv(override=False)\napi_key = os.environ.get(\"JINA_API_KEY\")\n</code></pre>"},{"location":"librarys/io/","title":"SAGE I/O \u6838\u5fc3\u7ec4\u4ef6 (Core I/O Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u4e86 SAGE \u6570\u636e\u5904\u7406\u6d41\u4e2d\u7684\u6838\u5fc3\u8f93\u5165/\u8f93\u51fa (I/O) \u7ec4\u4ef6\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a</p> <ul> <li>Source (\u6570\u636e\u6e90): \u6570\u636e\u6d41\u7684\u8d77\u70b9\uff0c\u8d1f\u8d23\u4ece\u5916\u90e8\u7cfb\u7edf\uff08\u5982\u6587\u4ef6\u3001\u6d88\u606f\u961f\u5217\u7b49\uff09\u8bfb\u53d6\u6570\u636e\u5e76\u521b\u5efa\u6570\u636e\u6d41\u3002</li> <li>Sink (\u6570\u636e\u6c47\u805a): \u6570\u636e\u6d41\u7684\u7ec8\u70b9\uff0c\u8d1f\u8d23\u5c06\u5904\u7406\u5b8c\u6210\u7684\u6570\u636e\u8f93\u51fa\u5230\u5916\u90e8\u7cfb\u7edf\uff08\u5982\u7ec8\u7aef\u3001\u6587\u4ef6\u3001\u6570\u636e\u5e93\u7b49\uff09\u3002</li> </ul>"},{"location":"librarys/io/#1-source-functions","title":"1. Source Functions (\u6570\u636e\u6e90)","text":"<p>\u6570\u636e\u6e90\u662f\u542f\u52a8\u6570\u636e\u5904\u7406\u6d41\u7a0b\u7684\u5165\u53e3\u3002</p>"},{"location":"librarys/io/#11-filesource","title":"1.1 <code>FileSource</code>","text":"<p><code>FileSource</code> \u662f\u4e00\u4e2a\u4ece\u6587\u672c\u6587\u4ef6\u4e2d\u9010\u884c\u8bfb\u53d6\u6570\u636e\u7684\u6570\u636e\u6e90\u3002\u5b83\u4f1a\u6301\u7eed\u76d1\u63a7\u6587\u4ef6\uff0c\u5e76\u5728\u6587\u4ef6\u6709\u65b0\u5185\u5bb9\u65f6\u8bfb\u53d6\u65b0\u884c\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u9010\u884c\u8bfb\u53d6\u6307\u5b9a\u6587\u4ef6\u5185\u5bb9\uff0c\u5e76\u5c06\u6bcf\u4e00\u884c\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8f93\u51fa\u5230\u6570\u636e\u6d41\u4e2d\u3002</li> <li>\u8f93\u5165: \u65e0 (\u76f4\u63a5\u4ece\u6587\u4ef6\u7cfb\u7edf\u8bfb\u53d6)\u3002</li> <li>\u8f93\u51fa: <code>str</code> - \u6587\u4ef6\u4e2d\u7684\u6bcf\u4e00\u884c\u5185\u5bb9\u3002</li> </ul>"},{"location":"librarys/io/#_1","title":"\u914d\u7f6e","text":"<p>\u5728\u5b9e\u4f8b\u5316 <code>FileSource</code> \u65f6\uff0c\u9700\u8981\u5728 <code>config</code> \u5b57\u5178\u4e2d\u63d0\u4f9b\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <ul> <li><code>data_path</code> (\u5fc5\u9700): \u8981\u8bfb\u53d6\u7684\u6e90\u6587\u4ef6\u7684\u8def\u5f84\u3002</li> </ul>"},{"location":"librarys/io/#resolve_data_path","title":"\u8def\u5f84\u89e3\u6790 (<code>resolve_data_path</code>)","text":"<p><code>FileSource</code> \u7684\u8def\u5f84\u5904\u7406\u903b\u8f91\u5982\u4e0b\uff1a * \u5982\u679c <code>data_path</code> \u662f\u7edd\u5bf9\u8def\u5f84: \u76f4\u63a5\u4f7f\u7528\u8be5\u8def\u5f84\u3002 * \u5982\u679c <code>data_path</code> \u662f\u76f8\u5bf9\u8def\u5f84: \u5c06\u5176\u89e3\u6790\u4e3a\u76f8\u5bf9\u4e8e\u5f53\u524d\u9879\u76ee\u6839\u76ee\u5f55\u7684\u8def\u5f84\u3002</p>"},{"location":"librarys/io/#_2","title":"\u4f7f\u7528\u793a\u4f8b","text":"<p>\u5047\u8bbe\u4f60\u5728\u4e00\u4e2a YAML \u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u6570\u636e\u5904\u7406\u6d41\u7a0b\uff1a</p> <pre><code># pipeline.yaml\nsources:\n  - name: my_file_reader\n    type: FileSource\n    config:\n      data_path: \"data/input_questions.txt\" # \u76f8\u5bf9\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u7684\u8def\u5f84\n\n# \u5047\u8bbe data/input_questions.txt \u5185\u5bb9\u4e3a:\n# What is SAGE?\n# How does it work?\n</code></pre> <p><code>FileSource</code> \u4f1a\u4f9d\u6b21\u8bfb\u53d6 \"What is SAGE?\" \u548c \"How does it work?\" \u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3a\u4e24\u4e2a\u72ec\u7acb\u7684\u6570\u636e\u9879\u6ce8\u5165\u5230\u6570\u636e\u6d41\u4e2d\u3002</p>"},{"location":"librarys/io/#2-sink-functions","title":"2. Sink Functions (\u6570\u636e\u6c47\u805a)","text":"<p>\u6570\u636e\u6c47\u805a\u662f\u6570\u636e\u6d41\u7684\u7ec8\u70b9\uff0c\u7528\u4e8e\u6d88\u8d39\u6216\u5b58\u50a8\u6700\u7ec8\u7ed3\u679c\u3002</p>"},{"location":"librarys/io/#21-terminalsink","title":"2.1 <code>TerminalSink</code>","text":"<p>\u7528\u4e8e\u5c06\u6807\u51c6\u7684\u95ee\u7b54\uff08Q&amp;A\uff09\u5bf9\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u7ec8\u7aef\uff0c\u5e76\u4f7f\u7528\u4e0d\u540c\u989c\u8272\u9ad8\u4eae\u95ee\u9898\u548c\u7b54\u6848\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5728\u7ec8\u7aef\u6253\u5370\u683c\u5f0f\u5316\u7684\u95ee\u7b54\u5bf9\u3002</li> <li>\u8f93\u5165: <code>Tuple[str, str]</code> - \u4e00\u4e2a\u5305\u542b (\u95ee\u9898, \u7b54\u6848) \u7684\u5143\u7ec4\u3002</li> <li>\u914d\u7f6e: \u65e0\u9700\u7279\u6b8a\u914d\u7f6e\u3002</li> </ul>"},{"location":"librarys/io/#_3","title":"\u8f93\u51fa\u793a\u4f8b","text":"<pre><code># \u63a7\u5236\u53f0\u8f93\u51fa\u6548\u679c\n[TerminalSink]: [Q] Question :What is SAGE?\n[TerminalSink]: [A] Answer :SAGE is a Stream Analytics and Graph Engine.\n</code></pre>"},{"location":"librarys/io/#22-retrivesink","title":"2.2 <code>RetriveSink</code>","text":"<p>\u7528\u4e8e\u5c06\u4e00\u4e2a\u95ee\u9898\u548c\u5176\u5173\u8054\u7684\u68c0\u7d22\u5757\uff08chunks\uff09\u5217\u8868\u6253\u5370\u5230\u63a7\u5236\u53f0\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5728\u7ec8\u7aef\u6253\u5370\u95ee\u9898\u548c\u68c0\u7d22\u5230\u7684\u76f8\u5173\u6587\u672c\u5757\u3002</li> <li>\u8f93\u5165: <code>Tuple[str, List[str]]</code> - \u4e00\u4e2a\u5305\u542b (\u95ee\u9898, \u6587\u672c\u5757\u5217\u8868) \u7684\u5143\u7ec4\u3002</li> <li>\u914d\u7f6e: \u65e0\u9700\u7279\u6b8a\u914d\u7f6e\u3002</li> </ul>"},{"location":"librarys/io/#_4","title":"\u8f93\u51fa\u793a\u4f8b","text":"<pre><code># \u63a7\u5236\u53f0\u8f93\u51fa\u6548\u679c\n[Q] Question :How does it work?\n[A] Chunks :['It processes data in streams.', 'It uses operators to transform data.']\n</code></pre>"},{"location":"librarys/io/#23-filesink","title":"2.3 <code>FileSink</code>","text":"<p>\u5c06\u95ee\u7b54\uff08Q&amp;A\uff09\u5bf9\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u5199\u5165\u5230\u672c\u5730\u6587\u4ef6\u4e2d\uff0c\u5e76\u81ea\u52a8\u6dfb\u52a0\u5206\u9694\u7b26\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5c06\u95ee\u7b54\u5bf9\u6301\u4e45\u5316\u5230\u65e5\u5fd7\u6587\u4ef6\u3002</li> <li>\u8f93\u5165: <code>Tuple[str, str]</code> - \u4e00\u4e2a\u5305\u542b (\u95ee\u9898, \u7b54\u6848) \u7684\u5143\u7ec4\u3002</li> <li>\u914d\u7f6e:<ul> <li><code>file_path</code>: (\u53ef\u9009) \u8f93\u51fa\u6587\u4ef6\u7684\u8def\u5f84\u3002<ul> <li>\u9ed8\u8ba4\u503c: <code>qa_output.txt</code>\u3002</li> <li>\u8def\u5f84\u5904\u7406: \u5982\u679c\u63d0\u4f9b\u7684\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u6587\u4ef6\u5c06\u88ab\u81ea\u52a8\u521b\u5efa\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u7684 <code>output/</code> \u6587\u4ef6\u5939\u4e2d\uff08\u4f8b\u5982 <code>output/my_log.txt</code>\uff09\u3002\u5982\u679c\u63d0\u4f9b\u7684\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u5219\u76f4\u63a5\u4f7f\u7528\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"librarys/io/#outputqa_outputtxt","title":"\u8f93\u51fa\u6587\u4ef6\u793a\u4f8b (<code>output/qa_output.txt</code>)","text":"<pre><code>=== QA Output Log ===\n[Q] Question: What is SAGE?\n[A] Answer  : SAGE is a Stream Analytics and Graph Engine.\n----------------------------------------\n[Q] Question: How does it work?\n[A] Answer  : It processes data in streams using operators.\n----------------------------------------\n</code></pre>"},{"location":"librarys/io/#24-memwritesink","title":"2.4 <code>MemWriteSink</code>","text":"<p>\u4e00\u4e2a\u901a\u7528\u7684\u6587\u4ef6\u5199\u5165 Sink\uff0c\u53ef\u4ee5\u63a5\u6536\u591a\u79cd\u683c\u5f0f\u7684\u6570\u636e\uff0c\u5e76\u5c06\u5b83\u4eec\u4f5c\u4e3a\u5e26\u7f16\u53f7\u7684\u5b57\u7b26\u4e32\u9010\u884c\u5199\u5165\u6587\u4ef6\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5c06\u6d41\u4e2d\u7684\u4efb\u610f\u6570\u636e\u9879\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8bb0\u5f55\u5230\u6587\u4ef6\u4e2d\uff0c\u5e76\u81ea\u52a8\u7f16\u53f7\u3002</li> <li>\u8f93\u5165: <code>Union[str, List[str], Tuple[str, str]]</code> - \u652f\u6301\u5b57\u7b26\u4e32\u3001\u5b57\u7b26\u4e32\u5217\u8868\u6216\u5143\u7ec4\u3002\u8f93\u5165\u4f1a\u88ab\u81ea\u52a8\u89e3\u6790\u5e76\u5c55\u5e73\u4e3a\u5b57\u7b26\u4e32\u5217\u8868\u3002</li> <li>\u914d\u7f6e:<ul> <li><code>file_path</code>: (\u53ef\u9009) \u8f93\u51fa\u6587\u4ef6\u7684\u8def\u5f84\u3002<ul> <li>\u9ed8\u8ba4\u503c: <code>mem_output.txt</code>\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"librarys/io/#mem_outputtxt","title":"\u8f93\u51fa\u6587\u4ef6\u793a\u4f8b (<code>mem_output.txt</code>)","text":"<pre><code>=== Memory String Log ===\n[1] This is the first string.\n[2] This is the second.\n[3] From a tuple\n[4] Another item from a tuple\n----------------------------------------\n[5] A single string item\n----------------------------------------\n</code></pre>"},{"location":"librarys/io/#25-printsink","title":"2.5 <code>PrintSink</code>","text":"<p>\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u3001\u667a\u80fd\u7684\u6253\u5370 Sink\uff0c\u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\u3002\u5b83\u80fd\u81ea\u52a8\u8bc6\u522b\u8f93\u5165\u6570\u636e\u7684\u7ed3\u6784\u5e76\u4ee5\u53cb\u597d\u7684\u683c\u5f0f\u8fdb\u884c\u6253\u5370\uff0c\u662f <code>datastream.print()</code> \u529f\u80fd\u7684\u5e95\u5c42\u5b9e\u73b0\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u4ee5\u53ef\u8bfb\u6027\u9ad8\u7684\u65b9\u5f0f\u5728\u7ec8\u7aef\u6253\u5370\u4efb\u610f\u6570\u636e\uff0c\u652f\u6301\u591a\u79cd\u6570\u636e\u7ed3\u6784\u548c\u5f69\u8272\u8f93\u51fa\u3002</li> <li>\u8f93\u5165: <code>Any</code> - \u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u3002</li> </ul>"},{"location":"librarys/io/#_5","title":"\u914d\u7f6e (\u521d\u59cb\u5316\u53c2\u6570)","text":"\u53c2\u6570 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4\u503c <code>prefix</code> <code>str</code> \u5728\u6bcf\u6761\u8f93\u51fa\u524d\u6dfb\u52a0\u7684\u524d\u7f00\u3002 <code>\"\"</code> (\u7a7a\u5b57\u7b26\u4e32) <code>separator</code> <code>str</code> \u7528\u4e8e\u5206\u9694 <code>prefix</code> \u548c\u4e3b\u8981\u5185\u5bb9\u3002 <code>\" | \"</code> <code>colored</code> <code>bool</code> \u662f\u5426\u542f\u7528\u5f69\u8272\u8f93\u51fa\u3002 <code>True</code>"},{"location":"librarys/io/#_6","title":"\u667a\u80fd\u683c\u5f0f\u5316\u903b\u8f91","text":"<p><code>PrintSink</code> \u4f1a\u81ea\u52a8\u68c0\u6d4b\u8f93\u5165 <code>data</code> \u7684\u7c7b\u578b\u5e76\u5e94\u7528\u4e0d\u540c\u7684\u683c\u5f0f\uff1a</p> <ul> <li>\u95ee\u7b54\u5bf9 (<code>Tuple[str, str]</code>): \u683c\u5f0f\u5316\u4e3a <code>[Q]... [A]...</code>\u3002</li> <li>\u68c0\u7d22\u7ed3\u679c (<code>Tuple[str, List[str]]</code>): \u683c\u5f0f\u5316\u4e3a <code>[Q]... [Chunks]...</code>\u3002</li> <li>\u5b57\u7b26\u4e32\u5217\u8868 (<code>List[str]</code>): \u683c\u5f0f\u5316\u4e3a\u4e00\u4e2a\u5e26\u9879\u76ee\u7b26\u53f7\u7684\u5217\u8868\u3002</li> <li>\u5b57\u5178 (<code>dict</code>): \u683c\u5f0f\u5316\u4e3a <code>key: value</code> \u5bf9\u7684\u5217\u8868\u3002</li> <li>\u5176\u4ed6\u7c7b\u578b: \u76f4\u63a5\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 (<code>str(data)</code>)\u3002</li> </ul>"},{"location":"librarys/io/#_7","title":"\u4f7f\u7528\u793a\u4f8b","text":"<p>```python</p>"},{"location":"librarys/io/#sage","title":"\u5728 SAGE \u6570\u636e\u6d41\u4ee3\u7801\u4e2d\u4f7f\u7528","text":"<p>from sage.data_stream import DataStream</p>"},{"location":"librarys/io/#stream-question-answer","title":"\u5047\u8bbe stream \u7684\u6570\u636e\u9879\u662f (question, answer) \u5143\u7ec4","text":"<p>stream: DataStream = ...  stream.print(prefix=\"QA_RESULT\") </p>"},{"location":"librarys/io/#_8","title":"\u63a7\u5236\u53f0\u53ef\u80fd\u8f93\u51fa:","text":""},{"location":"librarys/io/#qa_result-q-what-is-sage","title":"QA_RESULT | [Q] What is SAGE?","text":""},{"location":"librarys/io/#a-its-an-engine","title":"[A] It's an engine.","text":""},{"location":"librarys/lib_intro/","title":"SAGE Lib: \u6838\u5fc3\u7ec4\u4ef6\u5e93\u4ecb\u7ecd","text":"<p>\u6b22\u8fce\u4f7f\u7528 SAGE Lib\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e3a\u6784\u5efa\u9ad8\u7ea7\u3001\u6a21\u5757\u5316\u7684\u6570\u636e\u6d41\u5904\u7406\u4e0e\u4eba\u5de5\u667a\u80fd\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\u6838\u5fc3\u7ec4\u4ef6\u5e93\u3002SAGE Lib \u7684\u8bbe\u8ba1\u54f2\u5b66\u662f\u5c06\u590d\u6742\u7684 AI \u4efb\u52a1\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u53ef\u72ec\u7acb\u7ba1\u7406\u3001\u53ef\u81ea\u7531\u7ec4\u5408\u7684\u529f\u80fd\u6a21\u5757\u3002\u901a\u8fc7\u8fd9\u4e9b\u6a21\u5757\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u50cf\u642d\u79ef\u6728\u4e00\u6837\uff0c\u5feb\u901f\u3001\u7075\u6d3b\u5730\u6784\u5efa\u51fa\u4ece\u7b80\u5355\u7684\u6570\u636e\u5904\u7406\u5230\u590d\u6742\u7684\u68c0\u7d22\u589e\u5f3a\u751f\u6210 (RAG) \u548c\u667a\u80fd\u4ee3\u7406 (Agent) \u7684\u5404\u7c7b\u5e94\u7528\u3002</p> <p>SAGE Lib \u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u4e2a\u6838\u5fc3\u6a21\u5757\u7ec4\u6210\uff1a</p>"},{"location":"librarys/lib_intro/#1-rag-retrieval-augmented-generation","title":"1. RAG (Retrieval-Augmented Generation) \u6a21\u5757","text":"<p>\u8fd9\u662f SAGE Lib \u7684\u6838\u5fc3\uff0c\u4e13\u4e3a\u6784\u5efa\u5f3a\u5927\u7684\u95ee\u7b54\u548c\u5185\u5bb9\u751f\u6210\u7cfb\u7edf\u800c\u8bbe\u8ba1\u3002RAG \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u3001\u7aef\u5230\u7aef\u7684\u5de5\u5177\u94fe\uff0c\u8986\u76d6\u4e86\u4ece\u539f\u59cb\u6570\u636e\u5230\u6700\u7ec8\u7b54\u6848\u751f\u6210\u7684\u6bcf\u4e00\u4e2a\u73af\u8282\uff1a</p> <ul> <li>\u6570\u636e\u51c6\u5907: \u5305\u62ec\u591a\u79cd\u6587\u672c\u5206\u5757 (<code>Chunking</code>)\u7b56\u7565\u3002</li> <li>\u4fe1\u606f\u68c0\u7d22: \u7ed3\u5408\u4e86\u57fa\u4e8e\u5173\u952e\u8bcd\u7684\u7a00\u758f\u68c0\u7d22 (<code>BM25sRetriever</code>) \u548c\u57fa\u4e8e\u5411\u91cf\u7684\u5bc6\u96c6\u68c0\u7d22 (<code>DenseRetriever</code>)\uff0c\u5e76\u652f\u6301\u5728\u7ebf\u641c\u7d22 (<code>BochaWebSearch</code>)\u3002</li> <li>\u7ed3\u679c\u4f18\u5316: \u901a\u8fc7\u5148\u8fdb\u7684\u91cd\u6392\u6a21\u578b (<code>Reranker</code>) \u63d0\u5347\u68c0\u7d22\u7ed3\u679c\u7684\u7cbe\u5ea6\u3002</li> <li>\u67e5\u8be2\u7406\u89e3: \u80fd\u591f\u5bf9\u7528\u6237\u8f93\u5165\u8fdb\u884c\u6df1\u5ea6\u5206\u6790 (<code>Query Profiler</code>)\uff0c\u4ee5\u9009\u62e9\u6700\u4f18\u7684\u5904\u7406\u8def\u5f84\u3002</li> <li>\u667a\u80fd\u751f\u6210: \u96c6\u6210\u4e86\u7075\u6d3b\u7684\u63d0\u793a\u8bcd\u5de5\u7a0b (<code>Prompting</code>) \u548c\u53ef\u5bf9\u63a5\u591a\u79cd\u5927\u8bed\u8a00\u6a21\u578b\uff08\u672c\u5730\u6216\u4e91\u7aef\uff09\u7684\u751f\u6210\u5668 (<code>Generator</code>)\u3002</li> <li>\u5168\u9762\u8bc4\u4f30: \u5185\u7f6e\u4e86\u4ece\u6587\u672c\u76f8\u4f3c\u5ea6\u5230\u6027\u80fd\u5ef6\u8fdf\u7684\u591a\u79cd\u8bc4\u4f30\u5de5\u5177 (<code>Evaluation</code>)\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u5bf9\u7cfb\u7edf\u8fdb\u884c\u91cf\u5316\u5206\u6790\u548c\u6301\u7eed\u4f18\u5316\u3002</li> </ul> <p>\u7b80\u800c\u8a00\u4e4b\uff0cRAG \u6a21\u5757\u662f\u60a8\u6784\u5efa\u4e0b\u4e00\u4ee3\u667a\u80fd\u95ee\u7b54\u5e94\u7528\u7684\u201c\u745e\u58eb\u519b\u5200\u201d\u3002</p>"},{"location":"librarys/lib_intro/#2-io-inputoutput","title":"2. IO (Input/Output) \u6a21\u5757","text":"<p>IO \u6a21\u5757\u662f SAGE \u6d41\u6c34\u7ebf\u7684\u201c\u95e8\u6237\u201d\uff0c\u8d1f\u8d23\u7ba1\u7406\u6570\u636e\u7684\u6d41\u5165\u4e0e\u6d41\u51fa\u3002\u5b83\u5b9a\u4e49\u4e86\u6570\u636e\u5904\u7406\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\uff0c\u662f\u8fde\u63a5 SAGE \u7cfb\u7edf\u4e0e\u5916\u90e8\u4e16\u754c\u7684\u6865\u6881\u3002</p> <ul> <li>Source (\u6570\u636e\u6e90): \u5982 <code>FileSource</code>\uff0c\u8d1f\u8d23\u4ece\u6587\u4ef6\u3001\u6570\u636e\u5e93\u6216 API \u7b49\u5916\u90e8\u6765\u6e90\u8bfb\u53d6\u6570\u636e\uff0c\u542f\u52a8\u6570\u636e\u6d41\u3002</li> <li>Sink (\u6570\u636e\u6c47\u805a): \u5982 <code>FileSink</code> \u548c <code>TerminalSink</code>\uff0c\u8d1f\u8d23\u5c06\u5904\u7406\u5b8c\u6210\u7684\u7ed3\u679c\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3001\u6587\u4ef6\u6216\u5176\u4ed6\u76ee\u6807\u7cfb\u7edf\u3002</li> </ul> <p>\u901a\u8fc7\u89e3\u8026\u6570\u636e\u5904\u7406\u903b\u8f91\u4e0e\u6570\u636e\u6e90/\u76ee\u6807\uff0cIO \u6a21\u5757\u6781\u5927\u5730\u589e\u5f3a\u4e86 SAGE \u5e94\u7528\u7684\u7075\u6d3b\u6027\u548c\u53ef\u79fb\u690d\u6027\u3002</p>"},{"location":"librarys/lib_intro/#3-tools","title":"3. Tools (\u5de5\u5177) \u6a21\u5757","text":"<p>\u5982\u679c\u8bf4 RAG \u6a21\u5757\u63d0\u4f9b\u4e86\u6784\u5efa AI \u5e94\u7528\u7684\u201c\u65b9\u6cd5\u8bba\u201d\uff0c\u90a3\u4e48 Tools \u6a21\u5757\u5c31\u662f\u63d0\u4f9b\u5177\u4f53\u201c\u884c\u52a8\u80fd\u529b\u201d\u7684\u5de5\u5177\u7bb1\u3002\u5b83\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u5373\u63d2\u5373\u7528\u7684\u3001\u539f\u5b50\u5316\u7684\u529f\u80fd\u7ec4\u4ef6\u3002</p> <ul> <li>\u529f\u80fd: \u6bcf\u4e2a\u5de5\u5177\u90fd\u4e3a\u6267\u884c\u4e00\u4e2a\u7279\u5b9a\u4efb\u52a1\u800c\u8bbe\u8ba1\uff0c\u4f8b\u5982\u641c\u7d22\u5b66\u672f\u8bba\u6587 (<code>Arxiv Paper Searcher</code>)\u3001\u4e3a\u56fe\u7247\u751f\u6210\u63cf\u8ff0 (<code>Image Captioner</code>) \u6216\u4ece\u7f51\u9875\u63d0\u53d6\u6587\u672c (<code>URL Text Extractor</code>)\u3002</li> <li>\u7528\u9014: \u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u88ab\u65e0\u7f1d\u96c6\u6210\u5230\u4efb\u4f55 SAGE \u6d41\u6c34\u7ebf\u4e2d\uff0c\u5c24\u5176\u662f\u4f5c\u4e3a\u667a\u80fd\u4ee3\u7406 (Agent) \u53ef\u8c03\u7528\u7684\u201c\u6280\u80fd\u201d\u3002</li> </ul>"},{"location":"librarys/lib_intro/#4-agents","title":"4. Agents (\u667a\u80fd\u4ee3\u7406) \u6a21\u5757","text":"<p>Agents \u6a21\u5757\u662f SAGE Lib \u4e2d\u5b9e\u73b0\u66f4\u9ad8\u5c42\u6b21\u667a\u80fd\u7684\u6838\u5fc3\u3002\u4e00\u4e2a Agent \u88ab\u8bbe\u8ba1\u7528\u6765\u6a21\u62df\u4e00\u4e2a\u80fd\u591f\u81ea\u4e3b\u601d\u8003\u548c\u884c\u52a8\u7684\u5b9e\u4f53\u3002</p> <ul> <li>\u6838\u5fc3\u80fd\u529b:<ul> <li>\u89c4\u5212\u4e0e\u51b3\u7b56: Agent \u80fd\u591f\u7406\u89e3\u590d\u6742\u7684\u7528\u6237\u610f\u56fe\uff0c\u5c06\u5176\u5206\u89e3\u4e3a\u4e00\u7cfb\u5217\u53ef\u6267\u884c\u7684\u6b65\u9aa4\u3002</li> <li>\u5de5\u5177\u8c03\u7528: Agent \u80fd\u591f\u6839\u636e\u4efb\u52a1\u9700\u6c42\uff0c\u52a8\u6001\u5730\u9009\u62e9\u5e76\u8c03\u7528 <code>Tools</code> \u6a21\u5757\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5de5\u5177\u6765\u5b8c\u6210\u5b50\u4efb\u52a1\u3002</li> <li>\u7ed3\u679c\u6574\u5408: Agent \u80fd\u591f\u6574\u5408\u6765\u81ea\u4e0d\u540c\u5de5\u5177\u7684\u8fd4\u56de\u7ed3\u679c\uff0c\u5e76\u6700\u7ec8\u5f62\u6210\u4e00\u4e2a\u8fde\u8d2f\u7684\u3001\u5b8c\u6574\u7684\u7b54\u6848\u3002</li> </ul> </li> </ul> <p>\u901a\u8fc7 Agents \u6a21\u5757\uff0c\u60a8\u53ef\u4ee5\u6784\u5efa\u51fa\u80fd\u591f\u5904\u7406\u590d\u6742\u3001\u591a\u6b65\u4efb\u52a1\u7684\u81ea\u52a8\u5316\u5de5\u4f5c\u6d41\u3002</p>"},{"location":"librarys/lib_intro/#5-context","title":"5. Context (\u4e0a\u4e0b\u6587) \u6a21\u5757","text":"<p>Context \u6a21\u5757\u662f\u6574\u4e2a SAGE Lib \u7684\u201c\u795e\u7ecf\u4e2d\u67a2\u201d\u548c\u201c\u8bb0\u5fc6\u4e2d\u5fc3\u201d\u3002\u5b83\u5b9a\u4e49\u4e86\u6570\u636e\u6d41\u5728\u8fd0\u884c\u65f6\u7684\u73af\u5883\u548c\u72b6\u6001\uff0c\u786e\u4fdd\u4e86\u4e0d\u540c\u7ec4\u4ef6\u4e4b\u95f4\u7684\u987a\u7545\u901a\u4fe1\u548c\u72b6\u6001\u5171\u4eab\u3002</p> <ul> <li>\u72b6\u6001\u7ba1\u7406: Context \u8d1f\u8d23\u7ba1\u7406\u6d41\u6c34\u7ebf\u7684\u5168\u5c40\u72b6\u6001\uff0c\u5305\u62ec\u77ed\u671f\u8bb0\u5fc6 (STM) \u548c\u957f\u671f\u8bb0\u5fc6 (LTM)\u3002</li> <li>\u8d44\u6e90\u8bbf\u95ee: \u5b83\u4e3a\u6d41\u6c34\u7ebf\u4e2d\u7684\u6240\u6709\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u8bbf\u95ee\u7cfb\u7edf\u7ea7\u8d44\u6e90\uff08\u5982\u77e5\u8bc6\u5e93\u3001\u914d\u7f6e\u4fe1\u606f\uff09\u7684\u7edf\u4e00\u63a5\u53e3\u3002</li> <li>\u751f\u547d\u5468\u671f: Context \u8d2f\u7a7f\u4e8e\u6574\u4e2a\u6570\u636e\u6d41\u7684\u751f\u547d\u5468\u671f\uff0c\u662f\u5b9e\u73b0\u6709\u72b6\u6001\u8ba1\u7b97\uff08\u5982\u5e26\u5386\u53f2\u8bb0\u5f55\u7684\u5bf9\u8bdd\uff09\u548c\u7ec4\u4ef6\u95f4\u534f\u540c\u5de5\u4f5c\u7684\u57fa\u77f3\u3002</li> </ul> <p>\u603b\u7ed3: SAGE Lib \u901a\u8fc7 <code>IO</code> \u6a21\u5757\u4e0e\u4e16\u754c\u4ea4\u4e92\uff0c\u5229\u7528 <code>RAG</code> \u548c <code>Tools</code> \u6a21\u5757\u63d0\u4f9b\u5f3a\u5927\u7684\u4fe1\u606f\u5904\u7406\u548c\u6267\u884c\u80fd\u529b\uff0c\u5e76\u901a\u8fc7 <code>Agents</code> \u6a21\u5757\u5b9e\u73b0\u667a\u80fd\u51b3\u7b56\uff0c\u6700\u540e\u7531 <code>Context</code> \u6a21\u5757\u5c06\u8fd9\u4e00\u5207\u6709\u673a\u5730\u4e32\u8054\u8d77\u6765\uff0c\u5171\u540c\u6784\u6210\u4e86\u4e00\u4e2a\u9ad8\u5ea6\u7075\u6d3b\u3001\u529f\u80fd\u5b8c\u5907\u7684 AI \u5e94\u7528\u5f00\u53d1\u5e93\u3002</p>"},{"location":"librarys/rag/","title":"RAG \u6838\u5fc3\u7ec4\u4ef6 (Core RAG Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecd\u4e86 SAGE \u7cfb\u7edf\u4e2d\u7528\u4e8e\u6784\u5efa\u68c0\u7d22\u589e\u5f3a\u751f\u6210 (RAG) \u6d41\u7a0b\u7684\u6838\u5fc3\u7ec4\u4ef6\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u6db5\u76d6\u4e86\u4ece\u6570\u636e\u5206\u5757\u3001\u68c0\u7d22\u3001\u91cd\u6392\u5230\u751f\u6210\u548c\u8bc4\u4f30\u7684\u5168\u8fc7\u7a0b\u3002</p>"},{"location":"librarys/rag/#1-data-preparation-trigger","title":"1. \u6570\u636e\u51c6\u5907\u4e0e\u89e6\u53d1 (Data Preparation &amp; Trigger)","text":""},{"location":"librarys/rag/#11-chunking","title":"1.1 \u5206\u5757 (Chunking)","text":"<p>\u5206\u5757\u662f\u5c06\u957f\u6587\u672c\u5206\u5272\u6210\u5c0f\u5757\uff0c\u4ee5\u4fbf\u4e8e\u540e\u7eed\u7684\u68c0\u7d22\u548c\u5904\u7406\u3002</p>"},{"location":"librarys/rag/#charactersplitter","title":"<code>CharacterSplitter</code>","text":"<p>\u57fa\u4e8e\u5b57\u7b26\u8fdb\u884c\u6587\u672c\u5206\u5272\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5c06\u8f93\u5165\u6587\u672c\u6309\u6307\u5b9a\u7684\u5b57\u7b26\u6570 <code>chunk_size</code> \u548c\u91cd\u53e0\u6570 <code>overlap</code> \u8fdb\u884c\u5207\u5206\u3002</li> <li>\u8f93\u5165: <code>str</code> - \u5f85\u5207\u5206\u7684\u6587\u672c\u3002</li> <li>\u8f93\u51fa: <code>List[str]</code> - \u6587\u672c\u5757\u5217\u8868\u3002</li> <li>\u7528\u4f8b: \u9002\u7528\u4e8e\u5904\u7406\u4e0d\u65b9\u4fbf\u6309\u8bcd\u6216\u53e5\u5b50\u5206\u5272\u7684\u6587\u672c\uff0c\u6216\u5728\u9700\u8981\u5feb\u901f\u3001\u7b80\u5355\u5207\u5206\u7684\u573a\u666f\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>chunk_size</code> (int): \u6bcf\u4e2a\u5757\u7684\u5b57\u7b26\u6570 (\u9ed8\u8ba4: 512)\u3002</li> <li><code>overlap</code> (int): \u76f8\u90bb\u5757\u4e4b\u95f4\u7684\u91cd\u53e0\u5b57\u7b26\u6570 (\u9ed8\u8ba4: 128)\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#sentencetransformerstokentextsplitter","title":"<code>SentenceTransformersTokenTextSplitter</code>","text":"<p>\u4f7f\u7528 SentenceTransformer \u7684\u5206\u8bcd\u5668\u8fdb\u884c\u6587\u672c\u5206\u5272\uff0c\u66f4\u7b26\u5408\u6a21\u578b\u5904\u7406\u4e60\u60ef\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u57fa\u4e8e\u6a21\u578b\u7684\u5206\u8bcd\u5668\u5c06\u6587\u672c\u5207\u5206\u4e3a token \u5757\u3002</li> <li>\u8f93\u5165: <code>str</code> - \u5f85\u5207\u5206\u7684\u6587\u672c\u3002</li> <li>\u8f93\u51fa: <code>List[str]</code> - \u6587\u672c\u5757\u5217\u8868\u3002</li> <li>\u7528\u4f8b: RAG \u5e94\u7528\u7684\u9996\u9009\u5206\u5757\u65b9\u6cd5\u3002\u56e0\u4e3a\u5b83\u9075\u5faa\u4e0b\u6e38\u6a21\u578b\u7684 tokenization \u903b\u8f91\uff0c\u80fd\u66f4\u597d\u5730\u4fdd\u7559\u8bed\u4e49\u5b8c\u6574\u6027\uff0c\u63d0\u9ad8\u68c0\u7d22\u548c\u751f\u6210\u7684\u8d28\u91cf\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>model_name</code> (str): SentenceTransformer \u6a21\u578b\u540d\u79f0 (\u9ed8\u8ba4: \"sentence-transformers/all-mpnet-base-v2\")\u3002</li> <li><code>chunk_size</code> (int): \u6bcf\u4e2a\u5757\u7684 token \u6570 (\u9ed8\u8ba4: 512)\u3002</li> <li><code>chunk_overlap</code> (int): \u76f8\u90bb\u5757\u4e4b\u95f4\u7684\u91cd\u53e0 token \u6570 (\u9ed8\u8ba4: 50)\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#12-trigger","title":"1.2 \u89e6\u53d1\u5668 (Trigger)","text":"<p>\u89e6\u53d1\u5668\u662f\u542f\u52a8\u6570\u636e\u6d41\u7684\u5916\u90e8\u63a5\u53e3\u3002</p>"},{"location":"librarys/rag/#triggerablesource","title":"<code>TriggerableSource</code>","text":"<p>\u4e00\u4e2a\u901a\u7528\u7684\u3001\u53ef\u7531\u5916\u90e8\u4e8b\u4ef6\u89e6\u53d1\u7684\u6570\u636e\u6e90\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u7ef4\u62a4\u4e00\u4e2a\u5185\u90e8\u961f\u5217\uff0c\u5916\u90e8\u8c03\u7528 <code>trigger(data)</code> \u65b9\u6cd5\u5c06\u6570\u636e\u653e\u5165\u961f\u5217\uff0c<code>execute()</code> \u65b9\u6cd5\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u6570\u636e\u5e76\u9001\u5165\u6570\u636e\u6d41\u3002</li> <li>\u7528\u4f8b: \u6784\u5efa\u4ea4\u4e92\u5f0f\u5e94\u7528\uff0c\u4f8b\u5982\uff0c\u6570\u636e\u6d41\u7531 Web \u754c\u9762\u7684\u7528\u6237\u63d0\u4ea4\u3001\u6216\u6d88\u606f\u961f\u5217\u4e2d\u65b0\u6d88\u606f\u7684\u5230\u8fbe\u7b49\u5916\u90e8\u4e8b\u4ef6\u542f\u52a8\u3002</li> <li>\u65b9\u6cd5:<ul> <li><code>trigger(data)</code>: \u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u6570\u636e\u3002</li> <li><code>stop()</code>: \u505c\u6b62\u6570\u636e\u6e90\u3002</li> <li><code>is_empty()</code>: \u68c0\u67e5\u961f\u5217\u662f\u5426\u4e3a\u7a7a\u3002</li> </ul> </li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>wait_timeout</code> (float): \u8f6e\u8be2\u6a21\u5f0f\u4e0b\u7b49\u5f85\u65b0\u8f93\u5165\u7684\u8d85\u65f6\u65f6\u95f4\uff08\u79d2\uff09(\u9ed8\u8ba4: 1.0)\u3002</li> <li><code>enable_polling</code> (bool): \u662f\u5426\u542f\u7528\u8f6e\u8be2\u6a21\u5f0f (\u9ed8\u8ba4: True)\u3002\u82e5\u4e3a <code>False</code>\uff0c\u5219 <code>execute</code> \u65b9\u6cd5\u4f1a\u4e00\u76f4\u963b\u585e\u76f4\u5230\u6709\u6570\u636e\u8fdb\u5165\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#restapisource","title":"<code>RESTApiSource</code>","text":"<p>\u4e13\u95e8\u7528\u4e8e\u5904\u7406 REST API \u8bf7\u6c42\u7684\u89e6\u53d1\u5668\uff0c\u7ee7\u627f\u81ea <code>TriggerableSource</code>\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5c01\u88c5\u4e86\u5904\u7406 API \u8bf7\u6c42\u7684\u903b\u8f91\uff0c\u5982\u8bf7\u6c42ID\u7ba1\u7406\u3001\u961f\u5217\u5927\u5c0f\u9650\u5236\u7b49\u3002</li> <li>\u7528\u4f8b: \u4e3a SAGE \u6d41\u6c34\u7ebf\u521b\u5efa\u4e00\u4e2a Web Service \u7ec8\u7aef\u3002\u524d\u7aef\u5e94\u7528\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u6b64\u7ec8\u7aef\u6765\u89e6\u53d1 RAG \u6d41\u7a0b\u3002</li> <li>\u65b9\u6cd5:<ul> <li><code>trigger_request(request_data)</code>: \u89e6\u53d1\u4e00\u4e2a API \u8bf7\u6c42\u3002</li> </ul> </li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>request_timeout</code> (float): \u8bf7\u6c42\u5904\u7406\u7684\u8d85\u65f6\u65f6\u95f4 (\u9ed8\u8ba4: 30.0)\u3002</li> <li><code>max_queue_size</code> (int): \u6700\u5927\u5141\u8bb8\u7684\u6392\u961f\u8bf7\u6c42\u6570 (\u9ed8\u8ba4: 100)\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#2-information-retrieval","title":"2. \u4fe1\u606f\u68c0\u7d22 (Information Retrieval)","text":""},{"location":"librarys/rag/#21-searcher","title":"2.1 \u641c\u7d22\u5f15\u64ce (Searcher)","text":""},{"location":"librarys/rag/#bochawebsearch","title":"<code>BochaWebSearch</code>","text":"<p>\u8c03\u7528\u535a\u67e5\u667a\u80fd\u7684 Web Search API \u8fdb\u884c\u5728\u7ebf\u641c\u7d22\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5c06\u8f93\u5165\u67e5\u8be2\u53d1\u9001\u5230\u535a\u67e5 API\uff0c\u5e76\u8fd4\u56de\u641c\u7d22\u7ed3\u679c\u3002</li> <li>\u8f93\u5165: <code>str</code> - \u67e5\u8be2\u8bed\u53e5\u3002</li> <li>\u8f93\u51fa: <code>Dict[str, Any]</code> - API \u8fd4\u56de\u7684 JSON \u5bf9\u8c61\u3002</li> <li>\u7528\u4f8b: \u89e3\u7b54\u9700\u8981\u4ece\u4e92\u8054\u7f51\u83b7\u53d6\u6700\u65b0\u4fe1\u606f\u7684\u95ee\u9898\uff0c\u800c\u8fd9\u4e9b\u4fe1\u606f\u5728\u672c\u5730\u77e5\u8bc6\u5e93\u4e2d\u4e0d\u5b58\u5728\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>api_key</code> (str): \u535a\u67e5 API \u7684\u5bc6\u94a5 (\u5fc5\u9700)\u3002</li> <li><code>count</code> (int): \u8fd4\u56de\u7ed3\u679c\u6570\u91cf (\u9ed8\u8ba4: 10)\u3002</li> <li><code>page</code> (int): \u67e5\u8be2\u9875\u7801 (\u9ed8\u8ba4: 1)\u3002</li> <li><code>summary</code> (bool): \u662f\u5426\u8bf7\u6c42\u8fd4\u56de\u6458\u8981 (\u9ed8\u8ba4: True)\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#22-retriever","title":"2.2 \u68c0\u7d22\u5668 (Retriever)","text":"<p>\u4ece\u672c\u5730\u6216\u5185\u5b58\u77e5\u8bc6\u5e93\u4e2d\u68c0\u7d22\u4fe1\u606f\u3002</p>"},{"location":"librarys/rag/#denseretriever","title":"<code>DenseRetriever</code>","text":"<p>\u4f7f\u7528\u5411\u91cf\u5316\u6a21\u578b\u8fdb\u884c\u5bc6\u96c6\u68c0\u7d22\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u6839\u636e\u8f93\u5165\u67e5\u8be2\uff0c\u4ece\u914d\u7f6e\u7684\u957f\u671f\u8bb0\u5fc6 (LTM) \u77e5\u8bc6\u5e93\u4e2d\u68c0\u7d22\u6700\u76f8\u5173\u7684\u6587\u672c\u5757\u3002</li> <li>\u8f93\u5165: <code>str</code> - \u67e5\u8be2\u8bed\u53e5\u3002</li> <li>\u8f93\u51fa: <code>Tuple[str, List[str]]</code> - (\u539f\u59cb\u67e5\u8be2, \u68c0\u7d22\u5230\u7684\u6587\u672c\u5757\u5217\u8868)\u3002</li> <li>\u7528\u4f8b: \u4ece\u5927\u89c4\u6a21\u3001\u9884\u5148\u7d22\u5f15\u597d\u7684\u77e5\u8bc6\u5e93\u4e2d\u67e5\u627e\u8bed\u4e49\u4e0a\u76f8\u4f3c\u7684\u6587\u6863\uff08\u4f8b\u5982\uff0c\u4e3a\u5458\u5de5\u7684\u95ee\u9898\u627e\u5230\u76f8\u5173\u7684\u5185\u90e8\u653f\u7b56\u6587\u4ef6\uff09\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>ltm</code> (bool): \u662f\u5426\u542f\u7528\u957f\u671f\u8bb0\u5fc6\u68c0\u7d22 (\u5fc5\u9700)\u3002</li> <li><code>ltm_config</code> (dict): LTM \u7684\u5177\u4f53\u914d\u7f6e\uff0c\u5982\u96c6\u5408\u540d\u79f0\u3001\u5411\u91cf\u6a21\u578b\u7b49\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#bm25sretriever","title":"<code>BM25sRetriever</code>","text":"<p>\u4f7f\u7528 BM25s \u7b97\u6cd5\u8fdb\u884c\u7a00\u758f\u68c0\u7d22\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5229\u7528 BM25s \u7b97\u6cd5\u4ece\u6307\u5b9a\u96c6\u5408\u4e2d\u68c0\u7d22\u6587\u672c\u3002</li> <li>\u8f93\u5165: <code>str</code> - \u67e5\u8be2\u8bed\u53e5\u3002</li> <li>\u8f93\u51fa: <code>Tuple[str, List[str]]</code> - (\u539f\u59cb\u67e5\u8be2, \u68c0\u7d22\u5230\u7684\u6587\u672c\u5757\u5217\u8868)\u3002</li> <li>\u7528\u4f8b: \u8fdb\u884c\u5173\u952e\u8bcd\u641c\u7d22\uff0c\u5bf9\u5305\u542b\u7279\u5b9a\u672f\u8bed\u3001\u540d\u79f0\u6216\u4ee3\u7801\u7684\u67e5\u8be2\u975e\u5e38\u6709\u6548\u3002\u5e38\u4e0e <code>DenseRetriever</code> \u7ed3\u5408\u4f7f\u7528\u4ee5\u5b9e\u73b0\u6df7\u5408\u641c\u7d22\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>bm25s_collection</code> (str): BM25s \u96c6\u5408\u7684\u540d\u79f0 (\u5fc5\u9700)\u3002</li> <li><code>bm25s_config</code> (dict): BM25s \u7684\u5177\u4f53\u914d\u7f6e\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#23-reranker","title":"2.3 \u91cd\u6392\u5668 (Reranker)","text":"<p>\u5bf9\u68c0\u7d22\u5230\u7684\u7ed3\u679c\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\uff0c\u4ee5\u63d0\u9ad8\u6700\u76f8\u5173\u6587\u6863\u7684\u6392\u540d\u3002</p>"},{"location":"librarys/rag/#bgereranker","title":"<code>BGEReranker</code>","text":"<p>\u4f7f\u7528 <code>BAAI/bge-reranker-v2-m3</code> \u6a21\u578b\u8fdb\u884c\u91cd\u6392\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u8ba1\u7b97\u67e5\u8be2\u4e0e\u6bcf\u4e2a\u6587\u6863\u7684\u76f8\u5173\u6027\u5206\u6570\uff0c\u5e76\u6309\u5206\u6570\u964d\u5e8f\u6392\u5217\u3002</li> <li>\u8f93\u5165: <code>Tuple[str, List[str]]</code> - (\u67e5\u8be2, \u6587\u6863\u5217\u8868)\u3002</li> <li>\u8f93\u51fa: <code>Tuple[str, List[str]]</code> - (\u67e5\u8be2, \u91cd\u6392\u540e\u7684\u6587\u6863\u5217\u8868)\u3002</li> <li>\u7528\u4f8b: \u7cbe\u70bc\u68c0\u7d22\u5668\u7684\u8fd4\u56de\u7ed3\u679c\u3002\u4f8b\u5982\uff0c\u5728\u68c0\u7d22\u5668\u53ec\u56de 20-50 \u4e2a\u6587\u6863\u540e\uff0c\u4f7f\u7528\u91cd\u6392\u5668\u7cbe\u786e\u5730\u627e\u51fa\u6700\u76f8\u5173\u7684 3-5 \u4e2a\u6587\u6863\u9001\u5165\u751f\u6210\u5668\uff0c\u4ece\u800c\u63d0\u9ad8\u6548\u7387\u548c\u7b54\u6848\u7684\u51c6\u786e\u6027\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>model_name</code> (str): \u6a21\u578b\u540d\u79f0 (\u9ed8\u8ba4: \"BAAI/bge-reranker-v2-m3\")\u3002</li> <li><code>top_k</code> (int): \u8fd4\u56de\u6392\u540d\u6700\u9ad8\u7684 k \u4e2a\u6587\u6863\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#llmbased_reranker","title":"<code>LLMbased_Reranker</code>","text":"<p>\u4f7f\u7528 <code>BAAI/bge-reranker-v2-gemma</code> \u6a21\u578b\u8fdb\u884c\u91cd\u6392\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u57fa\u4e8e\u4e00\u4e2a\u751f\u6210\u5f0f LLM \u5224\u65ad\u6bcf\u4e2a\u6587\u6863\u662f\u5426\u5305\u542b\u67e5\u8be2\u7684\u7b54\u6848\uff08\"Yes\" \u6216 \"No\"\uff09\uff0c\u5e76\u636e\u6b64\u6392\u5e8f\u3002</li> <li>\u8f93\u5165: <code>Tuple[str, List[str]]</code> - (\u67e5\u8be2, \u6587\u6863\u5217\u8868)\u3002</li> <li>\u8f93\u51fa: <code>Tuple[str, List[str]]</code> - (\u67e5\u8be2, \u91cd\u6392\u540e\u7684\u6587\u6863\u5217\u8868)\u3002</li> <li>\u7528\u4f8b: \u4e0e <code>BGEReranker</code> \u7c7b\u4f3c\uff0c\u4f46\u4f7f\u7528\u66f4\u5f3a\u5927\uff08\u4e5f\u53ef\u80fd\u66f4\u6162\uff09\u7684\u751f\u6210\u5f0f\u6a21\u578b\u8fdb\u884c\u91cd\u6392\u3002\u9002\u7528\u4e8e\u7b80\u5355\u76f8\u5173\u6027\u5206\u6570\u4e0d\u8db3\u4ee5\u5224\u65ad\u7684\u590d\u6742\u67e5\u8be2\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>model_name</code> (str): \u6a21\u578b\u540d\u79f0 (\u9ed8\u8ba4: \"BAAI/bge-reranker-v2-gemma\")\u3002</li> <li><code>top_k</code> (int): \u8fd4\u56de\u6392\u540d\u6700\u9ad8\u7684 k \u4e2a\u6587\u6863\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#3-query-understanding-generation","title":"3. \u67e5\u8be2\u7406\u89e3\u4e0e\u751f\u6210 (Query Understanding &amp; Generation)","text":""},{"location":"librarys/rag/#31-query-profiler","title":"3.1 \u67e5\u8be2\u5206\u6790\u5668 (Query Profiler)","text":""},{"location":"librarys/rag/#query_profiler","title":"<code>Query_Profiler</code>","text":"<p>\u5206\u6790\u7528\u6237\u67e5\u8be2\u7684\u590d\u6742\u6027\uff0c\u4ee5\u51b3\u5b9a\u540e\u7eed\u7684\u5904\u7406\u7b56\u7565\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u89e3\u6790\u5927\u6a21\u578b\u8fd4\u56de\u7684\u5173\u4e8e\u67e5\u8be2\u7684 JSON \u5206\u6790\u7ed3\u679c\uff0c\u5e76\u8f93\u51fa\u5904\u7406\u7b56\u7565\u3002</li> <li>\u8f93\u5165: <code>str</code> - \u5305\u542b\u67e5\u8be2\u5206\u6790\u7684 JSON \u5b57\u7b26\u4e32\u3002</li> <li>\u8f93\u51fa: <code>List</code> - <code>[synthesis_method, num_chunks, intermediate_length_range]</code>\uff0c\u4f8b\u5982 <code>[\"map_reduce\", [3, 9], 100]</code>\u3002</li> <li>\u7528\u4f8b: \u5728\u9ad8\u7ea7 RAG \u7cfb\u7edf\u4e2d\u5145\u5f53\u201c\u8def\u7531\u5668\u201d\u3002\u901a\u8fc7\u5206\u6790\u7528\u6237\u95ee\u9898\uff0c\u51b3\u5b9a\u91c7\u7528\u54ea\u79cd RAG \u7b56\u7565\uff08\u5982\u7b80\u5355\u68c0\u7d22 vs. \u591a\u6b65\u63a8\u7406\uff09\uff0c\u4f7f\u7cfb\u7edf\u66f4\u5177\u9002\u5e94\u6027\u3002</li> <li>\u914d\u7f6e\u8981\u6c42: \u6b64\u7ec4\u4ef6\u901a\u5e38\u6ca1\u6709\u81ea\u5df1\u7684\u914d\u7f6e\uff0c\u56e0\u4e3a\u5b83\u5904\u7406\u7684\u662f\u4e0a\u6e38 LLM \u8c03\u7528\u7684\u8f93\u51fa\u3002</li> </ul>"},{"location":"librarys/rag/#32-prompting","title":"3.2 \u63d0\u793a\u8bcd\u5de5\u7a0b (Prompting)","text":""},{"location":"librarys/rag/#qapromptor","title":"<code>QAPromptor</code>","text":"<p>\u6784\u5efa\u7528\u4e8e\u95ee\u7b54\u4efb\u52a1\u7684\u63d0\u793a\u8bcd\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5c06\u67e5\u8be2\u548c\u53ef\u9009\u7684\u4e0a\u4e0b\u6587\uff08corpus\uff09\u683c\u5f0f\u5316\u4e3a\u5927\u6a21\u578b\u6240\u9700\u7684 <code>system</code> \u548c <code>user</code> \u6d88\u606f\u5217\u8868\u3002</li> <li>\u8f93\u5165: <code>str</code> (\u67e5\u8be2) \u6216 <code>Tuple[str, List[str]]</code> (\u67e5\u8be2, \u4e0a\u4e0b\u6587)\u3002</li> <li>\u8f93\u51fa: <code>List[str, List[dict]]</code> - <code>[query, prompt_list]</code>\u3002</li> <li>\u7528\u4f8b: \u4efb\u4f55\u9700\u8981\u6839\u636e\u68c0\u7d22\u5230\u7684\u4e0a\u4e0b\u6587\u6765\u56de\u7b54\u95ee\u9898\u7684 RAG \u6d41\u6c34\u7ebf\u7684\u6807\u51c6\u7ec4\u4ef6\u3002</li> <li>\u914d\u7f6e\u8981\u6c42: \u65e0\uff0c\u5176\u6a21\u677f\u662f\u4e3a\u901a\u7528\u95ee\u7b54\u4efb\u52a1\u786c\u7f16\u7801\u7684\u3002</li> </ul>"},{"location":"librarys/rag/#summarizationpromptor","title":"<code>SummarizationPromptor</code>","text":"<p>\u6784\u5efa\u7528\u4e8e\u6458\u8981\u4efb\u52a1\u7684\u63d0\u793a\u8bcd\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5c06\u67e5\u8be2\u548c\u4e0a\u4e0b\u6587\u683c\u5f0f\u5316\u4e3a\u6458\u8981\u6a21\u578b\u7684\u63d0\u793a\u8bcd\u3002</li> <li>\u8f93\u5165: <code>Tuple[str, List[str]]</code> - (\u67e5\u8be2, \u4e0a\u4e0b\u6587)\u3002</li> <li>\u8f93\u51fa: <code>List[dict]</code> - \u63d0\u793a\u8bcd\u5217\u8868\u3002</li> <li>\u7528\u4f8b: \u5728 \"map-reduce\" \u7b49 RAG \u7b56\u7565\u4e2d\u4f7f\u7528\uff0c\u5148\u5c06\u591a\u4e2a\u72ec\u7acb\u7684\u6587\u6863\u5757\u8fdb\u884c\u6458\u8981\uff0c\u7136\u540e\u5c06\u6458\u8981\u5185\u5bb9\u5408\u5e76\u4ee5\u56de\u7b54\u6700\u7ec8\u95ee\u9898\u3002</li> <li>\u914d\u7f6e\u8981\u6c42: \u65e0\u3002</li> </ul>"},{"location":"librarys/rag/#queryprofilerpromptor","title":"<code>QueryProfilerPromptor</code>","text":"<p>\u6784\u5efa\u7528\u4e8e\u67e5\u8be2\u5206\u6790\u7684\u63d0\u793a\u8bcd\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5c06\u7528\u6237\u67e5\u8be2\u5305\u88c5\u6210\u4e00\u4e2a\u8bf7\u6c42\uff0c\u8ba9\u5927\u6a21\u578b\u5206\u6790\u5176\u7279\u6027\u3002</li> <li>\u8f93\u5165: <code>str</code> - \u7528\u6237\u67e5\u8be2\u3002</li> <li>\u8f93\u51fa: <code>List[dict]</code> - \u53d1\u9001\u7ed9\u5927\u6a21\u578b\u7684\u63d0\u793a\u8bcd\u3002</li> <li>\u7528\u4f8b: <code>Query_Profiler</code> \u7684\u4e0a\u6e38\u7ec4\u4ef6\uff0c\u5b83\u5b9a\u4e49\u4e86*\u5982\u4f55*\u8bf7\u6c42\u5927\u6a21\u578b\u6765\u5206\u6790\u4e00\u4e2a\u67e5\u8be2\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>metadata</code> (dict): \u63cf\u8ff0\u77e5\u8bc6\u5e93\u7684\u5143\u6570\u636e\uff0c\u5e2e\u52a9\u6a21\u578b\u66f4\u597d\u5730\u7406\u89e3\u67e5\u8be2\u80cc\u666f\u3002</li> <li><code>chunk_size</code> (int): \u77e5\u8bc6\u5e93\u7684\u5206\u5757\u5927\u5c0f\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#33-generator","title":"3.3 \u751f\u6210\u5668 (Generator)","text":"<p>\u8c03\u7528\u5927\u6a21\u578b\u751f\u6210\u6700\u7ec8\u7b54\u6848\u3002</p>"},{"location":"librarys/rag/#openaigenerator","title":"<code>OpenAIGenerator</code>","text":"<p>\u8c03\u7528\u4e0e OpenAI API \u517c\u5bb9\u7684\u7aef\u70b9\uff08\u5982 VLLM, DashScope\uff09\u8fdb\u884c\u6587\u672c\u751f\u6210\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5411\u6307\u5b9a\u6a21\u578b\u7aef\u70b9\u53d1\u9001\u63d0\u793a\u8bcd\u5e76\u8fd4\u56de\u751f\u6210\u7ed3\u679c\u3002</li> <li>\u8f93\u5165: <code>List</code> - <code>[user_query, prompt]</code> \u6216 <code>[prompt]</code>\u3002</li> <li>\u8f93\u51fa: <code>Tuple[str, str]</code> - <code>(user_query, generated_text)</code>\u3002</li> <li>\u7528\u4f8b: RAG \u6d41\u6c34\u7ebf\u7684\u6700\u540e\u4e00\u6b65\uff0c\u6574\u5408\u7cbe\u70bc\u540e\u7684\u4e0a\u4e0b\u6587\u548c\u539f\u59cb\u67e5\u8be2\uff0c\u751f\u6210\u7528\u6237\u53ef\u8bfb\u7684\u7b54\u6848\u3002\u53ef\u4ee5\u8fde\u63a5\u5230 OpenAI, VLLM, DashScope \u7b49\u670d\u52a1\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>method</code> (str): \u8c03\u7528\u65b9\u6cd5\uff0c\u5982 \"openai\"\u3002</li> <li><code>model_name</code> (str): \u6a21\u578b\u540d\u79f0\uff0c\u5982 \"gpt-4o-mini\"\u3002</li> <li><code>base_url</code> (str): API \u7684\u57fa\u7840 URL\u3002</li> <li><code>api_key</code> (str): API \u5bc6\u94a5\u3002</li> <li><code>seed</code> (int): \u968f\u673a\u79cd\u5b50 (\u53ef\u9009)\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#openaigeneratorwithhistory","title":"<code>OpenAIGeneratorWithHistory</code>","text":"<p>\u5e26\u6eda\u52a8\u5bf9\u8bdd\u5386\u53f2\u7684\u751f\u6210\u5668\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5728 <code>OpenAIGenerator</code> \u7684\u57fa\u7840\u4e0a\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u8bdd\u5386\u53f2\u961f\u5217\uff0c\u6bcf\u6b21\u8bf7\u6c42\u65f6\u81ea\u52a8\u5e26\u4e0a\u6700\u8fd1\u7684\u5bf9\u8bdd\u5386\u53f2\u3002</li> <li>\u8f93\u5165: <code>List</code> - <code>[user_query, prompt_list]</code>\u3002</li> <li>\u8f93\u51fa: <code>Tuple[str, str]</code> - <code>(user_query, generated_text)</code>\u3002</li> <li>\u7528\u4f8b: \u6784\u5efa\u5bf9\u8bdd\u5f0f\u804a\u5929\u673a\u5668\u4eba\u3002\u5b83\u80fd\u8bb0\u4f4f\u4e4b\u524d\u7684\u5bf9\u8bdd\uff0c\u5141\u8bb8\u7528\u6237\u63d0\u51fa\u8ffd\u95ee\uff0c\u4f7f\u4ea4\u4e92\u66f4\u81ea\u7136\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li>\u4e0e <code>OpenAIGenerator</code> \u76f8\u540c\u3002</li> <li><code>max_history_turns</code> (int): \u6700\u5927\u4fdd\u7559\u7684\u5bf9\u8bdd\u8f6e\u6570 (\u9ed8\u8ba4: 5)\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#hfgenerator","title":"<code>HFGenerator</code>","text":"<p>\u8c03\u7528\u672c\u5730 Hugging Face \u6a21\u578b\u8fdb\u884c\u751f\u6210\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u52a0\u8f7d\u5e76\u8fd0\u884c\u672c\u5730\u7684 Hugging Face \u6a21\u578b\u3002</li> <li>\u8f93\u5165: <code>List</code> - <code>[user_query, prompt]</code> \u6216 <code>[prompt]</code>\u3002</li> <li>\u8f93\u51fa: <code>Tuple[str, str]</code> - <code>(user_query, generated_text)</code>\u3002</li> <li>\u7528\u4f8b: \u51fa\u4e8e\u6570\u636e\u9690\u79c1\u3001\u6210\u672c\u6216\u81ea\u5b9a\u4e49\u7684\u9700\u6c42\uff0c\u4f7f\u7528\u672c\u5730\u90e8\u7f72\u7684\u5f00\u6e90\u6a21\u578b\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>method</code> (str): \u8c03\u7528\u65b9\u6cd5\uff0c\u5982 \"hf\"\u3002</li> <li><code>model_name</code> (str): Hugging Face \u4e0a\u7684\u6a21\u578b\u540d\u79f0\u6216\u672c\u5730\u8def\u5f84\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#34-writer","title":"3.4 \u5199\u5165\u5668 (Writer)","text":""},{"location":"librarys/rag/#memorywriter","title":"<code>MemoryWriter</code>","text":"<p>\u5c06\u5904\u7406\u8fc7\u7a0b\u4e2d\u7684\u6570\u636e\u5199\u5165\u5230 SAGE \u7684\u8bb0\u5fc6\u6a21\u5757\u4e2d\u3002</p> <ul> <li>\u6838\u5fc3\u529f\u80fd: \u5c06\u8f93\u5165\u6570\u636e\u5199\u5165\u5230\u914d\u7f6e\u7684\u77ed\u671f\u8bb0\u5fc6 (STM)\u3001\u957f\u671f\u8bb0\u5fc6 (LTM) \u6216\u6587\u6863\u5316\u8ba4\u77e5\u8bb0\u5fc6 (DCM) \u4e2d\u3002</li> <li>\u8f93\u5165: <code>Union[str, List[str], Tuple[str, str]]</code> - \u4efb\u610f\u683c\u5f0f\u7684\u6570\u636e\u3002</li> <li>\u7528\u4f8b: \u521b\u5efa\u4e00\u4e2a\u80fd\u81ea\u6211\u5b8c\u5584\u7684 RAG \u7cfb\u7edf\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u6b21\u7528\u6237\u4ea4\u4e92\u540e\uff0c\u53ef\u5c06\u751f\u6210\u7684\u7b54\u6848\u6216\u7528\u6237\u53cd\u9988\u5199\u56de LTM\uff0c\u4f7f\u7cfb\u7edf\u80fd\u4ece\u4ea4\u4e92\u4e2d\u5b66\u4e60\u3002</li> <li>\u914d\u7f6e\u8981\u6c42:<ul> <li><code>stm</code>, <code>ltm</code>, <code>dcm</code> (bool): \u662f\u5426\u542f\u7528\u76f8\u5e94\u7684\u8bb0\u5fc6\u6a21\u5757\u3002</li> <li><code>stm_collection</code>, <code>ltm_collection</code>, <code>dcm_collection</code> (str): \u76f8\u5e94\u8bb0\u5fc6\u6a21\u5757\u7684\u96c6\u5408\u540d\u79f0\u3002</li> <li><code>stm_config</code>, <code>ltm_config</code>, <code>dcm_config</code> (dict): \u5177\u4f53\u914d\u7f6e\u3002</li> </ul> </li> </ul>"},{"location":"librarys/rag/#4-evaluation","title":"4. \u8bc4\u4f30 (Evaluation)","text":"<p>\u8bc4\u4f30\u6a21\u5757\u7528\u4e8e\u8861\u91cf RAG \u6d41\u7a0b\u5404\u4e2a\u73af\u8282\u548c\u6700\u7ec8\u8f93\u51fa\u7684\u8d28\u91cf\u3002</p> <ul> <li>\u901a\u7528\u7528\u4f8b: \u5728\u5f00\u53d1\u6216\u6d4b\u8bd5\u73af\u5883\u4e2d\uff0c\u5c06\u8fd9\u4e9b\u8bc4\u4f30\u7ec4\u4ef6\u4e32\u8054\u5728\u751f\u6210\u5668\u4e4b\u540e\uff0c\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u95ee\u7b54\u5bf9\u81ea\u52a8\u8ba1\u7b97\u8d28\u91cf\u548c\u6027\u80fd\u6307\u6807\uff0c\u4ece\u800c\u5b9e\u73b0\u5feb\u901f\u5b9e\u9a8c\u548c\u56de\u5f52\u6d4b\u8bd5\u3002</li> <li>\u901a\u7528\u8f93\u5165: \u6240\u6709\u8bc4\u4f30\u7ec4\u4ef6\u90fd\u63a5\u6536\u4e00\u4e2a <code>dict</code>\uff0c\u901a\u5e38\u5305\u542b <code>references</code> (\u6807\u51c6\u7b54\u6848\u5217\u8868) \u548c <code>generated</code> (\u6a21\u578b\u751f\u6210\u7b54\u6848)\u3002</li> <li>\u901a\u7528\u8f93\u51fa: \u5728\u63a7\u5236\u53f0\u6253\u5370\u8bc4\u4f30\u5206\u6570\uff0c\u5e76\u900f\u4f20\u8f93\u5165\u7684 <code>dict</code> \u4ee5\u4fbf\u94fe\u5f0f\u8c03\u7528\u3002</li> <li>\u901a\u7528\u914d\u7f6e: \u901a\u5e38\u65e0\u9700\u914d\u7f6e\uff0c\u56e0\u4e3a\u5b83\u4eec\u64cd\u4f5c\u7684\u662f\u6d41\u7a0b\u4e2d\u4f20\u9012\u7684\u6807\u51c6\u5316\u5b57\u5178\u3002</li> </ul>"},{"location":"librarys/rag/#41","title":"4.1 \u6587\u672c\u76f8\u4f3c\u5ea6\u8bc4\u4f30","text":"<ul> <li><code>F1Evaluate</code>: \u8ba1\u7b97\u751f\u6210\u7b54\u6848\u548c\u6807\u51c6\u7b54\u6848\u4e4b\u95f4\u7684 F1 \u5206\u6570\u3002</li> <li><code>RecallEvaluate</code>: \u8ba1\u7b97\u53ec\u56de\u7387\u3002</li> <li><code>BertRecallEvaluate</code>: \u4f7f\u7528 BERT \u6a21\u578b\u8ba1\u7b97\u8bed\u4e49\u76f8\u4f3c\u5ea6\u4f5c\u4e3a\u53ec\u56de\u7387\u3002</li> <li><code>RougeLEvaluate</code>: \u8ba1\u7b97 ROUGE-L \u5206\u6570\uff0c\u8861\u91cf\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u3002</li> <li><code>BRSEvaluate</code>: \u8ba1\u7b97\u57fa\u4e8e\u8bcd\u888b\u7684\u53ec\u56de\u7387 (Bag-of-Words Recall Score)\u3002</li> <li><code>AccuracyEvaluate</code>: \u8ba1\u7b97\u7cbe\u786e\u5339\u914d\u51c6\u786e\u7387\u3002</li> </ul>"},{"location":"librarys/rag/#42","title":"4.2 \u6027\u80fd\u4e0e\u6307\u6807\u8bc4\u4f30","text":"<ul> <li><code>TokenCountEvaluate</code>: \u8ba1\u7b97\u751f\u6210\u7b54\u6848\u7684 token \u6570\u91cf\u3002</li> <li><code>LatencyEvaluate</code>: \u8ba1\u7b97\u751f\u6210\u5ef6\u8fdf\u3002</li> <li><code>ContextRecallEvaluate</code>: \u8bc4\u4f30\u68c0\u7d22\u9636\u6bb5\u7684\u4e0a\u4e0b\u6587\u53ec\u56de\u7387\u3002</li> <li><code>CompressionRateEvaluate</code>: \u8bc4\u4f30\u4fe1\u606f\u538b\u7f29\u7387\uff08\u539f\u59cb\u6587\u6863\u4e0e\u7cbe\u70bc\u540e\u6587\u6863\u7684\u957f\u5ea6\u6bd4\uff09\u3002</li> </ul>"},{"location":"librarys/tools_intro/","title":"SAGE Tools: \u6a21\u5757\u5316\u5de5\u5177\u7cfb\u7edf\u4ecb\u7ecd","text":"<p>\u6b22\u8fce\u6765\u5230 SAGE Lib \u7684\u5de5\u5177\uff08Tools\uff09\u6a21\u5757\u3002\u8be5\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u51c6\u5316\u7684\u6846\u67b6\uff0c\u7528\u4e8e\u521b\u5efa\u3001\u7ba1\u7406\u548c\u8c03\u7528\u5404\u79cd\u539f\u5b50\u5316\u7684\u529f\u80fd\u5355\u5143\uff08\u5373\u201c\u5de5\u5177\u201d\uff09\u3002\u8fd9\u4e9b\u5de5\u5177\u662f SAGE Agent \u5b9e\u73b0\u590d\u6742\u4efb\u52a1\u89c4\u5212\u4e0e\u6267\u884c\u80fd\u529b\u7684\u57fa\u7840\u3002</p> <p>\u8be5\u7cfb\u7edf\u7684\u6838\u5fc3\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a<code>BaseTool</code> \u57fa\u7c7b\u548c <code>ToolRegistry</code> \u6ce8\u518c\u8868\u3002</p>"},{"location":"librarys/tools_intro/#1-basetool","title":"1. <code>BaseTool</code>: \u5de5\u5177\u7684\u57fa\u77f3","text":"<p><code>BaseTool</code> \u662f\u4e00\u4e2a\u62bd\u8c61\u57fa\u7c7b\uff0c\u4e3a\u6240\u6709\u5177\u4f53\u7684\u5de5\u5177\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\u548c\u7ed3\u6784\u3002\u4efb\u4f55\u5e0c\u671b\u88ab SAGE \u7cfb\u7edf\u8bc6\u522b\u548c\u8c03\u7528\u7684\u81ea\u5b9a\u4e49\u529f\u80fd\uff0c\u90fd\u5e94\u8be5\u7ee7\u627f\u81ea <code>BaseTool</code>\u3002</p>"},{"location":"librarys/tools_intro/#_1","title":"\u6838\u5fc3\u8bbe\u8ba1","text":"<ul> <li> <p>\u5143\u6570\u636e\u9a71\u52a8: \u6bcf\u4e2a\u5de5\u5177\u90fd\u901a\u8fc7\u5143\u6570\u636e\uff08Metadata\uff09\u6765\u58f0\u660e\u5176\u8eab\u4efd\u548c\u80fd\u529b\u3002\u8fd9\u5305\u62ec\uff1a</p> <ul> <li><code>tool_name</code>: \u5de5\u5177\u7684\u552f\u4e00\u6807\u8bc6\u7b26\u3002</li> <li><code>tool_description</code>: \u5bf9\u5de5\u5177\u529f\u80fd\u7684\u6e05\u6670\u63cf\u8ff0\uff0c\u4e3b\u8981\u4f9b\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7406\u89e3\u548c\u9009\u62e9\u3002</li> <li><code>input_types</code> / <code>output_type</code>: \u660e\u786e\u5b9a\u4e49\u5de5\u5177\u7684\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u3002</li> <li><code>demo_commands</code>: \u63d0\u4f9b\u793a\u4f8b\u7528\u6cd5\uff0c\u4fbf\u4e8e\u4eba\u7c7b\u548c\u673a\u5668\u7406\u89e3\u3002</li> </ul> </li> <li> <p>\u6807\u51c6\u5316\u6267\u884c\u63a5\u53e3: \u6240\u6709\u5de5\u5177\u90fd\u5fc5\u987b\u5b9e\u73b0\u4e00\u4e2a <code>execute</code> \u65b9\u6cd5\u3002\u8fd9\u662f\u5de5\u5177\u6267\u884c\u5176\u6838\u5fc3\u903b\u8f91\u7684\u5165\u53e3\u70b9\uff0c\u786e\u4fdd\u4e86 Agent \u53ef\u4ee5\u7528\u7edf\u4e00\u7684\u65b9\u5f0f\u8c03\u7528\u4efb\u4f55\u5de5\u5177\u3002</p> </li> <li> <p>LLM \u8d44\u6e90\u58f0\u660e: \u901a\u8fc7 <code>require_llm_engine</code> \u5c5e\u6027\uff0c\u5de5\u5177\u53ef\u4ee5\u58f0\u660e\u5176\u6267\u884c\u662f\u5426\u9700\u8981 LLM \u7684\u53c2\u4e0e\u3002\u8fd9\u4f7f\u5f97\u7cfb\u7edf\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u5206\u914d\u8d44\u6e90\u3002</p> </li> </ul>"},{"location":"librarys/tools_intro/#_2","title":"\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u5de5\u5177\uff1f","text":"<ol> <li>\u7ee7\u627f <code>BaseTool</code>: \u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b\uff0c\u5e76\u4f7f\u5176\u7ee7\u627f\u81ea <code>BaseTool</code>\u3002</li> <li>\u5b9a\u4e49\u5143\u6570\u636e: \u5728 <code>__init__</code> \u65b9\u6cd5\u4e2d\uff0c\u8c03\u7528 <code>super().__init__()</code> \u5e76\u4f20\u5165\u5de5\u5177\u7684\u540d\u79f0\u3001\u63cf\u8ff0\u3001\u8f93\u5165\u8f93\u51fa\u7c7b\u578b\u7b49\u5143\u6570\u636e\u3002</li> <li>\u5b9e\u73b0 <code>execute</code> \u65b9\u6cd5: \u91cd\u5199 <code>execute</code> \u65b9\u6cd5\uff0c\u5728\u5176\u4e2d\u5b9e\u73b0\u5de5\u5177\u7684\u5177\u4f53\u529f\u80fd\u903b\u8f91\u3002</li> </ol>"},{"location":"librarys/tools_intro/#2-toolregistry","title":"2. <code>ToolRegistry</code>: \u5de5\u5177\u7684\u7ba1\u7406\u5668","text":"<p><code>ToolRegistry</code> \u626e\u6f14\u7740\u5de5\u5177\u201c\u6ce8\u518c\u4e2d\u5fc3\u201d\u548c\u201c\u7ba1\u7406\u5668\u201d\u7684\u89d2\u8272\u3002\u5b83\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6240\u6709\u5df2\u6ce8\u518c\u5de5\u5177\u7684\u5217\u8868\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u5957\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u7ba1\u7406\u8fd9\u4e9b\u5de5\u5177\u3002</p>"},{"location":"librarys/tools_intro/#_3","title":"\u6838\u5fc3\u529f\u80fd","text":"<ul> <li> <p>\u6ce8\u518c\u4e0e\u6ce8\u9500:</p> <ul> <li><code>register(tool)</code>: \u5c06\u4e00\u4e2a <code>BaseTool</code> \u7684\u5b9e\u4f8b\u6dfb\u52a0\u5230\u6ce8\u518c\u8868\u4e2d\uff0c\u4f7f\u5176\u53ef\u88ab\u7cfb\u7edf\u53d1\u73b0\u548c\u8c03\u7528\u3002</li> <li><code>unregister(name)</code>: \u4ece\u6ce8\u518c\u8868\u4e2d\u79fb\u9664\u4e00\u4e2a\u5de5\u5177\u3002</li> </ul> </li> <li> <p>\u67e5\u627e\u4e0e\u5217\u4e3e:</p> <ul> <li><code>get(name)</code>: \u6839\u636e\u5de5\u5177\u540d\u79f0\u7cbe\u786e\u5730\u83b7\u53d6\u4e00\u4e2a\u5de5\u5177\u5b9e\u4f8b\u3002</li> <li><code>list_tools()</code>: \u8fd4\u56de\u5f53\u524d\u6240\u6709\u5df2\u6ce8\u518c\u5de5\u5177\u7684\u5217\u8868\uff0c\u8fd9\u5bf9\u4e8e Agent \u5728\u89c4\u5212\u65f6\u201c\u770b\u5230\u201d\u6240\u6709\u53ef\u7528\u6280\u80fd\u81f3\u5173\u91cd\u8981\u3002</li> </ul> </li> <li> <p>\u5168\u5c40\u8bbf\u95ee: <code>ToolRegistry</code> \u901a\u5e38\u4f5c\u4e3a\u4e00\u4e2a\u5355\u4f8b\u5b58\u5728\uff0c\u786e\u4fdd\u5728\u7cfb\u7edf\u7684\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u8bbf\u95ee\u5230\u540c\u4e00\u4efd\u5de5\u5177\u5217\u8868\u3002</p> </li> </ul>"},{"location":"librarys/tools_intro/#_4","title":"\u603b\u7ed3\uff1a\u5de5\u4f5c\u6d41\u7a0b","text":"<p>\u4e00\u4e2a\u5178\u578b\u7684\u5de5\u5177\u4f7f\u7528\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u5f00\u53d1: \u5f00\u53d1\u8005\u901a\u8fc7\u7ee7\u627f <code>BaseTool</code> \u6765\u521b\u5efa\u4e00\u4e2a\u6216\u591a\u4e2a\u5177\u6709\u7279\u5b9a\u529f\u80fd\u7684\u5de5\u5177\u3002</li> <li>\u6ce8\u518c: \u5728\u7cfb\u7edf\u521d\u59cb\u5316\u9636\u6bb5\uff0c\u521b\u5efa\u8fd9\u4e9b\u5de5\u5177\u7684\u5b9e\u4f8b\uff0c\u5e76\u5c06\u5b83\u4eec\u4e00\u4e00\u6ce8\u518c\u5230\u5168\u5c40\u7684 <code>ToolRegistry</code> \u4e2d\u3002</li> <li>\u53d1\u73b0\u4e0e\u8c03\u7528: \u5f53\u4e00\u4e2a SAGE Agent \u9700\u8981\u6267\u884c\u4efb\u52a1\u65f6\uff0c\u5b83\u4f1a\u5411 <code>ToolRegistry</code> \u67e5\u8be2\u53ef\u7528\u7684\u5de5\u5177\u5217\u8868\u3002\u901a\u8fc7\u5206\u6790\u6bcf\u4e2a\u5de5\u5177\u7684\u5143\u6570\u636e\uff08\u7279\u522b\u662f <code>tool_description</code>\uff09\uff0cAgent \u4f1a\u9009\u62e9\u6700\u9002\u5408\u5f53\u524d\u5b50\u4efb\u52a1\u7684\u5de5\u5177\u3002</li> <li>\u6267\u884c: Agent \u8c03\u7528\u6240\u9009\u5de5\u5177\u7684 <code>execute</code> \u65b9\u6cd5\uff0c\u5e76\u4f20\u5165\u6240\u9700\u7684\u53c2\u6570\uff0c\u5b8c\u6210\u4efb\u52a1\u7684\u4e00\u4e2a\u6b65\u9aa4\u3002</li> </ol> <p>\u901a\u8fc7\u8fd9\u79cd\u677e\u8026\u5408\u3001\u6807\u51c6\u5316\u7684\u8bbe\u8ba1\uff0cSAGE \u7684\u5de5\u5177\u7cfb\u7edf\u5b9e\u73b0\u4e86\u6781\u9ad8\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0c\u8ba9\u5f00\u53d1\u8005\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5b9e\u73b0\u5177\u4f53\u7684\u529f\u80fd\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u5e95\u5c42\u7684\u8c03\u7528\u548c\u7ba1\u7406\u7ec6\u8282\u3002</p>"},{"location":"librarys/agents/components/action/","title":"Action \u7ec4\u4ef6\u8bbe\u8ba1\u6587\u6863 \u2014\u2014 <code>MCPRegistry</code>","text":"<p>\u6a21\u5757\u8def\u5f84\uff1a<code>packages/sage-libs/src/sage/libs/agents/action/mcp_registry.py</code></p> <p>\u5b9a\u4f4d</p> <p><code>MCPRegistry</code> \u662f MCP \u98ce\u683c\u5de5\u5177 \u7684**\u8fdb\u7a0b\u5185\u6ce8\u518c\u4e0e\u8c03\u7528**\u4e2d\u5fc3\u3002Planner \u4ea7\u51fa\u7684\u6b65\u9aa4\uff08<code>{\"type\":\"tool\", ...}</code>\uff09\u4f1a\u4ea4\u7ed9\u5b83\u6267\u884c\u3002</p> <ul> <li>\u8f93\u5165\uff1a\u7b26\u5408 MCP \u7ea6\u5b9a\u7684\u5de5\u5177\u5bf9\u8c61\uff08\u81f3\u5c11\u5305\u542b <code>name/description/input_schema/call(arguments)</code>\uff09</li> <li>\u80fd\u529b\uff1a\u6ce8\u518c\u3001\u5217\u4e3e\uff08\u4f9b Planner \u4f7f\u7528\uff09\u3001\u6309\u540d\u8c03\u7528</li> <li>\u4e0d\u5305\u542b\uff1a\u8fdc\u7a0b\u4f20\u8f93\u534f\u8bae\uff08\u5982 JSON-RPC over stdio/websocket\uff09\u4e0e\u6743\u9650/\u6c99\u7bb1\uff1b\u82e5\u9700\u8fdc\u7a0b\u5de5\u5177\uff0c\u9700\u5199 Adapter \u5c01\u88c5\u6210\u540c\u4e00\u63a5\u53e3</li> </ul>"},{"location":"librarys/agents/components/action/#1","title":"1. \u8bbe\u8ba1\u76ee\u6807","text":"<ul> <li>MCP \u7ea6\u5b9a\uff1a\u5bf9\u9f50 <code>name / description / input_schema / call(arguments)</code> \u56db\u8981\u7d20</li> <li>\u4f4e\u8026\u5408\uff1a\u4e0d\u5173\u5fc3\u5de5\u5177\u5185\u90e8\u5b9e\u73b0\uff08\u672c\u5730\u51fd\u6570/HTTP/\u5916\u90e8 MCP Server \u5747\u53ef\uff09</li> <li>\u9762\u5411 Planner\uff1a<code>describe()</code> \u63d0\u4f9b\u7b80\u6d01\u7684\u5de5\u5177\u6e05\u5355\u7ed9 LLM \u4f7f\u7528</li> <li>\u7b80\u6d01\u7a33\u5b9a\uff1a\u6700\u5c0f API\uff0c\u4fbf\u4e8e\u6269\u5c55\uff08\u6821\u9a8c\u3001\u6743\u9650\u3001\u9065\u6d4b\u540e\u7eed\u518d\u52a0\uff09</li> </ul>"},{"location":"librarys/agents/components/action/#2","title":"2. \u63a5\u53e3\u7b80\u4ecb","text":"mcp_registry.py<pre><code>class MCPRegistry:\n    def __init__(self) -&gt; None: ...\n\n    def register(self, tool_obj: Any) -&gt; None:\n        \"\"\"\u6ce8\u518c\u4e00\u4e2a\u5de5\u5177\u5bf9\u8c61\u3002\u8981\u6c42\u81f3\u5c11\u6709 `name` \u4e0e `call(arguments)`\uff1b\n        \u82e5\u6709 `description` \u4e0e `input_schema` \u5219\u4f1a\u88ab `describe()` \u66b4\u9732\u7ed9 Planner\u3002\"\"\"\n\n    def describe(self) -&gt; Dict[str, Dict[str, Any]]:\n        \"\"\"\u8fd4\u56de `{name: {description, input_schema}}`\uff0c\u4f9b Planner \u6784\u9020\u8ba1\u5212\u65f6\u53c2\u8003\u3002\"\"\"\n\n    def call(self, name: str, arguments: Dict[str, Any]) -&gt; Any:\n        \"\"\"\u6309\u540d\u8c03\u7528\u5de5\u5177\uff1a`tools[name].call(arguments)`\u3002\u672a\u6ce8\u518c\u5219\u629b `KeyError`\u3002\"\"\"\n</code></pre>"},{"location":"librarys/agents/components/action/#3-mcp","title":"3. \u5de5\u5177\u5bf9\u8c61\u7684\u6700\u5c0f\u7ea6\u5b9a\uff08MCP \u98ce\u683c\uff09","text":"<p>\u4e00\u4e2a\u53ef\u88ab\u6ce8\u518c\u7684\u5de5\u5177\u81f3\u5c11\u9700\u8981\uff1a</p> <ul> <li><code>name: str</code> \u2014\u2014 \u5de5\u5177\u552f\u4e00\u540d</li> <li><code>description: str</code> \u2014\u2014 \u7528\u4e8e Planner \u6311\u9009\u5de5\u5177\uff08\u53ef\u9009\uff0c\u4f46\u5f3a\u70c8\u5efa\u8bae\uff09</li> <li><code>input_schema: dict</code> \u2014\u2014 JSON Schema \u7684\u5165\u53c2\u5951\u7ea6\uff08\u53ef\u9009\u4f46\u5efa\u8bae\uff0cPlanner \u4f1a\u636e\u6b64\u7ec4\u88c5\u53c2\u6570\uff09</li> <li><code>call(arguments: Dict[str, Any]) -&gt; Any</code> \u2014\u2014 \u6267\u884c\u5165\u53e3</li> </ul> \u793a\u4f8b\uff1a\u672c\u5730 Calculator \u5de5\u5177<pre><code>class Calculator:\n    name = \"calculator\"\n    description = \"Evaluate a simple arithmetic expression\"\n    input_schema = {\n        \"type\": \"object\",\n        \"properties\": {\"expr\": {\"type\": \"string\"}},\n        \"required\": [\"expr\"]\n    }\n\n    def call(self, arguments: dict) -&gt; dict:\n        expr = arguments[\"expr\"]\n        out = str(eval(expr, {\"__builtins__\": {}}))  # \u6f14\u793a\u7528\uff1a\u5b9e\u9645\u8bf7\u52a0\u6c99\u7bb1\n        return {\"output\": out}\n</code></pre> <p>\u80fd\u5426\u76f4\u63a5\u8c03\u7528\u5176\u5b83 MCP \u89c4\u8303\u7684\u5de5\u5177\uff1f</p> <p>\u53ef\u4ee5\uff0c\u53ea\u8981\u4f60\u628a\u5b83\u4eec**\u9002\u914d**\u6210\u4e0a\u8ff0\u63a5\u53e3\u5c31\u80fd <code>register()</code>\u3002\u5bf9\u4e8e**\u8fdb\u7a0b\u5185 Python \u5de5\u5177**\uff0c\u76f4\u63a5\u5b9e\u73b0 <code>call()</code> \u5373\u53ef\uff1b\u5bf9\u4e8e**\u8fdc\u7a0b MCP Server**\uff0c\u53ef\u5199\u4e00\u4e2a Adapter\uff0c\u628a\u8fdc\u7a0b\u8c03\u7528\u5c01\u88c5\u8fdb <code>call(arguments)</code>\u3002</p>"},{"location":"librarys/agents/components/action/#4","title":"4. \u8fdb\u7a0b\u5185\u6ce8\u518c\u4e0e\u8c03\u7528\uff08\u672c\u5730\u5de5\u5177\uff09","text":"<pre><code>from sage.libs.agents.action.mcp_registry import MCPRegistry\n\n# 1) \u5b9e\u4f8b\u5316\u6ce8\u518c\u8868\nreg = MCPRegistry()\n\n# 2) \u6ce8\u518c\u5de5\u5177\nreg.register(Calculator())\n\n# 3) \u63d0\u4f9b\u7ed9 Planner \u7684\u5de5\u5177\u6e05\u5355\uff08MCP \u4e09\u8981\u7d20\uff09\nprint(reg.describe())\n# {\n#   \"calculator\": {\n#       \"description\": \"Evaluate a simple arithmetic expression\",\n#       \"input_schema\": { ... }\n#   }\n# }\n\n# 4) \u8fd0\u884c\u65f6\u6309\u8ba1\u5212\u8c03\u7528\nres = reg.call(\"calculator\", {\"expr\": \"21*2+5\"})\nprint(res)  # {\"output\": \"47\"}\n</code></pre>"},{"location":"librarys/agents/components/action/#5-mcp-adapter","title":"5. \u9002\u914d\u201c\u8fdc\u7a0b MCP \u670d\u52a1\u201d\u7684\u901a\u7528 Adapter\uff08\u53ef\u9009\uff09","text":"<p>\u5982\u679c\u4f60\u7684\u5de5\u5177\u8fd0\u884c\u5728**\u72ec\u7acb\u7684 MCP Server**\uff08\u4f8b\u5982\u8d70 JSON-RPC over stdio / WebSocket\uff09\uff0c\u4f60\u53ef\u4ee5\u5199\u4e00\u4e2a Adapter\uff1a - \u5bf9\u5916\u66b4\u9732 <code>name/description/input_schema/call()</code>\uff1b - \u5728 <code>call()</code> \u5185\u90e8\u5b8c\u6210\u8fdc\u7a0b JSON-RPC \u8bf7\u6c42/\u54cd\u5e94\uff1b - \u8fd9\u6837\u5c31\u80fd\u4e0e\u672c\u5730\u5de5\u5177\u5728 <code>MCPRegistry</code> \u4e2d**\u540c\u6784**\u3002</p> \u793a\u4f8b\uff1a\u8fdc\u7a0b MCP \u5de5\u5177\u9002\u914d\u5668\uff08\u4f2a\u5b9e\u73b0\uff09<pre><code>import json, subprocess, uuid\n\nclass RemoteMCPAdapter:\n    def __init__(self, name: str, description: str, input_schema: dict, server_cmd: list[str]):\n        self.name = name\n        self.description = description\n        self.input_schema = input_schema\n        self._server_cmd = server_cmd  # \u4f8b\u5982 [\"node\", \"server.js\"] \u6216\u4efb\u610f\u53ef\u542f\u52a8\u7684 MCP server\n\n    def _rpc(self, method: str, params: dict) -&gt; dict:\n        # \u8fd9\u91cc\u4ec5\u793a\u610f\uff1a\u771f\u5b9e\u5b9e\u73b0\u5e94\u7ef4\u62a4\u957f\u8fde\u63a5\uff08stdio/websocket\uff09\u5e76\u505a\u5e76\u53d1/\u9519\u8bef\u5904\u7406\n        req = {\"jsonrpc\": \"2.0\", \"id\": uuid.uuid4().hex, \"method\": method, \"params\": params}\n        proc = subprocess.run(self._server_cmd, input=json.dumps(req).encode(), capture_output=True)\n        resp = json.loads(proc.stdout.decode() or \"{}\")\n        if \"error\" in resp:\n            raise RuntimeError(resp[\"error\"])  # \u540c\u6b65\u629b\u9519\n        return resp.get(\"result\", {})\n\n    def call(self, arguments: dict) -&gt; dict:\n        return self._rpc(method=self.name, params=arguments)\n\n# \u7528\u6cd5\uff1a\n# remote = RemoteMCPAdapter(\n#     name=\"web_search\",\n#     description=\"Search the web\",\n#     input_schema={\"type\":\"object\",\"properties\":{\"query\":{\"type\":\"string\"}},\"required\":[\"query\"]},\n#     server_cmd=[\"python\", \"web_search_server.py\"]\n# )\n# reg.register(remote)\n</code></pre> <p>\u5173\u4e8e\u4f20\u8f93\u5c42</p> <p><code>MCPRegistry</code> \u672c\u8eab**\u4e0d\u5b9e\u73b0** MCP \u7684\u4f20\u8f93\u5c42\uff08\u5982 JSON-RPC over stdio/websocket\uff09\uff1b \u5b83\u53ea\u8d1f\u8d23**\u5bf9\u8c61\u6ce8\u518c\u4e0e\u8c03\u7528**\u3002\u82e5\u8981\u8fde\u63a5**\u5916\u90e8** MCP Server\uff0c\u8bf7\u7528\u4e0a\u9762\u7684 Adapter \u6216\u96c6\u6210\u4f60\u73b0\u6709\u7684\u4f20\u8f93\u5ba2\u6237\u7aef\u3002</p>"},{"location":"librarys/agents/components/action/#6-plannerruntime","title":"6. \u4e0e Planner/Runtime \u7684\u534f\u4f5c","text":"<pre><code># Planner \u4fa7\uff1a\n# tools_for_planner = reg.describe()\n# -&gt; \u4f20\u7ed9 LLM \u4ee5\u751f\u6210 {\"type\":\"tool\",\"name\":\"...\",\"arguments\":{...}}\n\n# Runtime \u4fa7\uff1a\n# for step in plan_steps:\n#     if step[\"type\"] == \"tool\":\n#         result = reg.call(step[\"name\"], step.get(\"arguments\", {}))\n#     elif step[\"type\"] == \"reply\":\n#         ...\n</code></pre>"},{"location":"librarys/agents/components/action/#7","title":"7. \u9519\u8bef\u5904\u7406\u4e0e\u8fd4\u56de\u7ea6\u5b9a","text":"<ul> <li><code>register()</code>\uff1a\u82e5\u5de5\u5177\u7f3a\u5c11 <code>name</code> \u6216 <code>call</code>\uff0c\u629b <code>TypeError</code></li> <li><code>call(name, ...)</code>\uff1a\u672a\u6ce8\u518c\u5de5\u5177\u629b <code>KeyError</code></li> <li>\u5de5\u5177\u5185\u90e8\u9519\u8bef\uff1a\u7531\u5de5\u5177\u81ea\u8eab\u629b\u51fa\u5f02\u5e38\uff1b\u4e0a\u5c42 Runtime \u53ef\u6355\u83b7\u5e76\u89e6\u53d1 \u91cd\u89c4\u5212 \u6216 \u7528\u6237\u6f84\u6e05</li> </ul> <p>\u7edf\u4e00\u8fd4\u56de\u7ed3\u6784\uff08\u5efa\u8bae\uff09</p> <p>\u4e3a\u4e86\u4fbf\u4e8e\u8bb0\u5f55\u4e0e\u5c55\u793a\uff0c\u5efa\u8bae\u5de5\u5177\u8fd4\u56de <code>{\"output\": Any, \"meta\": {...}}</code> \u7684\u7ed3\u6784\uff1b \u4e0d\u5f3a\u5236\uff0c\u4f46\u80fd\u5e2e\u52a9 Runtime/Memory \u8bb0\u5f55 <code>meta</code>\uff08\u8017\u65f6\u3001\u4ee3\u4ef7\u3001\u547d\u4e2d\u7f13\u5b58\u7b49\uff09\u3002</p>"},{"location":"librarys/agents/components/action/#8-pytest","title":"8. \u5355\u5143\u6d4b\u8bd5\u5efa\u8bae\uff08pytest\uff09","text":"<pre><code>import pytest\nfrom sage.libs.agents.action.mcp_registry import MCPRegistry\n\nclass EchoTool:\n    name = \"echo\"\n    description = \"echo back\"\n    input_schema = {\"type\":\"object\",\"properties\":{\"text\":{\"type\":\"string\"}},\"required\":[\"text\"]}\n    def call(self, args):\n        return {\"output\": args[\"text\"]}\n\nclass BadTool:\n    pass\n\ndef test_register_and_describe():\n    reg = MCPRegistry()\n    reg.register(EchoTool())\n    desc = reg.describe()\n    assert \"echo\" in desc and \"input_schema\" in desc[\"echo\"]\n\ndef test_call_success():\n    reg = MCPRegistry(); reg.register(EchoTool())\n    assert reg.call(\"echo\", {\"text\":\"hi\"}) == {\"output\": \"hi\"}\n\ndef test_call_missing_tool():\n    reg = MCPRegistry()\n    with pytest.raises(KeyError):\n        reg.call(\"nope\", {})\n\ndef test_register_invalid():\n    reg = MCPRegistry()\n    with pytest.raises(TypeError):\n        reg.register(BadTool())\n</code></pre>"},{"location":"librarys/agents/components/action/#9","title":"9. \u672a\u6765\u6269\u5c55","text":"<ul> <li>\u53c2\u6570\u6821\u9a8c\uff1a\u57fa\u4e8e <code>input_schema</code> \u505a\u4e25\u683c JSONSchema \u9a8c\u8bc1\u4e0e\u9ed8\u8ba4\u503c\u5408\u5e76</li> <li>\u6743\u9650\u63a7\u5236\uff1a\u5de5\u5177\u767d\u540d\u5355/\u9ed1\u540d\u5355\uff0c\u6700\u5c0f\u6743\u9650\uff08\u6700\u91cd\u8981\u7684\u5b89\u5168\u57fa\u7ebf\uff09</li> <li>\u8d85\u65f6\u4e0e\u91cd\u8bd5\uff1a\u5728\u6ce8\u518c\u8868\u5c42\u9762\u63d0\u4f9b\u7edf\u4e00\u8d85\u65f6/\u91cd\u8bd5\u7b56\u7565</li> <li>\u9065\u6d4b\u4e0e\u65e5\u5fd7\uff1a\u7edf\u4e00\u8bb0\u5f55 <code>call</code> \u7684\u8017\u65f6/\u9519\u8bef\u7801/\u4ee3\u4ef7\uff08\u4fbf\u4e8e\u8bc4\u4f30\u4e0e\u56de\u653e\uff09</li> <li>\u5e76\u53d1\u4e0e\u961f\u5217\uff1a\u5bf9\u6162\u5de5\u5177\u63d0\u4f9b\u5f02\u6b65\u63a5\u53e3\u6216\u961f\u5217\u5316</li> </ul>"},{"location":"librarys/agents/components/mcp_server/","title":"MCP Server \u4f7f\u7528\u6587\u6863","text":"<p>\u5b9a\u4f4d</p> <p>MCP Server \u662f\u4e00\u4e2a\u7edf\u4e00\u7684\u5de5\u5177\u670d\u52a1\u7aef\uff0c\u5b9e\u73b0\u4e86 <code>list_tools</code> \u548c <code>call_tool</code> \u4e24\u4e2a\u6838\u5fc3\u63a5\u53e3\uff0c \u652f\u6301 \u672c\u5730\u5de5\u5177\u6ce8\u518c \u4e0e \u8fdc\u7a0b MCP \u670d\u52a1\u6302\u8f7d\uff0c\u4f7f\u5f97 Agent \u53ef\u4ee5\u8c03\u7528\u672c\u5730\u548c\u8fdc\u7a0b\u7684\u5de5\u5177\u3002</p>"},{"location":"librarys/agents/components/mcp_server/#1","title":"1. \u529f\u80fd\u6982\u8ff0","text":"<ul> <li>\u672c\u5730\u5de5\u5177\u6ce8\u518c\uff1a\u652f\u6301\u901a\u8fc7 Python \u6a21\u5757\u8def\u5f84\u52a8\u6001\u52a0\u8f7d\u5de5\u5177\u7c7b\u5e76\u6ce8\u518c\u3002</li> <li>\u8fdc\u7a0b MCP \u6302\u8f7d\uff1a\u652f\u6301\u5c06\u5176\u4ed6 MCP \u670d\u52a1\u7684\u5de5\u5177\u6620\u5c04\u4e3a\u672c\u5730\u4ee3\u7406\u5de5\u5177\uff0c\u5e26\u524d\u7f00\u533a\u5206\u3002</li> <li>\u7edf\u4e00\u8c03\u7528\u63a5\u53e3\uff1a\u6240\u6709\u5de5\u5177\uff08\u672c\u5730/\u8fdc\u7a0b\u4ee3\u7406\uff09\u90fd\u53ef\u4ee5\u901a\u8fc7 <code>call_tool</code> \u8c03\u7528\u3002</li> <li>\u53c2\u6570\u6821\u9a8c\uff1a\u57fa\u4e8e MCP <code>input_schema.required</code> \u5b57\u6bb5\u8fdb\u884c\u5fc5\u586b\u53c2\u6570\u6821\u9a8c\u3002</li> <li>\u5065\u5eb7\u68c0\u67e5\uff1a\u63d0\u4f9b <code>/health</code> \u63a5\u53e3\u8fd4\u56de\u5f53\u524d\u6ce8\u518c\u5de5\u5177\u548c\u8fdc\u7a0b MCP \u7684\u6570\u91cf\u3002</li> </ul>"},{"location":"librarys/agents/components/mcp_server/#2","title":"2. \u63a5\u53e3\u8bbe\u8ba1","text":""},{"location":"librarys/agents/components/mcp_server/#21-json-rpc","title":"2.1 JSON-RPC \u57fa\u7840\u683c\u5f0f","text":"<p>\u8bf7\u6c42\uff1a <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"req-id\",\n  \"method\": \"method_name\",\n  \"params\": {...}\n}\n</code></pre></p> <p>\u54cd\u5e94\uff1a <pre><code>{\n  \"jsonrpc\": \"2.0\",\n  \"id\": \"req-id\",\n  \"result\": {...},\n  \"error\": null\n}\n</code></pre></p>"},{"location":"librarys/agents/components/mcp_server/#22","title":"2.2 \u652f\u6301\u7684\u65b9\u6cd5","text":""},{"location":"librarys/agents/components/mcp_server/#1-list_tools","title":"(1) list_tools","text":"<ul> <li>\u63cf\u8ff0\uff1a\u5217\u51fa\u5f53\u524d\u6240\u6709\u53ef\u7528\u5de5\u5177\u3002</li> <li>\u793a\u4f8b\u8bf7\u6c42\uff1a <pre><code>{\n  \"jsonrpc\": \"2.0\", \"id\": \"l0\", \"method\": \"list_tools\", \"params\": {}\n}\n</code></pre></li> <li>\u54cd\u5e94\u793a\u4f8b\uff1a <pre><code>{\n  \"jsonrpc\": \"2.0\", \"id\": \"l0\",\n  \"result\": {\n    \"translator\": {\n      \"description\": \"Translate English text to Chinese\",\n      \"input_schema\": {\"type\": \"object\", \"properties\": {\"text\": {\"type\": \"string\"}}, \"required\": [\"text\"]}\n    }\n  }\n}\n</code></pre></li> </ul>"},{"location":"librarys/agents/components/mcp_server/#2-call_tool","title":"(2) call_tool","text":"<ul> <li>\u63cf\u8ff0\uff1a\u8c03\u7528\u67d0\u4e2a\u5de5\u5177\u3002</li> <li>\u793a\u4f8b\u8bf7\u6c42\uff1a <pre><code>{\n  \"jsonrpc\": \"2.0\", \"id\": \"c1\", \"method\": \"call_tool\",\n  \"params\": {\"name\": \"translator\", \"arguments\": {\"text\": \"Hello world\"}}\n}\n</code></pre></li> <li>\u54cd\u5e94\u793a\u4f8b\uff1a <pre><code>{\n  \"jsonrpc\": \"2.0\", \"id\": \"c1\", \"result\": {\"translated\": \"[\u7ffb\u8bd1\u7ed3\u679c] Hello world\"}\n}\n</code></pre></li> </ul>"},{"location":"librarys/agents/components/mcp_server/#3-register_tool_from_path","title":"(3) register_tool_from_path","text":"<ul> <li>\u63cf\u8ff0\uff1a\u901a\u8fc7 Python \u8def\u5f84\u52a8\u6001\u6ce8\u518c\u672c\u5730\u5de5\u5177\u7c7b\u3002</li> <li>\u793a\u4f8b\u8bf7\u6c42\uff1a <pre><code>{\n  \"jsonrpc\": \"2.0\", \"id\": \"r1\", \"method\": \"register_tool_from_path\",\n  \"params\": {\"module\": \"other_pkg.tools.my_tool\", \"class\": \"MyCoolTool\", \"init_kwargs\": {}}\n}\n</code></pre></li> <li>\u54cd\u5e94\u793a\u4f8b\uff1a <pre><code>{\"jsonrpc\": \"2.0\", \"id\": \"r1\", \"result\": {\"ok\": true, \"name\": \"MyCoolTool\"}}\n</code></pre></li> </ul>"},{"location":"librarys/agents/components/mcp_server/#4-mount_remote_mcp","title":"(4) mount_remote_mcp","text":"<ul> <li>\u63cf\u8ff0\uff1a\u6302\u8f7d\u8fdc\u7a0b MCP \u670d\u52a1\uff0c\u5c06\u5bf9\u65b9\u5de5\u5177\u6620\u5c04\u4e3a\u672c\u5730\u4ee3\u7406\u5de5\u5177\u3002</li> <li>\u793a\u4f8b\u8bf7\u6c42\uff1a <pre><code>{\n  \"jsonrpc\": \"2.0\", \"id\": \"m1\", \"method\": \"mount_remote_mcp\",\n  \"params\": {\"adapter_id\": \"t1\", \"base_url\": \"http://upstream:9001\", \"prefix\": \"up_\"}\n}\n</code></pre></li> <li>\u54cd\u5e94\u793a\u4f8b\uff1a <pre><code>{\"jsonrpc\": \"2.0\", \"id\": \"m1\", \"result\": {\"ok\": true, \"mounted\": [\"up_translator\"]}}\n</code></pre></li> </ul>"},{"location":"librarys/agents/components/mcp_server/#5-refresh_remote_mcp","title":"(5) refresh_remote_mcp","text":"<ul> <li>\u63cf\u8ff0\uff1a\u5237\u65b0\u8fdc\u7a0b MCP \u5de5\u5177\u6e05\u5355\uff0c\u66f4\u65b0\u4ee3\u7406\u3002</li> <li>\u793a\u4f8b\u8bf7\u6c42\uff1a <pre><code>{\"jsonrpc\": \"2.0\", \"id\": \"rf1\", \"method\": \"refresh_remote_mcp\", \"params\": {\"adapter_id\": \"t1\", \"prefix\": \"up_\"}}\n</code></pre></li> </ul>"},{"location":"librarys/agents/components/mcp_server/#6-unmount_remote_mcp","title":"(6) unmount_remote_mcp","text":"<ul> <li>\u63cf\u8ff0\uff1a\u5378\u8f7d\u8fdc\u7a0b MCP\uff0c\u6e05\u9664\u5bf9\u5e94\u7684\u4ee3\u7406\u5de5\u5177\u3002</li> <li>\u793a\u4f8b\u8bf7\u6c42\uff1a <pre><code>{\"jsonrpc\": \"2.0\", \"id\": \"u1\", \"method\": \"unmount_remote_mcp\", \"params\": {\"adapter_id\": \"t1\"}}\n</code></pre></li> </ul>"},{"location":"librarys/agents/components/mcp_server/#3","title":"3. \u90e8\u7f72\u65b9\u5f0f","text":""},{"location":"librarys/agents/components/mcp_server/#_1","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<pre><code>pip install fastapi uvicorn pydantic requests\n</code></pre>"},{"location":"librarys/agents/components/mcp_server/#_2","title":"\u542f\u52a8\u670d\u52a1","text":"<pre><code>uvicorn mcp_server:app --host 0.0.0.0 --port 9000\n</code></pre>"},{"location":"librarys/agents/components/mcp_server/#_3","title":"\u5065\u5eb7\u68c0\u67e5","text":"<p><pre><code>curl http://localhost:9000/health\n</code></pre> \u8fd4\u56de\uff1a <pre><code>{\"ok\": true, \"tools\": 0, \"remotes\": 0}\n</code></pre></p>"},{"location":"librarys/agents/components/mcp_server/#4","title":"4. \u4f7f\u7528\u793a\u4f8b","text":""},{"location":"librarys/agents/components/mcp_server/#_4","title":"\u672c\u5730\u5de5\u5177\u8c03\u7528\u6d41\u7a0b","text":"<ol> <li>\u6ce8\u518c\u5de5\u5177\uff1a <pre><code>curl -s http://localhost:9000/jsonrpc -H \"Content-Type: application/json\" -d '{\n  \"jsonrpc\":\"2.0\",\"id\":\"r1\",\"method\":\"register_tool_from_path\",\n  \"params\":{\"module\":\"my_pkg.tools\",\"class\":\"MyTool\",\"init_kwargs\":{}}\n}'\n</code></pre></li> <li>\u8c03\u7528\u5de5\u5177\uff1a <pre><code>curl -s http://localhost:9000/jsonrpc -H \"Content-Type: application/json\" -d '{\n  \"jsonrpc\":\"2.0\",\"id\":\"c1\",\"method\":\"call_tool\",\n  \"params\":{\"name\":\"MyTool\",\"arguments\":{\"x\":42}}\n}'\n</code></pre></li> </ol>"},{"location":"librarys/agents/components/mcp_server/#_5","title":"\u8fdc\u7a0b\u5de5\u5177\u8c03\u7528\u6d41\u7a0b","text":"<ol> <li>\u6302\u8f7d\u8fdc\u7a0b MCP\uff1a <pre><code>curl -s http://localhost:9000/jsonrpc -H \"Content-Type: application/json\" -d '{\n  \"jsonrpc\":\"2.0\",\"id\":\"m1\",\"method\":\"mount_remote_mcp\",\n  \"params\":{\"adapter_id\":\"t1\",\"base_url\":\"http://upstream:9001\",\"prefix\":\"up_\"}\n}'\n</code></pre></li> <li>\u8c03\u7528\u4ee3\u7406\u5de5\u5177\uff1a <pre><code>curl -s http://localhost:9000/jsonrpc -H \"Content-Type: application/json\" -d '{\n  \"jsonrpc\":\"2.0\",\"id\":\"c2\",\"method\":\"call_tool\",\n  \"params\":{\"name\":\"up_translator\",\"arguments\":{\"text\":\"Hello world\"}}\n}'\n</code></pre></li> </ol>"},{"location":"librarys/agents/components/mcp_server/#5","title":"5. \u6269\u5c55\u65b9\u5411","text":"<ul> <li>\u5b8c\u6574 JSON Schema \u6821\u9a8c\uff1a\u76ee\u524d\u53ea\u6821\u9a8c\u5fc5\u586b\u53c2\u6570\uff0c\u53ef\u4ee5\u63a5\u5165 <code>jsonschema</code>\u3002</li> <li>\u6743\u9650\u63a7\u5236\uff1a\u4e3a\u4e0d\u540c\u5ba2\u6237\u7aef\u914d\u7f6e\u8bbf\u95ee\u4ee4\u724c\uff0c\u9650\u5236\u53ef\u7528\u5de5\u5177\u3002</li> <li>\u65e5\u5fd7\u4e0e\u76d1\u63a7\uff1a\u8bb0\u5f55\u8c03\u7528\u8017\u65f6\u3001\u9519\u8bef\u7387\uff0c\u652f\u6301 Prometheus \u6307\u6807\u3002</li> <li>\u591a\u534f\u8bae\u652f\u6301\uff1a\u9664\u4e86 HTTP\uff0c\u8fd8\u53ef\u4ee5\u652f\u6301 WebSocket / stdio\u3002</li> </ul>"},{"location":"librarys/agents/components/mcp_server/#6","title":"6. \u603b\u7ed3","text":"<p>MCP Server \u63d0\u4f9b\u4e86\u4e00\u4e2a \u672c\u5730+\u8fdc\u7a0b\u5de5\u5177\u7edf\u4e00\u8c03\u7528\u5e73\u53f0\uff0c - Agent \u53ea\u9700\u901a\u8fc7 <code>list_tools</code> \u83b7\u53d6\u6e05\u5355\uff0c - \u518d\u901a\u8fc7 <code>call_tool</code> \u8c03\u7528\uff0c\u65e0\u9700\u5173\u5fc3\u5de5\u5177\u5b9e\u73b0\u7ec6\u8282\u3002</p> <p>\u8fd9\u6837\uff0c\u4f60\u4e0d\u4ec5\u53ef\u4ee5\u5feb\u901f\u6ce8\u518c\u672c\u5730 Python \u5de5\u5177\uff0c\u8fd8\u80fd\u65e0\u7f1d\u8c03\u7528\u4ed6\u4eba\u63d0\u4f9b\u7684\u8fdc\u7a0b MCP \u5de5\u5177\u3002</p>"},{"location":"librarys/agents/components/memory/","title":"Memory \u7ec4\u4ef6\u8bbe\u8ba1\u6587\u6863","text":"<p>\u5b9a\u4f4d</p> <p>Memory \u662f Agent \u7684\u201c\u8bb0\u5fc6\u7cfb\u7edf\u201d\uff0c\u8d1f\u8d23\u5b58\u50a8\u3001\u68c0\u7d22\u548c\u7ba1\u7406\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u7684\u4fe1\u606f\u3002\u5b83\u4e3a Agent \u63d0\u4f9b\u201c\u77ed\u671f\u5de5\u4f5c\u8bb0\u5fc6\u201d\u3001\u201c\u957f\u671f\u8bed\u4e49\u8bb0\u5fc6\u201d\u548c\u201c\u60c5\u8282\u8bb0\u5fc6\u201d\u7684\u80fd\u529b\uff0c\u652f\u6301\u4e0a\u4e0b\u6587\u4fdd\u6301\u3001\u8de8\u4f1a\u8bdd\u5173\u8054\u548c\u77e5\u8bc6\u6c89\u6dc0\u3002</p>"},{"location":"librarys/agents/components/memory/#1","title":"1. \u8bbe\u8ba1\u76ee\u6807","text":"<ul> <li>\u7edf\u4e00\u63a5\u53e3\uff1a\u62bd\u8c61\u51fa\u9ad8\u7ea7 API\uff0c\u5c4f\u853d\u5e95\u5c42 KV / VDB / Graph \u7684\u5dee\u5f02\u3002</li> <li>\u591a\u6a21\u5b58\u50a8\uff1a\u540c\u65f6\u652f\u6301\u952e\u503c\u5b58\u50a8\u3001\u5411\u91cf\u6570\u636e\u5e93\u3001\u77e5\u8bc6\u56fe\u8c31\u3002</li> <li>\u53ef\u6269\u5c55\u6027\uff1a\u5141\u8bb8\u66ff\u6362 ChromaDB\u3001Milvus \u7b49\u4e0d\u540c VDB \u5b9e\u73b0\u3002</li> <li>\u589e\u5f3a\u68c0\u7d22\uff1a\u7ed3\u5408\u8bed\u4e49\u76f8\u4f3c\u5ea6\u3001\u5143\u6570\u636e\u8fc7\u6ee4\u3001\u77e5\u8bc6\u56fe\u8c31\u4e0a\u4e0b\u6587\u3002</li> <li>\u4e0a\u4e0b\u6587\u8bb0\u5fc6\uff1a\u652f\u6301 session \u7ea7\u522b\u7684\u77ed\u671f\u8bb0\u5fc6\uff0c\u8de8 session \u7684\u957f\u671f\u8bb0\u5fc6\u3002</li> </ul>"},{"location":"librarys/agents/components/memory/#2","title":"2. \u6570\u636e\u6a21\u578b","text":"memory/schema.py<pre><code>from typing import Literal, Dict, Any, Optional\n\n# \u8bb0\u5fc6\u7c7b\u522b\nMemoryKind = Literal[\"working\", \"episodic\", \"semantic\"]\n\nclass MemoryRecord(Dict[str, Any]):\n    id: str            # \u8bb0\u5fc6\u552f\u4e00ID\n    content: str       # \u6587\u672c\u5185\u5bb9\n    vector: Optional[list[float]]\n    kind: MemoryKind   # \u8bb0\u5fc6\u7c7b\u578b\n    metadata: Dict[str, Any]\n    timestamp: float\n</code></pre>"},{"location":"librarys/agents/components/memory/#3","title":"3. \u6838\u5fc3\u63a5\u53e3","text":"memory/service.py<pre><code>class MemoryService(BaseService):\n    \"\"\"\n    \u8bb0\u5fc6\u7f16\u6392\u670d\u52a1\uff1a\u7edf\u4e00\u7ba1\u7406 KV / VDB / Graph\n    \"\"\"\n\n    def store_memory(self, content: str, vector: list[float], **kwargs) -&gt; str:\n        \"\"\"\u5b58\u50a8\u4e00\u6761\u8bb0\u5fc6\uff0c\u8fd4\u56de memory_id\"\"\"\n\n    def search_memories(self, query_vector: list[float], **kwargs) -&gt; list[MemoryRecord]:\n        \"\"\"\u57fa\u4e8e\u5411\u91cf\u68c0\u7d22\u76f8\u5173\u8bb0\u5fc6\"\"\"\n\n    def get_memory(self, memory_id: str) -&gt; Optional[MemoryRecord]:\n        \"\"\"\u83b7\u53d6\u6307\u5b9a\u8bb0\u5fc6\"\"\"\n\n    def delete_memory(self, memory_id: str) -&gt; bool:\n        \"\"\"\u5220\u9664\u6307\u5b9a\u8bb0\u5fc6\"\"\"\n\n    def get_session_memories(self, session_id: str, **kwargs) -&gt; dict:\n        \"\"\"\u83b7\u53d6\u67d0\u4e00\u4f1a\u8bdd\u4e0b\u7684\u5168\u90e8\u8bb0\u5fc6\"\"\"\n\n    def stats(self) -&gt; dict:\n        \"\"\"\u83b7\u53d6\u5e95\u5c42\u5b58\u50a8\u548c\u670d\u52a1\u7684\u7edf\u8ba1\u4fe1\u606f\"\"\"\n</code></pre>"},{"location":"librarys/agents/components/memory/#4","title":"4. \u8bb0\u5fc6\u5b58\u50a8\u7c7b\u578b","text":"\u7c7b\u578b \u63cf\u8ff0 \u4f7f\u7528\u573a\u666f <code>working</code> \u77ed\u671f\u5de5\u4f5c\u8bb0\u5fc6 \u5bf9\u8bdd\u4e0a\u4e0b\u6587\u3001\u5f53\u524d\u4efb\u52a1 <code>episodic</code> \u60c5\u8282\u8bb0\u5fc6 \u5355\u6b21\u4ea4\u4e92\u4e2d\u7684\u4e8b\u4ef6\u8bb0\u5f55 <code>semantic</code> \u957f\u671f\u8bed\u4e49\u8bb0\u5fc6 \u77e5\u8bc6\u5e93\u3001\u7ecf\u9a8c\u603b\u7ed3"},{"location":"librarys/agents/components/memory/#5","title":"5. \u5178\u578b\u6d41\u7a0b","text":""},{"location":"librarys/agents/components/memory/#_1","title":"\u5b58\u50a8\u8bb0\u5fc6","text":"<pre><code>memory_id = memory_service.store_memory(\n    content=\"\u7528\u6237\u95ee\u4e86\uff1a\u4ec0\u4e48\u662fRAG\uff1f\",\n    vector=embed(\"\u4ec0\u4e48\u662fRAG\uff1f\"),\n    session_id=\"sess-123\",\n    memory_type=\"conversation\",\n    metadata={\"source\": \"chat\"},\n    create_knowledge_graph=True,\n)\n</code></pre>"},{"location":"librarys/agents/components/memory/#_2","title":"\u68c0\u7d22\u8bb0\u5fc6","text":"<pre><code>results = memory_service.search_memories(\n    query_vector=embed(\"RAG\u7cfb\u7edf\u67b6\u6784\"),\n    session_id=\"sess-123\",\n    limit=5,\n    similarity_threshold=0.2,\n    include_graph_context=True,\n)\n</code></pre>"},{"location":"librarys/agents/components/memory/#_3","title":"\u83b7\u53d6\u4f1a\u8bdd\u8bb0\u5fc6","text":"<pre><code>session_data = memory_service.get_session_memories(\n    session_id=\"sess-123\",\n    memory_type=\"conversation\",\n    limit=20,\n    include_graph_analysis=True,\n)\n</code></pre>"},{"location":"librarys/agents/components/memory/#6-agent","title":"6. \u4e0e Agent \u7684\u5173\u7cfb","text":"<p>\u7528\u6cd5</p> <ul> <li>\u5728 Planner \u751f\u6210\u8ba1\u5212\u65f6\uff0c\u53ef\u4ece Memory \u4e2d\u68c0\u7d22\u76f8\u5173\u4e0a\u4e0b\u6587\u3002</li> <li>\u5728 Action \u6267\u884c\u5b8c\u5de5\u5177\u8c03\u7528\u540e\uff0c\u53ef\u4ee5\u5c06\u7ed3\u679c\u5199\u5165 Memory\u3002</li> <li>\u5728 Profile \u4e2d\u7684 goals\u3001tasks \u4e5f\u53ef\u4ee5\u901a\u8fc7 Memory \u8fdb\u884c\u6301\u4e45\u5316\u3002</li> </ul>"},{"location":"librarys/agents/components/memory/#7","title":"7. \u6269\u5c55\u65b9\u5411","text":"<ul> <li>\u8de8\u6a21\u6001\u8bb0\u5fc6\uff1a\u652f\u6301\u56fe\u50cf/\u97f3\u9891 embedding \u5b58\u50a8\u3002</li> <li>\u65f6\u95f4\u8870\u51cf\u673a\u5236\uff1a\u5bf9\u65e7\u8bb0\u5fc6\u8bbe\u7f6e\u6743\u91cd\u8870\u51cf\u3002</li> <li>\u5c42\u7ea7\u8bb0\u5fc6\uff1a\u7ed3\u5408 STM\uff08\u77ed\u65f6\uff09\u3001LTM\uff08\u957f\u65f6\uff09\u3001DCM\uff08\u51b3\u7b56\uff09\u67b6\u6784\u3002</li> <li>RAG \u96c6\u6210\uff1a\u76f4\u63a5\u628a Memory \u4f5c\u4e3a RAG \u68c0\u7d22\u5668\u7684\u6570\u636e\u6e90\u3002</li> </ul>"},{"location":"librarys/agents/components/planner/","title":"<code>LLMPlanner</code> \u7ec4\u4ef6\u8bbe\u8ba1\u6587\u6863","text":"<p>\u6a21\u5757\u8def\u5f84\uff1a<code>sage/libs/agents/planning/llm_planner.py</code></p> <p>\u5b9a\u4f4d</p> <p><code>LLMPlanner</code> \u8d1f\u8d23\u628a Profile + \u7528\u6237\u8bf7\u6c42 + \u5de5\u5177\u6e05\u5355(MCP) \u8f6c\u6362\u4e3a**\u53ef\u6267\u884c\u7684 JSON \u8ba1\u5212**\uff08PlanSteps\uff09\u3002 \u5b9e\u73b0\u76ee\u6807\u662f\uff1a\u7b80\u5355\u3001\u7a33\u5065\u3001\u6613\u63a5\u5165 \u2014\u2014 \u4e0d\u5f15\u5165\u590d\u6742\u7684\u72b6\u6001\u673a\uff0c\u53ea\u505a\u8ba1\u5212\u751f\u6210\u4e0e\u6700\u5c0f\u6821\u9a8c\u3002</p>"},{"location":"librarys/agents/components/planner/#1","title":"1. \u529f\u80fd\u6982\u8ff0","text":"<ul> <li>\u8f93\u5165\uff1a</li> <li><code>profile_system_prompt</code>\uff1a\u901a\u8fc7 <code>BaseProfile.render_system_prompt()</code> \u751f\u6210\u7684\u7cfb\u7edf\u63d0\u793a\u8bcd</li> <li><code>user_query</code>\uff1a\u7528\u6237\u95ee\u9898/\u9700\u6c42</li> <li><code>tools</code>\uff1aMCP \u98ce\u683c\u7684\u5de5\u5177\u5b57\u5178 <code>{name: {description, input_schema}}</code></li> <li>\u8f93\u51fa\uff1a</li> <li><code>List[PlanStep]</code>\uff08Python \u5b57\u5178\u5217\u8868\uff09\uff0c\u6ee1\u8db3 MCP \u89c4\u8303\uff1a<ul> <li><code>{\"type\":\"tool\",\"name\":\"...\",\"arguments\":{...}}</code> </li> <li>\u6216 <code>{\"type\":\"reply\",\"text\":\"...\"}</code></li> </ul> </li> <li>\u6838\u5fc3\u80fd\u529b\uff1a</li> <li>\u63d0\u793a\u8bcd\u6784\u9020\uff1a\u5c06 Profile\u3001\u7528\u6237\u95ee\u9898\u3001\u53ef\u7528\u5de5\u5177\u62fc\u63a5\u4e3a**\u5f3a\u7ea6\u675f\u63d0\u793a**\uff08\u53ea\u5141\u8bb8\u8f93\u51fa JSON \u6570\u7ec4\uff09</li> <li>\u5de5\u5177\u7b5b\u9009\uff1a\u57fa\u4e8e <code>name/description</code> \u7684\u6734\u7d20\u5173\u952e\u8bcd\u6253\u5206\uff0c\u4f20\u5165 Top-K \u5de5\u5177\uff0c\u964d\u4f4e\u8dd1\u504f</li> <li>JSON \u89e3\u6790\u5bb9\u9519\uff1a\u5265\u79bb\u4ee3\u7801\u56f4\u680f\u3001\u622a\u53d6 <code>[</code>\u2026<code>]</code> \u7247\u6bb5\u505a\u4e8c\u6b21\u89e3\u6790</li> <li>\u8f7b\u91cf\u5408\u6cd5\u5316\uff1a\u6821\u9a8c <code>type/name/arguments</code> \u4e0e <code>input_schema.required</code>\uff0c\u7f3a\u5931\u5219\u4e22\u5f03\u8be5\u6b65</li> <li>\u515c\u5e95\u7b56\u7565\uff1a\u5b8c\u5168\u4e0d\u53ef\u89e3\u6790\u65f6\u8fd4\u56de\u5355\u6b65 <code>reply</code></li> </ul>"},{"location":"librarys/agents/components/planner/#2","title":"2. \u4ee3\u7801\u7ed3\u6784","text":"\u6a21\u5757\u6982\u89c8<pre><code>PlanStep = Dict[str, Any]  # \u8ba1\u5212\u6b65\u9aa4\uff08MCP \u98ce\u683c\uff09\n\n# \u5de5\u5177 Top-K \u9009\u62e9\n_top_k_tools(user_query, tools, k=6) -&gt; Dict[str, Dict[str, Any]]\n\n# \u751f\u6210 LLM \u63d0\u793a\u8bcd\uff08\u5305\u542b Profile / Query / Tools\uff09\n_build_prompt(profile_system_prompt, user_query, tools_subset) -&gt; str\n\n# \u5265\u79bb ```fences```\n_strip_code_fences(text) -&gt; str\n\n# JSON \u5bb9\u9519\u89e3\u6790\uff1a\u5148 loads\uff1b\u5931\u8d25\u518d\u622a\u53d6 [ ... ] \u7247\u6bb5\n_coerce_json_array(text) -&gt; Optional[List[Any]]\n\n# \u8f7b\u91cf\u6821\u9a8c\uff1a\u7ed3\u6784\u6b63\u786e\u3001\u5de5\u5177\u5b58\u5728\u3001\u5fc5\u586b\u53c2\u6570\u9f50\u5168\n_validate_steps(steps, tools) -&gt; List[PlanStep]\n\nclass LLMPlanner:\n    def __init__(generator, max_steps=6, enable_repair=True, topk_tools=6): ...\n    def plan(profile_system_prompt, user_query, tools) -&gt; List[PlanStep]: ...\n</code></pre>"},{"location":"librarys/agents/components/planner/#3","title":"3. \u5173\u952e\u6d41\u7a0b","text":"<pre><code>sequenceDiagram\n  autonumber\n  participant C as Caller\n  participant P as LLMPlanner\n  participant G as Generator(LLM)\n\n  C-&gt;&gt;P: plan(profile_prompt, user_query, tools)\n  P-&gt;&gt;P: tools_subset = _top_k_tools(...)\n  P-&gt;&gt;P: prompt = _build_prompt(...)\n  P-&gt;&gt;G: execute([user_query, prompt])\n  G--&gt;&gt;P: raw_text\n  P-&gt;&gt;P: steps = _coerce_json_array(raw_text)\n  alt steps is None and enable_repair\n    P-&gt;&gt;G: execute([user_query, repair_prompt + raw])\n    G--&gt;&gt;P: raw_text2\n    P-&gt;&gt;P: steps = _coerce_json_array(raw_text2)\n  end\n  alt steps is None\n    P--&gt;&gt;C: [{\"type\":\"reply\",\"text\": raw[:2000]}]\n  else\n    P-&gt;&gt;P: steps = _validate_steps(steps, tools_subset)\n    P--&gt;&gt;C: steps[:max_steps]\n  end</code></pre>"},{"location":"librarys/agents/components/planner/#4","title":"4. \u63a5\u53e3\u4e0e\u53c2\u6570","text":""},{"location":"librarys/agents/components/planner/#41-llmplanner__init__","title":"4.1 <code>LLMPlanner.__init__</code>","text":"\u53c2\u6570 \u7c7b\u578b \u9ed8\u8ba4 \u8bf4\u660e <code>generator</code> <code>OpenAIGenerator | HFGenerator</code> \u2014 \u4f60\u7684 LLM \u751f\u6210\u5668\uff0c\u9700\u5b9e\u73b0 <code>.execute([user_query, prompt]) -&gt; (user_query, text)</code> <code>max_steps</code> <code>int</code> <code>6</code> \u8ba1\u5212\u6700\u5927\u6b65\u6570\uff08\u6700\u7ec8\u4f1a\u622a\u65ad\uff09 <code>enable_repair</code> <code>bool</code> <code>True</code> \u9996\u6b21\u89e3\u6790\u5931\u8d25\u65f6\uff0c\u662f\u5426\u8fdb\u884c\u4e00\u6b21\u201c\u7b80\u77ed\u4fee\u590d\u201d\u91cd\u8bd5 <code>topk_tools</code> <code>int</code> <code>6</code> \u4f20\u7ed9\u6a21\u578b\u7684\u5de5\u5177\u5b50\u96c6\u4e0a\u9650"},{"location":"librarys/agents/components/planner/#42-llmplannerplan","title":"4.2 <code>LLMPlanner.plan(...)</code>","text":"<pre><code>plan(profile_system_prompt: str, user_query: str, tools: Dict[str, Dict[str, Any]]) -&gt; List[PlanStep]\n</code></pre> <ul> <li>\u8fd4\u56de\uff1a<code>List[PlanStep]</code>\uff0c\u4fdd\u8bc1\u5217\u8868\u975e\u7a7a\uff1b\u82e5\u5168\u88ab\u8fc7\u6ee4\uff0c\u4f1a\u8fd4\u56de <code>[{\"type\":\"reply\",\"text\":\"\uff08\u8ba1\u5212\u4e0d\u53ef\u7528\uff09\"}]</code></li> </ul>"},{"location":"librarys/agents/components/planner/#5","title":"5. \u63d0\u793a\u8bcd\u89c4\u8303","text":"\u6838\u5fc3 Prompt \u7247\u6bb5\uff08\u7b80\u5316\uff09<pre><code>&lt;SYSTEM&gt;\nYou are a planning module. Produce a plan as a JSON array of steps.\nEach step is EITHER:\n  1) {\"type\":\"tool\",\"name\":\"&lt;tool_name&gt;\",\"arguments\":{...}}\n  2) {\"type\":\"reply\",\"text\":\"...\"}\nRules:\n- Use ONLY the provided tools.\n- Arguments MUST follow the tool JSON Schema.\n- Output ONLY the JSON array (no explanations / code fences).\n- Conclude with a reply step once done.\n&lt;/SYSTEM&gt;\n\n&lt;PROFILE&gt;\n{profile_system_prompt}\n&lt;/PROFILE&gt;\n\n&lt;USER_QUERY&gt;\n{user_query}\n&lt;/USER_QUERY&gt;\n\n&lt;AVAILABLE_TOOLS&gt;\n[{\"name\":..., \"description\":..., \"input_schema\":...}, ...]\n&lt;/AVAILABLE_TOOLS&gt;\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u8981 Top-K \u5de5\u5177\u5b50\u96c6\uff1f</p> <p>\u4f20\u5165\u8fc7\u591a\u5de5\u5177\u4f1a\u7a00\u91ca\u6ce8\u610f\u529b\u4e14\u589e\u52a0\u8dd1\u504f\u6982\u7387\u3002\u6734\u7d20\u7684\u5173\u952e\u8bcd\u5339\u914d\u80fd\u5728\u591a\u6570\u573a\u666f\u663e\u8457\u63d0\u5347\u7a33\u5b9a\u6027\uff08\u540e\u7eed\u53ef\u66ff\u6362\u4e3a\u5411\u91cf\u53ec\u56de\uff09\u3002</p>"},{"location":"librarys/agents/components/planner/#6","title":"6. \u8f7b\u91cf\u6821\u9a8c\u89c4\u5219","text":"<ul> <li>\u7ed3\u6784\uff1a\u6bcf\u4e2a\u6b65\u9aa4\u5fc5\u987b\u542b <code>type</code>\uff1b<code>reply</code> \u9700\u6709\u975e\u7a7a <code>text</code>\uff1b<code>tool</code> \u9700\u6709 <code>name</code> \u4e0e <code>arguments</code></li> <li>\u5de5\u5177\u5b58\u5728\u6027\uff1a<code>name</code> \u5fc5\u987b\u5728 <code>tools_subset</code> \u4e2d</li> <li>\u5fc5\u586b\u53c2\u6570\uff1a\u82e5 <code>input_schema.required</code> \u6709\u7f3a\u5931\u53c2\u6570\uff0c\u8be5\u6b65\u88ab\u4e22\u5f03\uff08\u53ef\u5728 Runtime \u505a\u201c\u6f84\u6e05\u8865\u9f50\u201d\uff09</li> <li>\u515c\u5e95\uff1a\u82e5\u6700\u7ec8 <code>valid</code> \u4e3a\u7a7a\uff0c\u8fd4\u56de <code>[{\"type\":\"reply\",\"text\":\"\uff08\u8ba1\u5212\u4e0d\u53ef\u7528\uff09\"}]</code></li> </ul>"},{"location":"librarys/agents/components/planner/#7","title":"7. \u4f7f\u7528\u793a\u4f8b","text":"\u8c03\u7528\u793a\u4f8b <pre><code>from sage.libs.agents.planning.llm_planner import LLMPlanner\nfrom sage.libs.rag.generator import OpenAIGenerator\n\nconf = {\"method\":\"openai\",\"model_name\":\"gpt-4o-mini\",\"base_url\":\"http://localhost:8000/v1\",\"api_key\":\"sk-...\"}\ngen = OpenAIGenerator(conf)\n\nplanner = LLMPlanner(generator=gen, max_steps=4, enable_repair=True, topk_tools=6)\n\nprofile_prompt = \"You are ResearchAgent, acting as planner. Reply in zh.\"\nuser_query = \"\u5728 arXiv \u627e 2 \u7bc7 LLM agents \u8c03\u7814\uff1b\u518d\u8ba1\u7b97 21*2+5\uff0c\u6700\u540e\u7ed9\u51fa\u4e2d\u6587\u603b\u7ed3\u3002\"\n\ntools = {\n  \"arxiv_search\": {\n    \"description\": \"Search arXiv papers\",\n    \"input_schema\": {\n      \"type\":\"object\",\n      \"properties\":{\"query\":{\"type\":\"string\"},\"max_results\":{\"type\":\"integer\"}},\n      \"required\":[\"query\"]\n    }\n  },\n  \"calculator\": {\n    \"description\": \"Do arithmetic\",\n    \"input_schema\": {\"type\":\"object\",\"properties\":{\"expr\":{\"type\":\"string\"}},\"required\":[\"expr\"]}\n  }\n}\n\nsteps = planner.plan(profile_prompt, user_query, tools)\nprint(steps)\n</code></pre> \u53ef\u80fd\u8f93\u51fa <pre><code>[\n  {\"type\":\"tool\",\"name\":\"arxiv_search\",\"arguments\":{\"query\":\"LLM agents survey\",\"max_results\":2}},\n  {\"type\":\"tool\",\"name\":\"calculator\",\"arguments\":{\"expr\":\"21*2+5\"}},\n  {\"type\":\"reply\",\"text\":\"\u5df2\u627e\u5230 2 \u7bc7\u76f8\u5173\u7efc\u8ff0\uff0c\u8ba1\u7b97\u7ed3\u679c\u4e3a 47\uff0c\u5e76\u7ed9\u51fa\u603b\u7ed3\u3002\"}\n]\n</code></pre>"},{"location":"librarys/agents/components/planner/#8-faq","title":"8. \u5e38\u89c1\u95ee\u9898\uff08FAQ\uff09","text":"\u6a21\u578b\u8f93\u51fa\u4e86 Markdown \u5305\u88f9\u7684 JSON\uff0c\u600e\u4e48\u5904\u7406\uff1f <p><code>_coerce_json_array</code> \u4f1a\u5265\u79bb <code>`` \u56f4\u680f\uff0c\u5e76\u5c1d\u8bd5\u622a\u53d6</code>[<code>\u5230</code>]` \u7684 JSON \u7247\u6bb5\u518d\u89e3\u6790\u3002</p> \u5982\u679c\u6a21\u578b\u4e71\u586b\u4e86\u4e0d\u5b58\u5728\u7684\u53c2\u6570\uff1f <p>\u5728 <code>_validate_steps</code> \u9636\u6bb5\u53ea\u68c0\u67e5 \u5fc5\u586b\u9879\u5b58\u5728\uff1b\u975e\u6cd5\u5b57\u6bb5\u6682\u4e0d\u62a5\u9519\uff0c\u7531\u5de5\u5177\u81ea\u8eab\u7684\u53c2\u6570\u6821\u9a8c\u8d1f\u8d23\u62e6\u622a\u3002</p> \u5fc5\u987b\u5148\u5b9e\u73b0 Memory \u624d\u80fd\u7528\u5417\uff1f <p>\u4e0d\u9700\u8981\u3002<code>LLMPlanner</code> \u4e0e Memory \u89e3\u8026\uff1b\u6709 Memory \u65f6\u53ea\u9700\u628a\u5176\u4e0a\u4e0b\u6587\u62fc\u5230 Profile/Prompt \u4e2d\u5373\u53ef\u3002</p>"},{"location":"librarys/agents/components/planner/#9-pytest","title":"9. \u6d4b\u8bd5\u5efa\u8bae\uff08pytest\uff09","text":"<ul> <li>\u89e3\u6790\u5bb9\u9519\uff1a\u6784\u9020\u5e26\u56f4\u680f/\u9644\u52a0\u8bf4\u660e\u7684\u8f93\u51fa\uff0c\u65ad\u8a00 <code>_coerce_json_array</code> \u80fd\u6210\u529f\u63d0\u53d6\u6570\u7ec4</li> <li>\u5fc5\u586b\u53c2\u6570\uff1a\u5de5\u5177 schema \u542b <code>required=[...]</code>\uff0c\u7f3a\u5931\u65f6\u8be5\u6b65\u4f1a\u88ab\u8fc7\u6ee4</li> <li>\u515c\u5e95\u56de\u590d\uff1a\u7ed9\u51fa\u660e\u663e\u4e0d\u53ef\u89e3\u6790\u7684\u6587\u672c\uff0c\u65ad\u8a00\u8fd4\u56de\u5355\u6b65 <code>reply</code></li> <li>\u6b65\u6570\u4e0a\u9650\uff1a\u751f\u6210\u8d85\u8fc7 <code>max_steps</code> \u7684\u6570\u7ec4\uff0c\u65ad\u8a00\u6700\u7ec8\u88ab\u622a\u65ad</li> </ul>"},{"location":"librarys/agents/components/planner/#10","title":"10. \u6f14\u8fdb\u65b9\u5411","text":"<ul> <li>\u7528 \u5411\u91cf\u53ec\u56de \u66ff\u6362\u5173\u952e\u8bcd Top-K\uff1b</li> <li>\u5728 <code>_validate_steps</code> \u7f3a\u53c2\u65f6\uff0c\u4ea4\u7ed9 Runtime \u53d1\u8d77 \u6f84\u6e05/\u8865\u9f50 \u4ea4\u4e92\uff1b</li> <li>\u5f15\u5165 \u786c/\u8f6f\u7ea6\u675f\uff08\u6765\u81ea Profile\uff09\u505a\u4e8c\u6b21\u8fc7\u6ee4\uff1b</li> <li>\u8ba1\u5212\u5931\u8d25\u65f6\u89e6\u53d1 Re-Plan\uff08\u628a\u9519\u8bef\u89c2\u6d4b\u4f5c\u4e3a\u989d\u5916\u4e0a\u4e0b\u6587\u91cd\u8bd5\uff09\u3002</li> </ul>"},{"location":"librarys/agents/components/profile/","title":"Profile \u7ec4\u4ef6\u8bbe\u8ba1\u6587\u6863","text":"<p>\u5b9a\u4f4d</p> <p>Profile \u662f Agent \u7684\u201c\u8eab\u4efd\u5361\u7247\u201d\uff0c\u5b9a\u4e49\u4e86\u5b83\u7684 \u89d2\u8272\u3001\u76ee\u6807\u3001\u4efb\u52a1\u3001\u80cc\u666f \u7b49\u4fe1\u606f\u3002 \u5b83\u662f\u6574\u4e2a Agent \u6846\u67b6\u7684 \u8ba4\u77e5\u5165\u53e3\uff0c\u6240\u6709\u63a8\u7406\u3001\u89c4\u5212\u3001\u884c\u52a8\u90fd\u57fa\u4e8e Profile \u63d0\u4f9b\u7684\u4e0a\u4e0b\u6587\u3002</p>"},{"location":"librarys/agents/components/profile/#1","title":"1. \u8bbe\u8ba1\u76ee\u6807","text":"<ul> <li>\u6807\u51c6\u5316\u8eab\u4efd\uff1a\u4e3a Agent \u63d0\u4f9b\u7edf\u4e00\u7684\u201c\u81ea\u6211\u5b9a\u4e49\u201d\u63a5\u53e3\u3002</li> <li>\u7075\u6d3b\u914d\u7f6e\uff1a\u652f\u6301\u6700\u5c0f\u5316\u914d\u7f6e\uff08\u4ec5 name + role\uff09\uff0c\u4e5f\u652f\u6301\u6269\u5c55\uff08goals\u3001tasks\u3001backstory\u3001language\uff09\u3002</li> <li>\u53ef\u6e32\u67d3\u63d0\u793a\u8bcd\uff1a\u80fd\u591f\u751f\u6210\u7cfb\u7edf\u63d0\u793a\uff08system prompt\uff09\uff0c\u76f4\u63a5\u4ea4\u7ed9 LLM \u4f7f\u7528\u3002</li> <li>\u53ef\u6269\u5c55\u6027\uff1a\u65b9\u4fbf\u672a\u6765\u6dfb\u52a0\u65b0\u5b57\u6bb5\uff08\u5982 persona\u3001capabilities\u3001constraints\uff09\u3002</li> </ul>"},{"location":"librarys/agents/components/profile/#2","title":"2. \u6570\u636e\u6a21\u578b","text":"profile.py<pre><code>from dataclasses import dataclass, field\nfrom typing import List, Optional\n\n@dataclass\nclass BaseProfile:\n    name: str\n    role: str\n    goals: List[str] = field(default_factory=list)\n    tasks: List[str] = field(default_factory=list)\n    backstory: Optional[str] = None\n    language: str = \"en\"\n\n    def render_system_prompt(self) -&gt; str:\n        prompt = f\"You are {self.name}, acting as {self.role}.\\n\"\n        if self.goals:\n            prompt += f\"Your goals: {', '.join(self.goals)}.\\n\"\n        if self.tasks:\n            prompt += f\"Current tasks: {', '.join(self.tasks)}.\\n\"\n        if self.backstory:\n            prompt += f\"Background: {self.backstory}\\n\"\n        prompt += f\"Reply in {self.language}.\"\n        return prompt\n</code></pre> <p>\u6700\u5c0f\u793a\u4f8b</p> <pre><code>profile = BaseProfile(\n    name=\"ResearchAgent\",\n    role=\"AI Research Assistant\"\n)\nprint(profile.render_system_prompt())\n</code></pre>"},{"location":"librarys/agents/components/profile/#3","title":"3. \u5b57\u6bb5\u8bf4\u660e","text":"\u5b57\u6bb5 \u7c7b\u578b \u5fc5\u586b \u63cf\u8ff0 <code>name</code> str \u2705 Agent \u7684\u540d\u79f0\uff08\u552f\u4e00\u6807\u8bc6\uff09\u3002 <code>role</code> str \u2705 Agent \u7684\u89d2\u8272\uff08\u5982 \"planner\", \"analyst\", \"developer\"\uff09\u3002 <code>goals</code> List[str] \u274c \u957f\u671f\u76ee\u6807\u5217\u8868\u3002 <code>tasks</code> List[str] \u274c \u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u3002 <code>backstory</code> str \u274c \u4eba\u683c\u80cc\u666f/\u6545\u4e8b\u63cf\u8ff0\u3002 <code>language</code> str \u274c \u8f93\u51fa\u8bed\u8a00\uff08\u9ed8\u8ba4 <code>\"en\"</code>\uff09\u3002"},{"location":"librarys/agents/components/profile/#4","title":"4. \u6e32\u67d3\u7ed3\u679c\u793a\u4f8b","text":"\u6700\u5c0f\u914d\u7f6e <pre><code>You are ResearchAgent, acting as AI Research Assistant.\nReply in en.\n</code></pre> \u5b8c\u6574\u914d\u7f6e <pre><code>You are ResearchAnalyst, acting as planner.\nYour goals: analyze literature, summarize insights.\nCurrent tasks: find recent LLM agent survey, generate structured summary.\nBackground: You were trained as a research assistant focusing on NLP and multi-agent systems.\nReply in zh.\n</code></pre>"},{"location":"librarys/agents/components/runtime/","title":"Runtime \u7ec4\u4ef6\u8bbe\u8ba1\u6587\u6863","text":"<p>\u5b9a\u4f4d</p> <p>Runtime \u662f Agent \u7684\u201c\u6267\u884c\u5faa\u73af\u201d\uff0c\u8d1f\u8d23\u8c03\u5ea6 Profile / Planning / Action / Memory / Reflection \u5404\u4e2a\u7ec4\u4ef6\uff0c\u9a71\u52a8 Agent \u4ece\u7528\u6237\u8bf7\u6c42\u5230\u6700\u7ec8\u56de\u590d\u7684\u5168\u8fc7\u7a0b\u3002</p>"},{"location":"librarys/agents/components/runtime/#1","title":"1. \u8bbe\u8ba1\u76ee\u6807","text":"<ul> <li>\u7edf\u4e00\u8c03\u5ea6\uff1a\u5c06 Planner \u4ea7\u51fa\u7684\u8ba1\u5212\u4f9d\u6b21\u6267\u884c\u3002</li> <li>\u5de5\u5177\u8c03\u7528\uff1a\u8c03\u7528 MCPRegistry \u4e2d\u6ce8\u518c\u7684\u5de5\u5177\uff0c\u83b7\u53d6\u6267\u884c\u7ed3\u679c\u3002</li> <li>\u5bb9\u9519\u5904\u7406\uff1a\u5728\u5de5\u5177\u51fa\u9519\u6216\u8ba1\u5212\u65e0\u6548\u65f6\u63d0\u4f9b\u515c\u5e95\u7b56\u7565\uff08\u5982 fallback reply\uff09\u3002</li> <li>\u53ef\u6269\u5c55\u6027\uff1a\u652f\u6301\u65e5\u5fd7\u8bb0\u5f55\u3001\u4e8b\u4ef6\u8ffd\u8e2a\u3001\u8bb0\u5fc6\u5199\u5165\u3001\u53cd\u601d\u66f4\u65b0\u3002</li> <li>\u7b80\u5355\u6613\u7528\uff1a\u8c03\u7528 <code>agent.step(dialog)</code> \u5373\u53ef\u5b8c\u6210\u4e00\u6b21\u5b8c\u6574\u7684\u611f\u77e5 \u2192 \u89c4\u5212 \u2192 \u6267\u884c \u2192 \u53cd\u9988\u6d41\u7a0b\u3002</li> </ul>"},{"location":"librarys/agents/components/runtime/#2","title":"2. \u6570\u636e\u6d41","text":"<pre><code>graph TD\n    U[\u7528\u6237\u8bf7\u6c42] --&gt;|dialog| R(Runtime)\n    R --&gt; P(Planner)\n    P --&gt; Plan\n    Plan --&gt; R\n    R --&gt;|for step in plan| A(Action via MCPRegistry)\n    A --&gt; Obs[Observation]\n    Obs --&gt; R\n    R --&gt; Refl[Reflection]\n    Refl --&gt; Mem[Memory]\n    R --&gt;|\u6700\u7ec8\u56de\u590d| U2[\u7528\u6237]</code></pre>"},{"location":"librarys/agents/components/runtime/#3","title":"3. \u6838\u5fc3\u7c7b","text":"runtime/agent.py<pre><code>from typing import List, Dict\nfrom sage.libs.agents.planning.schema import Plan, PlanStep\nfrom sage.libs.agents.action.mcp_registry import MCPRegistry\n\nclass AgentRuntime:\n    def __init__(self, profile, planner, registry: MCPRegistry, memory=None, reflector=None, llm=None):\n        self.profile = profile\n        self.planner = planner\n        self.registry = registry\n        self.memory = memory\n        self.reflector = reflector\n        self.llm = llm\n\n    def step(self, dialog: List[dict]) -&gt; dict:\n        # 1) Profile prompt\n        profile_prompt = self.profile.render_system_prompt()\n\n        # 2) \u751f\u6210\u8ba1\u5212\n        plan: Plan = self.planner.plan(profile_prompt, dialog[-1][\"content\"], self.registry.describe())\n\n        results = []\n        reply = None\n        for step in plan.steps:\n            if step.type == \"tool\":\n                try:\n                    obs = self.registry.call(step.name, step.arguments)\n                    results.append({\"tool\": step.name, \"output\": obs})\n                except Exception as e:\n                    results.append({\"tool\": step.name, \"error\": str(e)})\n            elif step.type == \"reply\":\n                reply = {\"role\": \"assistant\", \"content\": step.text}\n\n        # 3) Reflection + Memory\n        if self.reflector:\n            self.reflector.reflect(results, self.memory)\n        if self.memory:\n            self.memory.write(str(results))\n\n        # 4) \u8fd4\u56de\u6700\u7ec8\u56de\u590d\n        return reply or {\"role\": \"assistant\", \"content\": \"(no valid reply)\"}\n</code></pre>"},{"location":"librarys/agents/components/runtime/#4","title":"4. \u4f7f\u7528\u793a\u4f8b","text":"<pre><code>from sage.libs.agents.profile.profile import BaseProfile\nfrom sage.libs.agents.planning.llm_planner import LLMPlanner\nfrom sage.libs.agents.action.mcp_registry import MCPRegistry\nfrom sage.libs.rag.generator import OpenAIGenerator\n\n# 1) Profile\nprofile = BaseProfile(name=\"ResearchAgent\", role=\"planner\", language=\"zh\")\n\n# 2) Generator + Planner\ngen = OpenAIGenerator({\"method\":\"openai\",\"model_name\":\"gpt-4o-mini\",\"base_url\":\"http://localhost:8000/v1\",\"api_key\":\"sk-...\"})\nplanner = LLMPlanner(generator=gen)\n\n# 3) \u5de5\u5177\u6ce8\u518c\nreg = MCPRegistry()\nreg.register(Calculator())\nreg.register(ArxivSearcher())\n\n# 4) Runtime\nagent = AgentRuntime(profile, planner, reg)\n\n# 5) \u5355\u8f6e\u5bf9\u8bdd\ndialog = [{\"role\": \"user\", \"content\": \"\u5e2e\u6211\u67e5 arXiv \u4e0a\u7684 LLM agents \u7efc\u8ff0\uff0c\u5e76\u8ba1\u7b97 21*2+5\"}]\nresp = agent.step(dialog)\nprint(resp)\n</code></pre>"},{"location":"librarys/agents/components/runtime/#5","title":"5. \u6269\u5c55\u65b9\u5411","text":"<ul> <li>\u591a\u8f6e\u5faa\u73af\uff1a\u5728 <code>step()</code> \u5185\u652f\u6301 <code>PLAN \u2192 ACT \u2192 OBSERVE \u2192 REPLAN</code> \u7684\u5faa\u73af\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u6027\u8ba1\u5212\u3002</li> <li>\u4e8b\u4ef6\u603b\u7ebf\uff1a\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u751f\u6210\u7ed3\u6784\u5316\u4e8b\u4ef6\u6d41\uff08\u53ef\u5b58\u50a8\u4e3a JSONL\uff0c\u7528\u4e8e\u8c03\u8bd5/\u590d\u73b0\uff09\u3002</li> <li>\u9519\u8bef\u5904\u7406\uff1a\u5bf9\u5de5\u5177\u62a5\u9519\u65f6\u81ea\u52a8\u89e6\u53d1 replanning\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u8bb0\u5f55\u9519\u8bef\u3002</li> <li>\u5e76\u53d1\u6267\u884c\uff1a\u5f53 Planner \u4ea7\u51fa\u53ef\u5e76\u884c\u7684\u5de5\u5177\u8c03\u7528\u65f6\uff0cRuntime \u53ef\u5e76\u884c\u8c03\u5ea6\u3002</li> </ul>"},{"location":"librarys/rag/","title":"RAG\u7ec4\u4ef6\u6587\u6863\u5bfc\u822a (RAG Components Documentation Guide)","text":"<p>\u6b22\u8fce\u4f7f\u7528SAGE\u6846\u67b6\u7684RAG\uff08\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff09\u7ec4\u4ef6\u6587\u6863\u3002\u672c\u5bfc\u822a\u5c06\u5e2e\u52a9\u60a8\u5feb\u901f\u627e\u5230\u6240\u9700\u7684\u6280\u672f\u6587\u6863\u548c\u5b9e\u73b0\u793a\u4f8b\u3002</p>"},{"location":"librarys/rag/#_1","title":"\ud83d\udcd6 \u6587\u6863\u7ed3\u6784","text":""},{"location":"librarys/rag/#components","title":"\u7ec4\u4ef6\u6587\u6863 (<code>components/</code>)","text":"<p>\u5305\u542bSAGE\u6846\u67b6\u4e2d\u6240\u6709RAG\u6838\u5fc3\u7ec4\u4ef6\u7684\u8be6\u7ec6\u6280\u672f\u6587\u6863\uff1a</p> \u6587\u6863 \u7ec4\u4ef6\u529f\u80fd \u9002\u7528\u573a\u666f \u96be\u5ea6\u7ea7\u522b \u6587\u6863\u52a0\u8f7d\u5668 \u6587\u6863\u8bfb\u53d6\u4e0e\u9884\u5904\u7406 \u6570\u636e\u63a5\u5165 \u2b50 \u5165\u95e8 \u6587\u672c\u5206\u5757\u5668 \u957f\u6587\u6863\u667a\u80fd\u5206\u5272 \u6570\u636e\u9884\u5904\u7406 \u2b50\u2b50 \u57fa\u7840 \u7d22\u5f15\u6784\u5efa \u5411\u91cf\u7d22\u5f15\u6784\u5efa \u79bb\u7ebf\u5efa\u5e93 \u2b50\u2b50\u2b50 \u4e2d\u7ea7 \u68c0\u7d22\u5668 \u5411\u91cf\u76f8\u4f3c\u5ea6\u68c0\u7d22 \u5728\u7ebf\u67e5\u8be2 \u2b50\u2b50 \u57fa\u7840 \u91cd\u6392\u5e8f\u5668 \u68c0\u7d22\u7ed3\u679c\u7cbe\u6392 \u8d28\u91cf\u4f18\u5316 \u2b50\u2b50\u2b50 \u4e2d\u7ea7 \u63d0\u793a\u8bcd\u751f\u6210\u5668 \u4e0a\u4e0b\u6587\u7ec4\u88c5 \u63d0\u793a\u5de5\u7a0b \u2b50\u2b50 \u57fa\u7840 \u751f\u6210\u5668 \u7b54\u6848\u751f\u6210 LLM\u8c03\u7528 \u2b50\u2b50 \u57fa\u7840 \u5916\u90e8\u641c\u7d22\u5668 \u5b9e\u65f6\u4fe1\u606f\u83b7\u53d6 \u4fe1\u606f\u6269\u5c55 \u2b50\u2b50\u2b50 \u4e2d\u7ea7 \u8bc4\u4f30\u5668 \u7cfb\u7edf\u6027\u80fd\u8bc4\u4f30 \u8d28\u91cf\u76d1\u63a7 \u2b50\u2b50\u2b50\u2b50 \u9ad8\u7ea7"},{"location":"librarys/rag/#examples","title":"\u5b9e\u73b0\u793a\u4f8b (<code>examples/</code>)","text":"<p>\u63d0\u4f9b\u5b8c\u6574\u7684\u7aef\u5230\u7aef\u5b9e\u73b0\u793a\u4f8b\uff1a</p> \u793a\u4f8b \u8bf4\u660e \u590d\u6742\u5ea6 RAG\u7cfb\u7edf\u5b8c\u6574\u5b9e\u73b0 \u57fa\u4e8eChromaDB\u7684\u5b8c\u6574RAG\u95ee\u7b54\u7cfb\u7edf \u2b50\u2b50\u2b50 \u4e2d\u7ea7"},{"location":"librarys/rag/#_2","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"librarys/rag/#_3","title":"\u65b0\u624b\u5b66\u4e60\u8def\u5f84","text":"<p>\u5982\u679c\u60a8\u662fRAG\u6280\u672f\u7684\u65b0\u624b\uff0c\u5efa\u8bae\u6309\u4ee5\u4e0b\u987a\u5e8f\u5b66\u4e60\uff1a</p> <ol> <li>\u7406\u89e3\u57fa\u7840\u6982\u5ff5 \ud83d\udcda</li> <li>\u9605\u8bfb RAG\u7cfb\u7edf\u5b8c\u6574\u5b9e\u73b0 \u4e86\u89e3\u6574\u4f53\u67b6\u6784</li> <li> <p>\u7406\u89e3RAG\u7684\u4e24\u9636\u6bb5\u5de5\u4f5c\u6d41\u7a0b</p> </li> <li> <p>\u638c\u63e1\u6838\u5fc3\u7ec4\u4ef6 \ud83d\udd27</p> </li> <li>\u6587\u6863\u52a0\u8f7d\u5668 - \u5b66\u4e60\u6570\u636e\u8f93\u5165</li> <li>\u6587\u672c\u5206\u5757\u5668 - \u7406\u89e3\u6587\u6863\u9884\u5904\u7406</li> <li> <p>\u7d22\u5f15\u6784\u5efa - \u638c\u63e1\u5411\u91cf\u5316\u6d41\u7a0b</p> </li> <li> <p>\u5b9e\u73b0\u68c0\u7d22\u751f\u6210 \ud83c\udfaf</p> </li> <li>\u68c0\u7d22\u5668 - \u5b9e\u73b0\u76f8\u4f3c\u5ea6\u68c0\u7d22</li> <li>\u63d0\u793a\u8bcd\u751f\u6210\u5668 - \u5b66\u4e60\u4e0a\u4e0b\u6587\u7ec4\u88c5</li> <li> <p>\u751f\u6210\u5668 - \u63a5\u5165\u5927\u8bed\u8a00\u6a21\u578b</p> </li> <li> <p>\u7cfb\u7edf\u4f18\u5316\u63d0\u5347 \u26a1</p> </li> <li>\u91cd\u6392\u5e8f\u5668 - \u63d0\u5347\u68c0\u7d22\u7cbe\u5ea6</li> <li>\u5916\u90e8\u641c\u7d22\u5668 - \u6269\u5c55\u4fe1\u606f\u6765\u6e90</li> <li>\u8bc4\u4f30\u5668 - \u76d1\u63a7\u7cfb\u7edf\u6027\u80fd</li> </ol>"},{"location":"librarys/rag/#_4","title":"\u5f00\u53d1\u8005\u5feb\u901f\u53c2\u8003","text":""},{"location":"librarys/rag/#rag","title":"\u57fa\u7840RAG\u6d41\u6c34\u7ebf","text":"<pre><code># \u6700\u5c0f\u5316RAG\u5b9e\u73b0\nfrom sage.libs.rag import ChromaRetriever, QAPromptor, OpenAIGenerator\n\n# 1. \u68c0\u7d22\u76f8\u5173\u6587\u6863\nretriever = ChromaRetriever(config)\ndocs = retriever.execute(\"\u7528\u6237\u67e5\u8be2\")\n\n# 2. \u7ec4\u88c5\u63d0\u793a\u8bcd\npromptor = QAPromptor()\nprompt = promptor.execute((\"\u7528\u6237\u67e5\u8be2\", docs))\n\n# 3. \u751f\u6210\u7b54\u6848\ngenerator = OpenAIGenerator(config)\nanswer = generator.execute(prompt)\n</code></pre>"},{"location":"librarys/rag/#_5","title":"\u5b8c\u6574\u7cfb\u7edf\u90e8\u7f72","text":"<pre><code># \u751f\u4ea7\u7ea7RAG\u7cfb\u7edf\nfrom sage.libs.environment import LocalEnvironment\n\ndef deploy_rag_system(config):\n    env = LocalEnvironment()\n    (env\n     .from_batch(JSONLBatch, config[\"source\"])\n     .map(ChromaRetriever, config[\"retriever\"])\n     .map(BGEReranker, config[\"reranker\"])      # \u53ef\u9009\uff1a\u91cd\u6392\u5e8f\n     .map(QAPromptor, config[\"promptor\"])\n     .map(OpenAIGenerator, config[\"generator\"])\n     .sink(TerminalSink, config[\"sink\"])\n    )\n    env.submit()\n</code></pre>"},{"location":"librarys/rag/#_6","title":"\ud83d\udccb \u7ec4\u4ef6\u9009\u62e9\u6307\u5357","text":""},{"location":"librarys/rag/#_7","title":"\u6839\u636e\u5e94\u7528\u573a\u666f\u9009\u62e9\u7ec4\u4ef6","text":""},{"location":"librarys/rag/#_8","title":"\ud83c\udfe2 \u4f01\u4e1a\u77e5\u8bc6\u7ba1\u7406","text":"<ul> <li>\u6838\u5fc3\u7ec4\u4ef6\uff1aTextLoader + CharacterSplitter + ChromaRetriever + QAPromptor + OpenAIGenerator</li> <li>\u63a8\u8350\u589e\u5f3a\uff1aBGEReranker\uff08\u63d0\u5347\u51c6\u786e\u6027\uff09</li> <li>\u7279\u70b9\uff1a\u9ad8\u7cbe\u5ea6\u3001\u53ef\u8ffd\u6eaf\u3001\u5b89\u5168\u53ef\u63a7</li> </ul>"},{"location":"librarys/rag/#_9","title":"\ud83d\udd2c \u5b66\u672f\u7814\u7a76\u52a9\u624b","text":"<ul> <li>\u6838\u5fc3\u7ec4\u4ef6\uff1aTextLoader + SentenceTransformersTokenTextSplitter + ChromaRetriever + QAPromptor + HFGenerator</li> <li>\u63a8\u8350\u589e\u5f3a\uff1aLLMbased_Reranker\uff08\u590d\u6742\u63a8\u7406\uff09+ F1Evaluate\uff08\u8d28\u91cf\u8bc4\u4f30\uff09</li> <li>\u7279\u70b9\uff1a\u6df1\u5ea6\u7406\u89e3\u3001\u591a\u6587\u6863\u63a8\u7406\u3001\u5b66\u672f\u4e25\u8c28</li> </ul>"},{"location":"librarys/rag/#_10","title":"\ud83d\udcf0 \u5b9e\u65f6\u4fe1\u606f\u95ee\u7b54","text":"<ul> <li>\u6838\u5fc3\u7ec4\u4ef6\uff1aChromaRetriever + BochaWebSearch + QAPromptor + OpenAIGenerator</li> <li>\u63a8\u8350\u589e\u5f3a\uff1a\u6df7\u5408\u68c0\u7d22\u7b56\u7565</li> <li>\u7279\u70b9\uff1a\u65f6\u6548\u6027\u5f3a\u3001\u4fe1\u606f\u5168\u9762\u3001\u6765\u6e90\u591a\u6837</li> </ul>"},{"location":"librarys/rag/#_11","title":"\ud83e\udd16 \u667a\u80fd\u5ba2\u670d\u7cfb\u7edf","text":"<ul> <li>\u6838\u5fc3\u7ec4\u4ef6\uff1aTextLoader + CharacterSplitter + ChromaRetriever + BGEReranker + QAPromptor + OpenAIGenerator</li> <li>\u63a8\u8350\u589e\u5f3a\uff1aRecallEvaluate\uff08\u53ec\u56de\u76d1\u63a7\uff09+ \u7f13\u5b58\u673a\u5236</li> <li>\u7279\u70b9\uff1a\u54cd\u5e94\u5feb\u901f\u3001\u51c6\u786e\u7387\u9ad8\u3001\u7528\u6237\u4f53\u9a8c\u4f73</li> </ul>"},{"location":"librarys/rag/#_12","title":"\ud83d\udee0 \u6280\u672f\u89c4\u683c\u8981\u6c42","text":""},{"location":"librarys/rag/#_13","title":"\u7cfb\u7edf\u73af\u5883","text":"<ul> <li>Python\u7248\u672c\uff1a3.8+</li> <li>\u5185\u5b58\u8981\u6c42\uff1a\u5efa\u8bae8GB+\uff08\u5411\u91cf\u6a21\u578b\u52a0\u8f7d\uff09</li> <li>\u5b58\u50a8\u7a7a\u95f4\uff1a\u6839\u636e\u77e5\u8bc6\u5e93\u5927\u5c0f\uff0c\u5efa\u8bae\u9884\u7559\u5145\u8db3\u7a7a\u95f4</li> <li>GPU\u652f\u6301\uff1a\u53ef\u9009\uff0c\u7528\u4e8e\u52a0\u901f\u5411\u91cf\u8ba1\u7b97\u548c\u6a21\u578b\u63a8\u7406</li> </ul>"},{"location":"librarys/rag/#_14","title":"\u4f9d\u8d56\u7ec4\u4ef6","text":"<ul> <li>\u5411\u91cf\u6570\u636e\u5e93\uff1aChromaDB\uff08\u9ed8\u8ba4\uff09</li> <li>\u5d4c\u5165\u6a21\u578b\uff1aSentenceTransformers</li> <li>\u8bed\u8a00\u6a21\u578b\uff1aOpenAI API\u517c\u5bb9\u670d\u52a1\u6216HuggingFace\u6a21\u578b</li> <li>\u5916\u90e8API\uff1aBochaAI\uff08\u53ef\u9009\uff0c\u7528\u4e8e\u7f51\u7edc\u641c\u7d22\uff09</li> </ul>"},{"location":"librarys/rag/#_15","title":"\ud83d\udcca \u6027\u80fd\u57fa\u51c6","text":""},{"location":"librarys/rag/#_16","title":"\u5178\u578b\u6027\u80fd\u6307\u6807","text":"\u7ec4\u4ef6 \u5904\u7406\u901f\u5ea6 \u5185\u5b58\u5360\u7528 \u51c6\u786e\u7387 CharacterSplitter ~1000\u6587\u6863/\u79d2 \u4f4e N/A ChromaRetriever ~100\u67e5\u8be2/\u79d2 \u4e2d\u7b49 85-92% BGEReranker ~50\u67e5\u8be2/\u79d2 \u4e2d\u7b49 90-95% OpenAIGenerator ~10\u67e5\u8be2/\u79d2 \u4f4e \u4f9d\u8d56\u6a21\u578b"},{"location":"librarys/rag/#_17","title":"\u4f18\u5316\u5efa\u8bae","text":"<ul> <li>\u6279\u5904\u7406\uff1a\u5bf9\u4e8e\u5927\u91cf\u67e5\u8be2\uff0c\u4f7f\u7528\u6279\u5904\u7406\u63d0\u5347\u541e\u5410\u91cf</li> <li>\u7f13\u5b58\u7b56\u7565\uff1a\u7f13\u5b58\u5e38\u89c1\u67e5\u8be2\u7ed3\u679c\uff0c\u51cf\u5c11\u91cd\u590d\u8ba1\u7b97</li> <li>\u5206\u5e03\u5f0f\u90e8\u7f72\uff1a\u5927\u89c4\u6a21\u5e94\u7528\u8003\u8651\u5206\u5e03\u5f0f\u67b6\u6784</li> <li>\u6a21\u578b\u91cf\u5316\uff1a\u4f7f\u7528\u91cf\u5316\u6a21\u578b\u51cf\u5c11\u5185\u5b58\u5360\u7528</li> </ul>"},{"location":"librarys/rag/#_18","title":"\ud83d\udd0d \u6545\u969c\u6392\u67e5","text":""},{"location":"librarys/rag/#_19","title":"\u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u51b3\u65b9\u6848","text":""},{"location":"librarys/rag/#_20","title":"\u68c0\u7d22\u65e0\u7ed3\u679c","text":"<ul> <li>\u539f\u56e0\uff1a\u5411\u91cf\u7d22\u5f15\u672a\u6b63\u786e\u6784\u5efa\u6216\u67e5\u8be2\u5411\u91cf\u5316\u5931\u8d25</li> <li>\u89e3\u51b3\uff1a\u68c0\u67e5\u7d22\u5f15\u72b6\u6001\uff0c\u9a8c\u8bc1\u5d4c\u5165\u6a21\u578b\u4e00\u81f4\u6027</li> <li>\u53c2\u8003\uff1a\u7d22\u5f15\u6784\u5efa\u6587\u6863</li> </ul>"},{"location":"librarys/rag/#_21","title":"\u751f\u6210\u8d28\u91cf\u5dee","text":"<ul> <li>\u539f\u56e0\uff1a\u68c0\u7d22\u4e0a\u4e0b\u6587\u4e0d\u76f8\u5173\u6216\u63d0\u793a\u8bcd\u8bbe\u8ba1\u4e0d\u5f53</li> <li>\u89e3\u51b3\uff1a\u4f18\u5316\u68c0\u7d22\u7b56\u7565\uff0c\u6539\u8fdb\u63d0\u793a\u8bcd\u6a21\u677f</li> <li>\u53c2\u8003\uff1a\u91cd\u6392\u5e8f\u5668 + \u63d0\u793a\u8bcd\u751f\u6210\u5668</li> </ul>"},{"location":"librarys/rag/#_22","title":"\u54cd\u5e94\u901f\u5ea6\u6162","text":"<ul> <li>\u539f\u56e0\uff1a\u6a21\u578b\u63a8\u7406\u6162\u6216\u68c0\u7d22\u6570\u636e\u91cf\u5927</li> <li>\u89e3\u51b3\uff1a\u4f7f\u7528\u66f4\u5feb\u7684\u6a21\u578b\uff0c\u4f18\u5316\u7d22\u5f15\u7ed3\u6784</li> <li>\u53c2\u8003\uff1a\u6027\u80fd\u4f18\u5316\u6700\u4f73\u5b9e\u8df5</li> </ul>"},{"location":"librarys/rag/#_23","title":"\ud83d\udd17 \u76f8\u5173\u8d44\u6e90","text":""},{"location":"librarys/rag/#_24","title":"\u5b66\u4e60\u8d44\u6599","text":"<ul> <li> \u9879\u76eeREADME</li> <li> \u5411\u91cf\u6570\u636e\u5e93</li> <li> LLM\u96c6\u6210</li> </ul>"},{"location":"librarys/rag/#_25","title":"\u793e\u533a\u652f\u6301","text":"<ul> <li>GitHub Issues\uff1a\u6280\u672f\u95ee\u9898\u548cBug\u62a5\u544a</li> <li>\u8ba8\u8bba\u8bba\u575b\uff1a\u7ecf\u9a8c\u5206\u4eab\u548c\u6700\u4f73\u5b9e\u8df5</li> <li>\u793a\u4f8b\u4ee3\u7801\u5e93\uff1a\u5b8c\u6574\u7684\u9879\u76ee\u793a\u4f8b</li> </ul>"},{"location":"librarys/rag/#_26","title":"\u7248\u672c\u66f4\u65b0","text":"<ul> <li>\u67e5\u770b  \u66f4\u65b0\u65e5\u5fd7 \u4e86\u89e3\u6700\u65b0\u66f4\u65b0</li> <li>\u8ba2\u9605\u53d1\u5e03\u901a\u77e5\u83b7\u53d6\u65b0\u529f\u80fd\u4fe1\u606f</li> </ul> <p>\u8d21\u732e\u6307\u5357\uff1a\u6b22\u8fce\u63d0\u4ea4\u6587\u6863\u6539\u8fdb\u5efa\u8bae\u548c\u65b0\u7684\u4f7f\u7528\u793a\u4f8b\u3002\u8bf7\u53c2\u8003  \u8d21\u732e\u6307\u5357 \u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f\u3002</p> <p>\u8bb8\u53ef\u8bc1\uff1a\u672c\u6587\u6863\u9075\u5faa Apache 2.0 \u8bb8\u53ef\u8bc1\u3002\u8be6\u89c1 LICENSE \u6587\u4ef6\u3002</p>"},{"location":"librarys/rag/components/chunk/","title":"\u6587\u672c\u5206\u5757\u7ec4\u4ef6 (Text Chunking Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdSAGE\u6846\u67b6\u4e2d<code>sage.libs.rag.chunk</code>\u6a21\u5757\u7684\u6587\u672c\u5206\u5757\u7ec4\u4ef6\u3002\u6587\u672c\u5206\u5757\u662fRAG\uff08\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff09\u7cfb\u7edf\u7684\u57fa\u7840\u9884\u5904\u7406\u6b65\u9aa4\uff0c\u8d1f\u8d23\u5c06\u957f\u6587\u6863\u5206\u5272\u4e3a\u9002\u5408\u68c0\u7d22\u548c\u751f\u6210\u7684\u8bed\u4e49\u5355\u5143\u3002</p>"},{"location":"librarys/rag/components/chunk/#_1","title":"\u7ec4\u4ef6\u6982\u8ff0","text":""},{"location":"librarys/rag/components/chunk/#_2","title":"\u6838\u5fc3\u529f\u80fd","text":"<p>\u6587\u672c\u5206\u5757\u7ec4\u4ef6\u5728RAG\u7cfb\u7edf\u4e2d\u627f\u62c5\u4ee5\u4e0b\u5173\u952e\u804c\u8d23\uff1a</p> <ul> <li>\u8bed\u4e49\u4fdd\u6301\uff1a\u5728\u5206\u5272\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u6587\u672c\u7684\u8bed\u4e49\u5b8c\u6574\u6027</li> <li>\u68c0\u7d22\u4f18\u5316\uff1a\u751f\u6210\u9002\u5408\u5411\u91cf\u68c0\u7d22\u7684\u6587\u672c\u5757\u5927\u5c0f</li> <li>\u91cd\u53e0\u63a7\u5236\uff1a\u901a\u8fc7\u91cd\u53e0\u7b56\u7565\u63d0\u9ad8\u68c0\u7d22\u53ec\u56de\u7387</li> <li>\u683c\u5f0f\u6807\u51c6\u5316\uff1a\u8f93\u51fa\u7edf\u4e00\u7684\u6587\u6863\u683c\u5f0f\u4f9b\u4e0b\u6e38\u7ec4\u4ef6\u4f7f\u7528</li> </ul>"},{"location":"librarys/rag/components/chunk/#_3","title":"\u53ef\u7528\u5206\u5757\u5668","text":"<p>\u672c\u6a21\u5757\u63d0\u4f9b\u4e24\u7c7b\u5206\u5757\u5668\uff0c\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\uff1a</p> \u5206\u5757\u5668 \u9002\u7528\u573a\u666f \u7279\u70b9 <code>CharacterSplitter</code> \u901a\u7528\u6587\u672c\u5904\u7406 \u57fa\u4e8e\u5b57\u7b26\u8ba1\u6570\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u5206\u9694\u7b26 <code>SentenceTransformersTokenTextSplitter</code> \u6df1\u5ea6\u5b66\u4e60\u5e94\u7528 \u57fa\u4e8e\u6a21\u578b\u5206\u8bcd\u5668\uff0c\u4e0e\u4e0b\u6e38\u6a21\u578b\u517c\u5bb9"},{"location":"librarys/rag/components/chunk/#charactersplitter","title":"CharacterSplitter","text":""},{"location":"librarys/rag/components/chunk/#_4","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>CharacterSplitter</code>\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u6587\u672c\u5206\u5757\u5668\uff0c\u57fa\u4e8e\u5b57\u7b26\u8ba1\u6570\u548c\u53ef\u914d\u7f6e\u5206\u9694\u7b26\u8fdb\u884c\u6587\u672c\u5206\u5272\u3002\u8be5\u7ec4\u4ef6\u7279\u522b\u9002\u5408\u4e8e\u9700\u8981\u7cbe\u786e\u63a7\u5236\u6587\u672c\u5757\u5927\u5c0f\u7684\u573a\u666f\u3002</p>"},{"location":"librarys/rag/components/chunk/#_5","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u8f93\u5165\u683c\u5f0f\uff1a <pre><code>document = {\n    \"content\": str,           # \u5fc5\u9700\uff1a\u5f85\u5206\u5757\u7684\u6587\u672c\u5185\u5bb9\n    \"metadata\": dict          # \u53ef\u9009\uff1a\u6587\u6863\u5143\u6570\u636e\n}\n</code></pre></p> <p>\u8f93\u51fa\u683c\u5f0f\uff1a <pre><code>chunks = [str, str, ...]     # \u5206\u5757\u540e\u7684\u6587\u672c\u5217\u8868\n</code></pre></p> <p>\u914d\u7f6e\u53c2\u6570\uff1a</p> \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>chunk_size</code> int 512 \u6bcf\u4e2a\u6587\u672c\u5757\u7684\u6700\u5927\u5b57\u7b26\u6570 <code>overlap</code> int 128 \u76f8\u90bb\u6587\u672c\u5757\u7684\u91cd\u53e0\u5b57\u7b26\u6570 <code>separator</code> str None \u81ea\u5b9a\u4e49\u5206\u9694\u7b26\uff08\u53ef\u9009\uff09"},{"location":"librarys/rag/components/chunk/#_6","title":"\u5b9e\u73b0\u793a\u4f8b","text":""},{"location":"librarys/rag/components/chunk/#_7","title":"\u57fa\u7840\u5206\u5757\u64cd\u4f5c","text":"<pre><code>from sage.libs.rag.chunk import CharacterSplitter\n\n# \u914d\u7f6e\u5206\u5757\u5668\nconfig = {\n    \"chunk_size\": 500,\n    \"overlap\": 100\n}\nsplitter = CharacterSplitter(config)\n\n# \u51c6\u5907\u6587\u6863\u6570\u636e\ndocument = {\n    \"content\": \"\u8fd9\u662f\u4e00\u4e2a\u5f88\u957f\u7684\u6587\u6863\u5185\u5bb9\uff0c\u9700\u8981\u88ab\u5206\u5272\u6210\u591a\u4e2a\u5c0f\u5757\u4ee5\u4fbf\u5904\u7406\u3002\" * 20,\n    \"metadata\": {\"title\": \"\u793a\u4f8b\u6587\u6863\", \"author\": \"\u6280\u672f\u56e2\u961f\"}\n}\n\n# \u6267\u884c\u5206\u5757\nchunks = splitter.execute(document)\nprint(f\"\u5206\u5757\u5b8c\u6210\uff0c\u5171\u751f\u6210 {len(chunks)} \u4e2a\u6587\u6863\u5757\")\n\nfor i, chunk in enumerate(chunks[:3], 1):  # \u663e\u793a\u524d3\u4e2a\u5757\n    print(f\"\u6587\u6863\u5757 {i}: {chunk[:80]}...\")\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_8","title":"\u81ea\u5b9a\u4e49\u5206\u9694\u7b26\u5206\u5757","text":"<pre><code># \u6309\u6bb5\u843d\u5206\u5272\u7b56\u7565\nparagraph_config = {\n    \"separator\": \"\\n\\n\",    # \u4f7f\u7528\u53cc\u6362\u884c\u7b26\u4f5c\u4e3a\u6bb5\u843d\u5206\u9694\u7b26\n    \"chunk_size\": 1000,     # \u9002\u4e2d\u7684\u5757\u5927\u5c0f\n    \"overlap\": 50           # \u8f83\u5c0f\u7684\u91cd\u53e0\u907f\u514d\u6bb5\u843d\u5185\u5bb9\u622a\u65ad\n}\n\nparagraph_splitter = CharacterSplitter(paragraph_config)\n\n# \u793a\u4f8b\u6587\u6863\ndocument = {\n    \"content\": \"\"\"\u7b2c\u4e00\u6bb5\u5185\u5bb9\uff1a\u4ecb\u7ecd\u4e86\u6587\u6863\u7684\u80cc\u666f\u548c\u76ee\u6807\u3002\n\n\u7b2c\u4e8c\u6bb5\u5185\u5bb9\uff1a\u8be6\u7ec6\u63cf\u8ff0\u4e86\u6280\u672f\u5b9e\u73b0\u65b9\u6848\u3002\n\n\u7b2c\u4e09\u6bb5\u5185\u5bb9\uff1a\u603b\u7ed3\u4e86\u9879\u76ee\u7684\u6838\u5fc3\u4ef7\u503c\u548c\u672a\u6765\u53d1\u5c55\u65b9\u5411\u3002\"\"\",\n    \"metadata\": {\"doc_type\": \"technical_report\"}\n}\n\nchunks = paragraph_splitter.execute(document)\nprint(f\"\u6bb5\u843d\u5206\u5272\u7ed3\u679c\uff1a\u5171 {len(chunks)} \u4e2a\u6bb5\u843d\u5757\")\n# \u8f93\u51fa\uff1a['\u7b2c\u4e00\u6bb5\u5185\u5bb9\uff1a\u4ecb\u7ecd\u4e86\u6587\u6863\u7684\u80cc\u666f\u548c\u76ee\u6807\u3002', '\u7b2c\u4e8c\u6bb5\u5185\u5bb9\uff1a\u8be6\u7ec6\u63cf\u8ff0\u4e86\u6280\u672f\u5b9e\u73b0\u65b9\u6848\u3002', ...]\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_9","title":"\u91cd\u53e0\u673a\u5236\u8be6\u89e3","text":"<pre><code># \u91cd\u53e0\u673a\u5236\u6f14\u793a\noverlap_config = {\n    \"chunk_size\": 20,       # \u8f83\u5c0f\u7684\u5757\u7528\u4e8e\u6f14\u793a\n    \"overlap\": 8            # 8\u5b57\u7b26\u91cd\u53e0\n}\n\noverlap_splitter = CharacterSplitter(overlap_config)\n\ndemo_document = {\n    \"content\": \"\u4eba\u5de5\u667a\u80fd\u6280\u672f\u6b63\u5728\u5feb\u901f\u53d1\u5c55\uff0c\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u5728\u5404\u4e2a\u9886\u57df\u90fd\u6709\u91cd\u8981\u5e94\u7528\u3002\"\n}\n\noverlap_chunks = overlap_splitter.execute(demo_document)\n\nprint(\"\u91cd\u53e0\u5206\u5757\u6f14\u793a:\")\nfor i, chunk in enumerate(overlap_chunks, 1):\n    print(f\"\u5757{i}: '{chunk}'\")\n\n# \u8f93\u51fa\u793a\u4f8b:\n# \u57571: '\u4eba\u5de5\u667a\u80fd\u6280\u672f\u6b63\u5728\u5feb\u901f\u53d1\u5c55\uff0c\u6df1\u5ea6\u5b66\u4e60'\n# \u57572: '\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u5728\u5404\u4e2a\u9886\u57df\u90fd\u6709\u91cd\u8981\u5e94\u7528'\n# \u6ce8\u610f\uff1a'\u6df1\u5ea6\u5b66\u4e60' \u5728\u4e24\u4e2a\u5757\u4e2d\u90fd\u51fa\u73b0\uff0c\u5f62\u6210\u91cd\u53e0\n</code></pre>"},{"location":"librarys/rag/components/chunk/#sentencetransformerstokentextsplitter","title":"SentenceTransformersTokenTextSplitter","text":""},{"location":"librarys/rag/components/chunk/#_10","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>SentenceTransformersTokenTextSplitter</code>\u662f\u57fa\u4e8eSentenceTransformer\u6a21\u578b\u5206\u8bcd\u5668\u7684\u9ad8\u7ea7\u5206\u5757\u5668\uff0c\u7279\u522b\u9002\u7528\u4e8e\u9700\u8981\u4e0e\u4e0b\u6e38NLP\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u7684\u5e94\u7528\u573a\u666f\u3002</p>"},{"location":"librarys/rag/components/chunk/#_11","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u6838\u5fc3\u4f18\u52bf\uff1a - \u4e0eSentenceTransformer\u6a21\u578b\u7684\u5206\u8bcd\u5668\u5b8c\u5168\u517c\u5bb9 - \u57fa\u4e8eToken\u8ba1\u6570\u800c\u975e\u5b57\u7b26\u8ba1\u6570\uff0c\u66f4\u7cbe\u786e - \u4fdd\u6301\u4e0e\u540e\u7eed\u5d4c\u5165\u8fc7\u7a0b\u7684\u4e00\u81f4\u6027 - \u652f\u6301\u591a\u8bed\u8a00\u5206\u8bcd\u6807\u51c6</p> <p>\u914d\u7f6e\u53c2\u6570\uff1a</p> \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>model_name</code> str \"all-mpnet-base-v2\" SentenceTransformer\u6a21\u578b\u540d\u79f0 <code>chunk_size</code> int 512 \u6bcf\u4e2a\u6587\u672c\u5757\u7684\u6700\u5927Token\u6570 <code>chunk_overlap</code> int 50 \u76f8\u90bb\u6587\u672c\u5757\u7684\u91cd\u53e0Token\u6570 <code>device</code> str \"auto\" \u6a21\u578b\u8fd0\u884c\u8bbe\u5907"},{"location":"librarys/rag/components/chunk/#_12","title":"\u5b9e\u73b0\u793a\u4f8b","text":""},{"location":"librarys/rag/components/chunk/#token","title":"\u57fa\u7840Token\u5206\u5757","text":"<pre><code>from sage.libs.rag.chunk import SentenceTransformersTokenTextSplitter\n\n# \u914d\u7f6eToken\u5206\u5757\u5668\ntoken_config = {\n    \"model_name\": \"sentence-transformers/all-MiniLM-L6-v2\",\n    \"chunk_size\": 256,      # 256\u4e2aToken\n    \"chunk_overlap\": 32     # 32\u4e2aToken\u91cd\u53e0\n}\n\ntoken_splitter = SentenceTransformersTokenTextSplitter(token_config)\n\n# \u5904\u7406\u6280\u672f\u6587\u6863\ntech_document = {\n    \"content\": \"\"\"\n    \u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08Natural Language Processing, NLP\uff09\u662f\u4eba\u5de5\u667a\u80fd\u7684\u91cd\u8981\u5206\u652f\u3002\n    \u5b83\u81f4\u529b\u4e8e\u8ba9\u8ba1\u7b97\u673a\u7406\u89e3\u3001\u89e3\u91ca\u548c\u751f\u6210\u4eba\u7c7b\u8bed\u8a00\u3002NLP\u6280\u672f\u5305\u62ec\u6587\u672c\u5206\u6790\u3001\u8bed\u4e49\u7406\u89e3\u3001\n    \u673a\u5668\u7ffb\u8bd1\u3001\u60c5\u611f\u5206\u6790\u7b49\u591a\u4e2a\u65b9\u5411\u3002\u8fd1\u5e74\u6765\uff0c\u57fa\u4e8eTransformer\u67b6\u6784\u7684\u9884\u8bad\u7ec3\u6a21\u578b\n    \u5982BERT\u3001GPT\u7b49\u5728NLP\u4efb\u52a1\u4e0a\u53d6\u5f97\u4e86\u7a81\u7834\u6027\u8fdb\u5c55\u3002\n    \"\"\",\n    \"metadata\": {\"topic\": \"nlp_introduction\", \"language\": \"zh\"}\n}\n\ntoken_chunks = token_splitter.execute(tech_document)\nprint(f\"Token\u5206\u5757\u5b8c\u6210\uff0c\u5171 {len(token_chunks)} \u4e2aToken\u5757\")\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_13","title":"\u591a\u8bed\u8a00\u6587\u6863\u5904\u7406","text":"<pre><code># \u591a\u8bed\u8a00\u6a21\u578b\u914d\u7f6e\nmultilingual_config = {\n    \"model_name\": \"sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2\",\n    \"chunk_size\": 384,\n    \"chunk_overlap\": 48\n}\n\nmultilingual_splitter = SentenceTransformersTokenTextSplitter(multilingual_config)\n\n# \u4e2d\u82f1\u6df7\u5408\u6587\u6863\nmixed_document = {\n    \"content\": \"\"\"\n    SAGE\u662f\u4e00\u4e2a\u73b0\u4ee3\u5316\u7684RAG\u6846\u67b6\u3002SAGE is a modern RAG framework that supports \n    multiple languages and provides comprehensive documentation. \u8be5\u6846\u67b6\u652f\u6301\u591a\u79cd\n    embedding\u6a21\u578b\uff0c\u5305\u62ecsentence-transformers\u7cfb\u5217\u6a21\u578b\u3002The framework is designed \n    for scalability and ease of use.\n    \"\"\",\n    \"metadata\": {\"content_type\": \"bilingual_doc\"}\n}\n\nmixed_chunks = multilingual_splitter.execute(mixed_document)\nprint(\"\u591a\u8bed\u8a00\u5206\u5757\u5904\u7406\u5b8c\u6210\")\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_14","title":"\u9ad8\u7ea7\u5e94\u7528\u573a\u666f","text":""},{"location":"librarys/rag/components/chunk/#_15","title":"\u81ea\u9002\u5e94\u5206\u5757\u7b56\u7565","text":"<pre><code>class AdaptiveChunker:\n    \"\"\"\u6839\u636e\u6587\u6863\u7c7b\u578b\u81ea\u52a8\u9009\u62e9\u6700\u4f18\u5206\u5757\u7b56\u7565\"\"\"\n\n    def __init__(self):\n        # \u9884\u5b9a\u4e49\u4e0d\u540c\u7c7b\u578b\u7684\u5206\u5757\u914d\u7f6e\n        self.strategies = {\n            \"academic_paper\": {\n                \"type\": \"character\",\n                \"config\": {\n                    \"separator\": \"\\n\\n\",\n                    \"chunk_size\": 800,\n                    \"overlap\": 100\n                }\n            },\n            \"technical_doc\": {\n                \"type\": \"token\",\n                \"config\": {\n                    \"model_name\": \"sentence-transformers/all-mpnet-base-v2\",\n                    \"chunk_size\": 384,\n                    \"chunk_overlap\": 50\n                }\n            },\n            \"news_article\": {\n                \"type\": \"character\",\n                \"config\": {\n                    \"separator\": \"\u3002\",\n                    \"chunk_size\": 600,\n                    \"overlap\": 80\n                }\n            },\n            \"code_documentation\": {\n                \"type\": \"character\",\n                \"config\": {\n                    \"separator\": \"\\n\\nclass |def |async def \",\n                    \"chunk_size\": 1200,\n                    \"overlap\": 0  # \u4ee3\u7801\u5757\u901a\u5e38\u4e0d\u9700\u8981\u91cd\u53e0\n                }\n            }\n        }\n\n    def chunk_document(self, document, doc_type=\"technical_doc\"):\n        \"\"\"\u6839\u636e\u6587\u6863\u7c7b\u578b\u6267\u884c\u76f8\u5e94\u7684\u5206\u5757\u7b56\u7565\"\"\"\n\n        if doc_type not in self.strategies:\n            doc_type = \"technical_doc\"  # \u9ed8\u8ba4\u7b56\u7565\n\n        strategy = self.strategies[doc_type]\n\n        if strategy[\"type\"] == \"character\":\n            splitter = CharacterSplitter(strategy[\"config\"])\n        else:  # token\n            splitter = SentenceTransformersTokenTextSplitter(strategy[\"config\"])\n\n        chunks = splitter.execute(document)\n\n        print(f\"\u4f7f\u7528 {doc_type} \u7b56\u7565\uff0c\u751f\u6210 {len(chunks)} \u4e2a\u6587\u6863\u5757\")\n        return chunks\n\n# \u4f7f\u7528\u81ea\u9002\u5e94\u5206\u5757\u5668\nadaptive_chunker = AdaptiveChunker()\n\n# \u5b66\u672f\u8bba\u6587\u5206\u5757\npaper_doc = {\n    \"content\": \"\u6458\u8981\\n\\n\u672c\u6587\u4ecb\u7ecd\u4e86...\\n\\n1. \u5f15\u8a00\\n\\n\u8fd1\u5e74\u6765...\",\n    \"metadata\": {\"type\": \"academic\"}\n}\npaper_chunks = adaptive_chunker.chunk_document(paper_doc, \"academic_paper\")\n\n# \u6280\u672f\u6587\u6863\u5206\u5757\ntech_doc = {\n    \"content\": \"API documentation for SAGE framework...\",\n    \"metadata\": {\"type\": \"technical\"}\n}\ntech_chunks = adaptive_chunker.chunk_document(tech_doc, \"technical_doc\")\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_16","title":"\u8d28\u91cf\u8bc4\u4f30\u4e0e\u4f18\u5316","text":"<pre><code>class ChunkQualityEvaluator:\n    \"\"\"\u6587\u6863\u5206\u5757\u8d28\u91cf\u8bc4\u4f30\u5668\"\"\"\n\n    def __init__(self):\n        self.metrics = {}\n\n    def evaluate_chunks(self, chunks, original_document):\n        \"\"\"\u8bc4\u4f30\u5206\u5757\u8d28\u91cf\"\"\"\n\n        # 1. \u8986\u76d6\u7387\u8bc4\u4f30\n        total_chars = len(original_document[\"content\"])\n        chunk_chars = sum(len(chunk) for chunk in chunks)\n        coverage = chunk_chars / total_chars\n\n        # 2. \u5757\u5927\u5c0f\u5206\u5e03\n        chunk_lengths = [len(chunk) for chunk in chunks]\n        avg_length = sum(chunk_lengths) / len(chunk_lengths)\n        length_variance = sum((l - avg_length) ** 2 for l in chunk_lengths) / len(chunk_lengths)\n\n        # 3. \u8bed\u4e49\u5b8c\u6574\u6027\uff08\u7b80\u5316\u8bc4\u4f30\uff09\n        incomplete_chunks = sum(1 for chunk in chunks if chunk.endswith((\"\uff0c\", \"\u548c\", \"\u7684\", \"\u662f\")))\n        semantic_completeness = 1 - (incomplete_chunks / len(chunks))\n\n        self.metrics = {\n            \"coverage\": coverage,\n            \"average_chunk_length\": avg_length,\n            \"length_variance\": length_variance,\n            \"semantic_completeness\": semantic_completeness,\n            \"total_chunks\": len(chunks)\n        }\n\n        return self.metrics\n\n    def print_evaluation(self):\n        \"\"\"\u6253\u5370\u8bc4\u4f30\u7ed3\u679c\"\"\"\n        print(\"=== \u5206\u5757\u8d28\u91cf\u8bc4\u4f30\u62a5\u544a ===\")\n        print(f\"\u5185\u5bb9\u8986\u76d6\u7387: {self.metrics['coverage']:.2%}\")\n        print(f\"\u5e73\u5747\u5757\u957f\u5ea6: {self.metrics['average_chunk_length']:.0f} \u5b57\u7b26\")\n        print(f\"\u957f\u5ea6\u65b9\u5dee: {self.metrics['length_variance']:.0f}\")\n        print(f\"\u8bed\u4e49\u5b8c\u6574\u6027: {self.metrics['semantic_completeness']:.2%}\")\n        print(f\"\u603b\u5757\u6570: {self.metrics['total_chunks']}\")\n\n        # \u8d28\u91cf\u5efa\u8bae\n        if self.metrics['coverage'] &lt; 0.95:\n            print(\"\u26a0\ufe0f \u5efa\u8bae\uff1a\u5185\u5bb9\u8986\u76d6\u7387\u8f83\u4f4e\uff0c\u68c0\u67e5\u5206\u5757\u903b\u8f91\")\n        if self.metrics['length_variance'] &gt; 10000:\n            print(\"\u26a0\ufe0f \u5efa\u8bae\uff1a\u5757\u957f\u5ea6\u5dee\u5f02\u8f83\u5927\uff0c\u8003\u8651\u8c03\u6574\u5206\u5757\u53c2\u6570\")\n        if self.metrics['semantic_completeness'] &lt; 0.8:\n            print(\"\u26a0\ufe0f \u5efa\u8bae\uff1a\u8bed\u4e49\u5b8c\u6574\u6027\u8f83\u4f4e\uff0c\u4f18\u5316\u5206\u9694\u7b26\u9009\u62e9\")\n\n# \u4f7f\u7528\u8d28\u91cf\u8bc4\u4f30\u5668\nevaluator = ChunkQualityEvaluator()\n\n# \u8bc4\u4f30\u4e0d\u540c\u5206\u5757\u7b56\u7565\u7684\u6548\u679c\ntest_document = {\n    \"content\": \"\"\"\u4eba\u5de5\u667a\u80fd\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u65e8\u5728\u521b\u5efa\u80fd\u591f\u6a21\u62df\u4eba\u7c7b\u667a\u80fd\u7684\u7cfb\u7edf\u3002\n    \u673a\u5668\u5b66\u4e60\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6838\u5fc3\u6280\u672f\u4e4b\u4e00\uff0c\u901a\u8fc7\u7b97\u6cd5\u8ba9\u8ba1\u7b97\u673a\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u6a21\u5f0f\u3002\n    \u6df1\u5ea6\u5b66\u4e60\u4f5c\u4e3a\u673a\u5668\u5b66\u4e60\u7684\u5b50\u96c6\uff0c\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc\u6765\u5904\u7406\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\u3002\n    \u81ea\u7136\u8bed\u8a00\u5904\u7406\u5219\u4e13\u6ce8\u4e8e\u8ba9\u8ba1\u7b97\u673a\u7406\u89e3\u548c\u751f\u6210\u4eba\u7c7b\u8bed\u8a00\u3002\"\"\",\n    \"metadata\": {\"test_doc\": True}\n}\n\n# \u6d4b\u8bd5\u5b57\u7b26\u5206\u5757\nchar_chunks = CharacterSplitter({\"chunk_size\": 80, \"overlap\": 20}).execute(test_document)\nchar_metrics = evaluator.evaluate_chunks(char_chunks, test_document)\nprint(\"\u5b57\u7b26\u5206\u5757\u8bc4\u4f30\uff1a\")\nevaluator.print_evaluation()\n\nprint(\"\\n\" + \"=\"*50 + \"\\n\")\n\n# \u6d4b\u8bd5Token\u5206\u5757\ntoken_chunks = SentenceTransformersTokenTextSplitter({\n    \"chunk_size\": 64, \n    \"chunk_overlap\": 16\n}).execute(test_document)\ntoken_metrics = evaluator.evaluate_chunks(token_chunks, test_document)\nprint(\"Token\u5206\u5757\u8bc4\u4f30\uff1a\")\nevaluator.print_evaluation()\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_17","title":"\u914d\u7f6e\u4f18\u5316\u6307\u5357","text":""},{"location":"librarys/rag/components/chunk/#_18","title":"\u6839\u636e\u5e94\u7528\u573a\u666f\u4f18\u5316\u914d\u7f6e","text":""},{"location":"librarys/rag/components/chunk/#_19","title":"\u95ee\u7b54\u7cfb\u7edf\u4f18\u5316","text":"<pre><code># \u95ee\u7b54\u7cfb\u7edf\u6700\u4f18\u914d\u7f6e\nqa_config = {\n    \"chunk_size\": 400,      # \u9002\u4e2d\u5757\u5927\u5c0f\uff0c\u5e73\u8861\u4e0a\u4e0b\u6587\u548c\u7cbe\u5ea6\n    \"overlap\": 80,          # \u5145\u8db3\u91cd\u53e0\u786e\u4fdd\u4fe1\u606f\u5b8c\u6574\u6027\n    \"separator\": \"\u3002\"       # \u6309\u53e5\u5b50\u5206\u5272\u4fdd\u6301\u8bed\u4e49\u5b8c\u6574\n}\n\nprint(\"\u95ee\u7b54\u7cfb\u7edf\u914d\u7f6e\u7279\u70b9\uff1a\")\nprint(\"- \u4e2d\u7b49\u5757\u5927\u5c0f\uff1a\u5e73\u8861\u68c0\u7d22\u7cbe\u5ea6\u548c\u4e0a\u4e0b\u6587\u5b8c\u6574\u6027\")\nprint(\"- \u9002\u5ea6\u91cd\u53e0\uff1a\u786e\u4fdd\u8de8\u53e5\u4fe1\u606f\u4e0d\u4e22\u5931\")\nprint(\"- \u53e5\u5b50\u5206\u5272\uff1a\u4fdd\u6301\u56de\u7b54\u7684\u8bed\u4e49\u903b\u8f91\u6027\")\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_20","title":"\u6458\u8981\u7cfb\u7edf\u4f18\u5316","text":"<pre><code># \u6458\u8981\u7cfb\u7edf\u6700\u4f18\u914d\u7f6e\nsummary_config = {\n    \"chunk_size\": 800,      # \u8f83\u5927\u5757\u5305\u542b\u66f4\u591a\u4e0a\u4e0b\u6587\n    \"overlap\": 120,         # \u66f4\u591a\u91cd\u53e0\u4fdd\u6301\u8fde\u8d2f\u6027\n    \"separator\": \"\\n\\n\"     # \u6309\u6bb5\u843d\u5206\u5272\u4fdd\u6301\u7ed3\u6784\n}\n\nprint(\"\u6458\u8981\u7cfb\u7edf\u914d\u7f6e\u7279\u70b9\uff1a\")\nprint(\"- \u8f83\u5927\u5757\uff1a\u5305\u542b\u8db3\u591f\u4fe1\u606f\u652f\u6301\u6458\u8981\u751f\u6210\")\nprint(\"- \u9ad8\u91cd\u53e0\u7387\uff1a\u4fdd\u6301\u6587\u6863\u7ed3\u6784\u548c\u903b\u8f91\u8fde\u8d2f\u6027\")\nprint(\"- \u6bb5\u843d\u5206\u5272\uff1a\u7ef4\u62a4\u539f\u6587\u7684\u5c42\u6b21\u7ed3\u6784\")\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_21","title":"\u4ee3\u7801\u6587\u6863\u4f18\u5316","text":"<pre><code># \u4ee3\u7801\u6587\u6863\u6700\u4f18\u914d\u7f6e\ncode_config = {\n    \"separator\": \"\\n\\nclass |def |async def \",  # \u6309\u51fd\u6570/\u7c7b\u5206\u5272\n    \"chunk_size\": 1500,     # \u8f83\u5927\u5757\u5bb9\u7eb3\u5b8c\u6574\u51fd\u6570\n    \"overlap\": 0            # \u4ee3\u7801\u5757\u901a\u5e38\u4e0d\u9700\u8981\u91cd\u53e0\n}\n\nprint(\"\u4ee3\u7801\u6587\u6863\u914d\u7f6e\u7279\u70b9\uff1a\")\nprint(\"- \u51fd\u6570\u7ea7\u5206\u5272\uff1a\u4fdd\u6301\u4ee3\u7801\u903b\u8f91\u5b8c\u6574\u6027\")\nprint(\"- \u5927\u5757\u5bb9\u91cf\uff1a\u5bb9\u7eb3\u5b8c\u6574\u7684\u51fd\u6570\u6216\u7c7b\u5b9a\u4e49\")\nprint(\"- \u65e0\u91cd\u53e0\uff1a\u907f\u514d\u4ee3\u7801\u91cd\u590d\u548c\u903b\u8f91\u6df7\u4e71\")\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_22","title":"\u6027\u80fd\u4f18\u5316\u7b56\u7565","text":""},{"location":"librarys/rag/components/chunk/#_23","title":"\u6279\u91cf\u5904\u7406\u4f18\u5316","text":"<pre><code>def batch_chunk_documents(documents, splitter_config, batch_size=10):\n    \"\"\"\u6279\u91cf\u5904\u7406\u591a\u4e2a\u6587\u6863\u7684\u5206\u5757\u64cd\u4f5c\"\"\"\n\n    splitter = CharacterSplitter(splitter_config)\n    all_chunks = []\n\n    for i in range(0, len(documents), batch_size):\n        batch = documents[i:i + batch_size]\n\n        print(f\"\u5904\u7406\u6279\u6b21 {i//batch_size + 1}: {len(batch)} \u4e2a\u6587\u6863\")\n\n        batch_chunks = []\n        for doc in batch:\n            chunks = splitter.execute(doc)\n            batch_chunks.extend(chunks)\n\n        all_chunks.extend(batch_chunks)\n        print(f\"\u6279\u6b21\u5b8c\u6210\uff0c\u751f\u6210 {len(batch_chunks)} \u4e2a\u6587\u6863\u5757\")\n\n    return all_chunks\n\n# \u6279\u91cf\u5904\u7406\u793a\u4f8b\ndocuments = [\n    {\"content\": f\"\u6587\u6863{i}\u5185\u5bb9...\" * 50, \"metadata\": {\"id\": i}}\n    for i in range(100)\n]\n\noptimized_config = {\n    \"chunk_size\": 500,\n    \"overlap\": 100,\n    \"separator\": \"\\n\\n\"\n}\n\nchunks = batch_chunk_documents(documents, optimized_config, batch_size=20)\nprint(f\"\u6279\u91cf\u5904\u7406\u5b8c\u6210\uff0c\u603b\u5171\u751f\u6210 {len(chunks)} \u4e2a\u6587\u6863\u5757\")\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_24","title":"\u6700\u4f73\u5b9e\u8df5\u603b\u7ed3","text":""},{"location":"librarys/rag/components/chunk/#_25","title":"\u5206\u5757\u7b56\u7565\u9009\u62e9\u539f\u5219","text":"<ol> <li>\u8bed\u4e49\u5b8c\u6574\u6027\u4f18\u5148\uff1a</li> <li>\u4f18\u5148\u4f7f\u7528\u81ea\u7136\u5206\u754c\u7b26\uff08\u6bb5\u843d\u3001\u53e5\u5b50\uff09</li> <li>\u907f\u514d\u5728\u8bcd\u6c47\u4e2d\u95f4\u5207\u5206</li> <li> <p>\u4fdd\u6301\u6982\u5ff5\u548c\u903b\u8f91\u7684\u5b8c\u6574\u6027</p> </li> <li> <p>\u4e0b\u6e38\u4efb\u52a1\u9002\u914d\uff1a</p> </li> <li>\u95ee\u7b54\u4efb\u52a1\uff1a\u4e2d\u7b49\u5757\u5927\u5c0f\uff08300-600\u5b57\u7b26\uff09</li> <li>\u6458\u8981\u4efb\u52a1\uff1a\u8f83\u5927\u5757\u5927\u5c0f\uff08600-1000\u5b57\u7b26\uff09</li> <li> <p>\u68c0\u7d22\u4efb\u52a1\uff1a\u6839\u636e\u68c0\u7d22\u6a21\u578b\u4f18\u5316</p> </li> <li> <p>\u6027\u80fd\u4e0e\u7cbe\u5ea6\u5e73\u8861\uff1a</p> </li> <li>\u5757\u5927\u5c0f\u4e0e\u68c0\u7d22\u7cbe\u5ea6\u6210\u53cd\u6bd4</li> <li>\u91cd\u53e0\u7387\u4e0e\u4fe1\u606f\u5b8c\u6574\u6027\u6210\u6b63\u6bd4</li> <li>\u6839\u636e\u5e94\u7528\u9700\u6c42\u627e\u5230\u6700\u4f18\u5e73\u8861\u70b9</li> </ol>"},{"location":"librarys/rag/components/chunk/#_26","title":"\u5e38\u89c1\u9519\u8bef\u4e0e\u907f\u514d\u65b9\u6cd5","text":"<ol> <li>\u8fc7\u5ea6\u5206\u5757\uff1a</li> <li>\u95ee\u9898\uff1a\u5757\u592a\u5c0f\u5bfc\u81f4\u4e0a\u4e0b\u6587\u4fe1\u606f\u4e0d\u8db3</li> <li> <p>\u89e3\u51b3\uff1a\u589e\u52a0\u5757\u5927\u5c0f\u6216\u91cd\u53e0\u7387</p> </li> <li> <p>\u5206\u754c\u70b9\u9009\u62e9\u4e0d\u5f53\uff1a</p> </li> <li>\u95ee\u9898\uff1a\u5728\u5173\u952e\u4fe1\u606f\u4e2d\u95f4\u5207\u5206</li> <li> <p>\u89e3\u51b3\uff1a\u4f7f\u7528\u8bed\u4e49\u5206\u754c\u7b26</p> </li> <li> <p>\u5ffd\u7565\u91cd\u53e0\u8bbe\u8ba1\uff1a</p> </li> <li>\u95ee\u9898\uff1a\u91cd\u8981\u4fe1\u606f\u5728\u5757\u8fb9\u754c\u4e22\u5931</li> <li>\u89e3\u51b3\uff1a\u5408\u7406\u8bbe\u7f6e\u91cd\u53e0\u533a\u57df</li> </ol>"},{"location":"librarys/rag/components/chunk/#_27","title":"\u76d1\u63a7\u4e0e\u8c03\u8bd5","text":"<pre><code>def debug_chunking_process(document, config):\n    \"\"\"\u5206\u5757\u8fc7\u7a0b\u8c03\u8bd5\u5de5\u5177\"\"\"\n\n    print(\"=== \u5206\u5757\u8c03\u8bd5\u4fe1\u606f ===\")\n    print(f\"\u539f\u6587\u6863\u957f\u5ea6: {len(document['content'])} \u5b57\u7b26\")\n    print(f\"\u5206\u5757\u914d\u7f6e: {config}\")\n\n    splitter = CharacterSplitter(config)\n    chunks = splitter.execute(document)\n\n    print(f\"\u751f\u6210\u5757\u6570: {len(chunks)}\")\n    print(f\"\u5e73\u5747\u5757\u957f: {sum(len(c) for c in chunks) / len(chunks):.1f} \u5b57\u7b26\")\n    print(f\"\u6700\u5c0f\u5757\u957f: {min(len(c) for c in chunks)} \u5b57\u7b26\")\n    print(f\"\u6700\u5927\u5757\u957f: {max(len(c) for c in chunks)} \u5b57\u7b26\")\n\n    # \u663e\u793a\u524d\u51e0\u4e2a\u5757\u7684\u5185\u5bb9\n    print(\"\\n\u524d3\u4e2a\u5757\u7684\u5185\u5bb9\u9884\u89c8:\")\n    for i, chunk in enumerate(chunks[:3], 1):\n        print(f\"\u5757{i}: {chunk[:100]}{'...' if len(chunk) &gt; 100 else ''}\")\n\n    return chunks\n\n# \u8c03\u8bd5\u793a\u4f8b\ndebug_config = {\"chunk_size\": 200, \"overlap\": 50}\ndebug_doc = {\"content\": \"\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u8c03\u8bd5\u7684\u793a\u4f8b\u6587\u6863...\" * 20}\ndebug_chunks = debug_chunking_process(debug_doc, debug_config)\n</code></pre> <p>\u603b\u7ed3\uff1a\u6587\u672c\u5206\u5757\u662fRAG\u7cfb\u7edf\u7684\u57fa\u7840\u6b65\u9aa4\uff0c\u76f4\u63a5\u5f71\u54cd\u540e\u7eed\u68c0\u7d22\u548c\u751f\u6210\u7684\u8d28\u91cf\u3002\u9009\u62e9\u5408\u9002\u7684\u5206\u5757\u7b56\u7565\u9700\u8981\u7efc\u5408\u8003\u8651\u6587\u6863\u7279\u6027\u3001\u5e94\u7528\u573a\u666f\u548c\u6027\u80fd\u8981\u6c42\u3002\u5efa\u8bae\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u901a\u8fc7\u5b9e\u9a8c\u548c\u8bc4\u4f30\u6765\u4f18\u5316\u5206\u5757\u53c2\u6570\uff0c\u4ee5\u8fbe\u5230\u6700\u4f73\u6548\u679c\u3002     \"content\": \"\u8fd9\u662f\u7b2c\u4e00\u53e5\u3002\u8fd9\u662f\u7b2c\u4e8c\u53e5\u3002\u8fd9\u662f\u7b2c\u4e09\u53e5\u3002\" } chunks = sentence_splitter.execute(document)</p>"},{"location":"librarys/rag/components/chunk/#_28","title":"\u7ed3\u679c\uff1a['\u8fd9\u662f\u7b2c\u4e00\u53e5', '\u8fd9\u662f\u7b2c\u4e8c\u53e5', '\u8fd9\u662f\u7b2c\u4e09\u53e5']","text":"<pre><code>#### \u91cd\u53e0\u673a\u5236\u8bf4\u660e\n\n```python\n# \u6f14\u793a\u91cd\u53e0\u673a\u5236\nconfig = {\n    \"chunk_size\": 10,  # \u6bcf\u575710\u4e2a\u5b57\u7b26\n    \"overlap\": 3       # \u91cd\u53e03\u4e2a\u5b57\u7b26\n}\nsplitter = CharacterSplitter(config)\n\ndocument = {\"content\": \"0123456789ABCDEFGHIJ\"}\nchunks = splitter.execute(document)\n\n# \u8f93\u51fa\u7ed3\u679c\uff1a\n# \u57571: 0123456789 (0-9)\n# \u57572: 789ABCDEFG (7-16)  # \u4e0e\u57571\u91cd\u53e03\u4e2a\u5b57\u7b26(789)\n# \u57573: EFGHIJ     (16-21) # \u4e0e\u57572\u91cd\u53e03\u4e2a\u5b57\u7b26(EFG)\n</code></pre>"},{"location":"librarys/rag/components/chunk/#2-sentencetransformerstokentextsplitter-token","title":"2. SentenceTransformersTokenTextSplitter - Token\u5206\u5757\u5668","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eTransformer\u6a21\u578b\u7684\u9ad8\u7ea7\u5206\u5757\u5668\uff0c\u4f7f\u7528\u6a21\u578b\u7684tokenizer\u8fdb\u884c\u7cbe\u786e\u7684token\u7ea7\u5206\u5272\u3002</p>"},{"location":"librarys/rag/components/chunk/#_29","title":"\u7279\u6027","text":"<ul> <li>\u57fa\u4e8e\u9884\u8bad\u7ec3\u6a21\u578b\u7684tokenizer</li> <li>\u7cbe\u786e\u7684token\u8ba1\u6570</li> <li>\u4fdd\u6301\u6a21\u578b\u517c\u5bb9\u6027</li> <li>\u652f\u6301\u591a\u79cdTransformer\u6a21\u578b</li> </ul>"},{"location":"librarys/rag/components/chunk/#_30","title":"\u4f9d\u8d56\u8981\u6c42","text":"<pre><code>pip install sentence-transformers transformers torch\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_31","title":"\u914d\u7f6e\u53c2\u6570","text":"<pre><code>config = {\n    \"chunk\": {\n        \"model_name\": \"sentence-transformers/all-mpnet-base-v2\",  # \u6a21\u578b\u540d\u79f0\n        \"chunk_size\": 512,      # \u6bcf\u5757\u7684token\u6570\uff08\u9ed8\u8ba4512\uff09\n        \"chunk_overlap\": 50     # \u91cd\u53e0token\u6570\uff08\u9ed8\u8ba450\uff09\n    }\n}\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_32","title":"\u57fa\u672c\u4f7f\u7528","text":"<pre><code>from sage.libs.rag.chunk import SentenceTransformersTokenTextSplitter\n\n# \u914d\u7f6e\nconfig = {\n    \"chunk\": {\n        \"chunk_size\": 128,\n        \"chunk_overlap\": 20,\n        \"model_name\": \"sentence-transformers/all-mpnet-base-v2\"\n    }\n}\n\n# \u521d\u59cb\u5316\u5206\u5757\u5668\uff08\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6a21\u578b\uff09\nsplitter = SentenceTransformersTokenTextSplitter(config)\n\n# \u6267\u884c\u5206\u5757\ntext = \"This is a long document that needs to be split into smaller chunks for processing. \" * 10\nchunks = splitter.execute(text)\n\nprint(f\"\u539f\u6587\u957f\u5ea6: {len(text)} \u5b57\u7b26\")\nprint(f\"\u5206\u5757\u6570\u91cf: {len(chunks)}\")\nfor i, chunk in enumerate(chunks):\n    print(f\"\u5757 {i+1}: {chunk[:60]}...\")\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_33","title":"\u652f\u6301\u7684\u6a21\u578b","text":"<pre><code># \u5e38\u7528\u6a21\u578b\u914d\u7f6e\nmodels = {\n    # \u82f1\u6587\u6a21\u578b\n    \"all-mpnet-base-v2\": \"sentence-transformers/all-mpnet-base-v2\",\n    \"all-MiniLM-L6-v2\": \"sentence-transformers/all-MiniLM-L6-v2\",\n\n    # \u4e2d\u6587\u6a21\u578b\n    \"paraphrase-multilingual\": \"sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2\",\n\n    # BERT\u7cfb\u5217\n    \"bert-base\": \"bert-base-uncased\",\n    \"bert-chinese\": \"bert-base-chinese\"\n}\n\n# \u4f7f\u7528\u4e2d\u6587\u6a21\u578b\nconfig = {\n    \"chunk\": {\n        \"model_name\": \"bert-base-chinese\",\n        \"chunk_size\": 256,\n        \"chunk_overlap\": 32\n    }\n}\n</code></pre>"},{"location":"librarys/rag/components/chunk/#token_1","title":"Token\u7ea7\u5206\u5757\u8be6\u89e3","text":"<pre><code># \u6f14\u793atoken\u7ea7\u5206\u5757\u7684\u7cbe\u786e\u6027\nconfig = {\n    \"chunk\": {\n        \"chunk_size\": 8,    # \u6bcf\u57578\u4e2atoken\n        \"chunk_overlap\": 2, # \u91cd\u53e02\u4e2atoken\n        \"model_name\": \"sentence-transformers/all-mpnet-base-v2\"\n    }\n}\n\nsplitter = SentenceTransformersTokenTextSplitter(config)\ntext = \"This is a test sentence to be split into smaller chunks.\"\n\nchunks = splitter.execute(text)\n\n# \u53ef\u4ee5\u770b\u5230\u8be6\u7ec6\u7684\u5206\u5757\u8fc7\u7a0b\uff1a\n# Input IDs: [101, 2023, 2003, 1037, 3231, 6251, 2000, 2022, 3975, 2046, 3760, 9060, 1012, 102]\n# Start Index: 0\n# \u57571: [CLS] This is a test sentence to [SEP]\n# Start Index: 6  # 8-2=6 (chunk_size - overlap)\n# \u57572: sentence to be split into smaller\n# ...\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_34","title":"\u5b8c\u6574\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"librarys/rag/components/chunk/#rag","title":"RAG\u6587\u6863\u5904\u7406\u6d41\u6c34\u7ebf","text":"<pre><code>from sage.libs.rag.chunk import CharacterSplitter, SentenceTransformersTokenTextSplitter\n\nclass DocumentProcessor:\n    def __init__(self, chunk_strategy=\"character\"):\n        if chunk_strategy == \"character\":\n            self.splitter = CharacterSplitter({\n                \"chunk_size\": 1000,\n                \"overlap\": 200,\n                \"separator\": None\n            })\n        elif chunk_strategy == \"token\":\n            self.splitter = SentenceTransformersTokenTextSplitter({\n                \"chunk\": {\n                    \"chunk_size\": 512,\n                    \"chunk_overlap\": 64,\n                    \"model_name\": \"sentence-transformers/all-mpnet-base-v2\"\n                }\n            })\n\n    def process_document(self, document):\n        \"\"\"\u5904\u7406\u5355\u4e2a\u6587\u6863\"\"\"\n        if isinstance(document, dict):\n            # CharacterSplitter\u683c\u5f0f\n            chunks = self.splitter.execute(document)\n            return [{\n                \"content\": chunk,\n                \"metadata\": document.get(\"metadata\", {}),\n                \"chunk_id\": i\n            } for i, chunk in enumerate(chunks)]\n        else:\n            # SentenceTransformersTokenTextSplitter\u683c\u5f0f\n            chunks = self.splitter.execute(document)\n            return [{\n                \"content\": chunk,\n                \"chunk_id\": i\n            } for i, chunk in enumerate(chunks)]\n\n    def process_multiple_documents(self, documents):\n        \"\"\"\u5904\u7406\u591a\u4e2a\u6587\u6863\"\"\"\n        all_chunks = []\n        for doc_id, document in enumerate(documents):\n            chunks = self.process_document(document)\n            for chunk in chunks:\n                chunk[\"document_id\"] = doc_id\n                all_chunks.append(chunk)\n        return all_chunks\n\n# \u4f7f\u7528\u793a\u4f8b\nprocessor = DocumentProcessor(\"character\")\n\ndocuments = [\n    {\n        \"content\": \"\u7b2c\u4e00\u7bc7\u6587\u6863\u7684\u5185\u5bb9...\" * 100,\n        \"metadata\": {\"title\": \"\u6587\u68631\", \"category\": \"\u6280\u672f\"}\n    },\n    {\n        \"content\": \"\u7b2c\u4e8c\u7bc7\u6587\u6863\u7684\u5185\u5bb9...\" * 150,\n        \"metadata\": {\"title\": \"\u6587\u68632\", \"category\": \"\u79d1\u5b66\"}\n    }\n]\n\nall_chunks = processor.process_multiple_documents(documents)\nprint(f\"\u603b\u5171\u751f\u6210\u4e86 {len(all_chunks)} \u4e2a\u6587\u6863\u5757\")\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_35","title":"\u81ea\u9002\u5e94\u5206\u5757\u7b56\u7565","text":"<pre><code>class AdaptiveChunker:\n    def __init__(self):\n        self.char_splitter = CharacterSplitter({\n            \"chunk_size\": 1000,\n            \"overlap\": 100\n        })\n\n        self.token_splitter = SentenceTransformersTokenTextSplitter({\n            \"chunk\": {\n                \"chunk_size\": 256,\n                \"chunk_overlap\": 32,\n                \"model_name\": \"sentence-transformers/all-MiniLM-L6-v2\"\n            }\n        })\n\n    def choose_strategy(self, text):\n        \"\"\"\u6839\u636e\u6587\u672c\u7279\u5f81\u9009\u62e9\u5206\u5757\u7b56\u7565\"\"\"\n        if len(text) &lt; 1000:\n            return \"character\"  # \u77ed\u6587\u672c\u7528\u5b57\u7b26\u5206\u5757\n        elif any(lang in text for lang in [\"\u4e2d\u6587\", \"\u65e5\u6587\", \"\ud55c\uad6d\uc5b4\"]):\n            return \"character\"  # \u975e\u82f1\u6587\u7528\u5b57\u7b26\u5206\u5757\n        else:\n            return \"token\"     # \u957f\u82f1\u6587\u7528token\u5206\u5757\n\n    def adaptive_chunk(self, document):\n        content = document.get(\"content\", \"\") if isinstance(document, dict) else document\n        strategy = self.choose_strategy(content)\n\n        if strategy == \"character\":\n            if isinstance(document, dict):\n                return self.char_splitter.execute(document)\n            else:\n                doc_dict = {\"content\": document}\n                return self.char_splitter.execute(doc_dict)\n        else:\n            if isinstance(document, dict):\n                content = document[\"content\"]\n            else:\n                content = document\n            return self.token_splitter.execute(content)\n\n# \u4f7f\u7528\u81ea\u9002\u5e94\u5206\u5757\nchunker = AdaptiveChunker()\n\n# \u4e2d\u6587\u6587\u6863 - \u4f7f\u7528\u5b57\u7b26\u5206\u5757\nchinese_doc = {\"content\": \"\u8fd9\u662f\u4e00\u7bc7\u4e2d\u6587\u6587\u6863\" * 200}\nchunks1 = chunker.adaptive_chunk(chinese_doc)\n\n# \u82f1\u6587\u6587\u6863 - \u4f7f\u7528token\u5206\u5757\nenglish_text = \"This is an English document \" * 200\nchunks2 = chunker.adaptive_chunk(english_text)\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_36","title":"\u5206\u5757\u8d28\u91cf\u8bc4\u4f30","text":"<pre><code>def evaluate_chunks(chunks, original_text):\n    \"\"\"\u8bc4\u4f30\u5206\u5757\u8d28\u91cf\"\"\"\n    stats = {\n        \"total_chunks\": len(chunks),\n        \"avg_length\": sum(len(chunk) for chunk in chunks) / len(chunks),\n        \"min_length\": min(len(chunk) for chunk in chunks),\n        \"max_length\": max(len(chunk) for chunk in chunks),\n        \"coverage\": sum(len(chunk) for chunk in chunks) / len(original_text)\n    }\n\n    print(\"\u5206\u5757\u8d28\u91cf\u8bc4\u4f30:\")\n    print(f\"- \u603b\u5757\u6570: {stats['total_chunks']}\")\n    print(f\"- \u5e73\u5747\u957f\u5ea6: {stats['avg_length']:.1f}\")\n    print(f\"- \u6700\u77ed\u5757: {stats['min_length']}\")\n    print(f\"- \u6700\u957f\u5757: {stats['max_length']}\")\n    print(f\"- \u8986\u76d6\u7387: {stats['coverage']:.2%}\")\n\n    return stats\n\n# \u8bc4\u4f30\u793a\u4f8b\ntext = \"\u793a\u4f8b\u6587\u672c\u5185\u5bb9\" * 1000\nsplitter = CharacterSplitter({\"chunk_size\": 200, \"overlap\": 50})\nchunks = splitter.execute({\"content\": text})\nevaluate_chunks(chunks, text)\n</code></pre>"},{"location":"librarys/rag/components/chunk/#_37","title":"\u914d\u7f6e\u5efa\u8bae","text":""},{"location":"librarys/rag/components/chunk/#_38","title":"\u6839\u636e\u7528\u9014\u9009\u62e9\u914d\u7f6e","text":""},{"location":"librarys/rag/components/chunk/#1","title":"1. \u95ee\u7b54\u7cfb\u7edf","text":"<pre><code># \u77ed\u95ee\u7b54 - \u7cbe\u786e\u5339\u914d\nqa_config = {\n    \"chunk_size\": 256,\n    \"overlap\": 32\n}\n\n# \u957f\u95ee\u7b54 - \u66f4\u591a\u4e0a\u4e0b\u6587\nlong_qa_config = {\n    \"chunk_size\": 512,\n    \"overlap\": 64\n}\n</code></pre>"},{"location":"librarys/rag/components/chunk/#2","title":"2. \u6458\u8981\u7cfb\u7edf","text":"<pre><code># \u6458\u8981 - \u8f83\u5927\u5757\u4fdd\u6301\u5b8c\u6574\u6027\nsummary_config = {\n    \"chunk_size\": 1024,\n    \"overlap\": 128\n}\n</code></pre>"},{"location":"librarys/rag/components/chunk/#3","title":"3. \u4ee3\u7801\u6587\u6863","text":"<pre><code># \u4ee3\u7801 - \u6309\u51fd\u6570/\u7c7b\u5206\u5272\ncode_config = {\n    \"separator\": \"\\n\\nclass \",  # \u6309\u7c7b\u5206\u5272\n    \"chunk_size\": 2000,\n    \"overlap\": 0  # \u4ee3\u7801\u901a\u5e38\u4e0d\u9700\u8981\u91cd\u53e0\n}\n</code></pre>"},{"location":"librarys/rag/components/chunk/#4","title":"4. \u5b66\u672f\u8bba\u6587","text":"<pre><code># \u8bba\u6587 - \u6309\u6bb5\u843d\u5206\u5272\npaper_config = {\n    \"separator\": \"\\n\\n\",  # \u6309\u6bb5\u843d\u5206\u5272\n    \"chunk_size\": 800,\n    \"overlap\": 100\n}\n</code></pre>"},{"location":"librarys/rag/components/document_loaders/","title":"\u6587\u6863\u52a0\u8f7d\u7ec4\u4ef6 (Document Loading Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdSAGE\u6846\u67b6\u4e2d<code>sage.libs.rag.document_loaders</code>\u6a21\u5757\u7684\u6587\u6863\u52a0\u8f7d\u7ec4\u4ef6\u3002\u6587\u6863\u52a0\u8f7d\u5668\u662fRAG\u7cfb\u7edf\u7684\u6570\u636e\u5165\u53e3\uff0c\u8d1f\u8d23\u4ece\u5404\u79cd\u6570\u636e\u6e90\u52a0\u8f7d\u548c\u9884\u5904\u7406\u6587\u6863\u5185\u5bb9\u3002</p>"},{"location":"librarys/rag/components/document_loaders/#_1","title":"\u7ec4\u4ef6\u6982\u8ff0","text":""},{"location":"librarys/rag/components/document_loaders/#_2","title":"\u6838\u5fc3\u529f\u80fd","text":"<p>\u6587\u6863\u52a0\u8f7d\u7ec4\u4ef6\u5728RAG\u7cfb\u7edf\u4e2d\u627f\u62c5\u4ee5\u4e0b\u5173\u952e\u804c\u8d23\uff1a</p> <ul> <li>\u591a\u683c\u5f0f\u652f\u6301\uff1a\u5904\u7406\u4e0d\u540c\u683c\u5f0f\u7684\u6587\u6863\u6587\u4ef6</li> <li>\u7f16\u7801\u5904\u7406\uff1a\u81ea\u52a8\u68c0\u6d4b\u548c\u8f6c\u6362\u6587\u4ef6\u7f16\u7801</li> <li>\u5143\u6570\u636e\u751f\u6210\uff1a\u4e3a\u6587\u6863\u81ea\u52a8\u751f\u6210\u7ed3\u6784\u5316\u5143\u6570\u636e</li> <li>\u9519\u8bef\u5904\u7406\uff1a\u63d0\u4f9b\u5065\u58ee\u7684\u6587\u4ef6\u8bfb\u53d6\u5f02\u5e38\u7ba1\u7406</li> </ul>"},{"location":"librarys/rag/components/document_loaders/#_3","title":"\u8bbe\u8ba1\u539f\u5219","text":"<ul> <li>\u53ef\u6269\u5c55\u6027\uff1a\u652f\u6301\u65b0\u6587\u6863\u683c\u5f0f\u7684\u5feb\u901f\u96c6\u6210</li> <li>\u6807\u51c6\u5316\u8f93\u51fa\uff1a\u6240\u6709\u52a0\u8f7d\u5668\u8f93\u51fa\u7edf\u4e00\u7684\u6587\u6863\u5bf9\u8c61\u683c\u5f0f</li> <li>\u6027\u80fd\u4f18\u5316\uff1a\u9488\u5bf9\u5927\u6587\u4ef6\u7684\u5185\u5b58\u53cb\u597d\u5904\u7406</li> </ul>"},{"location":"librarys/rag/components/document_loaders/#textloader","title":"TextLoader","text":""},{"location":"librarys/rag/components/document_loaders/#_4","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>TextLoader</code>\u662f\u57fa\u7840\u6587\u672c\u6587\u4ef6\u52a0\u8f7d\u5668\uff0c\u4e13\u95e8\u5904\u7406\u7eaf\u6587\u672c\u683c\u5f0f\u6587\u6863\u3002\u8be5\u7ec4\u4ef6\u4e3a\u5176\u4ed6\u683c\u5f0f\u52a0\u8f7d\u5668\u63d0\u4f9b\u4e86\u6807\u51c6\u5b9e\u73b0\u6a21\u677f\u3002</p>"},{"location":"librarys/rag/components/document_loaders/#_5","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u7c7b\u5b9a\u4e49\uff1a <pre><code>class TextLoader:\n    def __init__(self, filepath: str, encoding: str = \"utf-8\", chunk_separator: str = None)\n    def load(self) -&gt; Dict[str, Any]\n</code></pre></p> <p>\u521d\u59cb\u5316\u53c2\u6570\uff1a</p> \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u5fc5\u9700\u6027 \u8bf4\u660e <code>filepath</code> str - \u5fc5\u9700 \u76ee\u6807\u6587\u672c\u6587\u4ef6\u7684\u7edd\u5bf9\u6216\u76f8\u5bf9\u8def\u5f84 <code>encoding</code> str \"utf-8\" \u53ef\u9009 \u6587\u4ef6\u7f16\u7801\u683c\u5f0f\uff08\u5982utf-8, gbk\u7b49\uff09 <code>chunk_separator</code> str None \u53ef\u9009 \u9884\u7559\u7684\u5206\u5757\u5206\u9694\u7b26\u53c2\u6570 <p>\u8f93\u51fa\u683c\u5f0f\uff1a <pre><code>{\n    \"content\": str,           # \u6587\u6863\u7684\u5b8c\u6574\u6587\u672c\u5185\u5bb9\n    \"metadata\": {             # \u6587\u6863\u5143\u6570\u636e\n        \"source\": str,        # \u6e90\u6587\u4ef6\u8def\u5f84\n        \"encoding\": str,      # \u4f7f\u7528\u7684\u7f16\u7801\u683c\u5f0f\n        \"size\": int,          # \u6587\u4ef6\u5927\u5c0f\uff08\u5b57\u8282\uff09\n        \"load_time\": str      # \u52a0\u8f7d\u65f6\u95f4\u6233\n    }\n}\n</code></pre></p>"},{"location":"librarys/rag/components/evaluate/","title":"\u8bc4\u4f30\u7ec4\u4ef6 (Evaluation Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdSAGE\u6846\u67b6\u4e2d<code>sage.libs.rag.evaluate</code>\u6a21\u5757\u7684\u8bc4\u4f30\u7ec4\u4ef6\u3002\u8bc4\u4f30\u7ec4\u4ef6\u4e3aRAG\u7cfb\u7edf\u63d0\u4f9b\u591a\u7ef4\u5ea6\u7684\u6027\u80fd\u8bc4\u4f30\u6307\u6807\uff0c\u652f\u6301\u7cfb\u7edf\u4f18\u5316\u548c\u8d28\u91cf\u63a7\u5236\u3002</p>"},{"location":"librarys/rag/components/evaluate/#_1","title":"\u7ec4\u4ef6\u6982\u8ff0","text":""},{"location":"librarys/rag/components/evaluate/#_2","title":"\u6838\u5fc3\u529f\u80fd","text":"<p>\u8bc4\u4f30\u7ec4\u4ef6\u5728RAG\u7cfb\u7edf\u4e2d\u627f\u62c5\u4ee5\u4e0b\u5173\u952e\u804c\u8d23\uff1a</p> <ul> <li>\u591a\u6307\u6807\u8bc4\u4f30\uff1a\u63d0\u4f9b\u591a\u79cd\u8bc4\u4f30\u7ef4\u5ea6\u548c\u6307\u6807</li> <li>\u6807\u51c6\u5316\u63a5\u53e3\uff1a\u6240\u6709\u8bc4\u4f30\u51fd\u6570\u7ee7\u627f\u81ea<code>MapFunction</code>\u57fa\u7c7b</li> <li>\u94fe\u5f0f\u8c03\u7528\uff1a\u652f\u6301\u5728\u6570\u636e\u5904\u7406\u7ba1\u9053\u4e2d\u7684\u65e0\u7f1d\u96c6\u6210</li> <li>\u7ed3\u679c\u53ef\u89c6\u5316\uff1a\u63d0\u4f9b\u5f69\u8272\u683c\u5f0f\u7684\u8bc4\u4f30\u7ed3\u679c\u8f93\u51fa</li> </ul>"},{"location":"librarys/rag/components/evaluate/#_3","title":"\u8bbe\u8ba1\u67b6\u6784","text":"<p>\u6240\u6709\u8bc4\u4f30\u7ec4\u4ef6\u9075\u5faa\u7edf\u4e00\u7684\u5904\u7406\u6d41\u7a0b\uff1a</p> <ol> <li>\u8f93\u5165\u9a8c\u8bc1\uff1a\u68c0\u67e5\u9884\u6d4b\u7ed3\u679c\u548c\u53c2\u8003\u7b54\u6848\u7684\u6570\u636e\u683c\u5f0f</li> <li>\u6307\u6807\u8ba1\u7b97\uff1a\u6267\u884c\u76f8\u5e94\u7684\u8bc4\u4f30\u7b97\u6cd5</li> <li>\u7ed3\u679c\u5c55\u793a\uff1a\u4ee5\u6807\u51c6\u5316\u683c\u5f0f\u8f93\u51fa\u8bc4\u4f30\u5206\u6570</li> <li>\u6570\u636e\u4f20\u9012\uff1a\u8fd4\u56de\u539f\u59cb\u6570\u636e\u4ee5\u652f\u6301\u94fe\u5f0f\u8c03\u7528</li> </ol>"},{"location":"librarys/rag/components/evaluate/#_4","title":"\u8bc4\u4f30\u6570\u636e\u683c\u5f0f","text":"<p>\u6807\u51c6\u8bc4\u4f30\u8f93\u5165\u683c\u5f0f\uff1a <pre><code>data = {\n    \"references\": List[str],    # \u53c2\u8003\u7b54\u6848\u5217\u8868\n    \"generated\": str           # \u7cfb\u7edf\u751f\u6210\u7684\u7b54\u6848\n}\n</code></pre></p>"},{"location":"librarys/rag/components/evaluate/#_5","title":"\u6587\u672c\u5339\u914d\u8bc4\u4f30\u7ec4\u4ef6","text":""},{"location":"librarys/rag/components/evaluate/#f1evaluate","title":"F1Evaluate","text":""},{"location":"librarys/rag/components/evaluate/#_6","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p>F1\u5206\u6570\u8bc4\u4f30\u5668\u8ba1\u7b97\u9884\u6d4b\u6587\u672c\u4e0e\u53c2\u8003\u7b54\u6848\u4e4b\u95f4\u7684F1\u5206\u6570\uff0c\u7efc\u5408\u8003\u8651\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u3002</p>"},{"location":"librarys/rag/components/evaluate/#_7","title":"\u6280\u672f\u89c4\u683c","text":"<ul> <li>\u8bc4\u4f30\u6307\u6807\uff1aF1-Score (\u8c03\u548c\u5e73\u5747\u6570)</li> <li>\u8ba1\u7b97\u65b9\u5f0f\uff1aF1 = 2 \u00d7 (Precision \u00d7 Recall) / (Precision + Recall)</li> <li>\u9002\u7528\u573a\u666f\uff1a\u9700\u8981\u5e73\u8861\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8bc4\u4f30\u4efb\u52a1</li> </ul>"},{"location":"librarys/rag/components/evaluate/#_8","title":"\u5b9e\u73b0\u793a\u4f8b","text":"<pre><code>from sage.libs.rag.evaluate import F1Evaluate\n\n# \u521d\u59cb\u5316\u8bc4\u4f30\u5668\nf1_evaluator = F1Evaluate()\n\n# \u51c6\u5907\u8bc4\u4f30\u6570\u636e\ndata = {\n    \"references\": [\n        \"SAGE\u662f\u4e00\u4e2a\u5148\u8fdb\u7684RAG\u6846\u67b6\", \n        \"SAGE\u6846\u67b6\u652f\u6301\u591a\u79cd\u6587\u672c\u5206\u5757\u65b9\u6cd5\"\n    ],\n    \"generated\": \"SAGE\u662f\u652f\u6301RAG\u7684\u5148\u8fdb\u6846\u67b6\"\n}\n\n# \u6267\u884c\u8bc4\u4f30\nresult = f1_evaluator.execute(data)\n# \u8f93\u51fa\u793a\u4f8b: [F1] : 0.7500\n</code></pre>"},{"location":"librarys/rag/components/evaluate/#recallevaluate","title":"RecallEvaluate","text":""},{"location":"librarys/rag/components/evaluate/#_9","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p>\u53ec\u56de\u7387\u8bc4\u4f30\u5668\u8ba1\u7b97\u9884\u6d4b\u6587\u672c\u76f8\u5bf9\u4e8e\u53c2\u8003\u7b54\u6848\u7684\u53ec\u56de\u7387\uff0c\u8861\u91cf\u7cfb\u7edf\u6355\u83b7\u76f8\u5173\u4fe1\u606f\u7684\u80fd\u529b\u3002</p>"},{"location":"librarys/rag/components/evaluate/#_10","title":"\u6280\u672f\u89c4\u683c","text":"<ul> <li>\u8bc4\u4f30\u6307\u6807\uff1aRecall (\u53ec\u56de\u7387)</li> <li>\u8ba1\u7b97\u65b9\u5f0f\uff1aRecall = TP / (TP + FN)</li> <li>\u9002\u7528\u573a\u666f\uff1a\u91cd\u89c6\u4fe1\u606f\u5b8c\u6574\u6027\u7684\u8bc4\u4f30\u4efb\u52a1</li> </ul>"},{"location":"librarys/rag/components/evaluate/#_11","title":"\u5b9e\u73b0\u793a\u4f8b","text":"<pre><code>from sage.libs.rag.evaluate import RecallEvaluate\n\nrecall_evaluator = RecallEvaluate()\nresult = recall_evaluator.execute(data)\n# \u8f93\u51fa\u793a\u4f8b: [Recall] : 0.8000\n</code></pre>"},{"location":"librarys/rag/components/evaluate/#accuracyevaluate-","title":"AccuracyEvaluate - \u51c6\u786e\u7387\u8bc4\u4f30","text":"<p>\u68c0\u67e5\u9884\u6d4b\u6587\u672c\u662f\u5426\u4e0e\u4efb\u4e00\u53c2\u8003\u7b54\u6848\u5b8c\u5168\u5339\u914d\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a <pre><code>from sage.libs.rag.evaluate import AccuracyEvaluate\n\naccuracy_evaluator = AccuracyEvaluate()\nresult = accuracy_evaluator.execute(data)\n</code></pre></p> <p>\u8f93\u51fa\u793a\u4f8b\uff1a <code>[Acc] : 1.0000</code></p>"},{"location":"librarys/rag/components/evaluate/#2","title":"2. \u8bed\u4e49\u76f8\u4f3c\u5ea6\u8bc4\u4f30","text":""},{"location":"librarys/rag/components/evaluate/#bertrecallevaluate-bert","title":"BertRecallEvaluate - BERT\u8bed\u4e49\u53ec\u56de\u7387","text":"<p>\u4f7f\u7528BERT\u6a21\u578b\u8ba1\u7b97\u9884\u6d4b\u6587\u672c\u4e0e\u53c2\u8003\u7b54\u6848\u4e4b\u95f4\u7684\u8bed\u4e49\u76f8\u4f3c\u5ea6\u3002</p> <p>\u4f9d\u8d56\uff1a \u9700\u8981\u5b89\u88c5<code>transformers</code>\u5e93</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a <pre><code>from sage.libs.rag.evaluate import BertRecallEvaluate\n\n# \u6ce8\u610f\uff1a\u9996\u6b21\u4f7f\u7528\u4f1a\u4e0b\u8f7dBERT\u6a21\u578b\nbert_evaluator = BertRecallEvaluate()\nresult = bert_evaluator.execute(data)\n</code></pre></p> <p>\u8f93\u51fa\u793a\u4f8b\uff1a <code>[BertRecall] : 0.8534</code></p>"},{"location":"librarys/rag/components/evaluate/#3-rouge","title":"3. ROUGE\u8bc4\u4f30","text":""},{"location":"librarys/rag/components/evaluate/#rougelevaluate-rouge-l","title":"RougeLEvaluate - ROUGE-L\u8bc4\u4f30","text":"<p>\u8ba1\u7b97ROUGE-L\u5206\u6570\uff0c\u8861\u91cf\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u8d28\u91cf\u3002</p> <p>\u4f9d\u8d56\uff1a \u9700\u8981\u5b89\u88c5<code>rouge</code>\u5e93</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a <pre><code>from sage.libs.rag.evaluate import RougeLEvaluate\n\nrouge_evaluator = RougeLEvaluate()\nresult = rouge_evaluator.execute(data)\n</code></pre></p> <p>\u8f93\u51fa\u793a\u4f8b\uff1a <code>[ROUGE-L] : 0.6667</code></p>"},{"location":"librarys/rag/components/evaluate/#4","title":"4. \u5b57\u7b26\u7ea7\u8bc4\u4f30","text":""},{"location":"librarys/rag/components/evaluate/#brsevaluate-","title":"BRSEvaluate - \u5b57\u7b26\u96c6\u53ec\u56de\u7387","text":"<p>\u8ba1\u7b97\u9884\u6d4b\u6587\u672c\u4e0e\u53c2\u8003\u7b54\u6848\u5b57\u7b26\u96c6\u7684\u91cd\u53e0\u6bd4\u4f8b\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a <pre><code>from sage.libs.rag.evaluate import BRSEvaluate\n\nbrs_evaluator = BRSEvaluate()\nresult = brs_evaluator.execute(data)\n</code></pre></p> <p>\u8f93\u51fa\u793a\u4f8b\uff1a <code>[BRS] : 0.7500</code></p>"},{"location":"librarys/rag/components/evaluate/#5","title":"5. \u6027\u80fd\u6307\u6807","text":""},{"location":"librarys/rag/components/evaluate/#tokencountevaluate-","title":"TokenCountEvaluate - \u4ee4\u724c\u8ba1\u6570","text":"<p>\u7edf\u8ba1\u9884\u6d4b\u6587\u672c\u4e2d\u7684\u4ee4\u724c\u6570\u91cf\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a <pre><code>from sage.libs.rag.evaluate import TokenCountEvaluate\n\ntoken_evaluator = TokenCountEvaluate()\ndata_with_pred = {\"pred\": \"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u53e5\u5b50\"}\nresult = token_evaluator.execute(data_with_pred)\n</code></pre></p> <p>\u8f93\u51fa\u793a\u4f8b\uff1a <code>[Token Count] : 5</code></p>"},{"location":"librarys/rag/components/evaluate/#latencyevaluate-","title":"LatencyEvaluate - \u5ef6\u8fdf\u8bc4\u4f30","text":"<p>\u8ba1\u7b97\u7cfb\u7edf\u603b\u5ef6\u8fdf\u65f6\u95f4\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a <pre><code>from sage.libs.rag.evaluate import LatencyEvaluate\n\nlatency_evaluator = LatencyEvaluate()\ndata_with_time = {\n    \"refine_time\": 0.5,\n    \"generate_time\": 1.2\n}\nresult = latency_evaluator.execute(data_with_time)\n</code></pre></p> <p>\u8f93\u51fa\u793a\u4f8b\uff1a <code>[Latency] : 1.70s</code></p>"},{"location":"librarys/rag/components/evaluate/#6","title":"6. \u68c0\u7d22\u8bc4\u4f30","text":""},{"location":"librarys/rag/components/evaluate/#contextrecallevaluate-","title":"ContextRecallEvaluate - \u4e0a\u4e0b\u6587\u53ec\u56de\u7387","text":"<p>\u8bc4\u4f30\u68c0\u7d22\u5230\u7684\u6587\u6863\u662f\u5426\u5305\u542b\u652f\u6301\u4e8b\u5b9e\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a <pre><code>from sage.libs.rag.evaluate import ContextRecallEvaluate\n\ncontext_evaluator = ContextRecallEvaluate()\ndata_with_context = {\n    \"metadata\": {\n        \"supporting_facts\": {\n            \"sent_id\": [\"doc1_sent1\", \"doc2_sent3\"]\n        }\n    },\n    \"retrieved_sent_ids\": [\"doc1_sent1\", \"doc3_sent2\"]\n}\nresult = context_evaluator.execute(data_with_context)\n</code></pre></p> <p>\u8f93\u51fa\u793a\u4f8b\uff1a <code>[Context Recall] : 0.5000</code></p>"},{"location":"librarys/rag/components/evaluate/#compressionrateevaluate-","title":"CompressionRateEvaluate - \u538b\u7f29\u7387\u8bc4\u4f30","text":"<p>\u8ba1\u7b97\u6587\u6863\u538b\u7f29\u6bd4\u7387\u3002</p> <p>\u4f7f\u7528\u65b9\u6cd5\uff1a <pre><code>from sage.libs.rag.evaluate import CompressionRateEvaluate\n\ncompression_evaluator = CompressionRateEvaluate()\ndata_with_docs = {\n    \"retrieved_docs\": [\"\u5f88\u957f\u7684\u539f\u59cb\u6587\u6863\u5185\u5bb9\", \"\u53e6\u4e00\u4e2a\u5f88\u957f\u7684\u6587\u6863\"],\n    \"refined_docs\": [\"\u7cbe\u70bc\u540e\u7684\u5185\u5bb9\"]\n}\nresult = compression_evaluator.execute(data_with_docs)\n</code></pre></p> <p>\u8f93\u51fa\u793a\u4f8b\uff1a <code>[Compression Rate] : 3.50\u00d7</code></p>"},{"location":"librarys/rag/components/evaluate/#_12","title":"\u6570\u636e\u683c\u5f0f\u8981\u6c42","text":""},{"location":"librarys/rag/components/evaluate/#_13","title":"\u57fa\u672c\u6570\u636e\u7ed3\u6784","text":"<pre><code>{\n    \"references\": [\"\u53c2\u8003\u7b54\u68481\", \"\u53c2\u8003\u7b54\u68482\"],  # \u5fc5\u9700\uff1a\u53c2\u8003\u7b54\u6848\u5217\u8868\n    \"generated\": \"\u751f\u6210\u7684\u9884\u6d4b\u7b54\u6848\",            # \u5fc5\u9700\uff1a\u6a21\u578b\u751f\u6210\u7684\u7b54\u6848\n    \"pred\": \"\u9884\u6d4b\u6587\u672c\",                     # \u53ef\u9009\uff1a\u7528\u4e8e\u4ee4\u724c\u8ba1\u6570\n    \"refine_time\": 0.5,                    # \u53ef\u9009\uff1a\u7cbe\u70bc\u65f6\u95f4\n    \"generate_time\": 1.2,                  # \u53ef\u9009\uff1a\u751f\u6210\u65f6\u95f4\n    \"retrieved_docs\": [\"\u6587\u68631\", \"\u6587\u68632\"],    # \u53ef\u9009\uff1a\u68c0\u7d22\u5230\u7684\u6587\u6863\n    \"refined_docs\": [\"\u7cbe\u70bc\u6587\u6863\"],           # \u53ef\u9009\uff1a\u7cbe\u70bc\u540e\u7684\u6587\u6863\n    \"retrieved_sent_ids\": [\"id1\", \"id2\"],  # \u53ef\u9009\uff1a\u68c0\u7d22\u5230\u7684\u53e5\u5b50ID\n    \"metadata\": {                          # \u53ef\u9009\uff1a\u5143\u6570\u636e\n        \"supporting_facts\": {\n            \"sent_id\": [\"\u652f\u6301\u4e8b\u5b9eID\"]\n        }\n    }\n}\n</code></pre>"},{"location":"librarys/rag/components/evaluate/#_14","title":"\u5b8c\u6574\u4f7f\u7528\u793a\u4f8b","text":"<pre><code>from sage.libs.rag.evaluate import (\n    F1Evaluate, RecallEvaluate, AccuracyEvaluate,\n    BertRecallEvaluate, RougeLEvaluate, BRSEvaluate,\n    TokenCountEvaluate, LatencyEvaluate,\n    ContextRecallEvaluate, CompressionRateEvaluate\n)\n\n# \u51c6\u5907\u6d4b\u8bd5\u6570\u636e\ntest_data = {\n    \"references\": [\"\u5317\u4eac\u662f\u4e2d\u56fd\u7684\u9996\u90fd\", \"\u4e2d\u56fd\u7684\u9996\u90fd\u662f\u5317\u4eac\"],\n    \"generated\": \"\u5317\u4eac\u662f\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u7684\u9996\u90fd\",\n    \"pred\": \"\u5317\u4eac\u662f\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u7684\u9996\u90fd\",\n    \"refine_time\": 0.3,\n    \"generate_time\": 0.8,\n    \"retrieved_docs\": [\"\u5317\u4eac\uff0c\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u9996\u90fd\uff0c\u4f4d\u4e8e\u534e\u5317\u5e73\u539f\u5317\u90e8\", \"\u5317\u4eac\u662f\u653f\u6cbb\u6587\u5316\u4e2d\u5fc3\"],\n    \"refined_docs\": [\"\u5317\u4eac\u662f\u4e2d\u56fd\u9996\u90fd\"],\n    \"retrieved_sent_ids\": [\"doc1_sent1\", \"doc2_sent1\"],\n    \"metadata\": {\n        \"supporting_facts\": {\n            \"sent_id\": [\"doc1_sent1\", \"doc2_sent2\"]\n        }\n    }\n}\n\n# \u521b\u5efa\u8bc4\u4f30\u5668\u5217\u8868\nevaluators = [\n    F1Evaluate(),\n    RecallEvaluate(),\n    AccuracyEvaluate(),\n    BertRecallEvaluate(),\n    RougeLEvaluate(),\n    BRSEvaluate(),\n    TokenCountEvaluate(),\n    LatencyEvaluate(),\n    ContextRecallEvaluate(),\n    CompressionRateEvaluate()\n]\n\n# \u6267\u884c\u6240\u6709\u8bc4\u4f30\nprint(\"\u5f00\u59cbRAG\u7cfb\u7edf\u8bc4\u4f30\uff1a\")\nresult = test_data\nfor evaluator in evaluators:\n    result = evaluator.execute(result)\n\nprint(\"\u8bc4\u4f30\u5b8c\u6210\uff01\")\n</code></pre>"},{"location":"librarys/rag/components/evaluate/#_15","title":"\u6269\u5c55\u5f00\u53d1","text":"<p>\u5982\u679c\u9700\u8981\u6dfb\u52a0\u65b0\u7684\u8bc4\u4f30\u6307\u6807\uff0c\u53ef\u4ee5\u7ee7\u627f<code>MapFunction</code>\u57fa\u7c7b\uff1a</p> <pre><code>from sage.core.api.function.map_function import MapFunction\n\nclass CustomEvaluate(MapFunction):\n    def execute(self, data: dict):\n        # \u5b9e\u73b0\u81ea\u5b9a\u4e49\u8bc4\u4f30\u903b\u8f91\n        score = self.calculate_custom_score(data)\n        print(f\"\\033[93m[Custom] : {score:.4f}\\033[0m\")\n        return data\n\n    def calculate_custom_score(self, data):\n        # \u81ea\u5b9a\u4e49\u8bc4\u4f30\u7b97\u6cd5\n        return 0.0\n</code></pre>"},{"location":"librarys/rag/components/generator/","title":"\u751f\u6210\u7ec4\u4ef6 (Generation Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdSAGE\u6846\u67b6\u4e2d\u751f\u6210\u7ec4\u4ef6\uff08LLM Generator\uff09\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u751f\u6210\u7ec4\u4ef6\u662fRAG\u7cfb\u7edf\u7684\u6838\u5fc3\u8f93\u51fa\u6a21\u5757\uff0c\u8d1f\u8d23\u57fa\u4e8e\u68c0\u7d22\u5230\u7684\u4e0a\u4e0b\u6587\u751f\u6210\u6700\u7ec8\u7b54\u6848\u3002</p>"},{"location":"librarys/rag/components/generator/#_1","title":"\u7ec4\u4ef6\u6982\u8ff0","text":""},{"location":"librarys/rag/components/generator/#_2","title":"\u6838\u5fc3\u529f\u80fd","text":"<p>\u751f\u6210\u7ec4\u4ef6\u5728RAG\u7cfb\u7edf\u4e2d\u627f\u62c5\u4ee5\u4e0b\u5173\u952e\u804c\u8d23\uff1a</p> <ul> <li>\u591a\u6a21\u578b\u652f\u6301\uff1a\u517c\u5bb9OpenAI API\u3001VLLM\u3001DashScope\u7b49\u591a\u79cdLLM\u670d\u52a1</li> <li>\u4e0a\u4e0b\u6587\u878d\u5408\uff1a\u5c06\u7528\u6237\u67e5\u8be2\u4e0e\u68c0\u7d22\u4e0a\u4e0b\u6587\u6709\u6548\u7ed3\u5408</li> <li>\u751f\u6210\u8d28\u91cf\u63a7\u5236\uff1a\u652f\u6301\u6e29\u5ea6\u3001\u79cd\u5b50\u7b49\u53c2\u6570\u7cbe\u786e\u63a7\u5236</li> <li>\u6027\u80fd\u76d1\u63a7\uff1a\u63d0\u4f9b\u751f\u6210\u8bb0\u5f55\u7684\u8ffd\u8e2a\u548c\u5206\u6790\u529f\u80fd</li> </ul>"},{"location":"librarys/rag/components/generator/#_3","title":"\u8bbe\u8ba1\u67b6\u6784","text":"<p>\u751f\u6210\u7ec4\u4ef6\u91c7\u7528\u7edf\u4e00\u7684\u63a5\u53e3\u8bbe\u8ba1\uff0c\u652f\u6301\u591a\u79cd\u540e\u7aef\u5b9e\u73b0\uff1a</p> <pre><code># \u7edf\u4e00\u8f93\u5165\u683c\u5f0f\ninput_data = [user_query, prompt]  # \u6216 [prompt]\n\n# \u7edf\u4e00\u8f93\u51fa\u683c\u5f0f  \noutput = (user_query, generated_text)\n</code></pre>"},{"location":"librarys/rag/components/generator/#openaigenerator","title":"OpenAIGenerator","text":""},{"location":"librarys/rag/components/generator/#_4","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>OpenAIGenerator</code>\u662f\u517c\u5bb9OpenAI API\u6807\u51c6\u7684\u751f\u6210\u5668\uff0c\u652f\u6301\u8c03\u7528OpenAI\u3001VLLM\u3001DashScope\u7b49\u7b26\u5408OpenAI API\u89c4\u8303\u7684LLM\u670d\u52a1\u3002</p>"},{"location":"librarys/rag/components/generator/#_5","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u652f\u6301\u7684\u670d\u52a1\u7aef\u70b9\uff1a - OpenAI GPT\u7cfb\u5217\u6a21\u578b - VLLM\u672c\u5730\u90e8\u7f72\u670d\u52a1 - \u963f\u91cc\u4e91DashScope\u670d\u52a1 - \u5176\u4ed6OpenAI API\u517c\u5bb9\u670d\u52a1</p> <p>\u914d\u7f6e\u53c2\u6570\uff1a</p> \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>method</code> str \"openai\" \u670d\u52a1\u7c7b\u578b\u6807\u8bc6 <code>model_name</code> str - \u6a21\u578b\u540d\u79f0\uff08\u5982gpt-4o-mini\uff09 <code>base_url</code> str - API\u670d\u52a1\u5730\u5740 <code>api_key</code> str - API\u8bbf\u95ee\u5bc6\u94a5 <code>seed</code> int None \u968f\u673a\u79cd\u5b50\uff08\u53ef\u9009\uff09 <code>temperature</code> float 0.7 \u751f\u6210\u6e29\u5ea6\u53c2\u6570 <code>max_tokens</code> int None \u6700\u5927\u751f\u6210\u957f\u5ea6 <code>enable_profile</code> bool False \u662f\u5426\u542f\u7528\u751f\u6210\u8bb0\u5f55\u4fdd\u5b58"},{"location":"librarys/rag/components/generator/#_6","title":"\u5b9e\u73b0\u793a\u4f8b","text":""},{"location":"librarys/rag/components/generator/#_7","title":"\u57fa\u7840\u914d\u7f6e\u4e0e\u4f7f\u7528","text":"<pre><code>from sage.libs.rag.generator import OpenAIGenerator\n\n# VLLM\u672c\u5730\u670d\u52a1\u914d\u7f6e\nconfig = {\n    \"method\": \"openai\",\n    \"model_name\": \"gpt-4o-mini\", \n    \"base_url\": \"http://localhost:8000/v1\",\n    \"api_key\": \"your-api-key\",\n    \"seed\": 42,\n    \"temperature\": 0.7\n}\n\n# \u521d\u59cb\u5316\u751f\u6210\u5668\ngenerator = OpenAIGenerator(config)\n\n# \u6267\u884c\u751f\u6210\nuser_query = \"\u4ec0\u4e48\u662fRAG\u6280\u672f\uff1f\"\nprompt = \"\u57fa\u4e8e\u4ee5\u4e0b\u4e0a\u4e0b\u6587\u56de\u7b54\u95ee\u9898\uff1a[\u68c0\u7d22\u5230\u7684\u4e0a\u4e0b\u6587\u5185\u5bb9]\"\n\nuser_query, generated_text = generator.execute([user_query, prompt])\nprint(f\"\u7528\u6237\u95ee\u9898: {user_query}\")\nprint(f\"\u751f\u6210\u7b54\u6848: {generated_text}\")\n</code></pre>"},{"location":"librarys/rag/components/generator/#_8","title":"\u542f\u7528\u6027\u80fd\u5206\u6790","text":"<pre><code># \u542f\u7528\u751f\u6210\u8bb0\u5f55\u4fdd\u5b58\nconfig[\"enable_profile\"] = True\ngenerator = OpenAIGenerator(config)\n\n# \u751f\u6210\u8bb0\u5f55\u5c06\u81ea\u52a8\u4fdd\u5b58\u5230\u672c\u5730\u6587\u4ef6\nresult = generator.execute([user_query, prompt])\n# \u8bb0\u5f55\u5305\u542b\uff1a\u8f93\u5165\u6587\u672c\u3001\u8f93\u51fa\u6587\u672c\u3001\u65f6\u95f4\u6233\u3001\u6a21\u578b\u53c2\u6570\u7b49\n</code></pre>"},{"location":"librarys/rag/components/generator/#hfgenerator","title":"HFGenerator","text":""},{"location":"librarys/rag/components/generator/#_9","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>HFGenerator</code>\u4e13\u95e8\u7528\u4e8e\u8c03\u7528HuggingFace\u751f\u6001\u7684\u672c\u5730\u6a21\u578b\uff0c\u9002\u5408\u65e0\u5916\u7f51\u4f9d\u8d56\u6216\u9700\u8981\u5b8c\u5168\u672c\u5730\u90e8\u7f72\u7684\u573a\u666f\u3002</p>"},{"location":"librarys/rag/components/generator/#_10","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u9002\u7528\u6a21\u578b\uff1a - HuggingFace Transformers\u6a21\u578b - \u672c\u5730\u5fae\u8c03\u6a21\u578b - \u91cf\u5316\u6a21\u578b\uff08GPTQ\u3001AWQ\u7b49\uff09</p> <p>\u914d\u7f6e\u53c2\u6570\uff1a</p> \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>model_name</code> str - HuggingFace\u6a21\u578b\u540d\u79f0\u6216\u672c\u5730\u8def\u5f84 <code>device</code> str \"auto\" \u8fd0\u884c\u8bbe\u5907\uff08cuda/cpu/auto\uff09 <code>torch_dtype</code> str \"auto\" \u6570\u636e\u7c7b\u578b\uff08float16/bfloat16\u7b49\uff09 <code>load_in_4bit</code> bool False \u662f\u5426\u542f\u75284bit\u91cf\u5316 <code>temperature</code> float 0.7 \u751f\u6210\u6e29\u5ea6 <code>max_new_tokens</code> int 512 \u6700\u5927\u65b0\u751f\u6210token\u6570"},{"location":"librarys/rag/components/generator/#_11","title":"\u5b9e\u73b0\u793a\u4f8b","text":""},{"location":"librarys/rag/components/generator/#_12","title":"\u672c\u5730\u6a21\u578b\u90e8\u7f72","text":"<pre><code>from sage.libs.rag.generator import HFGenerator\n\n# \u672c\u5730\u6a21\u578b\u914d\u7f6e\nconfig = {\n    \"model_name\": \"microsoft/DialoGPT-medium\",\n    \"device\": \"cuda\",\n    \"temperature\": 0.8,\n    \"max_new_tokens\": 256\n}\n\n# \u521d\u59cb\u5316\u751f\u6210\u5668\ngenerator = HFGenerator(config)\n\n# \u6267\u884c\u751f\u6210\nuser_query, generated_text = generator.execute([user_query, prompt])\n</code></pre>"},{"location":"librarys/rag/components/generator/#_13","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"librarys/rag/components/generator/#_14","title":"\u6a21\u578b\u9009\u62e9\u5efa\u8bae","text":"<ol> <li>\u751f\u4ea7\u73af\u5883\uff1a</li> <li>\u63a8\u8350\u4f7f\u7528OpenAIGenerator + VLLM\u90e8\u7f72</li> <li> <p>\u652f\u6301\u9ad8\u5e76\u53d1\uff0c\u6027\u80fd\u7a33\u5b9a</p> </li> <li> <p>\u5f00\u53d1\u6d4b\u8bd5\uff1a</p> </li> <li>\u53ef\u4f7f\u7528OpenAI API\u8fdb\u884c\u5feb\u901f\u9a8c\u8bc1</li> <li> <p>HFGenerator\u9002\u5408\u79bb\u7ebf\u5f00\u53d1</p> </li> <li> <p>\u79c1\u6709\u90e8\u7f72\uff1a</p> </li> <li>HFGenerator + \u672c\u5730\u6a21\u578b</li> <li>\u5b8c\u5168\u63a7\u5236\u6570\u636e\u5b89\u5168</li> </ol>"},{"location":"librarys/rag/components/promptor/","title":"\u63d0\u793a\u8bcd\u751f\u6210\u7ec4\u4ef6 (Prompt Generation Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdSAGE\u6846\u67b6\u4e2d<code>sage.libs.rag.promptor</code>\u6a21\u5757\u7684\u63d0\u793a\u8bcd\u751f\u6210\u7ec4\u4ef6\u3002\u63d0\u793a\u8bcd\u7ec4\u4ef6\u662fRAG\u7cfb\u7edf\u7684\u8ba4\u77e5\u63a5\u53e3\u5c42\uff0c\u8d1f\u8d23\u5c06\u68c0\u7d22\u4e0a\u4e0b\u6587\u4e0e\u7528\u6237\u67e5\u8be2\u6709\u6548\u878d\u5408\uff0c\u4e3a\u751f\u6210\u6a21\u578b\u63d0\u4f9b\u7ed3\u6784\u5316\u8f93\u5165\u3002</p>"},{"location":"librarys/rag/components/promptor/#_1","title":"\u7ec4\u4ef6\u6982\u8ff0","text":""},{"location":"librarys/rag/components/promptor/#_2","title":"\u6838\u5fc3\u529f\u80fd","text":"<p>\u63d0\u793a\u8bcd\u751f\u6210\u7ec4\u4ef6\u5728RAG\u7cfb\u7edf\u4e2d\u627f\u62c5\u4ee5\u4e0b\u5173\u952e\u804c\u8d23\uff1a</p> <ul> <li>\u4e0a\u4e0b\u6587\u6574\u5408\uff1a\u5c06\u68c0\u7d22\u5230\u7684\u76f8\u5173\u6587\u6863\u4e0e\u7528\u6237\u67e5\u8be2\u8fdb\u884c\u667a\u80fd\u878d\u5408</li> <li>\u4efb\u52a1\u9002\u914d\uff1a\u9488\u5bf9\u4e0d\u540c\u4efb\u52a1\u7c7b\u578b\uff08\u95ee\u7b54\u3001\u6458\u8981\u3001\u5206\u6790\uff09\u63d0\u4f9b\u4e13\u95e8\u7684\u6a21\u677f</li> <li>\u683c\u5f0f\u6807\u51c6\u5316\uff1a\u786e\u4fdd\u751f\u6210\u6a21\u578b\u8f93\u5165\u7684\u4e00\u81f4\u6027\u548c\u6709\u6548\u6027</li> <li>\u8bed\u4e49\u589e\u5f3a\uff1a\u901a\u8fc7\u7ed3\u6784\u5316\u63d0\u793a\u63d0\u5347\u6a21\u578b\u7406\u89e3\u548c\u751f\u6210\u8d28\u91cf</li> </ul>"},{"location":"librarys/rag/components/promptor/#_3","title":"\u8bbe\u8ba1\u67b6\u6784","text":"<p>\u6240\u6709\u63d0\u793a\u8bcd\u751f\u6210\u5668\u7ee7\u627f\u81ea<code>MapFunction</code>\u57fa\u7c7b\uff0c\u652f\u6301\u6d41\u6c34\u7ebf\u5904\u7406\uff1a</p> <pre><code># \u6807\u51c6\u5904\u7406\u6d41\u7a0b\ninput_data \u2192 \u6a21\u677f\u6e32\u67d3 \u2192 \u7ed3\u6784\u5316\u63d0\u793a \u2192 \u8f93\u51fa\u4f20\u9012\n</code></pre>"},{"location":"librarys/rag/components/promptor/#_4","title":"\u6a21\u677f\u5f15\u64ce","text":"<p>\u91c7\u7528Jinja2\u6a21\u677f\u5f15\u64ce\uff0c\u652f\u6301\uff1a - \u6761\u4ef6\u6e32\u67d3 - \u5faa\u73af\u7ed3\u6784 - \u53d8\u91cf\u66ff\u6362 - \u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668</p>"},{"location":"librarys/rag/components/promptor/#_5","title":"\u6838\u5fc3\u63d0\u793a\u8bcd\u751f\u6210\u5668","text":""},{"location":"librarys/rag/components/promptor/#qapromptor","title":"QAPromptor","text":""},{"location":"librarys/rag/components/promptor/#_6","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>QAPromptor</code>\u662f\u4e13\u95e8\u7528\u4e8e\u95ee\u7b54\u4efb\u52a1\u7684\u63d0\u793a\u8bcd\u751f\u6210\u5668\uff0c\u5c06\u7528\u6237\u95ee\u9898\u4e0e\u68c0\u7d22\u5230\u7684\u4e0a\u4e0b\u6587\u6587\u6863\u7ec4\u7ec7\u6210\u9002\u5408\u95ee\u7b54\u7684\u7ed3\u6784\u5316\u63d0\u793a\u3002</p>"},{"location":"librarys/rag/components/promptor/#_7","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u8f93\u5165\u683c\u5f0f\uff1a <pre><code>input_data = (query, retrieved_documents)\n# query: str - \u7528\u6237\u67e5\u8be2\n# retrieved_documents: List[str] - \u68c0\u7d22\u5230\u7684\u76f8\u5173\u6587\u6863\n</code></pre></p> <p>\u8f93\u51fa\u683c\u5f0f\uff1a <pre><code>output = (query, structured_prompt)\n# query: str - \u539f\u59cb\u7528\u6237\u67e5\u8be2\n# structured_prompt: str - \u7ed3\u6784\u5316\u7684\u63d0\u793a\u8bcd\n</code></pre></p> <p>\u5185\u7f6e\u6a21\u677f\uff1a <pre><code>Instruction:\nYou are an intelligent assistant with access to a knowledge base. \nAnswer the question below with reference to the provided context.\nOnly give me the answer and do not output any other words.\n\n{%- if external_corpus %}\nRelevant corpus for the current question:\n{{ external_corpus }}\n{%- endif %}\n\nQuestion: {{ query }}\nAnswer:\n</code></pre></p>"},{"location":"librarys/rag/components/promptor/#_8","title":"\u5b9e\u73b0\u793a\u4f8b","text":""},{"location":"librarys/rag/components/promptor/#_9","title":"\u57fa\u7840\u95ee\u7b54\u751f\u6210","text":"<pre><code>from sage.libs.rag.promptor import QAPromptor\n\n# \u521d\u59cb\u5316\u63d0\u793a\u8bcd\u751f\u6210\u5668\nqa_promptor = QAPromptor()\n\n# \u51c6\u5907\u8f93\u5165\u6570\u636e\nuser_query = \"\u4ec0\u4e48\u662f\u5411\u91cf\u6570\u636e\u5e93\uff1f\"\nretrieved_docs = [\n    \"\u5411\u91cf\u6570\u636e\u5e93\u662f\u4e13\u95e8\u5b58\u50a8\u548c\u68c0\u7d22\u9ad8\u7ef4\u5411\u91cf\u6570\u636e\u7684\u6570\u636e\u5e93\u7cfb\u7edf\u3002\",\n    \"ChromaDB\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5411\u91cf\u6570\u636e\u5e93\uff0c\u652f\u6301\u76f8\u4f3c\u5ea6\u68c0\u7d22\u3002\",\n    \"\u5411\u91cf\u6570\u636e\u5e93\u5728RAG\u7cfb\u7edf\u4e2d\u7528\u4e8e\u5b58\u50a8\u6587\u6863\u7684\u5411\u91cf\u8868\u793a\u3002\"\n]\n\n# \u751f\u6210\u7ed3\u6784\u5316\u63d0\u793a\nquery, prompt = qa_promptor.execute((user_query, retrieved_docs))\n\nprint(\"\u751f\u6210\u7684\u63d0\u793a\u8bcd:\")\nprint(prompt)\n</code></pre>"},{"location":"librarys/rag/components/promptor/#_10","title":"\u81ea\u5b9a\u4e49\u6a21\u677f","text":"<pre><code># \u81ea\u5b9a\u4e49\u6a21\u677f\u914d\u7f6e\ncustom_template = \"\"\"\nContext: \u60a8\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u6280\u672f\u6587\u6863\u52a9\u624b\u3002\nTask: \u57fa\u4e8e\u4ee5\u4e0b\u8d44\u6599\u56de\u7b54\u7528\u6237\u95ee\u9898\uff0c\u8981\u6c42\u51c6\u786e\u3001\u7b80\u6d01\u3002\n\n\u53c2\u8003\u8d44\u6599:\n{%- for doc in external_corpus %}\n{{ loop.index }}. {{ doc }}\n{%- endfor %}\n\n\u7528\u6237\u95ee\u9898: {{ query }}\n\u60a8\u7684\u56de\u7b54:\n\"\"\"\n\nqa_promptor_custom = QAPromptor(template=custom_template)\n</code></pre>"},{"location":"librarys/rag/components/promptor/#summarizationpromptor","title":"SummarizationPromptor","text":""},{"location":"librarys/rag/components/promptor/#_11","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>SummarizationPromptor</code>\u4e13\u95e8\u7528\u4e8e\u6458\u8981\u751f\u6210\u4efb\u52a1\uff0c\u5c06\u591a\u4e2a\u6587\u6863\u5185\u5bb9\u7ec4\u7ec7\u6210\u9002\u5408\u6458\u8981\u7684\u7ed3\u6784\u5316\u63d0\u793a\u3002</p>"},{"location":"librarys/rag/components/promptor/#_12","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u5185\u7f6e\u6a21\u677f\uff1a <pre><code>Instruction:\nYou are an intelligent assistant. Summarize the content provided below \nin a concise and clear manner.\nOnly provide the summary and do not include any additional information.\n\n{%- if external_corpus %}\nContent to summarize:\n{{ external_corpus }}\n{%- endif %}\n\nSummary:\n</code></pre></p>"},{"location":"librarys/rag/components/promptor/#_13","title":"\u5b9e\u73b0\u793a\u4f8b","text":"<pre><code>from sage.libs.rag.promptor import SummarizationPromptor\n\n# \u521d\u59cb\u5316\u6458\u8981\u63d0\u793a\u8bcd\u751f\u6210\u5668\nsum_promptor = SummarizationPromptor()\n\n# \u51c6\u5907\u6587\u6863\u5185\u5bb9\ndocuments = [\n    \"RAG\u6280\u672f\u7ed3\u5408\u4e86\u68c0\u7d22\u548c\u751f\u6210\u4e24\u4e2a\u6b65\u9aa4\u3002\",\n    \"\u68c0\u7d22\u6b65\u9aa4\u4ece\u77e5\u8bc6\u5e93\u4e2d\u627e\u5230\u76f8\u5173\u4fe1\u606f\u3002\", \n    \"\u751f\u6210\u6b65\u9aa4\u57fa\u4e8e\u68c0\u7d22\u7ed3\u679c\u4ea7\u751f\u6700\u7ec8\u7b54\u6848\u3002\"\n]\n\n# \u751f\u6210\u6458\u8981\u63d0\u793a\n_, summary_prompt = sum_promptor.execute((\"\", documents))\nprint(\"\u6458\u8981\u63d0\u793a\u8bcd:\", summary_prompt)\n</code></pre>"},{"location":"librarys/rag/components/promptor/#queryprofilerpromptor","title":"QueryProfilerPromptor","text":""},{"location":"librarys/rag/components/promptor/#_14","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>QueryProfilerPromptor</code>\u7528\u4e8e\u5206\u6790\u7528\u6237\u67e5\u8be2\u7684\u7279\u5f81\uff0c\u5224\u65ad\u67e5\u8be2\u590d\u6742\u5ea6\u3001\u6240\u9700\u63a8\u7406\u7c7b\u578b\u7b49\u5c5e\u6027\uff0c\u4e3a\u7cfb\u7edf\u4f18\u5316\u63d0\u4f9b\u51b3\u7b56\u4f9d\u636e\u3002</p>"},{"location":"librarys/rag/components/promptor/#_15","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u5206\u6790\u7ef4\u5ea6\uff1a - \u67e5\u8be2\u590d\u6742\u5ea6\uff08\u7b80\u5355/\u4e2d\u7b49/\u590d\u6742\uff09 - \u63a8\u7406\u7c7b\u578b\uff08\u4e8b\u5b9e\u6027/\u5206\u6790\u6027/\u7efc\u5408\u6027\uff09 - \u6587\u6863\u9700\u6c42\uff08\u5355\u6587\u6863/\u591a\u6587\u6863\uff09 - \u65f6\u6548\u6027\u8981\u6c42\uff08\u5386\u53f2/\u5b9e\u65f6\uff09</p> <p>\u8f93\u51fa\u683c\u5f0f\uff1a <pre><code>{\n    \"complexity\": str,        # \u67e5\u8be2\u590d\u6742\u5ea6\n    \"reasoning_type\": str,    # \u63a8\u7406\u7c7b\u578b\n    \"document_scope\": str,    # \u6587\u6863\u8303\u56f4\u9700\u6c42\n    \"temporal_requirement\": str  # \u65f6\u6548\u6027\u9700\u6c42\n}\n</code></pre></p>"},{"location":"librarys/rag/components/promptor/#_16","title":"\u5b9e\u73b0\u793a\u4f8b","text":"<pre><code>from sage.libs.rag.promptor import QueryProfilerPromptor\n\n# \u521d\u59cb\u5316\u67e5\u8be2\u5206\u6790\u5668\nprofiler = QueryProfilerPromptor()\n\n# \u5206\u6790\u7b80\u5355\u4e8b\u5b9e\u67e5\u8be2\nsimple_query = \"\u4ec0\u4e48\u662fPython\uff1f\"\nprofile_result = profiler.execute(simple_query)\n\n# \u5206\u6790\u590d\u6742\u63a8\u7406\u67e5\u8be2  \ncomplex_query = \"\u5bf9\u6bd4\u5206\u6790Python\u548cJava\u5728\u673a\u5668\u5b66\u4e60\u9886\u57df\u7684\u4f18\u7f3a\u70b9\"\ncomplex_profile = profiler.execute(complex_query)\n\nprint(\"\u7b80\u5355\u67e5\u8be2\u5206\u6790:\", profile_result)\nprint(\"\u590d\u6742\u67e5\u8be2\u5206\u6790:\", complex_profile)\n</code></pre>"},{"location":"librarys/rag/components/promptor/#2-summarizationpromptor-","title":"2. SummarizationPromptor - \u6458\u8981\u63d0\u793a\u8bcd\u751f\u6210\u5668","text":"<p>\u4e13\u95e8\u7528\u4e8e\u751f\u6210\u6587\u672c\u6458\u8981\u4efb\u52a1\u7684\u63d0\u793a\u8bcd\u3002</p>"},{"location":"librarys/rag/components/promptor/#_17","title":"\u57fa\u672c\u4f7f\u7528","text":"<pre><code>from sage.libs.rag.promptor import SummarizationPromptor\n\n# \u521d\u59cb\u5316\nconfig = {}\nsum_promptor = SummarizationPromptor(config)\n\n# \u8f93\u5165\uff1a(\u67e5\u8be2, \u8981\u6458\u8981\u7684\u6587\u672c\u5217\u8868)\ndata = (\n    \"\u8bf7\u603b\u7ed3\u4ee5\u4e0b\u5185\u5bb9\",\n    [\n        \"\u4eba\u5de5\u667a\u80fd\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e00\u4e2a\u91cd\u8981\u5206\u652f...\",\n        \"\u673a\u5668\u5b66\u4e60\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6838\u5fc3\u6280\u672f\u4e4b\u4e00...\",\n        \"\u6df1\u5ea6\u5b66\u4e60\u8fd1\u5e74\u6765\u53d6\u5f97\u4e86\u7a81\u7834\u6027\u8fdb\u5c55...\"\n    ]\n)\n\nresult = sum_promptor.execute(data)\n</code></pre>"},{"location":"librarys/rag/components/promptor/#_18","title":"\u8f93\u51fa\u683c\u5f0f","text":"<pre><code># \u8fd4\u56de\u6458\u8981\u63d0\u793a\u8bcd\u5217\u8868\n[\n    {\n        \"role\": \"system\",\n        \"content\": \"You are an intelligent assistant. Summarize the content provided below...\"\n    },\n    {\n        \"role\": \"user\",\n        \"content\": \"Question: \u8bf7\u603b\u7ed3\u4ee5\u4e0b\u5185\u5bb9\"\n    }\n]\n</code></pre>"},{"location":"librarys/rag/components/promptor/#3-queryprofilerpromptor-","title":"3. QueryProfilerPromptor - \u67e5\u8be2\u5206\u6790\u5668","text":"<p>\u7528\u4e8e\u5206\u6790\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u548c\u7279\u5f81\uff0c\u5e2e\u52a9\u4f18\u5316RAG\u7ba1\u9053\u3002</p>"},{"location":"librarys/rag/components/promptor/#_19","title":"\u57fa\u672c\u4f7f\u7528","text":"<pre><code>from sage.libs.rag.promptor import QueryProfilerPromptor\n\n# \u914d\u7f6e\u5143\u6570\u636e\nconfig = {\n    \"metadata\": \"The dataset consists of multiple chunks of information from Fortune 500 companies\",\n    \"chunk_size\": 1024\n}\n\nprofiler = QueryProfilerPromptor(config)\n\n# \u5206\u6790\u67e5\u8be2\nquery = \"\u7279\u6717\u666e\u662f\u5982\u4f55\u8d5a\u5230\u7b2c\u4e00\u4e2a100\u4e07\u7f8e\u5143\u7684\uff1f\"\nresult = profiler.execute(query)\n</code></pre>"},{"location":"librarys/rag/components/promptor/#_20","title":"\u671f\u671b\u7684\u5206\u6790\u7ed3\u679c","text":"<pre><code>{\n  \"need_joint_reasoning\": true,\n  \"complexity\": \"High\",\n  \"need_summarization\": true, \n  \"summarization_length\": 150,\n  \"n_info_items\": 3\n}\n</code></pre>"},{"location":"librarys/rag/components/promptor/#_21","title":"\u5b8c\u6574\u4f7f\u7528\u793a\u4f8b","text":""},{"location":"librarys/rag/components/promptor/#rag","title":"RAG\u95ee\u7b54\u6d41\u6c34\u7ebf","text":"<pre><code>from sage.libs.rag.promptor import QAPromptor, QueryProfilerPromptor\n\n# 1. \u521d\u59cb\u5316\u7ec4\u4ef6\nconfig = {}\nqa_promptor = QAPromptor(config, enable_profile=True)\nprofiler = QueryProfilerPromptor({\n    \"metadata\": \"\u4f01\u4e1a\u8d22\u52a1\u62a5\u544a\u6570\u636e\u5e93\",\n    \"chunk_size\": 1024\n})\n\n# 2. \u67e5\u8be2\u5206\u6790\nquery = \"\u82f9\u679c\u516c\u53f82023\u5e74Q4\u7684\u8425\u6536\u60c5\u51b5\u5982\u4f55\uff1f\"\nprofile_result = profiler.execute(query)\nprint(\"\u67e5\u8be2\u5206\u6790\u7ed3\u679c:\", profile_result)\n\n# 3. \u68c0\u7d22\u76f8\u5173\u6587\u6863\uff08\u6a21\u62df\uff09\nretrieved_docs = [\n    \"\u82f9\u679c\u516c\u53f82023\u5e74\u7b2c\u56db\u5b63\u5ea6\u8425\u6536\u8fbe\u5230895\u4ebf\u7f8e\u5143...\",\n    \"\u76f8\u6bd42022\u5e74\u540c\u671f\uff0c\u82f9\u679cQ4\u8425\u6536\u589e\u957f\u4e862.1%...\",\n    \"iPhone\u9500\u552e\u989d\u5728Q4\u5360\u603b\u8425\u6536\u768452%...\"\n]\n\n# 4. \u751f\u6210\u95ee\u7b54\u63d0\u793a\u8bcd\nqa_data = (query, retrieved_docs)\nqa_result = qa_promptor.execute(qa_data)\n\nprint(\"\u751f\u6210\u7684\u63d0\u793a\u8bcd:\")\nfor msg in qa_result[1]:\n    print(f\"{msg['role']}: {msg['content'][:100]}...\")\n</code></pre>"},{"location":"librarys/rag/components/promptor/#_22","title":"\u6458\u8981\u751f\u6210\u6d41\u6c34\u7ebf","text":"<pre><code>from sage.libs.rag.promptor import SummarizationPromptor\n\n# \u521d\u59cb\u5316\u6458\u8981\u751f\u6210\u5668\nsum_promptor = SummarizationPromptor({})\n\n# \u957f\u6587\u672c\u6458\u8981\nlong_documents = [\n    \"2023\u5e74\u4eba\u5de5\u667a\u80fd\u9886\u57df\u53d6\u5f97\u4e86\u91cd\u5927\u7a81\u7834\uff0cChatGPT\u7684\u53d1\u5e03\u6807\u5fd7\u7740\u5927\u8bed\u8a00\u6a21\u578b\u65f6\u4ee3\u7684\u5230\u6765...\",\n    \"\u5404\u5927\u79d1\u6280\u516c\u53f8\u7eb7\u7eb7\u6295\u5165AI\u7814\u53d1\uff0cGoogle\u53d1\u5e03\u4e86Bard\uff0c\u767e\u5ea6\u63a8\u51fa\u4e86\u6587\u5fc3\u4e00\u8a00...\",\n    \"AI\u6280\u672f\u5728\u5404\u884c\u5404\u4e1a\u90fd\u6709\u5e94\u7528\uff0c\u4ece\u533b\u7597\u8bca\u65ad\u5230\u81ea\u52a8\u9a7e\u9a76\uff0c\u4ece\u91d1\u878d\u98ce\u63a7\u5230\u6559\u80b2\u8f85\u5bfc...\"\n]\n\nsum_data = (\"\u603b\u7ed32023\u5e74AI\u53d1\u5c55\", long_documents)\nsum_result = sum_promptor.execute(sum_data)\n\nprint(\"\u6458\u8981\u63d0\u793a\u8bcd:\", sum_result[0]['content'])\n</code></pre>"},{"location":"librarys/rag/components/promptor/#_23","title":"\u591a\u6a21\u5f0f\u7ec4\u5408\u4f7f\u7528","text":"<pre><code>class RAGPipeline:\n    def __init__(self):\n        self.qa_promptor = QAPromptor({}, enable_profile=True)\n        self.sum_promptor = SummarizationPromptor({})\n        self.profiler = QueryProfilerPromptor({\n            \"metadata\": \"\u7efc\u5408\u77e5\u8bc6\u5e93\",\n            \"chunk_size\": 1024\n        })\n\n    def process_query(self, query, documents, use_summarization=False):\n        # 1. \u5206\u6790\u67e5\u8be2\u7279\u5f81\n        profile = self.profiler.execute(query)\n\n        # 2. \u6839\u636e\u5206\u6790\u7ed3\u679c\u51b3\u5b9a\u662f\u5426\u9700\u8981\u6458\u8981\n        if use_summarization or self._need_summarization(profile):\n            # \u5148\u751f\u6210\u6458\u8981\n            sum_prompt = self.sum_promptor.execute((\n                f\"\u8bf7\u6458\u8981\u4ee5\u4e0b\u4e0e'{query}'\u76f8\u5173\u7684\u5185\u5bb9\", \n                documents\n            ))\n            # \u8fd9\u91cc\u53ef\u4ee5\u8c03\u7528LLM\u83b7\u53d6\u6458\u8981\u7ed3\u679c\n            summarized_docs = [\"\u6458\u8981\u540e\u7684\u5185\u5bb9...\"]  # \u6a21\u62df\u6458\u8981\u7ed3\u679c\n            final_docs = summarized_docs\n        else:\n            final_docs = documents\n\n        # 3. \u751f\u6210\u6700\u7ec8\u7684QA\u63d0\u793a\u8bcd\n        qa_prompt = self.qa_promptor.execute((query, final_docs))\n\n        return {\n            'profile': profile,\n            'final_prompt': qa_prompt,\n            'used_summarization': use_summarization\n        }\n\n    def _need_summarization(self, profile):\n        # \u6839\u636eprofile\u7ed3\u679c\u5224\u65ad\u662f\u5426\u9700\u8981\u6458\u8981\n        return profile[0].get('content', {}).get('need_summarization', False)\n\n# \u4f7f\u7528\u793a\u4f8b\npipeline = RAGPipeline()\nresult = pipeline.process_query(\n    \"\u4ec0\u4e48\u662f\u91cf\u5b50\u8ba1\u7b97\uff1f\",\n    [\"\u91cf\u5b50\u8ba1\u7b97\u76f8\u5173\u6587\u68631\", \"\u91cf\u5b50\u8ba1\u7b97\u76f8\u5173\u6587\u68632\"],\n    use_summarization=True\n)\n</code></pre>"},{"location":"librarys/rag/components/promptor/#_24","title":"\u914d\u7f6e\u9009\u9879","text":""},{"location":"librarys/rag/components/promptor/#qapromptor_1","title":"QAPromptor\u914d\u7f6e","text":"<pre><code>config = {\n    # \u81ea\u5b9a\u4e49\u63d0\u793a\u8bcd\u6a21\u677f\n    'template': '''\u81ea\u5b9a\u4e49\u7684Jinja2\u6a21\u677f\u5185\u5bb9''',\n\n    # \u5176\u4ed6\u914d\u7f6e\u9879...\n}\n\n# enable_profile\u53c2\u6570\u63a7\u5236\u662f\u5426\u542f\u7528\u6570\u636e\u8bb0\u5f55\nqa_promptor = QAPromptor(config, enable_profile=True)\n</code></pre>"},{"location":"librarys/rag/components/promptor/#queryprofilerpromptor_1","title":"QueryProfilerPromptor\u914d\u7f6e","text":"<pre><code>config = {\n    'metadata': '\u6570\u636e\u96c6\u63cf\u8ff0\u4fe1\u606f',\n    'chunk_size': 1024,  # \u5206\u5757\u5927\u5c0f\n    # \u5176\u4ed6\u5143\u6570\u636e...\n}\n</code></pre>"},{"location":"librarys/rag/components/refiner/","title":"\u7cbe\u70bc\u7ec4\u4ef6 (Refiner Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdSAGE\u6846\u67b6\u4e2d\u7cbe\u70bc\u7ec4\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u7cbe\u70bc\u7ec4\u4ef6\u662fRAG\u7cfb\u7edf\u7684\u9ad8\u7ea7\u4f18\u5316\u6a21\u5757\uff0c\u8d1f\u8d23\u4ece\u68c0\u7d22\u5230\u7684\u5927\u91cf\u6587\u6863\u4e2d\u7b5b\u9009\u3001\u538b\u7f29\u548c\u91cd\u7ec4\u6700\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u4ee5\u63d0\u9ad8\u751f\u6210\u8d28\u91cf\u548c\u964d\u4f4e\u8ba1\u7b97\u6210\u672c\u3002</p>"},{"location":"librarys/rag/components/refiner/#_1","title":"\u6280\u672f\u80cc\u666f","text":""},{"location":"librarys/rag/components/refiner/#_2","title":"\u8bba\u6587\u6765\u6e90","text":"<p>\u7cbe\u70bc\u7ec4\u4ef6\u57fa\u4e8eACL 2025\u63a5\u6536\u7684\u8bba\u6587\u300aHierarchical Document Refinement for Long-context Retrieval-augmented Generation\u300b\u5b9e\u73b0\uff1a</p> <p>\u8bba\u6587\u4fe1\u606f\uff1a - \u6807\u9898\uff1aHierarchical Document Refinement for Long-context Retrieval-augmented Generation - \u4f5c\u8005\uff1aJiajie Jin, Xiaoxi Li, Guanting Dong, Yuyao Zhang, Yutao Zhu, Yongkang Wu, Zhonghua Li, Qi Ye, Zhicheng Dou - \u4f1a\u8bae\uff1aACL 2025 (Annual Meeting of the Association for Computational Linguistics) - ArXiv ID\uff1aarXiv:2505.10413 - \u4ee3\u7801\u5f00\u6e90\uff1ahttps://github.com/ignorejjj/LongRefiner</p>"},{"location":"librarys/rag/components/refiner/#_3","title":"\u7814\u7a76\u52a8\u673a","text":"<p>\u73b0\u5b9e\u4e16\u754c\u7684RAG\u5e94\u7528\u7ecf\u5e38\u9047\u5230\u957f\u4e0a\u4e0b\u6587\u8f93\u5165\u573a\u666f\uff0c\u5176\u4e2d\u5197\u4f59\u4fe1\u606f\u548c\u566a\u58f0\u5bfc\u81f4\u66f4\u9ad8\u7684\u63a8\u7406\u6210\u672c\u548c\u6027\u80fd\u4e0b\u964d\u3002\u4f20\u7edfRAG\u7cfb\u7edf\u5728\u5904\u7406\u957f\u6587\u6863\u65f6\u9762\u4e34\u4ee5\u4e0b\u6311\u6218\uff1a</p> <ol> <li>\u4e0a\u4e0b\u6587\u957f\u5ea6\u9650\u5236\uff1a\u5927\u591a\u6570LLM\u5b58\u5728\u4e0a\u4e0b\u6587\u7a97\u53e3\u9650\u5236</li> <li>\u8ba1\u7b97\u6210\u672c\u9ad8\u6602\uff1a\u5904\u7406\u5197\u4f59\u4fe1\u606f\u589e\u52a0\u63a8\u7406\u5f00\u9500</li> <li>\u566a\u58f0\u5e72\u6270\uff1a\u65e0\u5173\u4fe1\u606f\u5f71\u54cd\u751f\u6210\u8d28\u91cf</li> <li>\u6548\u7387\u74f6\u9888\uff1a\u957f\u6587\u6863\u68c0\u7d22\u548c\u5904\u7406\u901f\u5ea6\u6162</li> </ol>"},{"location":"librarys/rag/components/refiner/#_4","title":"\u6838\u5fc3\u521b\u65b0","text":"<p>\u8bba\u6587\u63d0\u51fa\u7684LongRefiner\u901a\u8fc7\u4ee5\u4e0b\u521b\u65b0\u6280\u672f\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\uff1a</p> <ul> <li>\u5206\u5c42\u6587\u6863\u7ed3\u6784\u5316\uff1a\u5229\u7528\u957f\u6587\u6863\u7684\u56fa\u6709\u7ed3\u6784\u7279\u5f81</li> <li>\u53cc\u5c42\u67e5\u8be2\u5206\u6790\uff1a\u6df1\u5ea6\u7406\u89e3\u7528\u6237\u67e5\u8be2\u610f\u56fe\u548c\u9700\u6c42</li> <li>\u81ea\u9002\u5e94\u7cbe\u70bc\uff1a\u901a\u8fc7\u591a\u4efb\u52a1\u5b66\u4e60\u5728\u5355\u4e00\u57fa\u7840\u6a21\u578b\u4e0a\u5b9e\u73b0</li> <li>\u5373\u63d2\u5373\u7528\u8bbe\u8ba1\uff1a\u53ef\u65e0\u7f1d\u96c6\u6210\u5230\u73b0\u6709RAG\u7cfb\u7edf\u4e2d</li> </ul>"},{"location":"librarys/rag/components/refiner/#_5","title":"\u6027\u80fd\u4f18\u52bf","text":"<p>\u5b9e\u9a8c\u7ed3\u679c\u663e\u793a\uff0cLongRefiner\u5728\u4e03\u4e2aQA\u6570\u636e\u96c6\u4e0a\uff1a - \u6548\u679c\u63d0\u5347\uff1a\u5728\u5404\u79cd\u573a\u666f\u4e0b\u8fbe\u5230\u7ade\u4e89\u6027\u80fd - \u6210\u672c\u964d\u4f4e\uff1a\u76f8\u6bd4\u6700\u4f73\u57fa\u7ebf\u51cf\u5c1110\u500d\u8ba1\u7b97\u6210\u672c\u548c\u5ef6\u8fdf - \u6269\u5c55\u6027\u5f3a\uff1a\u9a8c\u8bc1\u4e86\u53ef\u6269\u5c55\u6027\u3001\u6548\u7387\u6027\u548c\u6709\u6548\u6027</p>"},{"location":"librarys/rag/components/refiner/#_6","title":"\u7ec4\u4ef6\u6982\u8ff0","text":""},{"location":"librarys/rag/components/refiner/#_7","title":"\u6838\u5fc3\u529f\u80fd","text":"<p>\u7cbe\u70bc\u7ec4\u4ef6\u5728RAG\u7cfb\u7edf\u4e2d\u627f\u62c5\u4ee5\u4e0b\u5173\u952e\u804c\u8d23\uff1a</p> <ul> <li>\u5185\u5bb9\u538b\u7f29\uff1a\u4ece\u957f\u6587\u6863\u4e2d\u63d0\u53d6\u5173\u952e\u4fe1\u606f\uff0c\u51cf\u5c11\u5197\u4f59\u5185\u5bb9</li> <li>\u76f8\u5173\u6027\u7b5b\u9009\uff1a\u57fa\u4e8e\u67e5\u8be2\u610f\u56fe\u667a\u80fd\u8fc7\u6ee4\u6700\u76f8\u5173\u7684\u6587\u6863\u7247\u6bb5</li> <li>\u7ed3\u6784\u5316\u91cd\u7ec4\uff1a\u5c06\u6563\u4e71\u7684\u68c0\u7d22\u7ed3\u679c\u91cd\u65b0\u7ec4\u7ec7\u4e3a\u8fde\u8d2f\u7684\u4e0a\u4e0b\u6587</li> <li>\u9884\u7b97\u63a7\u5236\uff1a\u5728\u6307\u5b9a\u7684token\u9884\u7b97\u5185\u4f18\u5316\u5185\u5bb9\u9009\u62e9</li> </ul>"},{"location":"librarys/rag/components/refiner/#_8","title":"\u6280\u672f\u67b6\u6784","text":"<p>\u7cbe\u70bc\u7ec4\u4ef6\u91c7\u7528\u591a\u6a21\u5757\u534f\u540c\u7684\u6df1\u5ea6\u5b66\u4e60\u67b6\u6784\uff0c\u57fa\u4e8e\u8bba\u6587\u63d0\u51fa\u7684LongRefiner\u65b9\u6cd5\uff1a</p> <pre><code>\u68c0\u7d22\u7ed3\u679c \u2192 \u67e5\u8be2\u5206\u6790 \u2192 \u6587\u6863\u7ed3\u6784\u5316 \u2192 \u5168\u5c40\u9009\u62e9 \u2192 \u7cbe\u70bc\u8f93\u51fa\n    \u2193         \u2193          \u2193           \u2193         \u2193\n\u539f\u59cb\u6587\u6863 \u2192 \u610f\u56fe\u8bc6\u522b \u2192 \u5185\u5bb9\u5206\u5757 \u2192 \u91cd\u8981\u6027\u8bc4\u5206 \u2192 \u538b\u7f29\u91cd\u7ec4\n</code></pre> <p>\u6838\u5fc3\u7b97\u6cd5\u6a21\u5757\uff1a</p> <ol> <li>\u53cc\u5c42\u67e5\u8be2\u5206\u6790\u6a21\u5757 (Dual-level Query Analysis)</li> <li>\u5206\u6790\u7528\u6237\u67e5\u8be2\u7684\u8bed\u4e49\u610f\u56fe\u548c\u4fe1\u606f\u9700\u6c42</li> <li>\u8bc6\u522b\u67e5\u8be2\u7684\u5173\u952e\u6982\u5ff5\u548c\u671f\u671b\u7b54\u6848\u7c7b\u578b</li> <li> <p>\u4e3a\u540e\u7eed\u6587\u6863\u7b5b\u9009\u63d0\u4f9b\u6307\u5bfc</p> </li> <li> <p>\u5206\u5c42\u6587\u6863\u7ed3\u6784\u5316\u6a21\u5757 (Hierarchical Document Structuring)</p> </li> <li>\u81ea\u52a8\u8bc6\u522b\u6587\u6863\u7684\u5185\u5728\u7ed3\u6784\u7279\u5f81</li> <li>\u5c06\u957f\u6587\u6863\u5206\u89e3\u4e3a\u8bed\u4e49\u8fde\u8d2f\u7684\u5c42\u6b21\u7ed3\u6784</li> <li> <p>\u4fdd\u6301\u4e0a\u4e0b\u6587\u5173\u7cfb\u548c\u4fe1\u606f\u5b8c\u6574\u6027</p> </li> <li> <p>\u5168\u5c40\u9009\u62e9\u6a21\u5757 (Global Selection)</p> </li> <li>\u57fa\u4e8e\u67e5\u8be2\u610f\u56fe\u548c\u6587\u6863\u7ed3\u6784\u8fdb\u884c\u5168\u5c40\u4f18\u5316</li> <li>\u5728\u6307\u5b9atoken\u9884\u7b97\u4e0b\u9009\u62e9\u6700\u76f8\u5173\u7684\u5185\u5bb9\u7247\u6bb5</li> <li> <p>\u5e73\u8861\u4fe1\u606f\u8986\u76d6\u5ea6\u548c\u5185\u5bb9\u8d28\u91cf</p> </li> <li> <p>\u591a\u4efb\u52a1\u5b66\u4e60\u6846\u67b6</p> </li> <li>\u5728\u5355\u4e00\u57fa\u7840\u6a21\u578b\u4e0a\u901a\u8fc7LoRA\u9002\u914d\u5668\u5b9e\u73b0\u591a\u4e2a\u4e13\u95e8\u4efb\u52a1</li> <li>\u5171\u4eab\u5e95\u5c42\u8868\u793a\uff0c\u63d0\u9ad8\u8ba1\u7b97\u6548\u7387</li> <li>\u7aef\u5230\u7aef\u4f18\u5316\u6574\u4e2a\u7cbe\u70bc\u6d41\u7a0b</li> </ol>"},{"location":"librarys/rag/components/refiner/#_9","title":"\u5e94\u7528\u573a\u666f","text":"<ul> <li>\u957f\u6587\u6863\u5904\u7406\uff1a\u5904\u7406\u8d85\u957f\u68c0\u7d22\u7ed3\u679c\uff0c\u7a81\u7834LLM\u4e0a\u4e0b\u6587\u9650\u5236</li> <li>\u591a\u6587\u6863\u878d\u5408\uff1a\u6574\u5408\u6765\u81ea\u591a\u4e2a\u6765\u6e90\u7684\u76f8\u5173\u4fe1\u606f</li> <li>\u6210\u672c\u4f18\u5316\uff1a\u51cf\u5c11LLM\u8f93\u5165token\u6570\u91cf\uff0c\u964d\u4f4eAPI\u8c03\u7528\u8d39\u7528</li> <li>\u8d28\u91cf\u63d0\u5347\uff1a\u53bb\u9664\u65e0\u5173\u4fe1\u606f\uff0c\u63d0\u9ad8\u7b54\u6848\u51c6\u786e\u6027</li> </ul>"},{"location":"librarys/rag/components/refiner/#longrefineradapter","title":"LongRefinerAdapter","text":""},{"location":"librarys/rag/components/refiner/#_10","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>LongRefinerAdapter</code>\u662f\u57fa\u4e8eLongRefiner\u6a21\u578b\u7684\u9ad8\u7ea7\u6587\u6863\u7cbe\u70bc\u5668\uff0c\u91c7\u7528\u591a\u9636\u6bb5\u6df1\u5ea6\u5b66\u4e60\u6a21\u5757\uff0c\u80fd\u591f\u667a\u80fd\u5206\u6790\u67e5\u8be2\u610f\u56fe\u3001\u7ed3\u6784\u5316\u6587\u6863\u5185\u5bb9\u5e76\u8fdb\u884c\u5168\u5c40\u4f18\u5316\u9009\u62e9\u3002</p>"},{"location":"librarys/rag/components/refiner/#_11","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u652f\u6301\u7279\u6027\uff1a - \u57fa\u4e8eLoRA\u5fae\u8c03\u7684\u591a\u4efb\u52a1\u6a21\u578b\u67b6\u6784 - \u67e5\u8be2\u610f\u56fe\u5206\u6790\u6a21\u5757 - \u6587\u6863\u7ed3\u6784\u5316\u5904\u7406\u6a21\u5757 - \u5168\u5c40\u5185\u5bb9\u9009\u62e9\u6a21\u5757 - BGE\u91cd\u6392\u5e8f\u6a21\u578b\u96c6\u6210 - \u53ef\u914d\u7f6e\u7684token\u9884\u7b97\u63a7\u5236</p> <p>\u6a21\u578b\u67b6\u6784\uff1a - \u57fa\u7840\u6a21\u578b\uff1aQwen2.5-3B-Instruct\u6216\u5176\u4ed6\u517c\u5bb9\u6a21\u578b - \u4efb\u52a1\u6a21\u5757\uff1a\u4e09\u4e2a\u4e13\u95e8\u7684LoRA\u9002\u914d\u5668   - \u67e5\u8be2\u5206\u6790\u6a21\u5757\uff1a\u7406\u89e3\u7528\u6237\u67e5\u8be2\u610f\u56fe\u548c\u9700\u6c42   - \u6587\u6863\u7ed3\u6784\u5316\u6a21\u5757\uff1a\u5206\u6790\u548c\u91cd\u7ec4\u6587\u6863\u7ed3\u6784   - \u5168\u5c40\u9009\u62e9\u6a21\u5757\uff1a\u5728\u5168\u5c40\u89c6\u89d2\u4e0b\u9009\u62e9\u6700\u4f73\u5185\u5bb9 - \u8bc4\u5206\u6a21\u578b\uff1aBGE-reranker-v2-m3\u7528\u4e8e\u5185\u5bb9\u91cd\u6392\u5e8f</p>"},{"location":"librarys/rag/components/refiner/#_12","title":"\u914d\u7f6e\u53c2\u6570","text":"\u53c2\u6570\u7ec4 \u53c2\u6570\u540d \u7c7b\u578b \u8bf4\u660e \u57fa\u7840\u6a21\u578b <code>base_model_path</code> str \u57fa\u7840LLM\u6a21\u578b\u8def\u5f84 <code>max_model_len</code> int \u6a21\u578b\u6700\u5927\u5e8f\u5217\u957f\u5ea6 <code>gpu_device</code> int GPU\u8bbe\u5907\u7f16\u53f7 LoRA\u6a21\u5757 <code>query_analysis_module_lora_path</code> str \u67e5\u8be2\u5206\u6790LoRA\u6743\u91cd\u8def\u5f84 <code>doc_structuring_module_lora_path</code> str \u6587\u6863\u7ed3\u6784\u5316LoRA\u6743\u91cd\u8def\u5f84 <code>global_selection_module_lora_path</code> str \u5168\u5c40\u9009\u62e9LoRA\u6743\u91cd\u8def\u5f84 \u8bc4\u5206\u6a21\u578b <code>score_model_name</code> str \u91cd\u6392\u5e8f\u6a21\u578b\u540d\u79f0 <code>score_model_path</code> str \u91cd\u6392\u5e8f\u6a21\u578b\u8def\u5f84 \u63a7\u5236\u53c2\u6570 <code>budget</code> int token\u9884\u7b97\u9650\u5236"},{"location":"librarys/rag/components/refiner/#_13","title":"\u5b9e\u73b0\u793a\u4f8b","text":"<pre><code>from sage.libs.rag.longrefiner.longrefiner_adapter import LongRefinerAdapter\n\n# \u57fa\u7840\u914d\u7f6e\nrefiner_config = {\n    \"base_model_path\": \"Qwen/Qwen2.5-3B-Instruct\",\n    \"query_analysis_module_lora_path\": \"/path/to/query_analysis_lora\",\n    \"doc_structuring_module_lora_path\": \"/path/to/doc_structuring_lora\", \n    \"global_selection_module_lora_path\": \"/path/to/global_selection_lora\",\n    \"score_model_name\": \"bge-reranker-v2-m3\",\n    \"score_model_path\": \"BAAI/bge-reranker-v2-m3\",\n    \"max_model_len\": 25000,\n    \"budget\": 4000,  # token\u9884\u7b97\n    \"gpu_device\": 0\n}\n\n# \u521b\u5efa\u7cbe\u70bc\u5668\u5b9e\u4f8b\nrefiner = LongRefinerAdapter(refiner_config, enable_profile=True)\n\n# \u8f93\u5165\u6570\u636e\u683c\u5f0f1\uff1a\u5b57\u5178\u683c\u5f0f\uff08\u6765\u81ea\u68c0\u7d22\u5668\uff09\ninput_data = {\n    \"query\": \"\u4ec0\u4e48\u662f\u6df1\u5ea6\u5b66\u4e60\uff1f\",\n    \"results\": [\n        {\"text\": \"\u6df1\u5ea6\u5b66\u4e60\u662f\u673a\u5668\u5b66\u4e60\u7684\u4e00\u4e2a\u5206\u652f...\"},\n        {\"text\": \"\u795e\u7ecf\u7f51\u7edc\u662f\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u7840...\"},\n        {\"text\": \"\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7528\u4e8e\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc...\"}\n    ]\n}\n\n# \u8f93\u5165\u6570\u636e\u683c\u5f0f2\uff1a\u5143\u7ec4\u683c\u5f0f\n# input_data = (\"\u4ec0\u4e48\u662f\u6df1\u5ea6\u5b66\u4e60\uff1f\", [\"\u6587\u68631\u5185\u5bb9\", \"\u6587\u68632\u5185\u5bb9\", \"\u6587\u68633\u5185\u5bb9\"])\n\n# \u6267\u884c\u7cbe\u70bc\nrefined_result = refiner.execute(input_data)\n\n# \u8f93\u51fa\u683c\u5f0f\u4e0e\u8f93\u5165\u683c\u5f0f\u4fdd\u6301\u4e00\u81f4\nprint(\"\u7cbe\u70bc\u540e\u7ed3\u679c:\", refined_result)\n</code></pre>"},{"location":"librarys/rag/components/refiner/#_14","title":"\u5904\u7406\u6d41\u7a0b","text":"<ol> <li> <p>\u8f93\u5165\u683c\u5f0f\u9002\u914d <pre><code># \u652f\u6301\u591a\u79cd\u8f93\u5165\u683c\u5f0f\ndict_format = {\"query\": str, \"results\": [{\"text\": str}]}\ntuple_format = (query: str, docs: List[str])\n</code></pre></p> </li> <li> <p>\u6587\u6863\u9884\u5904\u7406 <pre><code># \u8f6c\u6362\u4e3aLongRefiner\u6807\u51c6\u683c\u5f0f\ndocument_list = [{\"contents\": text} for text in texts]\n</code></pre></p> </li> <li> <p>\u591a\u9636\u6bb5\u7cbe\u70bc <pre><code># \u67e5\u8be2\u5206\u6790 \u2192 \u6587\u6863\u7ed3\u6784\u5316 \u2192 \u5168\u5c40\u9009\u62e9\nrefined_items = refiner.run(question, document_list, budget=budget)\n</code></pre></p> </li> <li> <p>\u7ed3\u679c\u540e\u5904\u7406 <pre><code># \u63d0\u53d6\u7cbe\u70bc\u540e\u7684\u6587\u672c\u5185\u5bb9\nrefined_texts = [item[\"contents\"] for item in refined_items]\n</code></pre></p> </li> </ol>"},{"location":"librarys/rag/components/refiner/#_15","title":"\u6027\u80fd\u4f18\u5316","text":"<p>GPU\u8bbe\u5907\u7ba1\u7406\uff1a <pre><code># \u6307\u5b9aGPU\u8bbe\u5907\nconfig[\"gpu_device\"] = 0  # \u4f7f\u7528GPU 0\n\n# \u73af\u5883\u53d8\u91cf\u8bbe\u7f6e\nimport os\nos.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\"\n</code></pre></p> <p>\u5185\u5b58\u4f18\u5316\uff1a <pre><code># \u8c03\u6574\u6a21\u578b\u6700\u5927\u957f\u5ea6\nconfig[\"max_model_len\"] = 25000  # \u6839\u636e\u663e\u5b58\u8c03\u6574\n\n# token\u9884\u7b97\u63a7\u5236\nconfig[\"budget\"] = 4000  # \u63a7\u5236\u8f93\u51fa\u957f\u5ea6\n</code></pre></p> <p>\u6279\u5904\u7406\u652f\u6301\uff1a <pre><code># \u652f\u6301\u6279\u91cf\u5904\u7406\u591a\u4e2a\u67e5\u8be2\nfor query_data in query_batch:\n    refined_result = refiner.execute(query_data)\n</code></pre></p>"},{"location":"librarys/rag/components/refiner/#_16","title":"\u6570\u636e\u8bb0\u5f55\u4e0e\u5206\u6790","text":"<p>\u5f53\u542f\u7528<code>enable_profile=True</code>\u65f6\uff0c\u7ec4\u4ef6\u4f1a\u81ea\u52a8\u8bb0\u5f55\u7cbe\u70bc\u8fc7\u7a0b\u6570\u636e\uff1a</p> <pre><code># \u8bb0\u5f55\u6570\u636e\u7ed3\u6784\n{\n    \"timestamp\": 1698765432.0,\n    \"question\": \"\u7528\u6237\u67e5\u8be2\",\n    \"input_docs\": [\"\u539f\u59cb\u6587\u68631\", \"\u539f\u59cb\u6587\u68632\"],\n    \"refined_docs\": [\"\u7cbe\u70bc\u6587\u68631\", \"\u7cbe\u70bc\u6587\u68632\"],\n    \"budget\": 4000\n}\n\n# \u6570\u636e\u5b58\u50a8\u8def\u5f84\n.sage_states/refiner_data/refiner_data_&lt;timestamp&gt;.json\n</code></pre>"},{"location":"librarys/rag/components/refiner/#_17","title":"\u5728\u7ba1\u9053\u4e2d\u4f7f\u7528","text":""},{"location":"librarys/rag/components/refiner/#rag","title":"\u6807\u51c6RAG\u7ba1\u9053\u96c6\u6210","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.libs.io_utils.batch import HFDatasetBatch\nfrom sage.libs.rag.retriever import ChromaRetriever\nfrom sage.libs.rag.longrefiner.longrefiner_adapter import LongRefinerAdapter\nfrom sage.libs.rag.promptor import QAPromptor\nfrom sage.libs.rag.generator import OpenAIGenerator\n\n# \u7ba1\u9053\u914d\u7f6e\nenv = LocalEnvironment()\n\n(env\n    .from_batch(HFDatasetBatch, source_config)\n    .map(ChromaRetriever, retriever_config)\n    .map(LongRefinerAdapter, refiner_config)  # \u5728\u68c0\u7d22\u540e\u6dfb\u52a0\u7cbe\u70bc\u6b65\u9aa4\n    .map(QAPromptor, promptor_config)\n    .map(OpenAIGenerator, generator_config)\n)\n\nenv.submit()\n</code></pre>"},{"location":"librarys/rag/components/refiner/#_18","title":"\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b","text":"<pre><code># config_refiner.yaml\nrefiner:\n  base_model_path: \"Qwen/Qwen2.5-3B-Instruct\"\n  query_analysis_module_lora_path: \"/models/lora/query_analysis\"\n  doc_structuring_module_lora_path: \"/models/lora/doc_structuring\"\n  global_selection_module_lora_path: \"/models/lora/global_selection\"\n  score_model_name: \"bge-reranker-v2-m3\"\n  score_model_path: \"BAAI/bge-reranker-v2-m3\"\n  max_model_len: 25000\n  budget: 4000\n  gpu_device: 0\n</code></pre>"},{"location":"librarys/rag/components/refiner/#_19","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"librarys/rag/components/refiner/#_20","title":"\u9884\u7b97\u8bbe\u7f6e\u6307\u5357","text":"<pre><code># \u6839\u636e\u4e0b\u6e38\u6a21\u578b\u4e0a\u4e0b\u6587\u957f\u5ea6\u8bbe\u7f6e\u9884\u7b97\nbudget_guide = {\n    \"gpt-3.5-turbo\": 3000,    # 4K\u4e0a\u4e0b\u6587\uff0c\u75591K\u7ed9\u751f\u6210\n    \"gpt-4\": 7000,            # 8K\u4e0a\u4e0b\u6587\uff0c\u75591K\u7ed9\u751f\u6210  \n    \"gpt-4-turbo\": 120000,    # 128K\u4e0a\u4e0b\u6587\uff0c\u75598K\u7ed9\u751f\u6210\n    \"claude-3\": 190000,       # 200K\u4e0a\u4e0b\u6587\uff0c\u755910K\u7ed9\u751f\u6210\n}\n</code></pre>"},{"location":"librarys/rag/components/refiner/#_21","title":"\u6a21\u578b\u9009\u62e9\u5efa\u8bae","text":"<pre><code># \u6839\u636e\u7cbe\u5ea6\u548c\u901f\u5ea6\u9700\u6c42\u9009\u62e9\u57fa\u7840\u6a21\u578b\nmodel_options = {\n    \"\u9ad8\u7cbe\u5ea6\": \"Qwen/Qwen2.5-7B-Instruct\",\n    \"\u5e73\u8861\": \"Qwen/Qwen2.5-3B-Instruct\", \n    \"\u9ad8\u901f\u5ea6\": \"Qwen/Qwen2.5-1.5B-Instruct\"\n}\n</code></pre>"},{"location":"librarys/rag/components/refiner/#_22","title":"\u9519\u8bef\u5904\u7406","text":"<pre><code>try:\n    refined_result = refiner.execute(input_data)\nexcept Exception as e:\n    # \u7cbe\u70bc\u5931\u8d25\u65f6\u8fd4\u56de\u539f\u59cb\u7ed3\u679c\n    logger.error(f\"Refiner execution failed: {e}\")\n    refined_result = input_data  # \u6216\u8005\u8fd4\u56de\u7a7a\u7ed3\u679c\n</code></pre>"},{"location":"librarys/rag/components/refiner/#_23","title":"\u6545\u969c\u6392\u9664","text":""},{"location":"librarys/rag/components/refiner/#_24","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li> <p>\u6a21\u578b\u52a0\u8f7d\u5931\u8d25 <pre><code># \u68c0\u67e5\u6a21\u578b\u8def\u5f84\u548c\u6743\u9650\nassert os.path.exists(config[\"base_model_path\"])\nassert os.path.exists(config[\"query_analysis_module_lora_path\"])\n</code></pre></p> </li> <li> <p>GPU\u5185\u5b58\u4e0d\u8db3 <pre><code># \u8c03\u6574\u6a21\u578b\u53c2\u6570\nconfig[\"max_model_len\"] = 15000  # \u51cf\u5c11\u6700\u5927\u957f\u5ea6\nconfig[\"gpu_device\"] = 1         # \u5207\u6362GPU\u8bbe\u5907\n</code></pre></p> </li> <li> <p>\u8f93\u5165\u683c\u5f0f\u9519\u8bef <pre><code># \u786e\u4fdd\u8f93\u5165\u683c\u5f0f\u6b63\u786e\nif isinstance(data, dict):\n    assert \"query\" in data and \"results\" in data\nelif isinstance(data, tuple):\n    assert len(data) == 2\n</code></pre></p> </li> </ol>"},{"location":"librarys/rag/components/refiner/#_25","title":"\u8c03\u8bd5\u6a21\u5f0f","text":"<pre><code># \u542f\u7528\u8be6\u7ec6\u65e5\u5fd7\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n\n# \u542f\u7528\u6027\u80fd\u5206\u6790\nrefiner = LongRefinerAdapter(config, enable_profile=True)\n</code></pre>"},{"location":"librarys/rag/components/refiner/#_26","title":"\u53c2\u8003\u6587\u732e\u4e0e\u8fdb\u4e00\u6b65\u9605\u8bfb","text":""},{"location":"librarys/rag/components/refiner/#_27","title":"\u6838\u5fc3\u8bba\u6587","text":"<pre><code>@misc{jin2025hierarchical,\n    title={Hierarchical Document Refinement for Long-context Retrieval-augmented Generation}, \n    author={Jiajie Jin and Xiaoxi Li and Guanting Dong and Yuyao Zhang and Yutao Zhu and Yongkang Wu and Zhonghua Li and Qi Ye and Zhicheng Dou},\n    year={2025},\n    eprint={2505.10413},\n    archivePrefix={arXiv},\n    primaryClass={cs.CL},\n    note={ACL 2025}\n}\n</code></pre>"},{"location":"librarys/rag/components/refiner/#_28","title":"\u76f8\u5173\u8d44\u6e90","text":"<ul> <li>\u8bba\u6587\u94fe\u63a5\uff1ahttps://arxiv.org/abs/2505.10413</li> <li>\u5f00\u6e90\u4ee3\u7801\uff1ahttps://github.com/ignorejjj/LongRefiner</li> <li>SAGE\u6846\u67b6\u6587\u6863\uff1ahttps://intellistream.github.io/SAGE-Pub/</li> </ul>"},{"location":"librarys/rag/components/refiner/#_29","title":"\u76f8\u5173\u6280\u672f","text":"<ul> <li>LoRA (Low-Rank Adaptation)\uff1a\u53c2\u6570\u9ad8\u6548\u7684\u5fae\u8c03\u6280\u672f</li> <li>BGE Reranker\uff1a\u53cc\u8bed\u901a\u7528\u5d4c\u5165\u6a21\u578b\u7528\u4e8e\u91cd\u6392\u5e8f</li> <li>VLLM\uff1a\u9ad8\u6548\u7684\u5927\u6a21\u578b\u63a8\u7406\u6846\u67b6</li> <li>Multi-task Learning\uff1a\u591a\u4efb\u52a1\u5b66\u4e60\u5728NLP\u4e2d\u7684\u5e94\u7528</li> </ul>"},{"location":"librarys/rag/components/refiner/#_30","title":"\u6269\u5c55\u9605\u8bfb","text":"<ul> <li>RAG\u7cfb\u7edf\u4f18\u5316\u6280\u672f\u7efc\u8ff0</li> <li>\u957f\u6587\u6863\u5904\u7406\u7684\u6700\u65b0\u8fdb\u5c55</li> <li>\u53c2\u6570\u9ad8\u6548\u5fae\u8c03\u65b9\u6cd5\u6bd4\u8f83</li> <li>\u6587\u6863\u538b\u7f29\u4e0e\u4fe1\u606f\u4fdd\u6301\u7684\u5e73\u8861\u7b56\u7565</li> </ul>"},{"location":"librarys/rag/components/reranker/","title":"\u91cd\u6392\u5e8f\u7ec4\u4ef6 (Reranking Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdSAGE\u6846\u67b6\u4e2d\u91cd\u6392\u5e8f\u7ec4\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u91cd\u6392\u5e8f\u7ec4\u4ef6\u662fRAG\u7cfb\u7edf\u7684\u68c0\u7d22\u4f18\u5316\u5c42\uff0c\u8d1f\u8d23\u5bf9\u521d\u6b65\u68c0\u7d22\u7ed3\u679c\u8fdb\u884c\u7cbe\u786e\u91cd\u65b0\u6392\u5e8f\uff0c\u663e\u8457\u63d0\u5347\u68c0\u7d22\u8d28\u91cf\u548c\u6700\u7ec8\u7b54\u6848\u51c6\u786e\u6027\u3002</p>"},{"location":"librarys/rag/components/reranker/#_1","title":"\u7ec4\u4ef6\u6982\u8ff0","text":""},{"location":"librarys/rag/components/reranker/#_2","title":"\u6838\u5fc3\u529f\u80fd","text":"<p>\u91cd\u6392\u5e8f\u7ec4\u4ef6\u5728RAG\u7cfb\u7edf\u4e2d\u627f\u62c5\u4ee5\u4e0b\u5173\u952e\u804c\u8d23\uff1a</p> <ul> <li>\u7cbe\u786e\u6392\u5e8f\uff1a\u5bf9\u7c97\u6392\u68c0\u7d22\u7ed3\u679c\u8fdb\u884c\u7cbe\u7ec6\u5316\u91cd\u65b0\u6392\u5e8f</li> <li>\u8bed\u4e49\u7406\u89e3\uff1a\u6df1\u5ea6\u7406\u89e3\u67e5\u8be2\u4e0e\u6587\u6863\u95f4\u7684\u8bed\u4e49\u5173\u8054\u6027</li> <li>\u8d28\u91cf\u63d0\u5347\uff1a\u663e\u8457\u6539\u5584\u68c0\u7d22\u7cbe\u5ea6\uff0c\u51cf\u5c11\u566a\u58f0\u6587\u6863\u5f71\u54cd</li> <li>\u6027\u80fd\u5e73\u8861\uff1a\u5728\u51c6\u786e\u6027\u548c\u8ba1\u7b97\u6548\u7387\u95f4\u627e\u5230\u6700\u4f18\u5e73\u8861\u70b9</li> </ul>"},{"location":"librarys/rag/components/reranker/#_3","title":"\u6280\u672f\u67b6\u6784","text":"<p>\u91cd\u6392\u5e8f\u91c7\u7528\u4e24\u9636\u6bb5\u68c0\u7d22\u67b6\u6784\uff1a</p> <pre><code>\u7528\u6237\u67e5\u8be2 \u2192 \u7c97\u6392\u68c0\u7d22(Retrieval) \u2192 \u7cbe\u6392\u91cd\u6392\u5e8f(Reranking) \u2192 \u9ad8\u8d28\u91cf\u7ed3\u679c\n   \u2193           \u2193                    \u2193                    \u2193\n \u5411\u91cf\u5316    \u2192  \u5411\u91cf\u76f8\u4f3c\u5ea6          \u2192  \u8bed\u4e49\u76f8\u5173\u6027         \u2192  \u6700\u7ec8\u6392\u5e8f\n</code></pre>"},{"location":"librarys/rag/components/reranker/#_4","title":"\u652f\u6301\u7684\u91cd\u6392\u5e8f\u5668","text":"\u7ec4\u4ef6\u540d \u6a21\u578b\u57fa\u7840 \u9002\u7528\u573a\u666f \u7279\u70b9 <code>BGEReranker</code> BGE-reranker-v2-m3 \u901a\u7528\u6587\u672c\u91cd\u6392\u5e8f \u8f7b\u91cf\u7ea7\uff0c\u901f\u5ea6\u5feb <code>LLMbased_Reranker</code> BGE-reranker-v2-gemma \u590d\u6742\u8bed\u4e49\u7406\u89e3 \u7cbe\u5ea6\u9ad8\uff0c\u652f\u6301\u590d\u6742\u63a8\u7406"},{"location":"librarys/rag/components/reranker/#bgereranker","title":"BGEReranker","text":""},{"location":"librarys/rag/components/reranker/#_5","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>BGEReranker</code>\u57fa\u4e8eBAAI/bge-reranker-v2-m3\u6a21\u578b\u7684\u4f20\u7edf\u91cd\u6392\u5e8f\u5668\uff0c\u4e13\u95e8\u4f18\u5316\u4e2d\u82f1\u6587\u8de8\u8bed\u8a00\u68c0\u7d22\u573a\u666f\uff0c\u5728\u4fdd\u6301\u8f83\u9ad8\u7cbe\u5ea6\u7684\u540c\u65f6\u63d0\u4f9b\u826f\u597d\u7684\u63a8\u7406\u901f\u5ea6\u3002</p>"},{"location":"librarys/rag/components/reranker/#_6","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u6a21\u578b\u7279\u6027\uff1a - \u6a21\u578b\u57fa\u7840\uff1aBAAI/bge-reranker-v2-m3 - \u652f\u6301\u8bed\u8a00\uff1a\u4e2d\u6587\u3001\u82f1\u6587\u3001\u591a\u8bed\u8a00\u6df7\u5408 - \u8f93\u5165\u957f\u5ea6\uff1a\u6700\u59278192 tokens - \u63a8\u7406\u901f\u5ea6\uff1a\u4e2d\u7b49\uff08\u9002\u5408\u5b9e\u65f6\u5e94\u7528\uff09</p> <p>\u914d\u7f6e\u53c2\u6570\uff1a</p> \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>model_name</code> str \"BAAI/bge-reranker-v2-m3\" \u91cd\u6392\u5e8f\u6a21\u578b\u540d\u79f0 <code>topk</code> / <code>top_k</code> int 3 \u8fd4\u56de\u7684\u9876\u90e8\u6587\u6863\u6570\u91cf <code>device</code> str \"auto\" \u8fd0\u884c\u8bbe\u5907\uff08cuda/cpu/auto\uff09 <code>batch_size</code> int 32 \u6279\u5904\u7406\u5927\u5c0f <code>max_length</code> int 512 \u6700\u5927\u8f93\u5165\u957f\u5ea6"},{"location":"librarys/rag/components/reranker/#_7","title":"\u5b9e\u73b0\u793a\u4f8b","text":""},{"location":"librarys/rag/components/reranker/#_8","title":"\u57fa\u7840\u91cd\u6392\u5e8f\u64cd\u4f5c","text":"<pre><code>from sage.libs.rag.reranker import BGEReranker\n\n# \u914d\u7f6e\u91cd\u6392\u5e8f\u5668\nconfig = {\n    \"model_name\": \"BAAI/bge-reranker-v2-m3\",\n    \"topk\": 5,\n    \"device\": \"cuda\"  # \u5982\u679c\u6709GPU\u53ef\u7528\n}\n\n# \u521d\u59cb\u5316\u91cd\u6392\u5e8f\u5668\nreranker = BGEReranker(config)\n\n# \u51c6\u5907\u6d4b\u8bd5\u6570\u636e\nquery = \"\u5411\u91cf\u6570\u636e\u5e93\u7684\u4e3b\u8981\u4f18\u52bf\u662f\u4ec0\u4e48\uff1f\"\ncandidate_documents = [\n    \"\u5411\u91cf\u6570\u636e\u5e93\u652f\u6301\u9ad8\u7ef4\u5411\u91cf\u7684\u9ad8\u6548\u5b58\u50a8\u548c\u68c0\u7d22\uff0c\u7279\u522b\u9002\u5408AI\u5e94\u7528\u3002\",\n    \"\u4f20\u7edf\u5173\u7cfb\u6570\u636e\u5e93\u4e3b\u8981\u5904\u7406\u7ed3\u6784\u5316\u6570\u636e\uff0c\u4f7f\u7528SQL\u67e5\u8be2\u8bed\u8a00\u3002\",\n    \"\u5411\u91cf\u6570\u636e\u5e93\u5728\u76f8\u4f3c\u5ea6\u68c0\u7d22\u65b9\u9762\u5177\u6709\u663e\u8457\u4f18\u52bf\uff0c\u652f\u6301\u8bed\u4e49\u641c\u7d22\u3002\",\n    \"NoSQL\u6570\u636e\u5e93\u63d0\u4f9b\u4e86\u7075\u6d3b\u7684\u6570\u636e\u6a21\u578b\uff0c\u652f\u6301\u5206\u5e03\u5f0f\u5b58\u50a8\u3002\",\n    \"\u5411\u91cf\u6570\u636e\u5e93\u901a\u8fc7\u5411\u91cf\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u5b9e\u73b0\u5feb\u901f\u7684\u8bed\u4e49\u5339\u914d\u3002\",\n    \"\u4e91\u8ba1\u7b97\u5e73\u53f0\u63d0\u4f9b\u4e86\u5f39\u6027\u7684\u8ba1\u7b97\u548c\u5b58\u50a8\u8d44\u6e90\u3002\"\n]\n\n# \u6267\u884c\u91cd\u6392\u5e8f\nquery_result, reranked_docs = reranker.execute((query, candidate_documents))\n\nprint(f\"\u539f\u59cb\u67e5\u8be2: {query_result}\")\nprint(f\"\u91cd\u6392\u5e8f\u7ed3\u679c (Top-{config['topk']}):\")\nfor i, doc in enumerate(reranked_docs, 1):\n    print(f\"{i}. {doc}\")\n</code></pre>"},{"location":"librarys/rag/components/reranker/#_9","title":"\u6279\u91cf\u91cd\u6392\u5e8f\u5904\u7406","text":"<pre><code># \u914d\u7f6e\u6279\u91cf\u5904\u7406\nbatch_config = {\n    \"model_name\": \"BAAI/bge-reranker-v2-m3\",\n    \"topk\": 3,\n    \"batch_size\": 16,  # \u63d0\u9ad8\u6279\u5904\u7406\u6548\u7387\n    \"device\": \"cuda\"\n}\n\nbatch_reranker = BGEReranker(batch_config)\n\n# \u591a\u67e5\u8be2\u6279\u91cf\u5904\u7406\nqueries = [\n    \"\u4ec0\u4e48\u662f\u673a\u5668\u5b66\u4e60\uff1f\",\n    \"\u6df1\u5ea6\u5b66\u4e60\u7684\u5e94\u7528\u9886\u57df\",\n    \"\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6280\u672f\"\n]\n\n# \u5bf9\u5e94\u7684\u5019\u9009\u6587\u6863\u96c6\u5408\ndoc_sets = [\n    [\"\u673a\u5668\u5b66\u4e60\u662fAI\u7684\u5b50\u9886\u57df...\", \"\u6df1\u5ea6\u5b66\u4e60\u4f7f\u7528\u795e\u7ecf\u7f51\u7edc...\", ...],\n    [\"\u6df1\u5ea6\u5b66\u4e60\u5728\u56fe\u50cf\u8bc6\u522b...\", \"NLP\u662fAI\u7684\u91cd\u8981\u5206\u652f...\", ...],\n    [\"NLP\u5904\u7406\u4eba\u7c7b\u8bed\u8a00...\", \"\u8bed\u8a00\u6a21\u578b\u7684\u53d1\u5c55\u5386\u7a0b...\", ...]\n]\n\n# \u6279\u91cf\u6267\u884c\u91cd\u6392\u5e8f\nfor query, docs in zip(queries, doc_sets):\n    _, reranked = batch_reranker.execute((query, docs))\n    print(f\"\u67e5\u8be2: {query}\")\n    print(f\"\u6700\u4f73\u5339\u914d: {reranked[0][:100]}...\")\n    print()\n</code></pre>"},{"location":"librarys/rag/components/reranker/#llmbased_reranker","title":"LLMbased_Reranker","text":""},{"location":"librarys/rag/components/reranker/#_10","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>LLMbased_Reranker</code>\u57fa\u4e8eBAAI/bge-reranker-v2-gemma\u6a21\u578b\uff0c\u91c7\u7528\u5927\u8bed\u8a00\u6a21\u578b\u67b6\u6784\uff0c\u5728\u590d\u6742\u8bed\u4e49\u7406\u89e3\u548c\u63a8\u7406\u4efb\u52a1\u4e2d\u8868\u73b0\u5353\u8d8a\u3002</p>"},{"location":"librarys/rag/components/reranker/#_11","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u6a21\u578b\u7279\u6027\uff1a - \u6a21\u578b\u57fa\u7840\uff1aBAAI/bge-reranker-v2-gemma - \u67b6\u6784\u7c7b\u578b\uff1a\u57fa\u4e8eGemma\u7684\u751f\u6210\u5f0f\u91cd\u6392\u5e8f\u5668 - \u63a8\u7406\u80fd\u529b\uff1a\u652f\u6301\u590d\u6742\u8bed\u4e49\u63a8\u7406\u548c\u591a\u6587\u6863\u5173\u8054 - \u7cbe\u5ea6\u8868\u73b0\uff1a\u5728\u590d\u6742\u573a\u666f\u4e0b\u7cbe\u5ea6\u66f4\u9ad8</p> <p>\u914d\u7f6e\u53c2\u6570\uff1a</p> \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>model_name</code> str \"BAAI/bge-reranker-v2-gemma\" LLM\u91cd\u6392\u5e8f\u6a21\u578b <code>topk</code> int 3 \u8f93\u51fa\u6587\u6863\u6570\u91cf <code>device</code> str \"auto\" \u8fd0\u884c\u8bbe\u5907 <code>temperature</code> float 0.1 \u751f\u6210\u6e29\u5ea6\uff08\u7528\u4e8e\u6392\u5e8f\u7f6e\u4fe1\u5ea6\uff09 <code>max_new_tokens</code> int 64 \u6700\u5927\u751f\u6210token\u6570"},{"location":"librarys/rag/components/reranker/#_12","title":"\u5b9e\u73b0\u793a\u4f8b","text":""},{"location":"librarys/rag/components/reranker/#_13","title":"\u590d\u6742\u67e5\u8be2\u91cd\u6392\u5e8f","text":"<pre><code>from sage.libs.rag.reranker import LLMbased_Reranker\n\n# \u914d\u7f6eLLM\u91cd\u6392\u5e8f\u5668\nllm_config = {\n    \"model_name\": \"BAAI/bge-reranker-v2-gemma\",\n    \"topk\": 4,\n    \"temperature\": 0.1,\n    \"device\": \"cuda\"\n}\n\n# \u521d\u59cb\u5316LLM\u91cd\u6392\u5e8f\u5668\nllm_reranker = LLMbased_Reranker(llm_config)\n\n# \u590d\u6742\u63a8\u7406\u67e5\u8be2\ncomplex_query = \"\u6bd4\u8f83\u5206\u6790\u5411\u91cf\u6570\u636e\u5e93\u548c\u4f20\u7edf\u6570\u636e\u5e93\u5728AI\u5e94\u7528\u4e2d\u7684\u6027\u80fd\u5dee\u5f02\"\ncomplex_documents = [\n    \"\u5411\u91cf\u6570\u636e\u5e93\u4e13\u4e3a\u9ad8\u7ef4\u5411\u91cf\u68c0\u7d22\u4f18\u5316\uff0c\u5728AI\u76f8\u4f3c\u5ea6\u641c\u7d22\u4e2d\u6027\u80fd\u5353\u8d8a\u3002\",\n    \"\u4f20\u7edf\u5173\u7cfb\u6570\u636e\u5e93\u64c5\u957f\u7ed3\u6784\u5316\u6570\u636e\u7ba1\u7406\uff0c\u652f\u6301\u590d\u6742\u7684\u4e8b\u52a1\u5904\u7406\u3002\",\n    \"\u5728\u673a\u5668\u5b66\u4e60\u7279\u5f81\u5b58\u50a8\u65b9\u9762\uff0c\u5411\u91cf\u6570\u636e\u5e93\u63d0\u4f9b\u66f4\u9ad8\u7684\u67e5\u8be2\u6548\u7387\u3002\",\n    \"\u4f20\u7edf\u6570\u636e\u5e93\u7684ACID\u7279\u6027\u4fdd\u8bc1\u4e86\u6570\u636e\u4e00\u81f4\u6027\uff0c\u4f46\u5728\u5411\u91cf\u68c0\u7d22\u4e0a\u6027\u80fd\u6709\u9650\u3002\",\n    \"\u5411\u91cf\u6570\u636e\u5e93\u652f\u6301\u8fd1\u4f3c\u6700\u8fd1\u90bb\u641c\u7d22\uff0c\u5927\u5e45\u63d0\u5347\u5927\u89c4\u6a21\u6570\u636e\u68c0\u7d22\u901f\u5ea6\u3002\",\n    \"\u6df7\u5408\u6570\u636e\u5e93\u67b6\u6784\u7ed3\u5408\u4e86\u4e24\u8005\u4f18\u52bf\uff0c\u5728\u4e0d\u540c\u573a\u666f\u4e0b\u7075\u6d3b\u5207\u6362\u3002\"\n]\n\n# \u6267\u884c\u590d\u6742\u67e5\u8be2\u91cd\u6392\u5e8f\nquery_result, llm_reranked = llm_reranker.execute((complex_query, complex_documents))\n\nprint(f\"\u590d\u6742\u67e5\u8be2: {query_result}\")\nprint(\"LLM\u91cd\u6392\u5e8f\u7ed3\u679c:\")\nfor i, doc in enumerate(llm_reranked, 1):\n    print(f\"{i}. {doc}\")\n</code></pre>"},{"location":"librarys/rag/components/reranker/#_14","title":"\u6027\u80fd\u5bf9\u6bd4\u4e0e\u9009\u62e9\u6307\u5357","text":""},{"location":"librarys/rag/components/reranker/#_15","title":"\u6a21\u578b\u5bf9\u6bd4\u5206\u6790","text":"\u5bf9\u6bd4\u7ef4\u5ea6 BGEReranker LLMbased_Reranker \u63a8\u7406\u901f\u5ea6 \u5feb\u901f \u4e2d\u7b49 \u5185\u5b58\u6d88\u8017 \u8f83\u4f4e \u8f83\u9ad8 \u51c6\u786e\u6027 \u9ad8 \u66f4\u9ad8 \u590d\u6742\u63a8\u7406 \u57fa\u7840 \u5f3a \u591a\u8bed\u8a00\u652f\u6301 \u4f18\u79c0 \u4f18\u79c0 \u90e8\u7f72\u590d\u6742\u5ea6 \u7b80\u5355 \u4e2d\u7b49"},{"location":"librarys/rag/components/reranker/#_16","title":"\u5e94\u7528\u573a\u666f\u9009\u62e9","text":""},{"location":"librarys/rag/components/reranker/#bgereranker_1","title":"\u63a8\u8350\u4f7f\u7528BGEReranker\u7684\u573a\u666f\uff1a","text":"<ol> <li>\u5b9e\u65f6\u5e94\u7528\uff1a\u5bf9\u54cd\u5e94\u65f6\u95f4\u8981\u6c42\u4e25\u683c\u7684\u5728\u7ebf\u670d\u52a1</li> <li>\u8d44\u6e90\u53d7\u9650\uff1a\u8ba1\u7b97\u8d44\u6e90\u6216\u5185\u5b58\u6709\u9650\u7684\u73af\u5883</li> <li>\u7b80\u5355\u67e5\u8be2\uff1a\u4e3b\u8981\u5904\u7406\u4e8b\u5b9e\u6027\u67e5\u8be2\u548c\u76f4\u63a5\u5339\u914d</li> <li>\u9ad8\u5e76\u53d1\uff1a\u9700\u8981\u5904\u7406\u5927\u91cf\u5e76\u53d1\u8bf7\u6c42\u7684\u7cfb\u7edf</li> </ol>"},{"location":"librarys/rag/components/reranker/#llmbased_reranker_1","title":"\u63a8\u8350\u4f7f\u7528LLMbased_Reranker\u7684\u573a\u666f\uff1a","text":"<ol> <li>\u590d\u6742\u63a8\u7406\uff1a\u9700\u8981\u591a\u6587\u6863\u7efc\u5408\u5206\u6790\u7684\u67e5\u8be2</li> <li>\u9ad8\u7cbe\u5ea6\u8981\u6c42\uff1a\u5bf9\u68c0\u7d22\u8d28\u91cf\u8981\u6c42\u6781\u9ad8\u7684\u5e94\u7528</li> <li>\u79bb\u7ebf\u5904\u7406\uff1a\u6279\u5904\u7406\u6216\u5bf9\u5b9e\u65f6\u6027\u8981\u6c42\u4e0d\u4e25\u683c\u7684\u573a\u666f</li> <li>\u7814\u7a76\u5206\u6790\uff1a\u5b66\u672f\u7814\u7a76\u6216\u6df1\u5ea6\u5185\u5bb9\u5206\u6790\u4efb\u52a1</li> </ol>"},{"location":"librarys/rag/components/reranker/#_17","title":"\u96c6\u6210\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"librarys/rag/components/reranker/#_18","title":"\u4e0e\u68c0\u7d22\u5668\u96c6\u6210","text":"<pre><code>from sage.libs.rag.retriever import ChromaRetriever\nfrom sage.libs.rag.reranker import BGEReranker\n\n# \u914d\u7f6e\u68c0\u7d22-\u91cd\u6392\u5e8f\u6d41\u6c34\u7ebf\nretriever_config = {\n    \"top_k\": 20,  # \u7c97\u6392\u83b7\u53d6\u66f4\u591a\u5019\u9009\n    \"embedding\": {\"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}\n}\n\nreranker_config = {\n    \"model_name\": \"BAAI/bge-reranker-v2-m3\",\n    \"topk\": 5  # \u7cbe\u6392\u83b7\u53d6\u6700\u4f18\u7ed3\u679c\n}\n\n# \u6784\u5efa\u68c0\u7d22-\u91cd\u6392\u5e8f\u6d41\u6c34\u7ebf\ndef retrieve_and_rerank(query):\n    # \u7b2c\u4e00\u9636\u6bb5\uff1a\u7c97\u6392\u68c0\u7d22\n    retriever = ChromaRetriever(retriever_config)\n    _, candidates = retriever.execute(query)\n\n    # \u7b2c\u4e8c\u9636\u6bb5\uff1a\u7cbe\u6392\u91cd\u6392\u5e8f\n    reranker = BGEReranker(reranker_config) \n    _, final_results = reranker.execute((query, candidates))\n\n    return final_results\n\n# \u4f7f\u7528\u6d41\u6c34\u7ebf\nquery = \"\u5411\u91cf\u6570\u636e\u5e93\u7684\u6027\u80fd\u4f18\u5316\u65b9\u6cd5\"\nbest_results = retrieve_and_rerank(query)\n</code></pre>"},{"location":"librarys/rag/components/reranker/#_19","title":"\u6027\u80fd\u76d1\u63a7\u4e0e\u4f18\u5316","text":"<pre><code>import time\nfrom typing import List, Tuple\n\nclass RerankerBenchmark:\n    def __init__(self, reranker, test_queries: List[str], test_docs: List[List[str]]):\n        self.reranker = reranker\n        self.test_queries = test_queries\n        self.test_docs = test_docs\n\n    def benchmark(self) -&gt; dict:\n        total_time = 0\n        total_queries = len(self.test_queries)\n\n        for query, docs in zip(self.test_queries, self.test_docs):\n            start_time = time.time()\n            _ = self.reranker.execute((query, docs))\n            end_time = time.time()\n\n            total_time += (end_time - start_time)\n\n        avg_latency = total_time / total_queries\n        qps = 1.0 / avg_latency\n\n        return {\n            \"average_latency\": avg_latency,\n            \"queries_per_second\": qps,\n            \"total_time\": total_time,\n            \"total_queries\": total_queries\n        }\n\n# \u6027\u80fd\u6d4b\u8bd5\nbenchmark = RerankerBenchmark(reranker, test_queries, test_documents)\nperformance_metrics = benchmark.benchmark()\nprint(f\"\u5e73\u5747\u5ef6\u8fdf: {performance_metrics['average_latency']:.3f}s\")\nprint(f\"QPS: {performance_metrics['queries_per_second']:.1f}\")\n</code></pre>"},{"location":"librarys/rag/components/reranker/#_20","title":"\u8f93\u51fa\u793a\u4f8b","text":"<pre><code>\u539f\u59cb\u67e5\u8be2: \u4ec0\u4e48\u662f\u4eba\u5de5\u667a\u80fd\uff1f\n\u91cd\u6392\u5e8f\u540e\u7684\u6587\u6863:\n1. \u4eba\u5de5\u667a\u80fd\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u81f4\u529b\u4e8e\u521b\u5efa\u80fd\u591f\u6267\u884c\u901a\u5e38\u9700\u8981\u4eba\u7c7b\u667a\u80fd\u7684\u4efb\u52a1\u7684\u7cfb\u7edf\u3002\n2. \u673a\u5668\u5b66\u4e60\u662f\u4eba\u5de5\u667a\u80fd\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u901a\u8fc7\u7b97\u6cd5\u8ba9\u8ba1\u7b97\u673a\u4ece\u6570\u636e\u4e2d\u5b66\u4e60\u3002\n3. \u81ea\u7136\u8bed\u8a00\u5904\u7406\u662f\u4eba\u5de5\u667a\u80fd\u7684\u4e00\u4e2a\u9886\u57df\uff0c\u4e13\u6ce8\u4e8e\u8ba1\u7b97\u673a\u4e0e\u4eba\u7c7b\u8bed\u8a00\u7684\u4ea4\u4e92\u3002\n</code></pre>"},{"location":"librarys/rag/components/reranker/#llmbased_reranker_2","title":"LLMbased_Reranker \u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"librarys/rag/components/reranker/#_21","title":"\u57fa\u672c\u914d\u7f6e","text":"<pre><code>config = {\n    \"topk\": 3\n}\n</code></pre>"},{"location":"librarys/rag/components/reranker/#_22","title":"\u521d\u59cb\u5316\u548c\u4f7f\u7528","text":"<pre><code>from sage.libs.rag.reranker import LLMbased_Reranker\n\n# \u521d\u59cb\u5316 LLM \u91cd\u6392\u5e8f\u5668\nreranker = LLMbased_Reranker(config, model_name=\"BAAI/bge-reranker-v2-gemma\")\n\n# \u4f7f\u7528\u65b9\u6cd5\u4e0e BGEReranker \u76f8\u540c\nquery = \"Python \u4e2d\u5982\u4f55\u5904\u7406\u5f02\u5e38\uff1f\"\ndocuments = [\n    \"Python \u4f7f\u7528 try-except \u8bed\u53e5\u6765\u5904\u7406\u5f02\u5e38\u3002\",\n    \"Java \u4e2d\u7684\u5f02\u5e38\u5904\u7406\u4f7f\u7528 try-catch \u5757\u3002\",\n    \"\u5728 Python \u4e2d\uff0cfinally \u5757\u603b\u662f\u4f1a\u6267\u884c\u3002\",\n    \"\u5f02\u5e38\u662f\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u9519\u8bef\u3002\",\n    \"Python \u63d0\u4f9b\u4e86\u591a\u79cd\u5185\u7f6e\u5f02\u5e38\u7c7b\u578b\u3002\"\n]\n\ninput_data = (query, documents)\nresult_query, reranked_docs = reranker.execute(input_data)\n\nprint(f\"\u67e5\u8be2: {result_query}\")\nprint(\"LLM \u91cd\u6392\u5e8f\u7ed3\u679c:\")\nfor i, doc in enumerate(reranked_docs, 1):\n    print(f\"{i}. {doc}\")\n</code></pre>"},{"location":"librarys/rag/components/reranker/#sage","title":"\u96c6\u6210\u5230 SAGE \u7ba1\u9053\u4e2d","text":"<pre><code>from sage.core.pipeline import Pipeline\nfrom sage.libs.rag.reranker import BGEReranker\n\n# \u521b\u5efa\u91cd\u6392\u5e8f\u7ec4\u4ef6\nreranker_config = {\n    \"model_name\": \"BAAI/bge-reranker-v2-m3\",\n    \"topk\": 3\n}\nreranker = BGEReranker(reranker_config)\n\n# \u96c6\u6210\u5230\u7ba1\u9053\u4e2d\npipeline = Pipeline()\npipeline.add_component(\"reranker\", reranker)\n\n# \u8fd0\u884c\u7ba1\u9053\nresult = pipeline.run({\"query\": query, \"documents\": documents})\n</code></pre>"},{"location":"librarys/rag/components/retriever/","title":"\u68c0\u7d22\u7ec4\u4ef6 (Retrieval Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdSAGE\u6846\u67b6\u4e2d\u68c0\u7d22\u7ec4\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u68c0\u7d22\u7ec4\u4ef6\u662fRAG\u7cfb\u7edf\u7684\u6838\u5fc3\u67e5\u8be2\u5f15\u64ce\uff0c\u8d1f\u8d23\u4ece\u6784\u5efa\u597d\u7684\u5411\u91cf\u7d22\u5f15\u4e2d\u5feb\u901f\u51c6\u786e\u5730\u68c0\u7d22\u4e0e\u7528\u6237\u67e5\u8be2\u76f8\u5173\u7684\u6587\u6863\u5185\u5bb9\u3002</p>"},{"location":"librarys/rag/components/retriever/#_1","title":"\u7ec4\u4ef6\u6982\u8ff0","text":""},{"location":"librarys/rag/components/retriever/#_2","title":"\u6838\u5fc3\u529f\u80fd","text":"<p>\u68c0\u7d22\u7ec4\u4ef6\u5728RAG\u7cfb\u7edf\u4e2d\u627f\u62c5\u4ee5\u4e0b\u5173\u952e\u804c\u8d23\uff1a</p> <ul> <li>\u8bed\u4e49\u68c0\u7d22\uff1a\u57fa\u4e8e\u5411\u91cf\u76f8\u4f3c\u5ea6\u8fdb\u884c\u8bed\u4e49\u7ea7\u522b\u7684\u6587\u6863\u68c0\u7d22</li> <li>\u591a\u6e90\u6574\u5408\uff1a\u652f\u6301\u591a\u79cd\u5411\u91cf\u6570\u636e\u5e93\u548c\u68c0\u7d22\u7b97\u6cd5</li> <li>\u7ed3\u679c\u6392\u5e8f\uff1a\u6309\u76f8\u5173\u6027\u5bf9\u68c0\u7d22\u7ed3\u679c\u8fdb\u884c\u6392\u5e8f\u548c\u7b5b\u9009</li> <li>\u6027\u80fd\u4f18\u5316\uff1a\u63d0\u4f9b\u9ad8\u6548\u7684\u5927\u89c4\u6a21\u6587\u6863\u68c0\u7d22\u80fd\u529b</li> </ul>"},{"location":"librarys/rag/components/retriever/#_3","title":"\u6280\u672f\u67b6\u6784","text":"<p>\u68c0\u7d22\u7ec4\u4ef6\u91c7\u7528\u6a21\u5757\u5316\u8bbe\u8ba1\uff0c\u652f\u6301\u591a\u79cd\u540e\u7aef\u5b9e\u73b0\uff1a</p> <pre><code>\u7528\u6237\u67e5\u8be2 \u2192 \u67e5\u8be2\u5411\u91cf\u5316 \u2192 \u76f8\u4f3c\u5ea6\u8ba1\u7b97 \u2192 \u7ed3\u679c\u6392\u5e8f \u2192 \u6587\u6863\u8fd4\u56de\n   \u2193         \u2193           \u2193           \u2193         \u2193\n \u6587\u672c\u5904\u7406 \u2192 \u5d4c\u5165\u6a21\u578b    \u2192 \u5411\u91cf\u6570\u636e\u5e93  \u2192 TopK\u9009\u62e9 \u2192 \u6807\u51c6\u5316\u8f93\u51fa\n</code></pre>"},{"location":"librarys/rag/components/retriever/#chromaretriever","title":"ChromaRetriever","text":""},{"location":"librarys/rag/components/retriever/#_4","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>ChromaRetriever</code>\u662f\u57fa\u4e8eChromaDB\u5411\u91cf\u6570\u636e\u5e93\u7684\u68c0\u7d22\u5668\uff0c\u652f\u6301\u9ad8\u6548\u7684\u5411\u91cf\u76f8\u4f3c\u5ea6\u68c0\u7d22\u548c\u5b8c\u6574\u7684\u6587\u6863\u751f\u547d\u5468\u671f\u7ba1\u7406\u3002</p>"},{"location":"librarys/rag/components/retriever/#_5","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u652f\u6301\u7279\u6027\uff1a - \u5411\u91cf\u76f8\u4f3c\u5ea6\u68c0\u7d22\uff08\u4f59\u5f26\u3001\u6b27\u6c0f\u8ddd\u79bb\u7b49\uff09 - \u5143\u6570\u636e\u8fc7\u6ee4 - \u6df7\u5408\u68c0\u7d22\uff08\u5411\u91cf+\u5173\u952e\u8bcd\uff09 - \u589e\u91cf\u7d22\u5f15\u66f4\u65b0 - \u5206\u5e03\u5f0f\u5b58\u50a8\u652f\u6301</p> <p>\u914d\u7f6e\u53c2\u6570\uff1a</p> \u53c2\u6570\u7ec4 \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e \u57fa\u7840\u914d\u7f6e <code>dimension</code> int 384 \u5411\u91cf\u7ef4\u5ea6 <code>top_k</code> int 5 \u8fd4\u56de\u6587\u6863\u6570\u91cf \u5d4c\u5165\u914d\u7f6e <code>embedding.method</code> str \"default\" \u5d4c\u5165\u65b9\u6cd5 <code>embedding.model</code> str \"all-MiniLM-L6-v2\" \u5d4c\u5165\u6a21\u578b\u540d\u79f0 \u6570\u636e\u5e93\u914d\u7f6e <code>chroma.persist_path</code> str - \u6570\u636e\u5e93\u5b58\u50a8\u8def\u5f84 <code>chroma.collection_name</code> str - \u96c6\u5408\u540d\u79f0 <code>chroma.knowledge_file</code> str - \u77e5\u8bc6\u5e93\u6587\u4ef6\u8def\u5f84"},{"location":"librarys/rag/components/retriever/#_6","title":"\u5b9e\u73b0\u793a\u4f8b","text":""},{"location":"librarys/rag/components/retriever/#_7","title":"\u57fa\u7840\u68c0\u7d22\u914d\u7f6e","text":"<pre><code>from sage.libs.rag.retriever import ChromaRetriever\n\n# \u6807\u51c6\u68c0\u7d22\u5668\u914d\u7f6e\nconfig = {\n    \"dimension\": 384,\n    \"top_k\": 5,\n    \"embedding\": {\n        \"method\": \"default\",\n        \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"\n    },\n    \"chroma\": {\n        \"persist_path\": \"./vector_database\",\n        \"collection_name\": \"knowledge_base\",\n        \"knowledge_file\": \"data/documents.txt\"\n    }\n}\n\n# \u521d\u59cb\u5316\u68c0\u7d22\u5668\nretriever = ChromaRetriever(config)\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_8","title":"\u5355\u6b21\u67e5\u8be2\u68c0\u7d22","text":"<pre><code># \u5b57\u7b26\u4e32\u67e5\u8be2\nquery = \"\u5411\u91cf\u6570\u636e\u5e93\u7684\u4f18\u52bf\u662f\u4ec0\u4e48\uff1f\"\nresults = retriever.execute(query)\n\nprint(\"\u68c0\u7d22\u7ed3\u679c:\")\nfor i, doc in enumerate(results[\"results\"], 1):\n    print(f\"{i}. {doc}\")\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_9","title":"\u5b57\u5178\u683c\u5f0f\u67e5\u8be2","text":"<pre><code># \u5b57\u5178\u67e5\u8be2\uff08\u652f\u6301\u66f4\u591a\u53c2\u6570\uff09\nquery_dict = {\n    \"query\": \"\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u5206\u7c7b\",\n    \"top_k\": 8,  # \u8986\u76d6\u9ed8\u8ba4\u914d\u7f6e\n    \"filter\": {\"category\": \"ai\"}  # \u5143\u6570\u636e\u8fc7\u6ee4\n}\n\nresults = retriever.execute(query_dict)\nprint(f\"\u627e\u5230 {len(results['results'])} \u4e2a\u76f8\u5173\u6587\u6863\")\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_10","title":"\u6279\u91cf\u67e5\u8be2\u5904\u7406","text":"<pre><code># \u6279\u91cf\u67e5\u8be2\nqueries = [\n    \"\u4ec0\u4e48\u662f\u6df1\u5ea6\u5b66\u4e60\uff1f\",\n    \"\u795e\u7ecf\u7f51\u7edc\u7684\u57fa\u672c\u7ed3\u6784\",\n    \"\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u539f\u7406\"\n]\n\nbatch_results = []\nfor query in queries:\n    result = retriever.execute(query)\n    batch_results.append(result[\"results\"])\n\nprint(f\"\u6279\u91cf\u5904\u7406\u5b8c\u6210\uff0c\u5171\u5904\u7406 {len(queries)} \u4e2a\u67e5\u8be2\")\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_11","title":"\u6587\u6863\u7ba1\u7406\u529f\u80fd","text":""},{"location":"librarys/rag/components/retriever/#_12","title":"\u6dfb\u52a0\u65b0\u6587\u6863","text":"<pre><code># \u5355\u4e2a\u6587\u6863\u6dfb\u52a0\nnew_document = \"SAGE\u662f\u4e00\u4e2a\u5148\u8fdb\u7684RAG\u6846\u67b6\uff0c\u652f\u6301\u591a\u79cd\u5411\u91cf\u68c0\u7d22\u65b9\u6cd5\u3002\"\ndoc_id = \"sage_intro_001\"\n\nretriever.add_documents([new_document], [doc_id])\nprint(f\"\u6587\u6863 {doc_id} \u6dfb\u52a0\u6210\u529f\")\n\n# \u6279\u91cf\u6587\u6863\u6dfb\u52a0\nnew_docs = [\n    \"ChromaDB\u662f\u4e00\u4e2a\u5f00\u6e90\u5411\u91cf\u6570\u636e\u5e93\u3002\",\n    \"\u5411\u91cf\u68c0\u7d22\u5728\u4fe1\u606f\u68c0\u7d22\u4e2d\u5e94\u7528\u5e7f\u6cdb\u3002\",\n    \"\u8bed\u4e49\u641c\u7d22\u6bd4\u5173\u952e\u8bcd\u641c\u7d22\u66f4\u667a\u80fd\u3002\"\n]\ndoc_ids = [\"chroma_001\", \"vector_001\", \"semantic_001\"]\n\nretriever.add_documents(new_docs, doc_ids)\nprint(f\"\u6279\u91cf\u6dfb\u52a0 {len(new_docs)} \u4e2a\u6587\u6863\u6210\u529f\")\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_13","title":"\u6587\u6863\u66f4\u65b0\u4e0e\u5220\u9664","text":"<pre><code># \u66f4\u65b0\u73b0\u6709\u6587\u6863\nupdated_content = \"SAGE\u6846\u67b6\u5df2\u5347\u7ea7\u52302.0\u7248\u672c\uff0c\u65b0\u589e\u591a\u9879\u9ad8\u7ea7\u529f\u80fd\u3002\"\nretriever.update_document(\"sage_intro_001\", updated_content)\n\n# \u5220\u9664\u6587\u6863\nretriever.delete_documents([\"outdated_doc_001\", \"deprecated_doc_002\"])\nprint(\"\u8fc7\u671f\u6587\u6863\u5220\u9664\u5b8c\u6210\")\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_14","title":"\u9ad8\u7ea7\u68c0\u7d22\u529f\u80fd","text":""},{"location":"librarys/rag/components/retriever/#_15","title":"\u6df7\u5408\u68c0\u7d22","text":"<pre><code># \u914d\u7f6e\u6df7\u5408\u68c0\u7d22\uff08\u5411\u91cf+BM25\uff09\nhybrid_config = {\n    **config,  # \u7ee7\u627f\u57fa\u7840\u914d\u7f6e\n    \"hybrid_search\": {\n        \"enabled\": True,\n        \"vector_weight\": 0.7,    # \u5411\u91cf\u68c0\u7d22\u6743\u91cd\n        \"keyword_weight\": 0.3,   # \u5173\u952e\u8bcd\u68c0\u7d22\u6743\u91cd\n        \"keyword_method\": \"bm25\" # \u5173\u952e\u8bcd\u68c0\u7d22\u7b97\u6cd5\n    }\n}\n\nhybrid_retriever = ChromaRetriever(hybrid_config)\n\n# \u6267\u884c\u6df7\u5408\u68c0\u7d22\nquery = \"\u6df1\u5ea6\u5b66\u4e60\u5728\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u5e94\u7528\"\nhybrid_results = hybrid_retriever.execute(query)\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_16","title":"\u5143\u6570\u636e\u8fc7\u6ee4\u68c0\u7d22","text":"<pre><code># \u5e26\u5143\u6570\u636e\u8fc7\u6ee4\u7684\u68c0\u7d22\nfiltered_query = {\n    \"query\": \"\u673a\u5668\u5b66\u4e60\u6a21\u578b\u8bc4\u4f30\",\n    \"filter\": {\n        \"category\": \"machine_learning\",\n        \"difficulty\": \"intermediate\",\n        \"language\": \"chinese\"\n    },\n    \"top_k\": 3\n}\n\nfiltered_results = retriever.execute(filtered_query)\nprint(\"\u8fc7\u6ee4\u68c0\u7d22\u5b8c\u6210\")\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_17","title":"\u591a\u8f6e\u5bf9\u8bdd\u68c0\u7d22","text":"<pre><code>class ConversationalRetriever:\n    def __init__(self, base_retriever):\n        self.retriever = base_retriever\n        self.conversation_history = []\n\n    def retrieve_with_context(self, current_query):\n        # \u6784\u5efa\u4e0a\u4e0b\u6587\u589e\u5f3a\u67e5\u8be2\n        if self.conversation_history:\n            context = \" \".join(self.conversation_history[-3:])  # \u6700\u8fd13\u8f6e\u5bf9\u8bdd\n            enhanced_query = f\"\u4e0a\u4e0b\u6587: {context} \u5f53\u524d\u95ee\u9898: {current_query}\"\n        else:\n            enhanced_query = current_query\n\n        # \u6267\u884c\u68c0\u7d22\n        results = self.retriever.execute(enhanced_query)\n\n        # \u66f4\u65b0\u5bf9\u8bdd\u5386\u53f2\n        self.conversation_history.append(current_query)\n\n        return results\n\n# \u4f7f\u7528\u5bf9\u8bdd\u5f0f\u68c0\u7d22\u5668\nconv_retriever = ConversationalRetriever(retriever)\n\n# \u591a\u8f6e\u5bf9\u8bdd\u793a\u4f8b\nqueries = [\n    \"\u4ec0\u4e48\u662f\u795e\u7ecf\u7f51\u7edc\uff1f\",\n    \"\u5b83\u6709\u54ea\u4e9b\u7c7b\u578b\uff1f\",\n    \"\u5728\u56fe\u50cf\u8bc6\u522b\u4e2d\u5982\u4f55\u5e94\u7528\uff1f\"\n]\n\nfor query in queries:\n    results = conv_retriever.retrieve_with_context(query)\n    print(f\"\u67e5\u8be2: {query}\")\n    print(f\"\u6700\u4f73\u5339\u914d: {results['results'][0][:100]}...\")\n    print()\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_18","title":"\u6027\u80fd\u4f18\u5316\u7b56\u7565","text":""},{"location":"librarys/rag/components/retriever/#_19","title":"\u7d22\u5f15\u4f18\u5316","text":"<pre><code># \u5927\u89c4\u6a21\u6570\u636e\u96c6\u7684\u7d22\u5f15\u4f18\u5316\u914d\u7f6e\noptimized_config = {\n    \"dimension\": 768,  # \u4f7f\u7528\u66f4\u9ad8\u7ef4\u5ea6\u7684\u5d4c\u5165\n    \"top_k\": 10,\n    \"embedding\": {\n        \"model\": \"sentence-transformers/all-mpnet-base-v2\",\n        \"batch_size\": 64,  # \u6279\u5904\u7406\u4f18\u5316\n        \"normalize_embeddings\": True\n    },\n    \"chroma\": {\n        \"persist_path\": \"./optimized_db\",\n        \"collection_name\": \"large_knowledge_base\",\n        \"index_params\": {\n            \"hnsw:space\": \"cosine\",\n            \"hnsw:construction_ef\": 400,\n            \"hnsw:search_ef\": 200,\n            \"hnsw:M\": 32\n        }\n    }\n}\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_20","title":"\u7f13\u5b58\u7b56\u7565","text":"<pre><code>from functools import lru_cache\nimport hashlib\n\nclass CachedRetriever:\n    def __init__(self, base_retriever, cache_size=1000):\n        self.retriever = base_retriever\n        self.cache_size = cache_size\n\n    @lru_cache(maxsize=1000)\n    def _cached_retrieve(self, query_hash):\n        return self.retriever.execute(query_hash)\n\n    def execute(self, query):\n        # \u751f\u6210\u67e5\u8be2\u54c8\u5e0c\n        if isinstance(query, str):\n            query_hash = hashlib.md5(query.encode()).hexdigest()\n        else:\n            query_str = str(sorted(query.items()))\n            query_hash = hashlib.md5(query_str.encode()).hexdigest()\n\n        return self._cached_retrieve(query_hash)\n\n# \u4f7f\u7528\u7f13\u5b58\u68c0\u7d22\u5668\ncached_retriever = CachedRetriever(retriever)\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_21","title":"\u5e76\u53d1\u5904\u7406","text":"<pre><code>import concurrent.futures\nfrom typing import List\n\ndef parallel_retrieve(retriever, queries: List[str], max_workers=4):\n    \"\"\"\u5e76\u884c\u5904\u7406\u591a\u4e2a\u68c0\u7d22\u67e5\u8be2\"\"\"\n\n    def single_retrieve(query):\n        return retriever.execute(query)\n\n    with concurrent.futures.ThreadPoolExecutor(max_workers=max_workers) as executor:\n        # \u63d0\u4ea4\u6240\u6709\u67e5\u8be2\n        future_to_query = {\n            executor.submit(single_retrieve, query): query \n            for query in queries\n        }\n\n        # \u6536\u96c6\u7ed3\u679c\n        results = {}\n        for future in concurrent.futures.as_completed(future_to_query):\n            query = future_to_query[future]\n            try:\n                result = future.result()\n                results[query] = result\n            except Exception as exc:\n                print(f\"\u67e5\u8be2 '{query}' \u751f\u6210\u5f02\u5e38: {exc}\")\n                results[query] = None\n\n    return results\n\n# \u5e76\u884c\u68c0\u7d22\u793a\u4f8b\ntest_queries = [\n    \"\u4ec0\u4e48\u662f\u673a\u5668\u5b66\u4e60\uff1f\",\n    \"\u6df1\u5ea6\u5b66\u4e60\u7684\u5e94\u7528\",\n    \"\u81ea\u7136\u8bed\u8a00\u5904\u7406\u6280\u672f\",\n    \"\u8ba1\u7b97\u673a\u89c6\u89c9\u7b97\u6cd5\"\n]\n\nparallel_results = parallel_retrieve(retriever, test_queries)\nfor query, result in parallel_results.items():\n    if result:\n        print(f\"\u67e5\u8be2: {query} -&gt; \u68c0\u7d22\u5230 {len(result['results'])} \u4e2a\u6587\u6863\")\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_22","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"librarys/rag/components/retriever/#_23","title":"\u67e5\u8be2\u4f18\u5316\u6280\u5de7","text":"<ol> <li>\u67e5\u8be2\u91cd\u5199\uff1a\u5bf9\u7528\u6237\u67e5\u8be2\u8fdb\u884c\u8bed\u4e49\u6269\u5c55\u548c\u89c4\u8303\u5316</li> <li>\u591a\u7b56\u7565\u878d\u5408\uff1a\u7ed3\u5408\u5411\u91cf\u68c0\u7d22\u548c\u5173\u952e\u8bcd\u68c0\u7d22</li> <li>\u52a8\u6001Top-K\uff1a\u6839\u636e\u67e5\u8be2\u590d\u6742\u5ea6\u8c03\u6574\u8fd4\u56de\u6587\u6863\u6570\u91cf</li> <li>\u7ed3\u679c\u53bb\u91cd\uff1a\u907f\u514d\u8fd4\u56de\u9ad8\u5ea6\u76f8\u4f3c\u7684\u91cd\u590d\u6587\u6863</li> </ol>"},{"location":"librarys/rag/components/retriever/#_24","title":"\u8d28\u91cf\u76d1\u63a7","text":"<pre><code>class RetrievalQualityMonitor:\n    def __init__(self, retriever):\n        self.retriever = retriever\n        self.metrics = {\n            \"queries_count\": 0,\n            \"avg_relevance_score\": 0.0,\n            \"zero_results_count\": 0\n        }\n\n    def monitored_retrieve(self, query):\n        results = self.retriever.execute(query)\n\n        # \u66f4\u65b0\u6307\u6807\n        self.metrics[\"queries_count\"] += 1\n        if not results.get(\"results\"):\n            self.metrics[\"zero_results_count\"] += 1\n\n        return results\n\n    def get_stats(self):\n        if self.metrics[\"queries_count\"] &gt; 0:\n            zero_rate = self.metrics[\"zero_results_count\"] / self.metrics[\"queries_count\"]\n            return {\n                \"total_queries\": self.metrics[\"queries_count\"],\n                \"zero_results_rate\": zero_rate,\n                \"coverage\": 1 - zero_rate\n            }\n        return {\"no_data\": True}\n\n# \u4f7f\u7528\u8d28\u91cf\u76d1\u63a7\nmonitor = RetrievalQualityMonitor(retriever)\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_25","title":"\u9519\u8bef\u5904\u7406\u4e0e\u5bb9\u9519","text":"<pre><code>class RobustRetriever:\n    def __init__(self, primary_retriever, fallback_method=None):\n        self.primary = primary_retriever\n        self.fallback = fallback_method\n\n    def execute(self, query, max_retries=3):\n        for attempt in range(max_retries):\n            try:\n                results = self.primary.execute(query)\n                if results and results.get(\"results\"):\n                    return results\n            except Exception as e:\n                print(f\"\u68c0\u7d22\u5c1d\u8bd5 {attempt + 1} \u5931\u8d25: {e}\")\n                if attempt == max_retries - 1:\n                    # \u6700\u540e\u4e00\u6b21\u5c1d\u8bd5\u5931\u8d25\uff0c\u4f7f\u7528\u5907\u7528\u65b9\u6cd5\n                    if self.fallback:\n                        return self.fallback(query)\n                    else:\n                        return {\"results\": [], \"error\": str(e)}\n\n        return {\"results\": [], \"error\": \"All retrieval attempts failed\"}\n\n# \u521b\u5efa\u5065\u58ee\u7684\u68c0\u7d22\u5668\nrobust_retriever = RobustRetriever(\n    retriever, \n    fallback_method=lambda q: {\"results\": [f\"\u672a\u627e\u5230\u5173\u4e8e'{q}'\u7684\u76f8\u5173\u4fe1\u606f\"]}\n)\n</code></pre> <pre><code>query_dict = {\"question\": \"SAGE\u6709\u54ea\u4e9b\u68c0\u7d22\u65b9\u5f0f\uff1f\"}\nresult = retriever.execute(query_dict)\nprint(result[\"results\"])\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_26","title":"\u83b7\u53d6\u96c6\u5408\u4fe1\u606f","text":"<pre><code>info = retriever.get_collection_info()\nprint(info)\n</code></pre>"},{"location":"librarys/rag/components/retriever/#_27","title":"\u7d22\u5f15\u4fdd\u5b58\u4e0e\u52a0\u8f7d","text":"<pre><code>retriever.save_index(\"my_index_config.json\")\nretriever.load_index(\"my_index_config.json\")\n</code></pre>"},{"location":"librarys/rag/components/search/","title":"\u5916\u90e8\u641c\u7d22\u7ec4\u4ef6 (External Search Components)","text":"<p>\u672c\u6587\u6863\u8be6\u7ec6\u4ecb\u7ecdSAGE\u6846\u67b6\u4e2d<code>sage.libs.rag.searcher</code>\u6a21\u5757\u7684\u5916\u90e8\u641c\u7d22\u7ec4\u4ef6\u3002\u5916\u90e8\u641c\u7d22\u7ec4\u4ef6\u662fRAG\u7cfb\u7edf\u7684\u4fe1\u606f\u6269\u5c55\u5c42\uff0c\u8d1f\u8d23\u4ece\u4e92\u8054\u7f51\u548c\u5916\u90e8\u6570\u636e\u6e90\u83b7\u53d6\u5b9e\u65f6\u4fe1\u606f\uff0c\u5f25\u8865\u672c\u5730\u77e5\u8bc6\u5e93\u7684\u65f6\u6548\u6027\u548c\u8986\u76d6\u8303\u56f4\u9650\u5236\u3002</p>"},{"location":"librarys/rag/components/search/#_1","title":"\u7ec4\u4ef6\u6982\u8ff0","text":""},{"location":"librarys/rag/components/search/#_2","title":"\u6838\u5fc3\u529f\u80fd","text":"<p>\u5916\u90e8\u641c\u7d22\u7ec4\u4ef6\u5728RAG\u7cfb\u7edf\u4e2d\u627f\u62c5\u4ee5\u4e0b\u5173\u952e\u804c\u8d23\uff1a</p> <ul> <li>\u5b9e\u65f6\u4fe1\u606f\u83b7\u53d6\uff1a\u4ece\u4e92\u8054\u7f51\u83b7\u53d6\u6700\u65b0\u7684\u4fe1\u606f\u548c\u6570\u636e</li> <li>\u77e5\u8bc6\u5e93\u6269\u5c55\uff1a\u6269\u5c55\u672c\u5730\u77e5\u8bc6\u5e93\u65e0\u6cd5\u8986\u76d6\u7684\u9886\u57df\u548c\u5185\u5bb9</li> <li>\u65f6\u6548\u6027\u4fdd\u969c\uff1a\u63d0\u4f9b\u5177\u6709\u65f6\u6548\u6027\u7684\u65b0\u95fb\u3001\u4e8b\u4ef6\u548c\u6570\u636e\u66f4\u65b0</li> <li>\u591a\u6e90\u805a\u5408\uff1a\u6574\u5408\u6765\u81ea\u4e0d\u540c\u641c\u7d22\u5f15\u64ce\u548c\u6570\u636e\u6e90\u7684\u4fe1\u606f</li> </ul>"},{"location":"librarys/rag/components/search/#_3","title":"\u5e94\u7528\u573a\u666f","text":"<ul> <li>\u65b0\u95fb\u8d44\u8baf\u67e5\u8be2\uff1a\u83b7\u53d6\u6700\u65b0\u7684\u65b0\u95fb\u62a5\u9053\u548c\u65f6\u4e8b\u5206\u6790</li> <li>\u5b9e\u65f6\u6570\u636e\u68c0\u7d22\uff1a\u67e5\u8be2\u80a1\u4ef7\u3001\u5929\u6c14\u3001\u6c47\u7387\u7b49\u52a8\u6001\u6570\u636e</li> <li>\u8d8b\u52bf\u5206\u6790\uff1a\u83b7\u53d6\u884c\u4e1a\u52a8\u6001\u548c\u5e02\u573a\u8d8b\u52bf\u4fe1\u606f</li> <li>\u4e8b\u5b9e\u6838\u67e5\uff1a\u9a8c\u8bc1\u4fe1\u606f\u7684\u51c6\u786e\u6027\u548c\u65f6\u6548\u6027</li> </ul>"},{"location":"librarys/rag/components/search/#_4","title":"\u6280\u672f\u67b6\u6784","text":"<p>\u5916\u90e8\u641c\u7d22\u91c7\u7528API\u96c6\u6210\u67b6\u6784\uff1a</p> <pre><code>\u7528\u6237\u67e5\u8be2 \u2192 \u67e5\u8be2\u4f18\u5316 \u2192 API\u8c03\u7528 \u2192 \u7ed3\u679c\u5904\u7406 \u2192 \u4fe1\u606f\u6574\u5408 \u2192 \u6807\u51c6\u5316\u8f93\u51fa\n   \u2193         \u2193         \u2193         \u2193         \u2193         \u2193\n \u610f\u56fe\u5206\u6790 \u2192 \u5173\u952e\u8bcd\u63d0\u53d6 \u2192 \u7b2c\u4e09\u65b9API \u2192 \u5185\u5bb9\u89e3\u6790 \u2192 \u53bb\u91cd\u6392\u5e8f \u2192 \u7ed3\u6784\u5316\u6570\u636e\n</code></pre>"},{"location":"librarys/rag/components/search/#bochawebsearch","title":"BochaWebSearch","text":""},{"location":"librarys/rag/components/search/#_5","title":"\u7ec4\u4ef6\u63cf\u8ff0","text":"<p><code>BochaWebSearch</code>\u662f\u57fa\u4e8eBochaAI API\u7684\u7f51\u7edc\u641c\u7d22\u5668\uff0c\u63d0\u4f9b\u9ad8\u8d28\u91cf\u7684\u4e2d\u6587\u7f51\u7edc\u641c\u7d22\u670d\u52a1\uff0c\u652f\u6301\u5b9e\u65f6\u4fe1\u606f\u68c0\u7d22\u548c\u667a\u80fd\u7ed3\u679c\u6458\u8981\u3002</p>"},{"location":"librarys/rag/components/search/#_6","title":"\u6280\u672f\u89c4\u683c","text":"<p>\u670d\u52a1\u7279\u6027\uff1a - \u652f\u6301\u4e2d\u82f1\u6587\u641c\u7d22\u67e5\u8be2 - \u63d0\u4f9b\u641c\u7d22\u7ed3\u679c\u6458\u8981\u751f\u6210 - \u652f\u6301\u5206\u9875\u67e5\u8be2\u548c\u7ed3\u679c\u6570\u91cf\u63a7\u5236 - \u63d0\u4f9b\u4e30\u5bcc\u7684\u5143\u6570\u636e\u4fe1\u606f</p> <p>API\u9650\u5236\uff1a - \u6bcf\u65e5API\u8c03\u7528\u6b21\u6570\u9650\u5236\uff08\u6839\u636e\u8ba2\u9605\u8ba1\u5212\uff09 - \u5355\u6b21\u67e5\u8be2\u6700\u5927\u7ed3\u679c\u6570\u9650\u5236 - \u67e5\u8be2\u9891\u7387\u9650\u5236</p> <p>\u914d\u7f6e\u53c2\u6570\uff1a</p> \u53c2\u6570\u540d \u7c7b\u578b \u9ed8\u8ba4\u503c \u5fc5\u9700\u6027 \u8bf4\u660e <code>api_key</code> str - \u5fc5\u9700 BochaAI API\u8bbf\u95ee\u5bc6\u94a5 <code>count</code> int 10 \u53ef\u9009 \u8fd4\u56de\u641c\u7d22\u7ed3\u679c\u6570\u91cf\uff081-50\uff09 <code>page</code> int 1 \u53ef\u9009 \u9875\u7801\uff0c\u7528\u4e8e\u5206\u9875\u67e5\u8be2 <code>summary</code> bool True \u53ef\u9009 \u662f\u5426\u751f\u6210\u641c\u7d22\u7ed3\u679c\u6458\u8981 <code>language</code> str \"auto\" \u53ef\u9009 \u641c\u7d22\u8bed\u8a00\u504f\u597d <code>region</code> str \"cn\" \u53ef\u9009 \u641c\u7d22\u5730\u533a\u504f\u597d"},{"location":"librarys/rag/components/search/#_7","title":"\u5b9e\u73b0\u793a\u4f8b","text":""},{"location":"librarys/rag/components/search/#_8","title":"\u57fa\u7840\u641c\u7d22\u529f\u80fd","text":"<pre><code>from sage.libs.rag.searcher import BochaWebSearch\n\n# \u57fa\u7840\u914d\u7f6e\nconfig = {\n    \"api_key\": \"your-bocha-api-key\",\n    \"count\": 5,\n    \"summary\": True\n}\n\n# \u521d\u59cb\u5316\u641c\u7d22\u5668\nsearcher = BochaWebSearch(config)\n\n# \u6267\u884c\u641c\u7d22\nquery = \"2024\u5e74\u4eba\u5de5\u667a\u80fd\u53d1\u5c55\u8d8b\u52bf\"\nsearch_results = searcher.execute(query)\n\nprint(f\"\u641c\u7d22\u67e5\u8be2: {query}\")\nprint(f\"\u627e\u5230 {len(search_results['results'])} \u4e2a\u7ed3\u679c\")\n\n# \u8f93\u51fa\u641c\u7d22\u7ed3\u679c\nfor i, result in enumerate(search_results['results'], 1):\n    print(f\"\\n{i}. {result['title']}\")\n    print(f\"   \u94fe\u63a5: {result['url']}\")\n    print(f\"   \u6458\u8981: {result['snippet'][:200]}...\")\n    if 'publish_date' in result:\n        print(f\"   \u53d1\u5e03\u65f6\u95f4: {result['publish_date']}\")\n</code></pre>"},{"location":"librarys/rag/components/search/#_9","title":"\u5206\u9875\u641c\u7d22","text":"<pre><code># \u914d\u7f6e\u5206\u9875\u641c\u7d22\npaginated_config = {\n    \"api_key\": \"your-bocha-api-key\",\n    \"count\": 8,      # \u6bcf\u98758\u4e2a\u7ed3\u679c\n    \"page\": 1,       # \u4ece\u7b2c1\u9875\u5f00\u59cb\n    \"summary\": True\n}\n\nsearcher = BochaWebSearch(paginated_config)\n\n# \u591a\u9875\u641c\u7d22\u793a\u4f8b\ndef search_multiple_pages(query, max_pages=3):\n    all_results = []\n\n    for page in range(1, max_pages + 1):\n        # \u66f4\u65b0\u9875\u7801\n        paginated_config[\"page\"] = page\n        searcher = BochaWebSearch(paginated_config)\n\n        # \u6267\u884c\u641c\u7d22\n        page_results = searcher.execute(query)\n        all_results.extend(page_results['results'])\n\n        print(f\"\u7b2c{page}\u9875: \u83b7\u53d6\u5230 {len(page_results['results'])} \u4e2a\u7ed3\u679c\")\n\n        # \u5982\u679c\u5f53\u524d\u9875\u7ed3\u679c\u4e0d\u8db3\uff0c\u8bf4\u660e\u6ca1\u6709\u66f4\u591a\u9875\u9762\n        if len(page_results['results']) &lt; paginated_config[\"count\"]:\n            break\n\n    return all_results\n\n# \u6267\u884c\u591a\u9875\u641c\u7d22\nquery = \"\u673a\u5668\u5b66\u4e60\u5728\u533b\u7597\u9886\u57df\u7684\u5e94\u7528\"\ncomprehensive_results = search_multiple_pages(query, max_pages=3)\nprint(f\"\\n\u603b\u5171\u83b7\u53d6\u5230 {len(comprehensive_results)} \u4e2a\u641c\u7d22\u7ed3\u679c\")\n</code></pre>"},{"location":"librarys/rag/components/search/#_10","title":"\u9ad8\u7ea7\u641c\u7d22\u914d\u7f6e","text":"<pre><code># \u9ad8\u7ea7\u641c\u7d22\u914d\u7f6e\nadvanced_config = {\n    \"api_key\": \"your-bocha-api-key\",\n    \"count\": 15,\n    \"summary\": True,\n    \"language\": \"zh-cn\",    # \u4e2d\u6587\u641c\u7d22\n    \"region\": \"cn\",         # \u4e2d\u56fd\u5730\u533a\n    \"safe_search\": \"strict\", # \u5b89\u5168\u641c\u7d22\n    \"time_range\": \"month\"   # \u6700\u8fd1\u4e00\u4e2a\u6708\u7684\u7ed3\u679c\n}\n\nadvanced_searcher = BochaWebSearch(advanced_config)\n\n# \u4e13\u4e1a\u641c\u7d22\u793a\u4f8b\nprofessional_queries = [\n    \"\u533a\u5757\u94fe\u6280\u672f\u6700\u65b0\u53d1\u5c55\",\n    \"\u91cf\u5b50\u8ba1\u7b97\u7a81\u7834\u6027\u8fdb\u5c55\", \n    \"\u65b0\u80fd\u6e90\u6c7d\u8f66\u5e02\u573a\u5206\u6790\"\n]\n\nfor query in professional_queries:\n    results = advanced_searcher.execute(query)\n    print(f\"\\n=== {query} ===\")\n\n    # \u663e\u793a\u524d3\u4e2a\u6700\u76f8\u5173\u7684\u7ed3\u679c\n    for i, result in enumerate(results['results'][:3], 1):\n        print(f\"{i}. {result['title']}\")\n        print(f\"   \u6458\u8981: {result['snippet']}\")\n        print(f\"   \u6765\u6e90: {result.get('source', 'Unknown')}\")\n        print()\n</code></pre>"},{"location":"librarys/rag/components/search/#_11","title":"\u7ed3\u679c\u683c\u5f0f\u8bf4\u660e","text":""},{"location":"librarys/rag/components/search/#_12","title":"\u6807\u51c6\u8f93\u51fa\u683c\u5f0f","text":"<pre><code>{\n    \"query\": str,           # \u539f\u59cb\u641c\u7d22\u67e5\u8be2\n    \"results\": [            # \u641c\u7d22\u7ed3\u679c\u5217\u8868\n        {\n            \"title\": str,       # \u9875\u9762\u6807\u9898\n            \"url\": str,         # \u9875\u9762URL\n            \"snippet\": str,     # \u5185\u5bb9\u6458\u8981\n            \"source\": str,      # \u6765\u6e90\u7f51\u7ad9\n            \"publish_date\": str, # \u53d1\u5e03\u65e5\u671f\uff08\u5982\u679c\u53ef\u7528\uff09\n            \"relevance_score\": float, # \u76f8\u5173\u6027\u5206\u6570\n            \"language\": str,    # \u5185\u5bb9\u8bed\u8a00\n            \"content_type\": str # \u5185\u5bb9\u7c7b\u578b\n        }\n    ],\n    \"total_count\": int,     # \u603b\u7ed3\u679c\u6570\u91cf\n    \"search_time\": float,   # \u641c\u7d22\u8017\u65f6\n    \"summary\": str          # \u6574\u4f53\u641c\u7d22\u6458\u8981\uff08\u5982\u679c\u542f\u7528\uff09\n}\n</code></pre>"},{"location":"librarys/rag/components/search/#_13","title":"\u9519\u8bef\u5904\u7406\u683c\u5f0f","text":"<pre><code>{\n    \"error\": str,           # \u9519\u8bef\u63cf\u8ff0\n    \"error_code\": int,      # \u9519\u8bef\u4ee3\u7801\n    \"query\": str,          # \u539f\u59cb\u67e5\u8be2\n    \"results\": []          # \u7a7a\u7ed3\u679c\u5217\u8868\n}\n</code></pre>"},{"location":"librarys/rag/examples/RAG/","title":"RAG\u7cfb\u7edf\u5b8c\u6574\u5b9e\u73b0\u793a\u4f8b (Complete RAG System Implementation)","text":"<p>\u672c\u6587\u6863\u63d0\u4f9b\u4f7f\u7528SAGE\u57fa\u4e8eChroma\u7684RAG\u95ee\u7b54\u7cfb\u7edf\u7684\u5b8c\u6574\u5b9e\u73b0\u793a\u4f8b\u3002\u8be5\u793a\u4f8b\u5c55\u793a\u4e86\u4ece\u6570\u636e\u51c6\u5907\u5230\u7b54\u6848\u751f\u6210\u7684\u7aef\u5230\u7aef\u6d41\u7a0b\uff0c\u662f\u5b66\u4e60\u548c\u7406\u89e3RAG\u6280\u672f\u7684\u6700\u4f73\u8d77\u70b9\u3002</p>"},{"location":"librarys/rag/examples/RAG/#_1","title":"\u6280\u672f\u6982\u8ff0","text":""},{"location":"librarys/rag/examples/RAG/#rag","title":"RAG\u7cfb\u7edf\u7b80\u4ecb","text":"<p>\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff08Retrieval Augmented Generation, RAG\uff09\u662f\u4e00\u79cd\u7ed3\u5408\u68c0\u7d22\u548c\u751f\u6210\u7684AI\u6280\u672f\u67b6\u6784\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u667a\u80fd\u95ee\u7b54\u3001\u77e5\u8bc6\u7ba1\u7406\u548c\u5185\u5bb9\u751f\u6210\u573a\u666f\u3002</p>"},{"location":"librarys/rag/examples/RAG/#_2","title":"\u6838\u5fc3\u4f18\u52bf","text":"<ul> <li>\u77e5\u8bc6\u5b9e\u65f6\u6027\uff1a\u901a\u8fc7\u68c0\u7d22\u83b7\u53d6\u6700\u65b0\u4fe1\u606f\uff0c\u907f\u514d\u8bad\u7ec3\u6570\u636e\u65f6\u6548\u6027\u9650\u5236</li> <li>\u7b54\u6848\u53ef\u6eaf\u6e90\uff1a\u6bcf\u4e2a\u7b54\u6848\u90fd\u57fa\u4e8e\u5177\u4f53\u7684\u77e5\u8bc6\u6765\u6e90\uff0c\u63d0\u4f9b\u53ef\u9a8c\u8bc1\u6027</li> <li>\u8d44\u6e90\u6548\u7387\uff1a\u65e0\u9700\u91cd\u65b0\u8bad\u7ec3\u5927\u6a21\u578b\uff0c\u901a\u8fc7\u68c0\u7d22\u673a\u5236\u6269\u5c55\u77e5\u8bc6\u8303\u56f4</li> <li>\u9886\u57df\u9002\u5e94\u6027\uff1a\u5feb\u901f\u9002\u914d\u7279\u5b9a\u9886\u57df\u77e5\u8bc6\uff0c\u652f\u6301\u5782\u76f4\u5e94\u7528</li> </ul>"},{"location":"librarys/rag/examples/RAG/#_3","title":"\u7cfb\u7edf\u67b6\u6784","text":""},{"location":"librarys/rag/examples/RAG/#_4","title":"\u6574\u4f53\u6d41\u7a0b\u8bbe\u8ba1","text":"<p>RAG\u7cfb\u7edf\u91c7\u7528\u4e24\u9636\u6bb5\u67b6\u6784\u8bbe\u8ba1\uff1a1\uff09\u77e5\u8bc6\u5e93\u6784\u5efa\u9636\u6bb5\uff1b2\uff09\u67e5\u8be2\u5904\u7406\u9636\u6bb5\u3002 1\uff09\u77e5\u8bc6\u5e93\u6784\u5efa\u9636\u6bb5\uff1a\u8003\u8651\u5230\u77e5\u8bc6\u5e93\u6784\u5efa\u9636\u6bb5\u4e2d\u521b\u5efa\u4e0e\u5b58\u50a8\u7d22\u5f15\u9700\u8981\u6d88\u8017\u5927\u91cf\u8d44\u6e90\u4e0e\u65f6\u95f4\uff0cSAGE\u63d0\u4f9b\u4e86\u79bb\u7ebf\u548c\u5728\u7ebf\u4e24\u79cd\u77e5\u8bc6\u5e93\u6784\u5efa\u65b9\u5f0f\uff0c\u4ee5\u4f9b\u7528\u6237\u4f9d\u636e\u81ea\u8eab\u77e5\u8bc6\u5e93\u5927\u5c0f\uff0c\u9009\u62e9\u5408\u9002\u7684\u77e5\u8bc6\u5e93\u6784\u5efa\u65b9\u5f0f\u3002</p> <p>2\uff09\u67e5\u8be2\u5904\u7406\u9636\u6bb5\uff1a\u7528\u6237\u63d0\u4f9b\u6d41\u5f0f\u6570\u636e\uff0c\u8f93\u5165\u5230\u57fa\u4e8eSAGE\u642d\u5efa\u7684pipline\u4e2d\uff0c\u901a\u8fc7\u68c0\u7d22\u5668\u548c\u751f\u6210\u5668\u7b49\u7ec4\u4ef6\uff0c\u5f97\u5230\u6700\u7ec8\u8f93\u51fa\u3002</p> <pre><code>[\u79bb\u7ebf\u9636\u6bb5/\u5728\u7ebf\u9636\u6bb5] \u77e5\u8bc6\u5e93\u6784\u5efa\n \u6587\u6863\u52a0\u8f7d  \u2192 \u6587\u672c\u5206\u5757 \u2192  \u5411\u91cf\u7f16\u7801 \u2192  \u7d22\u5f15\u5b58\u50a8\n    \u2193           \u2193          \u2193          \u2193\nTextLoader \u2192 Chunker \u2192 Embedding \u2192 VectorDB\n\n[\u5728\u7ebf\u9636\u6bb5] \u67e5\u8be2\u5904\u7406  \n  \u7528\u6237\u67e5\u8be2   \u2192  \u5411\u91cf\u68c0\u7d22 \u2192 \u4e0a\u4e0b\u6587\u7ec4\u5408 \u2192 \u7b54\u6848\u751f\u6210\n     \u2193            \u2193          \u2193           \u2193\nQueryVector \u2192 Retriever \u2192 Promptor \u2192 Generator\n</code></pre>"},{"location":"librarys/rag/examples/RAG/#_5","title":"\u6570\u636e\u51c6\u5907\u4e0e\u7d22\u5f15\u6784\u5efa","text":""},{"location":"librarys/rag/examples/RAG/#_6","title":"\u77e5\u8bc6\u5e93\u6570\u636e\u683c\u5f0f","text":"<p>\u77e5\u8bc6\u5e93\u8f93\u5165\u6587\u4ef6\u683c\u5f0f knowledge_corpus.txt</p> <p>SAGE\u53ef\u4ee5\u901a\u8fc7.txt\u6587\u4ef6\u6784\u5efa\u77e5\u8bc6\u5e93\uff0c\u7b80\u8981\u793a\u4f8b\u5982\u4e0b\u3002 <pre><code>\"\"\"\nChromaDB\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5411\u91cf\u6570\u636e\u5e93\uff0c\u4e13\u95e8\u4e3aAI\u5e94\u7528\u8bbe\u8ba1\u3002\n\nSAGE\u662f\u4e00\u4e2a\u73b0\u4ee3\u5316\u7684RAG\u6846\u67b6\uff0c\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u68c0\u7d22\u589e\u5f3a\u751f\u6210\u89e3\u51b3\u65b9\u6848\u3002\n\n\u5411\u91cf\u68c0\u7d22\u6280\u672f\u901a\u8fc7\u8ba1\u7b97\u67e5\u8be2\u5411\u91cf\u4e0e\u6587\u6863\u5411\u91cf\u7684\u76f8\u4f3c\u5ea6\u6765\u627e\u5230\u6700\u76f8\u5173\u7684\u5185\u5bb9\u3002\n\n\u81ea\u7136\u8bed\u8a00\u5904\u7406\u662f\u4eba\u5de5\u667a\u80fd\u7684\u91cd\u8981\u5206\u652f\uff0c\u4e13\u6ce8\u4e8e\u8ba9\u8ba1\u7b97\u673a\u7406\u89e3\u548c\u751f\u6210\u4eba\u7c7b\u8bed\u8a00\u3002\n\"\"\"\n</code></pre> \u77e5\u8bc6\u5e93\u67e5\u8be2\u6570\u636e\u683c\u5f0f qa_dataset.jsonl</p> <p>SAGE\u901a\u8fc7\u8f93\u5165.jsonl\u6587\u4ef6\u683c\u5f0f\u6a21\u62df\u6d41\u5f0f\u8f93\u5165\uff0c\u7b80\u8981\u793a\u4f8b\u5982\u4e0b\u3002 <pre><code>{\"query\": \"\u4ec0\u4e48\u662fChromaDB\uff1f\", \"expected_answer\": \"\u5f00\u6e90\u5411\u91cf\u6570\u636e\u5e93\"}\n{\"query\": \"SAGE\u6846\u67b6\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\", \"expected_answer\": \"\u73b0\u4ee3\u5316RAG\u89e3\u51b3\u65b9\u6848\"}\n{\"query\": \"\u5411\u91cf\u68c0\u7d22\u7684\u5de5\u4f5c\u539f\u7406\u662f\u4ec0\u4e48\uff1f\", \"expected_answer\": \"\u8ba1\u7b97\u5411\u91cf\u76f8\u4f3c\u5ea6\"}\n</code></pre></p>"},{"location":"librarys/rag/examples/RAG/#rag_1","title":"RAG\u7cfb\u7edf\u4e24\u9636\u6bb5\u6267\u884c\u6d41\u7a0b","text":"<p>RAG\u7cfb\u7edf\u7684\u8fd0\u884c\u5206\u4e3a\u4e24\u4e2a\u72ec\u7acb\u4e14\u5fc5\u9700\u7684\u9636\u6bb5\uff1a\u7d22\u5f15\u6784\u5efa\u9636\u6bb5**\u548c**\u67e5\u8be2\u5904\u7406\u9636\u6bb5\u3002\u5fc5\u987b\u5148\u5b8c\u6210\u7d22\u5f15\u6784\u5efa\uff0c\u624d\u80fd\u6267\u884c\u67e5\u8be2\u5904\u7406\u3002</p>"},{"location":"librarys/rag/examples/RAG/#_7","title":"\u26a0\ufe0f \u91cd\u8981\u63d0\u9192","text":"<p>\u5728\u8fd0\u884c\u4efb\u4f55RAG\u67e5\u8be2\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u6784\u5efa\u5411\u91cf\u7d22\u5f15\u3002\u7d22\u5f15\u6784\u5efa\u662f\u4e00\u6b21\u6027\u7684\u79bb\u7ebf\u6216\u5728\u7ebf\u8fc7\u7a0b\uff0c\u5b8c\u6210\u540e\u53ef\u4ee5\u652f\u6301\u591a\u6b21\u67e5\u8be2\u3002</p> <pre><code>\u7b2c\u4e00\u6b65\uff1a\u7d22\u5f15\u6784\u5efa   \u2192   \u7b2c\u4e8c\u6b65\uff1a\u67e5\u8be2\u5904\u7406\n     \u2193                    \u2193\n\u6784\u5efa\u5411\u91cf\u6570\u636e\u5e93     \u2192   \u6267\u884cRAG\u6d41\u6c34\u7ebf\n</code></pre>"},{"location":"librarys/rag/examples/RAG/#_8","title":"\u9636\u6bb5\u4e00\uff1a\u7d22\u5f15\u6784\u5efa","text":""},{"location":"librarys/rag/examples/RAG/#_9","title":"\u7d22\u5f15\u6784\u5efa\u7684\u5fc5\u8981\u6027","text":"<p>\u5411\u91cf\u7d22\u5f15\u662fRAG\u7cfb\u7edf\u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u7c7b\u4f3c\u4e8e\u4f20\u7edf\u6570\u636e\u5e93\u7684\u7d22\u5f15\u3002\u6ca1\u6709\u9884\u5148\u6784\u5efa\u7684\u7d22\u5f15\uff0c\u68c0\u7d22\u5668\u5c06\u65e0\u6cd5\u627e\u5230\u76f8\u5173\u6587\u6863\u3002</p> <p>\u7d22\u5f15\u6784\u5efa\u8fc7\u7a0b\uff1a 1. \u52a0\u8f7d\u539f\u59cb\u77e5\u8bc6\u6587\u6863\uff1b 2. \u5c06\u6587\u6863\u5206\u5272\u6210\u9002\u5408\u68c0\u7d22\u7684\u5c0f\u5757\uff1b 3. \u4f7f\u7528\u5d4c\u5165\u6a21\u578b\u5c06\u6587\u672c\u5757\u8f6c\u6362\u4e3a\u5411\u91cf\uff1b 4. \u5c06\u5411\u91cf\u5b58\u50a8\u5230\u5411\u91cf\u6570\u636e\u5e93\u4e2d\uff1b 5. \u5efa\u7acb\u9ad8\u6548\u7684\u76f8\u4f3c\u5ea6\u641c\u7d22\u7d22\u5f15\u3002</p>"},{"location":"librarys/rag/examples/RAG/#_10","title":"\u79bb\u7ebf\u7d22\u5f15\u6784\u5efa\u5b9e\u73b0","text":"<p>\u79bb\u7ebf\u7d22\u5f15\u6784\u5efa\u4e0d\u4f9d\u8d56\u6d41\u6c34\u7ebf\uff0c\u9700\u8981\u72ec\u7acb\u6267\u884c\u7d22\u5f15\u6784\u5efa\u6d41\u7a0b\u3002\u6b64\u65b9\u6cd5\u5c24\u5176\u9002\u7528\u4e8e\u6570\u636e\u91cf\u8f83\u5927\u7684\u60c5\u51b5\u4e0b\u6784\u5efa\u77e5\u8bc6\u5e93\u3002\u5177\u4f53\u793a\u4f8b\u5982\u4e0b\uff1a</p> <p>\u4ee3\u7801\u5b9e\u4f8b\u5982\u4e0b</p> <pre><code>def build_knowledge_index(config: dict) -&gt; None:\n    \"\"\"\n    \u9636\u6bb5\u4e00\uff1a\u6784\u5efa\u77e5\u8bc6\u5e93\u5411\u91cf\u7d22\u5f15\uff08\u79bb\u7ebf\u8fc7\u7a0b\uff09\n\n    \u8be5\u51fd\u6570\u5fc5\u987b\u5728RAG\u67e5\u8be2\u4e4b\u524d\u8fd0\u884c\uff0c\u7528\u4e8e\u6784\u5efa\u53ef\u68c0\u7d22\u7684\u5411\u91cf\u7d22\u5f15\n\n    Args:\n        config: \u5305\u542bknowledge_file\u548cretriever\u914d\u7f6e\u7684\u5b57\u5178\n    \"\"\"\n    print(\"=== \u5f00\u59cb\u7d22\u5f15\u6784\u5efa\u9636\u6bb5 ===\")\n\n    # 1. \u52a0\u8f7d\u539f\u59cb\u6587\u6863\n    print(\"\u6b65\u9aa41: \u52a0\u8f7d\u539f\u59cb\u6587\u6863...\")\n    loader = TextLoader(config[\"retriever\"][\"chroma\"][\"knowledge_file\"])\n    document = loader.load()\n    print(f\"\u2713 \u6587\u6863\u52a0\u8f7d\u5b8c\u6210\uff0c\u5185\u5bb9\u957f\u5ea6: {len(document['content']):,} \u5b57\u7b26\")\n\n    # 2. \u6587\u6863\u5206\u5757\u5904\u7406\n    print(\"\u6b65\u9aa42: \u6587\u6863\u5206\u5757\u5904\u7406...\")\n    splitter = CharacterSplitter({\n        \"separator\": \"\\n\\n\",        # \u6309\u6bb5\u843d\u5206\u5272\n        \"chunk_size\": 800,          # \u5757\u5927\u5c0f\n        \"overlap\": 100              # \u91cd\u53e0\u5927\u5c0f\n    })\n    chunks = splitter.execute(document)\n    print(f\"\u2713 \u6587\u6863\u5206\u5757\u5b8c\u6210\uff0c\u5171\u751f\u6210 {len(chunks)} \u4e2a\u6587\u6863\u5757\")\n\n    # 3. \u6784\u5efa\u5411\u91cf\u7d22\u5f15\n    print(\"\u6b65\u9aa43: \u6784\u5efa\u5411\u91cf\u7d22\u5f15...\")\n    print(\"  - \u521d\u59cb\u5316\u5d4c\u5165\u6a21\u578b...\")\n    print(\"  - \u751f\u6210\u6587\u6863\u5411\u91cf...\")\n    print(\"  - \u5efa\u7acb\u7d22\u5f15\u7ed3\u6784...\")\n\n    # \u521d\u59cb\u5316\u68c0\u7d22\u5668\u4f1a\u81ea\u52a8\u89e6\u53d1\u7d22\u5f15\u6784\u5efa\u8fc7\u7a0b\n    retriever = ChromaRetriever(config[\"retriever\"])\n    print(\"\u2713 \u5411\u91cf\u7d22\u5f15\u6784\u5efa\u5b8c\u6210\")\n\n    # 4. \u9a8c\u8bc1\u7d22\u5f15\u8d28\u91cf\n    print(\"\u6b65\u9aa44: \u9a8c\u8bc1\u7d22\u5f15\u8d28\u91cf...\")\n    test_queries = [\n        \"\u4ec0\u4e48\u662f\u5411\u91cf\u6570\u636e\u5e93\uff1f\",\n        \"SAGE\u6846\u67b6\u7684\u7279\u70b9\",\n        \"\u5982\u4f55\u4f7f\u7528ChromaDB\"\n    ]\n\n    for i, test_query in enumerate(test_queries, 1):\n        test_results = retriever.execute(test_query)\n        if test_results['results']:\n            print(f\"\u2713 \u6d4b\u8bd5\u67e5\u8be2{i}: '{test_query}' - \u627e\u5230 {len(test_results['results'])} \u4e2a\u76f8\u5173\u6587\u6863\")\n            print(f\"  \u6700\u4f73\u5339\u914d: {test_results['results'][0][:80]}...\")\n        else:\n            print(f\"\u26a0\ufe0f \u6d4b\u8bd5\u67e5\u8be2{i}: '{test_query}' - \u672a\u627e\u5230\u76f8\u5173\u6587\u6863\")\n\n    print(\"=== \u7d22\u5f15\u6784\u5efa\u9636\u6bb5\u5b8c\u6210 ===\")\n    print(f\"\u7d22\u5f15\u5b58\u50a8\u4f4d\u7f6e: {config['retriever']['chroma']['persist_path']}\")\n    print(\"\u73b0\u5728\u53ef\u4ee5\u6267\u884cRAG\u67e5\u8be2\u6d41\u6c34\u7ebf\u4e86\uff01\\n\")\n\n# \u6267\u884c\u7d22\u5f15\u6784\u5efa\uff08\u5fc5\u987b\u9996\u5148\u8fd0\u884c\uff09\nprint(\"\u5f00\u59cbRAG\u7cfb\u7edf\u90e8\u7f72...\")\nprint(\"\u6ce8\u610f\uff1a\u9996\u6b21\u8fd0\u884c\u65f6\u9700\u8981\u6784\u5efa\u7d22\u5f15\uff0c\u8fd9\u53ef\u80fd\u9700\u8981\u51e0\u5206\u949f\u65f6\u95f4\")\nbuild_knowledge_index(rag_config)\n</code></pre>"},{"location":"librarys/rag/examples/RAG/#_11","title":"\u5728\u7ebf\u7d22\u5f15\u6784\u5efa\u5b9e\u73b0","text":"<p>\u5728\u7ebf\u7d22\u5f15\u6784\u5efa\u65b9\u6cd5\u9700\u8981\u4f9d\u8d56RAG\u6d41\u6c34\u7ebf\uff0c\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u52a0\u5165\u201cknowledge_file: \"./examples/data/qa_knowledge_base.txt\"\u201d\u5b57\u6bb5\uff0c\u58f0\u660e\u9700\u8981\u5728RAG\u6d41\u6c34\u7ebf\u4e2d\u81ea\u52a8\u52a0\u8f7d\u6587\u4ef6\u5e76\u521b\u5efa\u6570\u636e\u5e93\u3002\u5982\u679c\u672a\u52a0\u4e0a\u8ff0\u5b57\u6bb5\uff0c\u5219\u8bf4\u660e\u6d41\u6c34\u7ebf\u9700\u8981\u4ece\u6570\u636e\u5e93\u4e2d\u52a0\u8f7d\u79bb\u7ebf\u77e5\u8bc6\u5e93\uff0c\u5982\u679c\u672a\u627e\u5230\u79bb\u7ebf\u6570\u636e\u5e93\uff0c\u5219\u8fd4\u56de\u7a7a\u503c\u3002</p>"},{"location":"librarys/rag/examples/RAG/#_12","title":"\u9636\u6bb5\u4e8c\uff1a\u67e5\u8be2\u5904\u7406\uff08\u5728\u7ebf\u8fc7\u7a0b\uff09","text":""},{"location":"librarys/rag/examples/RAG/#_13","title":"\u67e5\u8be2\u5904\u7406\u6d41\u7a0b\u8bf4\u660e","text":"<p>\u5728\u5411\u91cf\u7d22\u5f15\u6784\u5efa\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u542f\u52a8RAG\u67e5\u8be2\u5904\u7406\u6d41\u6c34\u7ebf\u3002\u8be5\u9636\u6bb5\u5904\u7406\u7528\u6237\u7684\u5b9e\u9645\u67e5\u8be2\u8bf7\u6c42\uff0c\u751f\u6210\u6700\u7ec8\u7b54\u6848\u3002</p> <p>\u67e5\u8be2\u5904\u7406\u8fc7\u7a0b\uff1a 1. \u63a5\u6536\u7528\u6237\u67e5\u8be2\u6216\u6279\u91cf\u67e5\u8be2\u6570\u636e 2. \u5728\u5411\u91cf\u6570\u636e\u5e93\u4e2d\u68c0\u7d22\u76f8\u5173\u6587\u6863 3. \u5c06\u67e5\u8be2\u548c\u68c0\u7d22\u7ed3\u679c\u7ec4\u88c5\u6210\u63d0\u793a\u8bcd 4. \u8c03\u7528\u751f\u6210\u6a21\u578b\u4ea7\u751f\u6700\u7ec8\u7b54\u6848 5. \u8f93\u51fa\u7ed3\u6784\u5316\u7684\u56de\u7b54\u7ed3\u679c</p>"},{"location":"librarys/rag/examples/RAG/#rag_2","title":"RAG\u6d41\u6c34\u7ebf\u5b9e\u73b0","text":"<p>\u4ee3\u7801\u5b9e\u4f8b\u5982\u4e0b</p> <pre><code>def execute_rag_pipeline(config: dict) -&gt; None:\n    \"\"\"\n    \u9636\u6bb5\u4e8c\uff1a\u6267\u884cRAG\u67e5\u8be2\u5904\u7406\u6d41\u6c34\u7ebf\uff08\u5728\u7ebf\u8fc7\u7a0b\uff09\n\n    \u524d\u63d0\u6761\u4ef6\uff1a\u5fc5\u987b\u5df2\u5b8c\u6210\u5411\u91cf\u7d22\u5f15\u6784\u5efa\n\n    Args:\n        config: \u5b8c\u6574\u7684RAG\u7cfb\u7edf\u914d\u7f6e\n    \"\"\"\n    print(\"=== \u5f00\u59cbRAG\u67e5\u8be2\u5904\u7406\u9636\u6bb5 ===\")\n\n    # \u9a8c\u8bc1\u7d22\u5f15\u662f\u5426\u5b58\u5728\n    if not check_index_status(config):\n        print(\"\u274c \u9519\u8bef\uff1a\u672a\u53d1\u73b0\u5411\u91cf\u7d22\u5f15\uff01\")\n        print(\"\u8bf7\u5148\u8fd0\u884c build_knowledge_index() \u6784\u5efa\u7d22\u5f15\")\n        return\n\n    print(\"\u2713 \u7d22\u5f15\u9a8c\u8bc1\u901a\u8fc7\uff0c\u542f\u52a8RAG\u6d41\u6c34\u7ebf...\")\n\n    # \u521b\u5efa\u672c\u5730\u6267\u884c\u73af\u5883\n    env = LocalEnvironment()\n\n    # \u6784\u5efa\u5904\u7406\u6d41\u6c34\u7ebf\n    pipeline = (\n        env\n        .from_batch(JSONLBatch, config[\"source\"])           # \u6570\u636e\u6e90\uff1a\u7528\u6237\u67e5\u8be2\n        .map(ChromaRetriever, config[\"retriever\"])           # \u68c0\u7d22\uff1a\u5411\u91cf\u76f8\u4f3c\u5ea6\u641c\u7d22\n        .map(QAPromptor, config[\"promptor\"])                 # \u63d0\u793a\uff1a\u4e0a\u4e0b\u6587\u7ec4\u88c5\n        .map(OpenAIGenerator, config[\"generator\"][\"vllm\"])   # \u751f\u6210\uff1aLLM\u7b54\u6848\u751f\u6210\n        .sink(TerminalSink, config[\"sink\"])                  # \u8f93\u51fa\uff1a\u7ed3\u679c\u5c55\u793a\n    )\n\n    print(\"RAG\u6d41\u6c34\u7ebf\u914d\u7f6e\u5b8c\u6210\uff0c\u5f00\u59cb\u5904\u7406\u67e5\u8be2...\")\n\n    # \u63d0\u4ea4\u6267\u884c\n    env.submit()\n\n    # \u7b49\u5f85\u5904\u7406\u5b8c\u6210\n    print(\"\u6b63\u5728\u5904\u7406\u67e5\u8be2\uff0c\u8bf7\u7b49\u5f85...\")\n    time.sleep(10)\n\n    # \u6e05\u7406\u8d44\u6e90\n    env.close()\n\n    print(\"=== RAG\u67e5\u8be2\u5904\u7406\u5b8c\u6210 ===\")\n</code></pre>"},{"location":"librarys/rag/examples/RAG/#_14","title":"\u7cfb\u7edf\u914d\u7f6e\u4e0e\u8fd0\u884c","text":""},{"location":"librarys/rag/examples/RAG/#_15","title":"\u5b8c\u6574\u7cfb\u7edf\u914d\u7f6e\u793a\u4f8b","text":"<p>\u63a8\u8350\u4f7f\u7528yaml\u6587\u4ef6\u914d\u7f6epipeline\u5404\u4e2a\u7b97\u5b50\uff0c\u914d\u7f6e\u5b9e\u4f8b\u5982\u4e0b</p> <pre><code># \u5b8c\u6574\u7684RAG\u7cfb\u7edf\u914d\u7f6e\nrag_config = {\n    # \u6570\u636e\u6e90\u914d\u7f6e\n    \"source\": {\n        \"file_path\": \"data/qa_dataset.jsonl\",     # \u67e5\u8be2\u6570\u636e\u96c6\u8def\u5f84\n        \"batch_size\": 32,                        # \u6279\u5904\u7406\u5927\u5c0f\n        \"shuffle\": False                         # \u662f\u5426\u968f\u673a\u6253\u4e71\n    },\n\n    # \u68c0\u7d22\u5668\u914d\u7f6e\n    \"retriever\": {\n        \"dimension\": 384,                        # \u5411\u91cf\u7ef4\u5ea6\n        \"top_k\": 5,                             # \u68c0\u7d22\u6587\u6863\u6570\u91cf\n        \"embedding\": {\n            \"method\": \"default\",\n            \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"\n        },\n        \"chroma\": {\n            \"persist_path\": \"./vector_database\",     # \u5411\u91cf\u6570\u636e\u5e93\u8def\u5f84\n            \"collection_name\": \"knowledge_base\",     # \u96c6\u5408\u540d\u79f0\n            \"knowledge_file\": \"data/knowledge_corpus.txt\"  # \u77e5\u8bc6\u5e93\u6587\u4ef6\n        }\n    },\n\n    # \u63d0\u793a\u8bcd\u914d\u7f6e\n    \"promptor\": {\n        \"template_type\": \"qa\",                   # \u95ee\u7b54\u6a21\u677f\u7c7b\u578b\n        \"include_context\": True,                 # \u5305\u542b\u68c0\u7d22\u4e0a\u4e0b\u6587\n        \"max_context_length\": 2000              # \u6700\u5927\u4e0a\u4e0b\u6587\u957f\u5ea6\n    },\n\n    # \u751f\u6210\u5668\u914d\u7f6e\n    \"generator\": {\n        \"vllm\": {\n            \"method\": \"openai\",                  # \u751f\u6210\u65b9\u6cd5\n            \"model_name\": \"gpt-4o-mini\",        # \u6a21\u578b\u540d\u79f0\n            \"base_url\": \"http://localhost:8000/v1\",  # API\u670d\u52a1\u5730\u5740\n            \"api_key\": \"your-api-key\",          # API\u5bc6\u94a5\n            \"temperature\": 0.7,                  # \u751f\u6210\u6e29\u5ea6\n            \"max_tokens\": 512,                   # \u6700\u5927\u751f\u6210token\u6570\n            \"seed\": 42                          # \u968f\u673a\u79cd\u5b50\n        }\n    },\n\n    # \u8f93\u51fa\u914d\u7f6e\n    \"sink\": {\n        \"format\": \"json\",                       # \u8f93\u51fa\u683c\u5f0f\n        \"show_metadata\": True,                  # \u663e\u793a\u5143\u6570\u636e\n        \"save_to_file\": \"results/rag_output.jsonl\"  # \u4fdd\u5b58\u6587\u4ef6\u8def\u5f84\n    }\n}\n</code></pre>"},{"location":"librarys/rag/examples/RAG/#_16","title":"\u9ad8\u7ea7\u529f\u80fd\u6269\u5c55","text":""},{"location":"librarys/rag/examples/RAG/#huggingface","title":"\u4f7f\u7528HuggingFace\u672c\u5730\u6a21\u578b","text":"<p>\u5bf9\u4e8e\u9700\u8981\u5b8c\u5168\u672c\u5730\u90e8\u7f72\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u4f7f\u7528HuggingFace\u6a21\u578b\uff1a</p> <pre><code>def execute_rag_with_hf_model(config: dict) -&gt; None:\n    \"\"\"\n    \u4f7f\u7528HuggingFace\u672c\u5730\u6a21\u578b\u7684RAG\u6d41\u6c34\u7ebf\n    \"\"\"\n    print(\"=== \u542f\u52a8\u672c\u5730\u6a21\u578bRAG\u6d41\u6c34\u7ebf ===\")\n\n    env = LocalEnvironment()\n    pipeline = (\n        env\n        .from_batch(JSONLBatch, config[\"source\"])\n        .map(ChromaRetriever, config[\"retriever\"])\n        .map(BGEReranker, config[\"reranker\"])\n        .map(QAPromptor, config[\"promptor\"])\n        .map(HFGenerator, config[\"generator\"][\"hf\"])    # \u4f7f\u7528HF\u751f\u6210\u5668\n        .sink(TerminalSink, config[\"sink\"])\n    )\n\n    env.submit()\n    time.sleep(10)\n    env.close()\n\n# HuggingFace\u751f\u6210\u5668\u914d\u7f6e\nhf_config = {\n    \"model_name\": \"microsoft/DialoGPT-medium\",\n    \"device\": \"cuda\",\n    \"temperature\": 0.8,\n    \"max_new_tokens\": 256\n}\n\n# \u6dfb\u52a0HF\u914d\u7f6e\nrag_config[\"generator\"][\"hf\"] = hf_config\n</code></pre>"},{"location":"librarys/rag/examples/RAG/#rerank","title":"\u4f7f\u7528Rerank\u91cd\u6392\u5668","text":"<p>\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f7f\u7528Rerank\u8fdb\u68c0\u7d22\u7ed3\u679c\u8fdb\u884c\u91cd\u6392\u5e8f\uff0c\u63d0\u9ad8\u68c0\u7d22\u7cbe\u5ea6\uff0c\u8fd9\u91cc\u4ee5BGEReranker\u4e3a\u4f8b\u5b50\u8fdb\u884c\u8bf4\u660e\u3002</p> <p>\u6838\u5fc3\u6d41\u7a0b\u5982\u4e0b\uff0c\u589e\u52a0\u4e86BGEReranker\u7b97\u5b50\uff1a</p> <pre><code>def pipeline_run(config: dict) -&gt; None:\n    env = LocalEnvironment()\n    (\n        env\n        .from_batch(JSONLBatch, config[\"source\"])\n        .map(ChromaRetriever, config[\"retriever\"])\n        .map(BGEReranker, config[\"reranker\"])  \n        .map(QAPromptor, config[\"promptor\"])\n        .map(OpenAIGenerator, config[\"generator\"][\"vllm\"])\n        .sink(TerminalSink, config[\"sink\"])\n    )\n    env.submit()\n    time.sleep(10)\n    env.close()\n</code></pre>"},{"location":"librarys/rag/examples/RAG/#refiner","title":"\u4f7f\u7528Refiner\u6587\u6863\u4f18\u5316\u5668","text":"<p>Refiner\u662f\u57fa\u4e8eLongRefiner\u6280\u672f\u7684\u6587\u6863\u4f18\u5316\u7ec4\u4ef6\uff0c\u80fd\u591f\u667a\u80fd\u538b\u7f29\u68c0\u7d22\u6587\u6863\uff0c\u5728\u4fdd\u6301\u8bed\u4e49\u5b8c\u6574\u6027\u7684\u540c\u65f6\u663e\u8457\u51cf\u5c11\u4e0a\u4e0b\u6587\u957f\u5ea6\u3002</p> <p>\u6838\u5fc3\u6d41\u7a0b\u5982\u4e0b\uff0c\u589e\u52a0\u4e86LongRefinerAdapter\u7b97\u5b50\uff1a</p> <pre><code>from sage.libs.rag.refiner import LongRefinerAdapter\n\ndef pipeline_with_refiner(config: dict) -&gt; None:\n    env = LocalEnvironment()\n    (\n        env\n        .from_batch(JSONLBatch, config[\"source\"])\n        .map(ChromaRetriever, config[\"retriever\"])\n        .map(LongRefinerAdapter, config[\"refiner\"])  # \u6dfb\u52a0\u6587\u6863\u4f18\u5316\n        .map(QAPromptor, config[\"promptor\"])\n        .map(OpenAIGenerator, config[\"generator\"][\"vllm\"])\n        .sink(TerminalSink, config[\"sink\"])\n    )\n    env.submit()\n    time.sleep(10)\n    env.close()\n</code></pre> <p>\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>refiner_config = {\n    \"refiner\": {\n        \"model_name\": \"long-refiner-base\",\n        \"compression_ratio\": 0.2,          # \u538b\u7f29\u6bd4\u4f8b\n        \"enable_cache\": True,              # \u542f\u7528\u7f13\u5b58\n        \"max_input_length\": 8192\n    }\n}\n</code></pre>"},{"location":"librarys/rag/examples/RAG/#_17","title":"\u914d\u7f6e\u53c2\u8003","text":"<p>\u66f4\u591a\u914d\u7f6e\u793a\u4f8b\u548c\u8be6\u7ec6\u6587\u6863\uff1a</p> <ul> <li>\u68c0\u7d22\u5668\u914d\u7f6e</li> <li> BGE\u91cd\u6392\u5668\u6307\u5357  </li> <li>\u6587\u6863\u4f18\u5316\u5668\u914d\u7f6e</li> <li> Chroma\u914d\u7f6e\u6587\u4ef6</li> </ul> <p>\u6ce8\u610f\uff1a\u672c\u793a\u4f8b\u5c55\u793a\u4e86SAGE\u6846\u67b6\u4e0bRAG\u7cfb\u7edf\u7684\u5b8c\u6574\u5b9e\u73b0\u3002</p>"},{"location":"librarys/rag/examples/RAG_milvus/","title":"RAG\u7cfb\u7edf\u5b8c\u6574\u5b9e\u73b0\u793a\u4f8b (Complete RAG System Implementation)","text":"<p>\u672c\u6587\u6863\u63d0\u4f9b\u4f7f\u7528SAGE\u57fa\u4e8emilvus\u7684RAG\u95ee\u7b54\u7cfb\u7edf\u7684\u5b8c\u6574\u5b9e\u73b0\u793a\u4f8b\u3002\u5982\u679c\u5bf9RAG\u76f8\u5173\u77e5\u8bc6\u4ee5\u53caSAGE pipeline\u76f8\u5173\u77e5\u8bc6\u4e0d\u4e86\u89e3\uff0c\u5efa\u8bae\u5148\u9605\u8bfb\u4f7f\u7528SAGE\u57fa\u4e8echroma\u6784\u5efaRAG\u3002</p>"},{"location":"librarys/rag/examples/RAG_milvus/#milvus","title":"\u4f7f\u7528Milvus\u5411\u91cf\u5e93\u8fdb\u884c\u5411\u91cf\u68c0\u7d22","text":"<p>SAGE\u63d0\u4f9b\u4e86\u57fa\u4e8eMilvus\u5411\u91cf\u5e93\u7684\u7a20\u5bc6\u5411\u91cf\u68c0\u7d22\u548c\u7a00\u758f\u5411\u91cf\u68c0\u7d22\u7b97\u5b50\uff0c\u53ef\u4ee5\u5148\u6267\u884c\u79bb\u7ebf\u5411\u91cf\u77e5\u8bc6\u5e93\u6784\u5efa\uff0c\u521b\u5efa\u77e5\u8bc6\u5e93\uff0c\u7136\u540e\u6267\u884cRAG\u6d41\u6c34\u7ebf\uff0c\u8c03\u7528\u521b\u5efa\u7684\u77e5\u8bc6\u5e93\uff0c\u5bf9\u5176\u4e2d\u7684\u77e5\u8bc6\u8fdb\u884c\u67e5\u8be2\u3002</p>"},{"location":"librarys/rag/examples/RAG_milvus/#milvus_1","title":"\u57fa\u4e8eMilvus\u5411\u91cf\u5e93\u7684\u7a20\u5bc6\u5411\u91cf\u68c0\u7d22","text":""},{"location":"librarys/rag/examples/RAG_milvus/#_1","title":"\u79bb\u7ebf\u7a20\u5bc6\u5411\u91cf\u77e5\u8bc6\u5e93\u6784\u5efa","text":"<p>\u57fa\u4e8eMilvus\u7684\u7a20\u5bc6\u5411\u91cf\u6570\u636e\u5e93\u6784\u5efa\u793a\u4f8b\u5982\u4e0b\uff1a <pre><code>import os\nimport sys\nfrom sage.libs.rag.chunk import CharacterSplitter\nfrom sage.libs.rag.document_loaders import TextLoader\nfrom sage.libs.rag.retriever import MilvusDenseRetriever\nimport yaml\nfrom sage.common.utils.config.loader import load_config\n\ndef load_config(path):\n    with open(path, 'r', encoding='utf-8') as f:\n        config = yaml.safe_load(f)\n    return config\n\ndef load_knowledge_to_milvus(config):\n    \"\"\"\n    \u52a0\u8f7d\u77e5\u8bc6\u5e93\u5230 Milvus\n    \"\"\"\n    knowledge_file = config.get('preload_knowledge_file')\n    persistence_path = config.get('milvus_dense').get('persistence_path')\n    collection_name = config.get('milvus_dense').get('collection_name')\n\n    print(f\"=== \u9884\u52a0\u8f7d\u77e5\u8bc6\u5e93\u5230 ChromaDB ===\")\n    print(f\"\u6587\u4ef6: {knowledge_file} | DB: {persistence_path} | \u96c6\u5408: {collection_name}\")\n\n    loader = TextLoader(knowledge_file)\n    document = loader.load()\n    print(f\"\u5df2\u52a0\u8f7d\u6587\u672c\uff0c\u957f\u5ea6: {len(document['content'])}\")\n\n    splitter = CharacterSplitter({\"separator\": \"\\n\\n\"})\n    chunks = splitter.execute(document)\n    print(f\"\u5206\u5757\u6570: {len(chunks)}\")\n\n    print(\"\u521d\u59cb\u5316Milvus...\")\n    milvus_backend = MilvusDenseRetriever(config)\n    milvus_backend.add_documents(chunks)\n    print(f\"\u2713 \u5df2\u6dfb\u52a0 {len(chunks)} \u4e2a\u6587\u672c\u5757\")\n    print(f\"\u2713 \u6570\u636e\u5e93\u4fe1\u606f: {milvus_backend.get_collection_info()}\")\n    text_query = \"\u4ec0\u4e48\u662fRAG\uff1f\"\n    results = milvus_backend.execute(text_query)\n    print(f\"\u68c0\u7d22\u7ed3\u679c: {results}\")\n    return True\n\nif __name__ == \"__main__\":\n    config_path = 'config_dense_milvus.yaml'\n    if not os.path.exists(config_path):\n        print(f\"\u914d\u7f6e\u6587\u4ef6\u4e0d\u5b58\u5728: {config_path}\")\n\n    config = load_config(config_path)\n    result = load_knowledge_to_milvus(config[\"retriever\"])\n    if result:\n        print(\"\u77e5\u8bc6\u5e93\u5df2\u6210\u529f\u52a0\u8f7d\uff0c\u53ef\u8fd0\u884c\u68c0\u7d22/\u95ee\u7b54\u811a\u672c\")\n    else:\n        print(\"\u77e5\u8bc6\u5e93\u52a0\u8f7d\u5931\u8d25\")\n        sys.exit(1)\n</code></pre></p> <p>config_dense_milvus.yaml\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a <pre><code>retriever:\n  preload_knowledge_file: \"\u77e5\u8bc6\u5e93\u6587\u4ef6\u8def\u5f84\uff08.txt\uff09\"\n\n  # \u901a\u7528\u53c2\u6570\n  dimension: 384            # \u5411\u91cf\u7ef4\u5ea6\uff0c\u5e94\u4e0e embedding \u6a21\u578b\u4e00\u81f4\n  top_k: 2                 # \u8fd4\u56de\u6587\u6863\u6570\u91cf\n\n  # \u5d4c\u5165\u6a21\u578b\u914d\u7f6e\uff08\u7528\u4e8e\u5bf9\u6587\u6863\u548c\u67e5\u8be2\u7f16\u7801\uff09\n  embedding:\n    method: \"hf\"\n    model: \"sentence-transformers/all-MiniLM-L6-v2\"\n\n  # Milvus \u540e\u7aef\uff08\u7a20\u5bc6\u68c0\u7d22\uff09\n  milvus_dense:\n    # \u672c\u5730 Milvus Lite\uff08\u63a8\u8350\u7528\u4e8e\u5feb\u901f\u8bd5\u7528\uff09\n    persistence_path: \"./milvus_qa_dense.db\"\n\n    # \u8fdc\u7a0b Milvus\uff08\u5982\u9700\u8fdc\u7a0b\uff0c\u8bf7\u6ce8\u91ca\u4e0a\u9762\u7684 persistence_path\uff0c\u6539\u4e3a\u5982\u4e0b\u914d\u7f6e\uff09\n    # host: \"127.0.0.1\"\n    # port: 19530\n    # force_http: true\n\n    collection_name: \"qa_dense_collection\"\n    dim: 384\n    metric_type: \"COSINE\"   # \u53ea\u5141\u8bb8: IP / COSINE / L2\n    search_type: \"dense\"     # \u7a20\u5bc6\u68c0\u7d22\n\n    # \u53ef\u9009\u9879\n    dense_insert_batch_size: 128\n    # \u77e5\u8bc6\u6587\u4ef6\uff08\u53ef\u9009\uff09\uff1a\u63d0\u4f9b\u540e\u5c06\u81ea\u52a8\u6309\u6bb5\u843d\u8bfb\u53d6\u5e76\u5165\u5e93\n    # knowledge_file: \"./examples/data/qa_knowledge_base.txt\"\n</code></pre></p>"},{"location":"librarys/rag/examples/RAG_milvus/#milvusrag","title":"\u57fa\u4e8eMilvus\u7684\u7a20\u5bc6\u5411\u91cf\u68c0\u7d22RAG\u6d41\u6c34\u7ebf","text":"<p><pre><code>import os\nfrom sage.core.api.local_environment import LocalEnvironment\nfrom sage.libs.io_utils.batch import JSONLBatch\nfrom sage.libs.io_utils.sink import TerminalSink\nfrom sage.libs.rag.generator import OpenAIGenerator\nfrom sage.libs.rag.promptor import QAPromptor\nfrom sage.libs.rag.retriever import MilvusDenseRetriever\nfrom sage.common.utils.config.loader import load_config\nimport yaml\n\n\ndef load_config(path):\n    with open(path, 'r', encoding='utf-8') as f:\n        config = yaml.safe_load(f)\n    return config\n\ndef pipeline_run():\n    \"\"\"    \n    \u521b\u5efa\u5e76\u8fd0\u884c Milvus \u4e13\u7528 RAG \u6570\u636e\u5904\u7406\u7ba1\u9053\n\n    Args:\n        config (dict): \u5305\u542b\u5404\u6a21\u5757\u914d\u7f6e\u7684\u914d\u7f6e\u5b57\u5178\u3002\n    \"\"\"\n\n    print(\"=== \u542f\u52a8\u57fa\u4e8e Milvus \u7684 RAG \u95ee\u7b54\u7cfb\u7edf ===\")\n    print(\"\u914d\u7f6e\u4fe1\u606f:\")\n    print(f\"  - \u6e90\u6587\u4ef6: {config['source']['data_path']}\")\n    print(f\"  - \u68c0\u7d22\u5668: MilvusDenseRetriever (Milvus \u4e13\u7528)\")\n    print(f\"  - \u5411\u91cf\u7ef4\u5ea6: {config['retriever']['dimension']}\")\n    print(f\"  - Top-K: {config['retriever']['top_k']}\")\n    print(f\"  - \u96c6\u5408\u540d\u79f0: {config['retriever']['milvus_dense']['collection_name']}\")\n    print(f\"  - \u5d4c\u5165\u6a21\u578b: {config['retriever']['embedding']['method']}\")\n\n    env = LocalEnvironment()\n    # \u6784\u5efa\u6570\u636e\u5904\u7406\u6d41\u7a0b\n    # MilvusDenseRetriever \u4f1a\u5728\u521d\u59cb\u5316\u65f6\u81ea\u52a8\u52a0\u8f7d\u914d\u7f6e\u7684\u77e5\u8bc6\u5e93\u6587\u4ef6\n    print(\"\u6b63\u5728\u6784\u5efa\u6570\u636e\u5904\u7406\u7ba1\u9053...\")\n    # \u6784\u5efa\u6570\u636e\u5904\u7406\u6d41\u7a0b\n    (env\n        .from_source(JSONLBatch, config[\"source\"])\n        .map(MilvusDenseRetriever, config[\"retriever\"])\n        .map(QAPromptor, config[\"promptor\"])\n        .map(OpenAIGenerator, config[\"generator\"][\"vllm\"])\n        .sink(TerminalSink, config[\"sink\"])\n    )\n    print(\"\u6b63\u5728\u63d0\u4ea4\u5e76\u8fd0\u884c\u7ba1\u9053...\")\n    env.submit(autostop=True)\n    env.close()\n    print(\"=== RAG \u95ee\u7b54\u7cfb\u7edf\u8fd0\u884c\u5b8c\u6210 ===\")\n\n\nif __name__ == '__main__':\n    config_path = './examples/config/config_dense_milvus.yaml'\n    if not os.path.exists(config_path):\n        print(f\"\u914d\u7f6e\u6587\u4ef6\u4e0d\u5b58\u5728: {config_path}\")\n\n    config = load_config(config_path)\n\n    print(config)\n\n    # \u68c0\u67e5\u77e5\u8bc6\u5e93\u6587\u4ef6\uff08\u5982\u679c\u914d\u7f6e\u4e86\uff09\n    knowledge_file = config[\"retriever\"][\"milvus_dense\"].get(\"knowledge_file\")\n    if knowledge_file:\n        if not os.path.exists(knowledge_file):\n            print(f\"\u8b66\u544a\uff1a\u77e5\u8bc6\u5e93\u6587\u4ef6\u4e0d\u5b58\u5728: {knowledge_file}\")\n            print(\"\u8bf7\u786e\u4fdd\u77e5\u8bc6\u5e93\u6587\u4ef6\u5b58\u5728\u4e8e\u6307\u5b9a\u8def\u5f84\")\n        else:\n            print(f\"\u627e\u5230\u77e5\u8bc6\u5e93\u6587\u4ef6: {knowledge_file}\")\n\n    print(\"\u5f00\u59cb\u8fd0\u884c Milvus \u7a20\u5bc6\u5411\u91cf\u68c0\u7d22\u7ba1\u9053...\")\n    pipeline_run() \n</code></pre> \u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a <pre><code>source:\n  data_path: \"./queries.jsonl\"   # \u7528\u6237\u63d0\u4f9b\u7684\u6d41\u5f0f\u95ee\u9898\uff0c\u683c\u5f0f\u89c1\u9996\u6bb5\u63cf\u8ff0\n  platform: \"local\"\n\nretriever:\n  preload_knowledge_file: \"\u77e5\u8bc6\u5e93\u6587\u4ef6\u8def\u5f84\uff08.txt\uff09\"\n  # \u901a\u7528\u53c2\u6570\n  dimension: 384            # \u5411\u91cf\u7ef4\u5ea6\uff0c\u5e94\u4e0e embedding \u6a21\u578b\u4e00\u81f4\n  top_k: 2                 # \u8fd4\u56de\u6587\u6863\u6570\u91cf\n\n  # \u5d4c\u5165\u6a21\u578b\u914d\u7f6e\uff08\u7528\u4e8e\u5bf9\u6587\u6863\u548c\u67e5\u8be2\u7f16\u7801\uff09\n  embedding:\n    method: \"hf\"\n    model: \"sentence-transformers/all-MiniLM-L6-v2\"\n\n  # Milvus \u540e\u7aef\uff08\u7a20\u5bc6\u68c0\u7d22\uff09\n  milvus_dense:\n    # \u672c\u5730 Milvus Lite\uff08\u63a8\u8350\u7528\u4e8e\u5feb\u901f\u8bd5\u7528\uff09\n    persistence_path: \"./milvus_qa_dense.db\"\n\n    # \u8fdc\u7a0b Milvus\uff08\u5982\u9700\u8fdc\u7a0b\uff0c\u8bf7\u6ce8\u91ca\u4e0a\u9762\u7684 persistence_path\uff0c\u6539\u4e3a\u5982\u4e0b\u914d\u7f6e\uff09\n    # host: \"127.0.0.1\"\n    # port: 19530\n    # force_http: true\n\n    collection_name: \"qa_dense_collection\"\n    dim: 384\n    metric_type: \"COSINE\"   # \u53ea\u5141\u8bb8: IP / COSINE / L2\n    search_type: \"dense\"     # \u7a20\u5bc6\u68c0\u7d22\n\n    # \u7a20\u5bc6\u5411\u91cf\u5bfc\u5165\u6570\u636e\u5e93\u7684\u6279\u6b21\u6570\n    dense_insert_batch_size: 128\n    # \u77e5\u8bc6\u6587\u4ef6\uff08\u53ef\u9009\uff09\uff1a\u63d0\u4f9b\u540e\u5c06\u81ea\u52a8\u6309\u6bb5\u843d\u8bfb\u53d6\u5e76\u5165\u5e93\n    # knowledge_file: \"./examples/data/qa_knowledge_base.txt\"\n\npromptor:\n  template: |\n    \u57fa\u4e8e\u4ee5\u4e0b\u68c0\u7d22\u5230\u7684\u76f8\u5173\u6587\u6863\uff0c\u56de\u7b54\u7528\u6237\u95ee\u9898\uff1a\n\n    \u76f8\u5173\u6587\u6863\uff1a\n    {retrieved_documents}\n\n    \u7528\u6237\u95ee\u9898\uff1a{query}\n\n    \u8bf7\u63d0\u4f9b\u51c6\u786e\u3001\u6709\u7528\u7684\u56de\u7b54\uff1a\n\ngenerator:\n  vllm:\n    api_key: \"your-own-api_key\"\n    method: \"openai\"\n    model_name: \"meta-llama/Llama-2-7b-chat-hf\"\n    base_url: \"base_url\"\n    seed: 42\n\nsink:\n  enable_log: true\n</code></pre></p>"},{"location":"librarys/rag/examples/RAG_milvus/#_2","title":"\u79bb\u7ebf\u7a00\u758f\u5411\u91cf\u77e5\u8bc6\u5e93\u6784\u5efa","text":"<p>\u57fa\u4e8eMilvus\u7684\u7a00\u758f\u5411\u91cf\u6570\u636e\u5e93\u6784\u5efa\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>import os\nimport sys\nfrom sage.libs.rag.chunk import CharacterSplitter\nfrom sage.libs.rag.document_loaders import TextLoader\nfrom sage.libs.rag.retriever import MilvusSparseRetriever\nimport yaml\nfrom sage.common.utils.config.loader import load_config\n\ndef load_config(path):\n    with open(path, 'r', encoding='utf-8') as f:\n        config = yaml.safe_load(f)\n    return config\n\ndef load_knowledge_to_milvus(config):\n    \"\"\"\n    \u52a0\u8f7d\u77e5\u8bc6\u5e93\u5230 Milvus\n    \"\"\"\n    knowledge_file = config.get('preload_knowledge_file')\n    persistence_path = config.get('milvus_sparse').get('persistence_path')\n    collection_name = config.get('milvus_sparse').get('collection_name')\n\n    print(f\"=== \u9884\u52a0\u8f7d\u77e5\u8bc6\u5e93\u5230 Milvus ===\")\n    print(f\"\u6587\u4ef6: {knowledge_file} | DB: {persistence_path} | \u96c6\u5408: {collection_name}\")\n\n    loader = TextLoader(knowledge_file)\n    document = loader.load()\n    print(f\"\u5df2\u52a0\u8f7d\u6587\u672c\uff0c\u957f\u5ea6: {len(document['content'])}\")\n\n    splitter = CharacterSplitter({\"separator\": \"\\n\\n\"})\n    chunks = splitter.execute(document)\n    print(f\"\u5206\u5757\u6570: {len(chunks)}\")\n\n    print(\"\u521d\u59cb\u5316Milvus...\")\n    milvus_backend = MilvusSparseRetriever(config)\n    milvus_backend.add_documents(chunks)\n    print(f\"\u2713 \u5df2\u6dfb\u52a0 {len(chunks)} \u4e2a\u6587\u672c\u5757\")\n    print(f\"\u2713 \u6570\u636e\u5e93\u4fe1\u606f: {milvus_backend.get_collection_info()}\")\n    text_query = \"\u4ec0\u4e48\u662fRAG\uff1f\"\n    results = milvus_backend.execute(text_query)\n    print(f\"\u68c0\u7d22\u7ed3\u679c: {results}\")\n    return True\n\nif __name__ == \"__main__\":\n    config_path = 'config_sparse_milvus.yaml'\n    if not os.path.exists(config_path):\n        print(f\"\u914d\u7f6e\u6587\u4ef6\u4e0d\u5b58\u5728: {config_path}\")\n\n    config = load_config(config_path)\n    result = load_knowledge_to_milvus(config[\"retriever\"])\n    if result:\n        print(\"\u77e5\u8bc6\u5e93\u5df2\u6210\u529f\u52a0\u8f7d\uff0c\u53ef\u8fd0\u884c\u68c0\u7d22/\u95ee\u7b54\u811a\u672c\")\n    else:\n        print(\"\u77e5\u8bc6\u5e93\u52a0\u8f7d\u5931\u8d25\")\n        sys.exit(1)\n</code></pre> <p>config_sparse_milvus.yaml\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a <pre><code>retriever:\n  preload_knowledge_file: \"./examples/data/qa_knowledge_base.txt\"\n\n  # \u901a\u7528\u53c2\u6570\n  top_k: 3                 # \u8fd4\u56de\u6587\u6863\u6570\u91cf\n\n  # Milvus \u540e\u7aef\uff08\u7a20\u5bc6\u68c0\u7d22\uff09\n  milvus_sparse:\n    # \u672c\u5730 Milvus Lite\uff08\u63a8\u8350\u7528\u4e8e\u5feb\u901f\u8bd5\u7528\uff09\n    persistence_path: \"./milvus_qa_sparse.db\"\n\n    # \u8fdc\u7a0b Milvus\uff08\u5982\u9700\u8fdc\u7a0b\uff0c\u8bf7\u6ce8\u91ca\u4e0a\u9762\u7684 persistence_path\uff0c\u6539\u4e3a\u5982\u4e0b\u914d\u7f6e\uff09\n    # host: \"127.0.0.1\"\n    # port: 19530\n    # force_http: true\n\n    collection_name: \"qa_sparse_collection\"\n    search_type: \"sparse\"     # \u7a00\u758f\u68c0\u7d22\n</code></pre></p>"},{"location":"librarys/rag/examples/RAG_milvus/#milvusrag_1","title":"\u57fa\u4e8eMilvus\u7684\u7a00\u758f\u5411\u91cf\u68c0\u7d22RAG\u6d41\u6c34\u7ebf","text":"<p><pre><code>import os\nimport time\nfrom sage.core.api.local_environment import LocalEnvironment\nfrom sage.libs.io_utils.batch import JSONLBatch\nfrom sage.libs.io_utils.sink import TerminalSink\nfrom sage.libs.rag.generator import OpenAIGenerator\nfrom sage.libs.rag.promptor import QAPromptor\nfrom sage.libs.rag.retriever import MilvusSparseRetriever\nfrom sage.common.utils.config.loader import load_config\nimport yaml\n\n\ndef load_config(path):\n    with open(path, 'r', encoding='utf-8') as f:\n        config = yaml.safe_load(f)\n    return config\n\ndef pipeline_run():\n    \"\"\"    \n    \u521b\u5efa\u5e76\u8fd0\u884c Milvus \u4e13\u7528 RAG \u6570\u636e\u5904\u7406\u7ba1\u9053\n\n    Args:\n        config (dict): \u5305\u542b\u5404\u6a21\u5757\u914d\u7f6e\u7684\u914d\u7f6e\u5b57\u5178\u3002\n    \"\"\"\n\n    print(\"=== \u542f\u52a8\u57fa\u4e8e Milvus \u7684 RAG \u95ee\u7b54\u7cfb\u7edf ===\")\n    print(\"\u914d\u7f6e\u4fe1\u606f:\")\n    print(f\"  - \u6e90\u6587\u4ef6: {config['source']['data_path']}\")\n    print(f\"  - \u68c0\u7d22\u5668: MilvusSparseRetriever (Milvus \u4e13\u7528)\")\n    print(f\"  - Top-K: {config['retriever']['top_k']}\")\n    print(f\"  - \u96c6\u5408\u540d\u79f0: {config['retriever']['milvus_sparse']['collection_name']}\")\n\n    env = LocalEnvironment()\n    # \u6784\u5efa\u6570\u636e\u5904\u7406\u6d41\u7a0b\n    # MilvusSparseRetriever \u4f1a\u5728\u521d\u59cb\u5316\u65f6\u81ea\u52a8\u52a0\u8f7d\u914d\u7f6e\u7684\u77e5\u8bc6\u5e93\u6587\u4ef6\n    print(\"\u6b63\u5728\u6784\u5efa\u6570\u636e\u5904\u7406\u7ba1\u9053...\")\n    # \u6784\u5efa\u6570\u636e\u5904\u7406\u6d41\u7a0b\n    (env\n        .from_source(JSONLBatch, config[\"source\"])\n        .map(MilvusSparseRetriever, config[\"retriever\"])\n        .map(QAPromptor, config[\"promptor\"])\n        .map(OpenAIGenerator, config[\"generator\"][\"vllm\"])\n        .sink(TerminalSink, config[\"sink\"])\n    )\n    print(\"\u6b63\u5728\u63d0\u4ea4\u5e76\u8fd0\u884c\u7ba1\u9053...\")\n    env.submit(autostop=True)\n    env.close()\n    print(\"=== RAG \u95ee\u7b54\u7cfb\u7edf\u8fd0\u884c\u5b8c\u6210 ===\")\n\n\nif __name__ == '__main__':\n    config_path = './config_sparse_milvus.yaml'\n    if not os.path.exists(config_path):\n        print(f\"\u914d\u7f6e\u6587\u4ef6\u4e0d\u5b58\u5728: {config_path}\")\n\n    config = load_config(config_path)\n\n    print(config)\n\n    # \u68c0\u67e5\u77e5\u8bc6\u5e93\u6587\u4ef6\uff08\u5982\u679c\u914d\u7f6e\u4e86\uff09\n    knowledge_file = config[\"retriever\"][\"milvus_sparse\"].get(\"knowledge_file\")\n    if knowledge_file:\n        if not os.path.exists(knowledge_file):\n            print(f\"\u8b66\u544a\uff1a\u77e5\u8bc6\u5e93\u6587\u4ef6\u4e0d\u5b58\u5728: {knowledge_file}\")\n            print(\"\u8bf7\u786e\u4fdd\u77e5\u8bc6\u5e93\u6587\u4ef6\u5b58\u5728\u4e8e\u6307\u5b9a\u8def\u5f84\")\n        else:\n            print(f\"\u627e\u5230\u77e5\u8bc6\u5e93\u6587\u4ef6: {knowledge_file}\")\n\n    print(\"\u5f00\u59cb\u8fd0\u884c Milvus \u7a20\u5bc6\u5411\u91cf\u68c0\u7d22\u7ba1\u9053...\")\n    pipeline_run() \n</code></pre> config_sparse_milvus.yaml\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a <pre><code>source:\n  data_path: \"./queries.jsonl\"   # \u7528\u6237\u63d0\u4f9b\u7684\u6d41\u5f0f\u95ee\u9898\uff0c\u683c\u5f0f\u89c1\u9996\u6bb5\u63cf\u8ff0\n  platform: \"local\"\n\nretriever:\n  preload_knowledge_file: \"./\u77e5\u8bc6\u5e93\u6587\u4ef6.txt\"\n\n  # \u901a\u7528\u53c2\u6570\n  top_k: 3                 # \u8fd4\u56de\u6587\u6863\u6570\u91cf\n\n  # Milvus \u540e\u7aef\uff08\u7a20\u5bc6\u68c0\u7d22\uff09\n  milvus_sparse:\n    # \u672c\u5730 Milvus Lite\uff08\u63a8\u8350\u7528\u4e8e\u5feb\u901f\u8bd5\u7528\uff09\n    persistence_path: \"./milvus_qa_sparse.db\"\n\n    # \u8fdc\u7a0b Milvus\uff08\u5982\u9700\u8fdc\u7a0b\uff0c\u8bf7\u6ce8\u91ca\u4e0a\u9762\u7684 persistence_path\uff0c\u6539\u4e3a\u5982\u4e0b\u914d\u7f6e\uff09\n    # host: \"127.0.0.1\"\n    # port: 19530\n    # force_http: true\n\n    collection_name: \"qa_sparse_collection\"\n    search_type: \"sparse\"     # \u7a00\u758f\u68c0\u7d22\n\n    # # \u77e5\u8bc6\u6587\u4ef6\uff08\u53ef\u9009\uff09\uff1a\u63d0\u4f9b\u540e\u5c06\u81ea\u52a8\u6309\u6bb5\u843d\u8bfb\u53d6\u5e76\u5165\u5e93\n    # knowledge_file: \"./examples/data/qa_knowledge_base.txt\"\n\npromptor:\n  template: |\n    \u57fa\u4e8e\u4ee5\u4e0b\u68c0\u7d22\u5230\u7684\u76f8\u5173\u6587\u6863\uff0c\u56de\u7b54\u7528\u6237\u95ee\u9898\uff1a\n\n    \u76f8\u5173\u6587\u6863\uff1a\n    {retrieved_documents}\n\n    \u7528\u6237\u95ee\u9898\uff1a{query}\n\n    \u8bf7\u63d0\u4f9b\u51c6\u786e\u3001\u6709\u7528\u7684\u56de\u7b54\uff1a\n\ngenerator:\n  vllm:\n    api_key: \"your-own-api_key\"\n    method: \"openai\"\n    model_name: \"meta-llama/Llama-2-7b-chat-hf\"\n    base_url: \"base_url\"\n    seed: 42\n\nsink:\n  enable_log: true\n</code></pre></p>"},{"location":"librarys/rag/examples/RAG_milvus/#_3","title":"\u7ec4\u4ef6\u7ec4\u5408\u4f7f\u7528","text":""},{"location":"librarys/rag/examples/RAG_milvus/#_4","title":"\u5b8c\u6574\u6d41\u6c34\u7ebf\u793a\u4f8b","text":"<pre><code>def full_pipeline_run(config: dict) -&gt; None:\n    \"\"\"\u5305\u542b\u6240\u6709\u7ec4\u4ef6\u7684\u5b8c\u6574RAG\u6d41\u6c34\u7ebf\"\"\"\n    env = LocalEnvironment()\n    (\n        env\n        .from_batch(JSONLBatch, config[\"source\"])\n        .map(ChromaRetriever, config[\"retriever\"])        # \u68c0\u7d22\n        .map(BGEReranker, config[\"reranker\"])             # \u91cd\u6392\u5e8f  \n        .map(LongRefinerAdapter, config[\"refiner\"])       # \u6587\u6863\u4f18\u5316\n        .map(QAPromptor, config[\"promptor\"])              # \u63d0\u793a\u7ec4\u88c5\n        .map(OpenAIGenerator, config[\"generator\"][\"vllm\"]) # \u7b54\u6848\u751f\u6210\n        .sink(TerminalSink, config[\"sink\"])               # \u7ed3\u679c\u8f93\u51fa\n    )\n    env.submit()\n    time.sleep(10)\n    env.close()\n</code></pre>"},{"location":"librarys/tools/arxiv_paper_searcher/","title":"SAGE \u5de5\u5177\u6587\u6863: <code>_Searcher_Tool</code>","text":"<p>\u5de5\u5177\u72b6\u6001: \u53ef\u7528</p> <p>\u7248\u672c: 1.0.0 \u63cf\u8ff0: \u8fd9\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u5728 arXiv.org \u4e0a\u641c\u7d22\u5b66\u672f\u8bba\u6587\u3002\u5b83\u901a\u8fc7\u7f51\u9875\u6293\u53d6\u6280\u672f\uff0c\u6839\u636e\u7528\u6237\u63d0\u4f9b\u7684\u67e5\u8be2\u5173\u952e\u8bcd\uff0c\u83b7\u53d6\u8bba\u6587\u7684\u6807\u9898\u3001\u4f5c\u8005\u3001\u6458\u8981\u548c\u94fe\u63a5\u7b49\u4fe1\u606f\u3002</p>"},{"location":"librarys/tools/arxiv_paper_searcher/#1","title":"1. \u529f\u80fd\u6982\u8ff0","text":"<p><code>_Searcher_Tool</code> \u662f SAGE \u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u57fa\u7840\u5de5\u5177\uff0c\u5b83\u5c01\u88c5\u4e86\u5bf9 arXiv \u7f51\u7ad9\u7684\u641c\u7d22\u903b\u8f91\u3002\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u641c\u7d22\u5173\u952e\u8bcd\u3001\u6bcf\u9875\u8fd4\u56de\u7ed3\u679c\u6570\u4ee5\u53ca\u6700\u5927\u8fd4\u56de\u7ed3\u679c\u6570\uff0c\u5de5\u5177\u4f1a\u81ea\u52a8\u5904\u7406\u7f51\u7edc\u8bf7\u6c42\u3001HTML \u89e3\u6790\u548c\u6570\u636e\u63d0\u53d6\uff0c\u6700\u7ec8\u8fd4\u56de\u4e00\u4e2a\u7ed3\u6784\u5316\u7684\u8bba\u6587\u5217\u8868\u3002</p> <p>\u4f7f\u7528\u9650\u5236</p> <p>\u4e3a\u4e86\u907f\u514d\u5bf9 arXiv \u670d\u52a1\u5668\u9020\u6210\u8fc7\u5927\u538b\u529b\uff0c\u8be5\u5de5\u5177\u5185\u90e8\u5c06\u5355\u6b21\u67e5\u8be2\u7684\u6700\u5927\u7ed3\u679c\u6570\u786c\u7f16\u7801\u9650\u5236\u4e3a 100 \u6761\u3002</p>"},{"location":"librarys/tools/arxiv_paper_searcher/#2","title":"2. \u53c2\u6570\u8be6\u89e3","text":"<p>\u8be5\u5de5\u5177\u901a\u8fc7 <code>execute</code> \u65b9\u6cd5\u63a5\u6536\u53c2\u6570\u6765\u6267\u884c\u641c\u7d22\u3002</p>"},{"location":"librarys/tools/arxiv_paper_searcher/#_1","title":"\u8f93\u5165\u53c2\u6570","text":"\u53c2\u6570\u540d (Parameter) \u7c7b\u578b (Type) \u63cf\u8ff0 \u9ed8\u8ba4\u503c <code>query</code> <code>str</code> \u5fc5\u9700\u3002\u7528\u4e8e\u641c\u7d22\u8bba\u6587\u7684\u5173\u952e\u8bcd\u6216\u77ed\u8bed\u3002 \u65e0 <code>size</code> <code>int</code> \u6bcf\u9875\u663e\u793a\u7684\u641c\u7d22\u7ed3\u679c\u6570\u91cf\u3002\u5982\u679c\u63d0\u4f9b\u7684\u503c\u65e0\u6548\uff0c\u4f1a\u81ea\u52a8\u9009\u62e9\u4e00\u4e2a\u6700\u63a5\u8fd1\u7684\u6709\u6548\u503c\u3002\u6709\u6548\u503c\u4e3a <code>[25, 50, 100, 200]</code>\u3002 <code>25</code> <code>max_results</code> <code>int</code> \u5e0c\u671b\u8fd4\u56de\u7684\u6700\u5927\u8bba\u6587\u6570\u91cf\u3002\u5b9e\u9645\u8fd4\u56de\u6570\u91cf\u4e0d\u4f1a\u8d85\u8fc7 100\u3002 <code>25</code>"},{"location":"librarys/tools/arxiv_paper_searcher/#_2","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8be5\u5de5\u5177\u7684 <code>execute</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a <code>list</code>\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a <code>dict</code>\uff0c\u4ee3\u8868\u4e00\u7bc7\u8bba\u6587\u3002\u6bcf\u4e2a\u5b57\u5178\u5305\u542b\u4ee5\u4e0b\u952e\uff1a</p> \u952e (Key) \u7c7b\u578b (Type) \u63cf\u8ff0 <code>title</code> <code>str</code> \u8bba\u6587\u7684\u5b8c\u6574\u6807\u9898\u3002 <code>authors</code> <code>str</code> \u8bba\u6587\u7684\u4f5c\u8005\u5217\u8868\uff0c\u4ee5\u9017\u53f7\u5206\u9694\u3002 <code>abstract</code> <code>str</code> \u8bba\u6587\u7684\u6458\u8981\u5185\u5bb9\u3002 <code>link</code> <code>str</code> \u6307\u5411\u8be5\u8bba\u6587\u5728 arXiv \u4e0a\u7684 PDF \u6216\u8be6\u60c5\u9875\u7684\u94fe\u63a5\u3002"},{"location":"librarys/tools/arxiv_paper_searcher/#3","title":"3. \u4f7f\u7528\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u6f14\u793a\u5982\u4f55\u8c03\u7528 <code>_Searcher_Tool</code> \u7684\u793a\u4f8b\u3002</p> \u57fa\u7840\u641c\u7d22\u9ad8\u7ea7\u641c\u7d22\u81ea\u5b9a\u4e49\u8fd4\u56de\u6570\u91cf <p>\u641c\u7d22\u5173\u4e8e\u201c\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5de5\u5177\u4ee3\u7406 (tool agents with large language models)\u201d\u7684\u8bba\u6587\u3002</p> \u57fa\u7840\u641c\u7d22\u793a\u4f8b<pre><code>from your_module import _Searcher_Tool # \u8bf7\u66ff\u6362\u4e3a\u5b9e\u9645\u7684\u6a21\u5757\u8def\u5f84\n\n# 1. \u521d\u59cb\u5316\u5de5\u5177\ntool = _Searcher_Tool()\n\n# 2. \u5b9a\u4e49\u67e5\u8be2\u5e76\u6267\u884c\nquery = \"tool agents with large language models\"\nresults = tool.execute(query=query)\n\n# 3. \u6253\u5370\u7ed3\u679c\nfor paper in results:\n    print(f\"Title: {paper['title']}\")\n</code></pre> <p>\u641c\u7d22\u5173\u4e8e\u201c\u91cf\u5b50\u8ba1\u7b97 (quantum computing)\u201d\u7684\u8bba\u6587\uff0c\u8bbe\u7f6e\u6bcf\u9875\u8fd4\u56de 100 \u6761\u7ed3\u679c\uff0c\u4f46\u6700\u591a\u53ea\u83b7\u53d6 50 \u7bc7\u8bba\u6587\u3002</p> \u9ad8\u7ea7\u641c\u7d22\u793a\u4f8b<pre><code>from your_module import _Searcher_Tool\n\ntool = _Searcher_Tool()\n\nresults = tool.execute(\n    query=\"quantum computing\", \n    size=100, \n    max_results=50\n)\n\nprint(f\"\u6210\u529f\u83b7\u53d6 {len(results)} \u7bc7\u8bba\u6587\u3002\")\n</code></pre> <p>\u641c\u7d22\u5173\u4e8e\u201c\u673a\u5668\u5b66\u4e60 (machine learning)\u201d\u7684\u8bba\u6587\uff0c\u5e76\u6307\u5b9a\u6700\u591a\u8fd4\u56de 75 \u7bc7\u3002</p> \u81ea\u5b9a\u4e49\u8fd4\u56de\u6570\u91cf\u793a\u4f8b<pre><code>from your_module import _Searcher_Tool\n\ntool = _Searcher_Tool()\n\nresults = tool.execute(\n    query=\"machine learning\", \n    max_results=75\n)\n\nprint(f\"\u6210\u529f\u83b7\u53d6 {len(results)} \u7bc7\u8bba\u6587\u3002\")\n</code></pre>"},{"location":"librarys/tools/arxiv_paper_searcher/#4","title":"4. \u5185\u90e8\u5b9e\u73b0\u903b\u8f91","text":"\u6267\u884c\u6d41\u7a0b\u8be6\u89e3 (\u70b9\u51fb\u5c55\u5f00) <p><code>_Searcher_Tool</code> \u7684 <code>execute</code> \u65b9\u6cd5\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\u6765\u5b8c\u6210\u4e00\u6b21\u641c\u7d22\u4efb\u52a1\uff1a</p> <ol> <li> <p>\u53c2\u6570\u9a8c\u8bc1\u4e0e\u51c6\u5907:</p> <ul> <li>\u68c0\u67e5 <code>size</code> \u53c2\u6570\u662f\u5426\u5728 <code>[25, 50, 100, 200]</code> \u8303\u56f4\u5185\u3002\u5982\u679c\u4e0d\u662f\uff0c\u5219\u9009\u62e9\u4e00\u4e2a\u6700\u63a5\u8fd1\u7684\u6709\u6548\u503c\u3002</li> <li>\u5c06 <code>max_results</code> \u4e0e\u5185\u90e8\u4e0a\u9650 (100) \u6bd4\u8f83\uff0c\u53d6\u8f83\u5c0f\u8005\u4f5c\u4e3a\u6700\u7ec8\u7684\u6700\u5927\u7ed3\u679c\u6570\u3002</li> <li>\u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u5217\u8868 <code>results</code> \u7528\u4e8e\u5b58\u50a8\u7ed3\u679c\uff0c\u5e76\u8bbe\u7f6e\u8d77\u59cb\u7d22\u5f15 <code>start = 0</code> \u7528\u4e8e\u5206\u9875\u3002</li> </ul> </li> <li> <p>\u5faa\u73af\u83b7\u53d6\u6570\u636e:</p> <ul> <li>\u8fdb\u5165\u4e00\u4e2a <code>while</code> \u5faa\u73af\uff0c\u6761\u4ef6\u662f <code>len(results) &lt; max_results</code>\u3002</li> <li>\u5728\u5faa\u73af\u5185\u90e8\uff0c\u6784\u9020\u4e00\u4e2a\u5305\u542b\u67e5\u8be2\u53c2\u6570\u7684\u5b57\u5178\uff0c\u7528\u4e8e <code>requests.get</code> \u8c03\u7528\u3002</li> <li>\u5411 arXiv \u7684\u641c\u7d22\u63a5\u53e3 <code>https://arxiv.org/search/</code> \u53d1\u9001 GET \u8bf7\u6c42\u3002</li> </ul> </li> <li> <p>HTML \u89e3\u6790\u4e0e\u6570\u636e\u63d0\u53d6:</p> <ul> <li>\u4f7f\u7528 <code>BeautifulSoup</code> \u89e3\u6790\u8fd4\u56de\u7684 HTML \u54cd\u5e94\u5185\u5bb9\u3002</li> <li>\u67e5\u627e\u6240\u6709 class \u4e3a <code>arxiv-result</code> \u7684 <code>&lt;li&gt;</code> \u6807\u7b7e\uff0c\u6bcf\u4e2a\u6807\u7b7e\u4ee3\u8868\u4e00\u7bc7\u8bba\u6587\u3002</li> <li>\u5982\u679c\u627e\u4e0d\u5230\u4efb\u4f55\u8bba\u6587\uff0c\u5219\u4e2d\u65ad\u5faa\u73af\u3002</li> <li>\u904d\u5386\u6bcf\u4e2a\u8bba\u6587\u6807\u7b7e\uff0c\u63d0\u53d6\u6807\u9898\u3001\u4f5c\u8005\u3001\u6458\u8981\u548c\u94fe\u63a5\u3002</li> <li>\u5bf9\u63d0\u53d6\u7684\u6587\u672c\u8fdb\u884c\u6e05\u7406\uff0c\u4f8b\u5982\u79fb\u9664 \"Authors: \" \u524d\u7f00\u548c \"\u25b3 Less\" \u540e\u7f00\u3002</li> <li>\u5c06\u63d0\u53d6\u7684\u4fe1\u606f\u5c01\u88c5\u6210\u4e00\u4e2a\u5b57\u5178\uff0c\u5e76\u6dfb\u52a0\u5230 <code>results</code> \u5217\u8868\u4e2d\u3002</li> </ul> </li> <li> <p>\u5206\u9875\u5904\u7406:</p> <ul> <li>\u6bcf\u6b21\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u5c06 <code>start</code> \u7d22\u5f15\u589e\u52a0 <code>size</code> \u7684\u503c\uff0c\u4ee5\u4fbf\u5728\u4e0b\u4e00\u6b21\u8bf7\u6c42\u4e2d\u83b7\u53d6\u4e0b\u4e00\u9875\u7684\u7ed3\u679c\u3002</li> </ul> </li> <li> <p>\u5f02\u5e38\u5904\u7406:</p> <ul> <li>\u6574\u4e2a\u7f51\u7edc\u8bf7\u6c42\u548c\u89e3\u6790\u8fc7\u7a0b\u88ab\u5305\u88f9\u5728 <code>try...except</code> \u5757\u4e2d\u3002\u5982\u679c\u53d1\u751f\u4efb\u4f55\u5f02\u5e38\uff08\u5982\u7f51\u7edc\u9519\u8bef\uff09\uff0c\u5c06\u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7\u5e76\u4e2d\u65ad\u5faa\u73af\u3002</li> </ul> </li> <li> <p>\u8fd4\u56de\u7ed3\u679c:</p> <ul> <li>\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u8fd4\u56de <code>results</code> \u5217\u8868\uff0c\u5e76\u6839\u636e <code>max_results</code> \u5bf9\u5176\u8fdb\u884c\u5207\u7247\uff0c\u786e\u4fdd\u8fd4\u56de\u7684\u8bba\u6587\u6570\u91cf\u4e0d\u8d85\u8fc7\u7528\u6237\u7684\u8981\u6c42\u3002</li> </ul> </li> </ol>"},{"location":"librarys/tools/arxiv_paper_searcher/#5","title":"5. \u4f9d\u8d56\u9879","text":"<p>\u8be5\u5de5\u5177\u9700\u8981\u4ee5\u4e0b Python \u5e93\u624d\u80fd\u6b63\u5e38\u8fd0\u884c\uff1a</p> <ul> <li> <code>requests</code>: \u7528\u4e8e\u53d1\u9001 HTTP \u8bf7\u6c42\u3002</li> <li> <code>beautifulsoup4</code>: \u7528\u4e8e\u89e3\u6790 HTML \u5185\u5bb9\u3002</li> <li> <code>re</code>: Python \u5185\u7f6e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5757\uff0c\u7528\u4e8e\u6587\u672c\u6e05\u7406\u3002</li> <li> <code>logging</code>: Python \u5185\u7f6e\u7684\u65e5\u5fd7\u6a21\u5757\u3002</li> </ul> <p>\u60a8\u53ef\u4ee5\u4f7f\u7528 pip \u6765\u5b89\u88c5\u6240\u9700\u7684\u5e93\uff1a <pre><code>pip install requests beautifulsoup4\n</code></pre></p>"},{"location":"librarys/tools/image_captioner/","title":"SAGE \u5de5\u5177\u6587\u6863: <code>ImageCaptioner</code>","text":"<p>\u5de5\u5177\u72b6\u6001: \u53ef\u7528</p> <p>\u7248\u672c: 1.0.0 \u63cf\u8ff0: \u4e00\u4e2a\u80fd\u591f\u4e3a\u672c\u5730\u56fe\u7247\u6587\u4ef6\u751f\u6210\u63cf\u8ff0\u6027\u6807\u9898\uff08Caption\uff09\u7684\u5de5\u5177\u3002</p>"},{"location":"librarys/tools/image_captioner/#1","title":"1. \u529f\u80fd\u6982\u8ff0","text":"<p><code>ImageCaptioner</code> \u5de5\u5177\u5229\u7528\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u89c6\u89c9\u7406\u89e3\u80fd\u529b\uff0c\u4e3a\u7528\u6237\u6307\u5b9a\u7684\u56fe\u7247\u751f\u6210\u4e00\u6bb5\u63cf\u8ff0\u6027\u6587\u5b57\u3002\u7528\u6237\u53ea\u9700\u63d0\u4f9b\u56fe\u7247\u7684\u672c\u5730\u8def\u5f84\uff0c\u8be5\u5de5\u5177\u4fbf\u4f1a\u8c03\u7528\u914d\u7f6e\u597d\u7684 LLM \u5f15\u64ce\u6765\u5206\u6790\u56fe\u7247\u5e76\u8fd4\u56de\u751f\u6210\u7684\u6807\u9898\u3002</p> <p>\u6838\u5fc3\u4f9d\u8d56</p> <p>\u6b64\u5de5\u5177\u7684\u8fd0\u884c**\u5f3a\u4f9d\u8d56**\u4e8e\u4e00\u4e2a\u5df2\u914d\u7f6e\u597d\u7684\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u5f15\u64ce\u3002\u8bf7\u786e\u4fdd\u5728\u6267\u884c\u524d\uff0c\u7cfb\u7edf\u5df2\u6b63\u786e\u8bbe\u7f6e\u5e76\u80fd\u8bbf\u95ee\u8be5\u5f15\u64ce\u3002</p>"},{"location":"librarys/tools/image_captioner/#2","title":"2. \u53c2\u6570\u8be6\u89e3","text":"<p>\u8be5\u5de5\u5177\u901a\u8fc7 <code>execute</code> \u65b9\u6cd5\u63a5\u6536\u53c2\u6570\u6765\u6267\u884c\u56fe\u7247\u6807\u9898\u751f\u6210\u4efb\u52a1\u3002</p>"},{"location":"librarys/tools/image_captioner/#_1","title":"\u8f93\u5165\u53c2\u6570","text":"\u53c2\u6570\u540d (Parameter) \u7c7b\u578b (Type) \u63cf\u8ff0 <code>image_path</code> <code>str</code> \u5fc5\u9700\u3002\u9700\u8981\u751f\u6210\u6807\u9898\u7684\u672c\u5730\u56fe\u7247\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\u3002 <p>\u5173\u4e8e <code>prompt</code> \u53c2\u6570</p> <p>\u5c3d\u7ba1\u5de5\u5177\u5143\u6570\u636e\u663e\u793a\u4e86\u4e00\u4e2a <code>prompt</code> \u8f93\u5165\u7c7b\u578b\uff0c\u4f46\u5f53\u524d\u7684 <code>execute</code> \u65b9\u6cd5\u5b9e\u73b0\u5e76\u672a\u76f4\u63a5\u4f7f\u7528\u5b83\u3002\u5de5\u5177\u5185\u90e8\u4f1a\u4f7f\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u6a21\u677f\u5411\u6a21\u578b\u53d1\u8d77\u8bf7\u6c42\u3002</p>"},{"location":"librarys/tools/image_captioner/#_2","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p><code>execute</code> \u65b9\u6cd5\u8fd4\u56de\u7531\u5e95\u5c42 <code>OpenAIClient</code> \u751f\u6210\u7684\u54cd\u5e94\u3002\u901a\u5e38\u8fd9\u662f\u4e00\u4e2a\u5305\u542b\u6a21\u578b\u751f\u6210\u5185\u5bb9\u7684\u5b57\u5178\uff0c\u5177\u4f53\u7ed3\u6784\u53d6\u51b3\u4e8e LLM \u5f15\u64ce\u7684\u8fd4\u56de\u683c\u5f0f\u3002\u5982\u679c\u6267\u884c\u5931\u8d25\uff0c\u5219\u8fd4\u56de <code>None</code>\u3002</p>"},{"location":"librarys/tools/image_captioner/#3","title":"3. \u4f7f\u7528\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u6f14\u793a\u5982\u4f55\u8c03\u7528 <code>ImageCaptioner</code> \u7684\u793a\u4f8b\u3002</p> \u57fa\u7840\u7528\u6cd5 <p>\u4e3a\u4e00\u5f20\u672c\u5730\u56fe\u7247\u751f\u6210\u6807\u9898\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u6a21\u578b\u3002</p> \u57fa\u7840\u7528\u6cd5\u793a\u4f8b<pre><code>import os\nfrom your_module import ImageCaptioner # \u8bf7\u66ff\u6362\u4e3a\u5b9e\u9645\u7684\u6a21\u5757\u8def\u5f84\n\n# 1. \u521d\u59cb\u5316\u5de5\u5177\uff0c\u6307\u5b9a\u6a21\u578b\ntool = ImageCaptioner(model_name=\"meta-llama/Llama-2-13b-chat-hf\")\n\n# 2. \u5b9a\u4e49\u56fe\u7247\u8def\u5f84\u5e76\u6267\u884c\n# \u5047\u8bbe\u56fe\u7247\u4e0e\u811a\u672c\u5728\u540c\u4e00\u76ee\u5f55\u4e0b\u7684 examples/ \u6587\u4ef6\u5939\u4e2d\nimage_path = os.path.join(os.path.dirname(__file__), \"examples/baseball.png\")\ncaption_response = tool.execute(image_path=image_path)\n\n# 3. \u6253\u5370\u7ed3\u679c\nif caption_response:\n    print(\"\u751f\u6210\u7684\u6807\u9898:\")\n    print(caption_response)\nelse:\n    print(\"\u6807\u9898\u751f\u6210\u5931\u8d25\u3002\")\n</code></pre>"},{"location":"librarys/tools/image_captioner/#4","title":"4. \u5185\u90e8\u5b9e\u73b0\u903b\u8f91","text":"\u6267\u884c\u6d41\u7a0b\u8be6\u89e3 (\u70b9\u51fb\u5c55\u5f00) <p><code>ImageCaptioner</code> \u7684 <code>execute</code> \u65b9\u6cd5\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\u6765\u5b8c\u6210\u4efb\u52a1\uff1a</p> <ol> <li> <p>\u6a21\u578b\u68c0\u67e5:</p> <ul> <li>\u9996\u5148\u68c0\u67e5 <code>self.model_name</code> \u662f\u5426\u5df2\u8bbe\u7f6e\u3002\u5982\u679c\u672a\u8bbe\u7f6e\uff0c\u5219\u629b\u51fa <code>ValueError</code> \u5f02\u5e38\uff0c\u63d0\u793a\u7528\u6237\u5fc5\u987b\u5148\u8bbe\u7f6e\u6a21\u578b\u540d\u79f0\u3002</li> </ul> </li> <li> <p>\u6784\u9020\u8bf7\u6c42:</p> <ul> <li>\u521b\u5efa\u4e00\u4e2a\u7b26\u5408 OpenAI \u683c\u5f0f\u7684\u6d88\u606f\u5217\u8868 <code>messages</code>\u3002\u5176\u4e2d\u5305\u542b\u4e00\u4e2a <code>system</code> \u89d2\u8272\u7684\u6d88\u606f\uff0c\u7528\u4e8e\u8bbe\u5b9a\u52a9\u624b\u7684\u8eab\u4efd\uff0c\u4ee5\u53ca\u4e00\u4e2a <code>user</code> \u89d2\u8272\u7684\u6d88\u606f\uff0c\u5185\u5bb9\u4e3a\u201c\u4e3a\u4f4d\u4e8e\u8def\u5f84 {image_path} \u7684\u56fe\u7247\u751f\u6210\u6807\u9898\u201d\u3002</li> </ul> </li> <li> <p>\u521d\u59cb\u5316\u5ba2\u6237\u7aef:</p> <ul> <li>\u4f7f\u7528\u5f53\u524d\u5de5\u5177\u8bbe\u7f6e\u7684 <code>model_name</code> \u548c\u4e00\u4e2a\u56fa\u5b9a\u7684 <code>seed</code> (42) \u6765\u521d\u59cb\u5316 <code>OpenAIClient</code>\u3002</li> </ul> </li> <li> <p>\u5e26\u91cd\u8bd5\u673a\u5236\u7684\u8c03\u7528:</p> <ul> <li>\u8fdb\u5165\u4e00\u4e2a\u6700\u591a 5 \u6b21\u7684\u91cd\u8bd5\u5faa\u73af\u3002</li> <li>\u5728\u5faa\u73af\u4e2d\uff0c\u8c03\u7528 <code>client.generate()</code> \u65b9\u6cd5\u5e76\u4f20\u5165 <code>messages</code>\u3002</li> <li>\u5982\u679c\u8c03\u7528\u6210\u529f\uff0c\u7acb\u5373\u8fd4\u56de\u83b7\u53d6\u5230\u7684 <code>response</code>\u3002</li> <li>\u5982\u679c\u6355\u83b7\u5230 <code>ConnectionError</code>\uff08\u8fde\u63a5\u9519\u8bef\uff09\uff0c\u5219\u6253\u5370\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u7b49\u5f85 3 \u79d2\u540e\u518d\u6b21\u5c1d\u8bd5\u3002</li> <li>\u5982\u679c\u91cd\u8bd5 5 \u6b21\u540e\u4ecd\u7136\u5931\u8d25\uff0c\u5219\u5c06\u6700\u540e\u4e00\u6b21\u7684\u5f02\u5e38\u5411\u4e0a\u629b\u51fa\u3002</li> </ul> </li> <li> <p>\u901a\u7528\u5f02\u5e38\u5904\u7406:</p> <ul> <li>\u6574\u4e2a\u8fc7\u7a0b\u88ab\u5305\u88f9\u5728\u4e00\u4e2a <code>try...except</code> \u5757\u4e2d\u3002\u5982\u679c\u53d1\u751f\u9664\u8fde\u63a5\u9519\u8bef\u5916\u7684\u4efb\u4f55\u5176\u4ed6\u5f02\u5e38\uff0c\u5c06\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u8fd4\u56de <code>None</code>\u3002</li> </ul> </li> </ol>"},{"location":"librarys/tools/image_captioner/#5","title":"5. \u4f9d\u8d56\u9879\u4e0e\u8981\u6c42","text":"<ul> <li>\u6838\u5fc3\u8981\u6c42:<ul> <li> LLM \u5f15\u64ce: \u5fc5\u987b\u80fd\u591f\u8bbf\u95ee\u4e00\u4e2a\u517c\u5bb9 OpenAI API \u7684\u5927\u8bed\u8a00\u6a21\u578b\u670d\u52a1\u3002</li> </ul> </li> <li>Python \u5e93:<ul> <li> <code>os</code>: \u7528\u4e8e\u5904\u7406\u6587\u4ef6\u8def\u5f84\u3002</li> <li> <code>time</code>: \u7528\u4e8e\u5728\u91cd\u8bd5\u4e4b\u95f4\u5b9e\u73b0\u5ef6\u8fdf\u3002</li> </ul> </li> <li>\u5185\u90e8\u6a21\u5757:<ul> <li> <code>sage.lib.tools.base.base_tool.BaseTool</code>: \u5de5\u5177\u7684\u57fa\u7c7b\u3002</li> <li> <code>..utils.openaiclient.OpenAIClient</code>: \u7528\u4e8e\u4e0e LLM \u5f15\u64ce\u4ea4\u4e92\u7684\u5ba2\u6237\u7aef\u3002</li> </ul> </li> </ul>"},{"location":"librarys/tools/image_captioner/#6","title":"6. \u9650\u5236\u4e0e\u6ce8\u610f\u4e8b\u9879","text":"<p>\u91cd\u8981\u9650\u5236</p> <p>\u8be5\u5de5\u5177\u7684\u6027\u80fd\u548c\u51c6\u786e\u6027\u5b8c\u5168\u53d6\u51b3\u4e8e\u5176\u6240\u4f9d\u8d56\u7684\u5e95\u5c42\u5927\u8bed\u8a00\u6a21\u578b\u3002\u5143\u6570\u636e\u4e2d\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u8be6\u7ec6\u9650\u5236\u8bf4\u660e\uff1a</p> <p><code>ImageCaptioner</code> \u63d0\u4f9b\u7684\u662f\u901a\u7528\u7684\u56fe\u7247\u63cf\u8ff0\uff0c\u4f46\u5b58\u5728\u4ee5\u4e0b\u9650\u5236\uff1a 1.  \u5728\u5904\u7406\u590d\u6742\u573a\u666f\u3001\u8ba1\u6570\u3001\u5c5e\u6027\u68c0\u6d4b\u548c\u7406\u89e3\u7269\u4f53\u5173\u7cfb\u65f6\u53ef\u80fd\u4f1a\u51fa\u9519\u3002 2.  \u53ef\u80fd\u65e0\u6cd5\u751f\u6210\u5168\u9762\u7684\u6807\u9898\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u5305\u542b\u591a\u4e2a\u7269\u4f53\u6216\u62bd\u8c61\u6982\u5ff5\u7684\u56fe\u7247\u3002 3.  \u6027\u80fd\u4f1a\u56e0\u56fe\u7247\u7684\u590d\u6742\u5ea6\u800c\u5f02\u3002 4.  \u96be\u4ee5\u5904\u7406\u5177\u6709\u7279\u5b9a\u6587\u5316\u6216\u4e13\u4e1a\u9886\u57df\u5185\u5bb9\u7684\u56fe\u7247\u3002 5.  \u53ef\u80fd\u4f1a\u5ffd\u7565\u7ec6\u8282\u6216\u8bef\u89e3\u7269\u4f53\u95f4\u7684\u5173\u7cfb\u3002</p> <p>\u5efa\u8bae\uff1a\u4e3a\u83b7\u5f97\u7cbe\u786e\u63cf\u8ff0\uff0c\u8bf7\u8003\u8651\u5c06\u6b64\u5de5\u5177\u4e0e\u5176\u4ed6\u5de5\u5177\u7ed3\u5408\u4f7f\u7528\u4ee5\u8fdb\u884c\u4e0a\u4e0b\u6587\u9a8c\u8bc1\uff0c\u6216\u5c06\u5176\u4f5c\u4e3a\u7cbe\u7ec6\u5316\u5904\u7406\u7684\u7b2c\u4e00\u6b65\u3002\u5728\u5904\u7406\u5173\u952e\u4fe1\u606f\u65f6\uff0c\u5fc5\u8981\u65f6\u8bf7\u4f7f\u7528\u4e13\u4e1a\u5de5\u5177\u6216\u4eba\u5de5\u8fdb\u884c\u9a8c\u8bc1\u3002</p>"},{"location":"librarys/tools/nature_news_fetcher/","title":"SAGE \u5de5\u5177\u6587\u6863: <code>Nature_News_Fetcher_Tool</code>","text":"<p>\u5de5\u5177\u72b6\u6001: \u53ef\u7528</p> <p>\u7248\u672c: 1.0.0 \u63cf\u8ff0: \u4e00\u4e2a\u4ece\u300a\u81ea\u7136\u300b\uff08Nature\uff09\u5b98\u7f51\u6293\u53d6\u6700\u65b0\u65b0\u95fb\u6587\u7ae0\u7684\u5de5\u5177\u3002</p>"},{"location":"librarys/tools/nature_news_fetcher/#1","title":"1. \u529f\u80fd\u6982\u8ff0","text":"<p><code>Nature_News_Fetcher_Tool</code> \u662f\u4e00\u4e2a\u7f51\u9875\u6293\u53d6\u5de5\u5177\uff0c\u4e13\u95e8\u7528\u4e8e\u4ece <code>nature.com</code> \u7684\u65b0\u95fb\u677f\u5757\u83b7\u53d6\u6700\u65b0\u7684\u6587\u7ae0\u5217\u8868\u3002\u5b83\u901a\u8fc7\u6a21\u62df\u6d4f\u89c8\u5668\u8bf7\u6c42\u3001\u89e3\u6790 HTML \u9875\u9762\u6765\u63d0\u53d6\u6bcf\u7bc7\u6587\u7ae0\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec\u6807\u9898\u3001\u94fe\u63a5\u3001\u63cf\u8ff0\u3001\u4f5c\u8005\u3001\u53d1\u5e03\u65e5\u671f\u548c\u5c01\u9762\u56fe\u7247\u3002</p> <p>\u793c\u8c8c\u6293\u53d6</p> <p>\u8be5\u5de5\u5177\u5728\u6bcf\u6b21\u9875\u9762\u8bf7\u6c42\u540e\u4f1a\u6682\u505c1\u79d2\uff0c\u4ee5\u907f\u514d\u5bf9\u300a\u81ea\u7136\u300b\u5b98\u7f51\u670d\u52a1\u5668\u9020\u6210\u8fc7\u5927\u8d1f\u62c5\u3002</p>"},{"location":"librarys/tools/nature_news_fetcher/#2","title":"2. \u53c2\u6570\u8be6\u89e3","text":"<p>\u8be5\u5de5\u5177\u901a\u8fc7 <code>execute</code> \u65b9\u6cd5\u63a5\u6536\u53c2\u6570\u6765\u6267\u884c\u65b0\u95fb\u6293\u53d6\u4efb\u52a1\u3002</p>"},{"location":"librarys/tools/nature_news_fetcher/#_1","title":"\u8f93\u5165\u53c2\u6570","text":"\u53c2\u6570\u540d (Parameter) \u7c7b\u578b (Type) \u63cf\u8ff0 \u9ed8\u8ba4\u503c <code>num_articles</code> <code>int</code> \u5e0c\u671b\u83b7\u53d6\u7684\u6587\u7ae0\u603b\u6570\u3002 <code>100</code> <code>max_pages</code> <code>int</code> \u4e3a\u4e86\u83b7\u53d6\u6307\u5b9a\u6570\u91cf\u7684\u6587\u7ae0\uff0c\u6700\u591a\u6293\u53d6\u7684\u9875\u9762\u6570\u3002 <code>5</code>"},{"location":"librarys/tools/nature_news_fetcher/#_2","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p><code>execute</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a <code>list</code>\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a <code>dict</code>\uff0c\u4ee3\u8868\u4e00\u7bc7\u6587\u7ae0\u3002\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u9519\u8bef\u4fe1\u606f\u7684\u5217\u8868\u3002\u6bcf\u4e2a\u6210\u529f\u7684\u6587\u7ae0\u5b57\u5178\u5305\u542b\u4ee5\u4e0b\u952e\uff1a</p> \u952e (Key) \u7c7b\u578b (Type) \u63cf\u8ff0 <code>title</code> <code>str</code> \u6587\u7ae0\u7684\u5b8c\u6574\u6807\u9898\u3002 <code>url</code> <code>str</code> \u6307\u5411\u8be5\u6587\u7ae0\u7684\u5b8c\u6574 URL\u3002 <code>description</code> <code>str</code> \u6587\u7ae0\u7684\u7b80\u77ed\u63cf\u8ff0\u6216\u6458\u8981\u3002 <code>authors</code> <code>list[str]</code> \u4f5c\u8005\u59d3\u540d\u5217\u8868\u3002 <code>date</code> <code>str</code> \u6587\u7ae0\u7684\u53d1\u5e03\u65e5\u671f (YYYY-MM-DD \u683c\u5f0f)\u3002 <code>image_url</code> <code>str</code> \u6587\u7ae0\u5173\u8054\u7684\u5c01\u9762\u56fe\u7247 URL\u3002"},{"location":"librarys/tools/nature_news_fetcher/#3","title":"3. \u4f7f\u7528\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u5982\u4f55\u8c03\u7528 <code>Nature_News_Fetcher_Tool</code> \u7684\u793a\u4f8b\u3002</p> \u57fa\u7840\u7528\u6cd5 <p>\u6293\u53d6\u6700\u65b0\u7684 10 \u7bc7\u65b0\u95fb\u6587\u7ae0\uff0c\u6700\u591a\u641c\u7d22 1 \u4e2a\u9875\u9762\u3002</p> \u57fa\u7840\u7528\u6cd5\u793a\u4f8b<pre><code>from your_module import Nature_News_Fetcher_Tool # \u8bf7\u66ff\u6362\u4e3a\u5b9e\u9645\u7684\u6a21\u5757\u8def\u5f84\n\n# 1. \u521d\u59cb\u5316\u5de5\u5177\ntool = Nature_News_Fetcher_Tool()\n\n# 2. \u6267\u884c\u6293\u53d6\narticles = tool.execute(num_articles=10, max_pages=1)\n\n# 3. \u6253\u5370\u7ed3\u679c\nif articles and \"error\" not in articles[0]:\n    print(f\"\u6210\u529f\u83b7\u53d6 {len(articles)} \u7bc7\u6587\u7ae0\u3002\")\n    for article in articles:\n        print(f\"- {article['title']}\")\nelse:\n    print(f\"\u6293\u53d6\u5931\u8d25: {articles}\")\n</code></pre>"},{"location":"librarys/tools/nature_news_fetcher/#4","title":"4. \u5185\u90e8\u5b9e\u73b0\u903b\u8f91","text":"\u6267\u884c\u6d41\u7a0b\u8be6\u89e3 (\u70b9\u51fb\u5c55\u5f00) <p><code>Nature_News_Fetcher_Tool</code> \u7684 <code>execute</code> \u65b9\u6cd5\u9075\u5faa\u4ee5\u4e0b\u6b65\u9aa4\u6765\u5b8c\u6210\u4efb\u52a1\uff1a</p> <ol> <li> <p>\u521d\u59cb\u5316:</p> <ul> <li>\u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868 <code>all_articles</code> \u7528\u4e8e\u5b58\u50a8\u6240\u6709\u6293\u53d6\u5230\u7684\u6587\u7ae0\u3002</li> <li>\u8bbe\u7f6e\u8d77\u59cb\u9875\u7801 <code>page_number = 1</code>\u3002</li> </ul> </li> <li> <p>\u5faa\u73af\u6293\u53d6:</p> <ul> <li>\u8fdb\u5165\u4e00\u4e2a <code>while</code> \u5faa\u73af\uff0c\u6761\u4ef6\u662f\u5df2\u6293\u53d6\u7684\u6587\u7ae0\u6570\u5c0f\u4e8e <code>num_articles</code> \u4e14\u5f53\u524d\u9875\u7801\u4e0d\u8d85\u8fc7 <code>max_pages</code>\u3002</li> <li>\u9875\u9762\u83b7\u53d6 (<code>fetch_page</code>):<ul> <li>\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u6d4f\u89c8\u5668 <code>User-Agent</code> \u6765\u6a21\u62df\u771f\u5b9e\u7528\u6237\u3002</li> <li>\u6784\u9020\u8bf7\u6c42\u53c2\u6570\uff0c\u5305\u62ec\u6392\u5e8f\u65b9\u5f0f (<code>PubDate</code>) \u548c\u6587\u7ae0\u7c7b\u578b (<code>news</code>)\u3002</li> <li>\u4f7f\u7528 <code>requests</code> \u5e93\u5411 <code>https://www.nature.com/nature/articles</code> \u53d1\u9001 GET \u8bf7\u6c42\u3002</li> </ul> </li> <li>\u5185\u5bb9\u89e3\u6790 (<code>parse_articles</code>):<ul> <li>\u4f7f\u7528 <code>BeautifulSoup</code> \u89e3\u6790\u8fd4\u56de\u7684 HTML \u5185\u5bb9\u3002</li> <li>\u5b9a\u4f4d\u5230 ID \u4e3a <code>new-article-list</code> \u7684 <code>&lt;section&gt;</code> \u6807\u7b7e\u3002</li> <li>\u904d\u5386\u8be5\u533a\u57df\u5185\u6240\u6709\u7684 <code>&lt;article&gt;</code> \u6807\u7b7e\uff0c\u5e76\u4e3a\u6bcf\u4e00\u7bc7\u6587\u7ae0\u63d0\u53d6\u6807\u9898\u3001URL\u3001\u63cf\u8ff0\u3001\u4f5c\u8005\u3001\u65e5\u671f\u548c\u56fe\u7247\u94fe\u63a5\u3002</li> </ul> </li> <li>\u7ed3\u679c\u5904\u7406:<ul> <li>\u5982\u679c\u5f53\u524d\u9875\u9762\u6ca1\u6709\u6293\u53d6\u5230\u4efb\u4f55\u6587\u7ae0\uff0c\u5219\u8ba4\u4e3a\u5df2\u5230\u8fbe\u672b\u9875\uff0c\u4e2d\u65ad\u5faa\u73af\u3002</li> <li>\u5c06\u5f53\u524d\u9875\u9762\u6293\u53d6\u7684\u6587\u7ae0\u5217\u8868 <code>page_articles</code> \u6dfb\u52a0\u5230 <code>all_articles</code> \u4e2d\u3002</li> <li>\u9875\u7801 <code>page_number</code> \u52a0 1\u3002</li> <li>\u8c03\u7528 <code>time.sleep(1)</code> \u7b49\u5f85 1 \u79d2\u3002</li> </ul> </li> </ul> </li> <li> <p>\u5f02\u5e38\u5904\u7406:</p> <ul> <li>\u6574\u4e2a\u8fc7\u7a0b\u88ab\u5305\u88f9\u5728 <code>try...except</code> \u5757\u4e2d\u3002</li> <li>\u5982\u679c\u53d1\u751f <code>requests.exceptions.RequestException</code> (\u5982\u7f51\u7edc\u95ee\u9898\u3001DNS\u9519\u8bef)\uff0c\u5219\u8bb0\u5f55\u9519\u8bef\u5e76\u8fd4\u56de\u5305\u542b\u7f51\u7edc\u9519\u8bef\u4fe1\u606f\u7684\u5217\u8868\u3002</li> <li>\u5982\u679c\u53d1\u751f\u4efb\u4f55\u5176\u4ed6\u672a\u9884\u6599\u5230\u7684\u5f02\u5e38\uff0c\u5219\u8bb0\u5f55\u9519\u8bef\u5e76\u8fd4\u56de\u5305\u542b\u901a\u7528\u9519\u8bef\u4fe1\u606f\u7684\u5217\u8868\u3002</li> </ul> </li> <li> <p>\u8fd4\u56de\u7ed3\u679c:</p> <ul> <li>\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u6839\u636e\u7528\u6237\u8bf7\u6c42\u7684 <code>num_articles</code> \u5bf9 <code>all_articles</code> \u5217\u8868\u8fdb\u884c\u5207\u7247\uff0c\u786e\u4fdd\u8fd4\u56de\u7684\u6587\u7ae0\u6570\u91cf\u4e0d\u8d85\u8fc7\u8981\u6c42\u3002</li> </ul> </li> </ol>"},{"location":"librarys/tools/nature_news_fetcher/#5","title":"5. \u4f9d\u8d56\u9879\u4e0e\u8981\u6c42","text":"<ul> <li>Python \u5e93:<ul> <li> <code>requests</code>: \u7528\u4e8e\u53d1\u9001 HTTP \u8bf7\u6c42\u3002</li> <li> <code>beautifulsoup4</code>: \u7528\u4e8e\u89e3\u6790 HTML \u5185\u5bb9\u3002</li> <li> <code>os</code>: \u7528\u4e8e\u6587\u4ef6\u8def\u5f84\u64cd\u4f5c\uff08\u5728 <code>if __name__ == \"__main__\"</code> \u4e2d\u4f7f\u7528\uff09\u3002</li> <li> <code>time</code>: \u7528\u4e8e\u5728\u8bf7\u6c42\u4e4b\u95f4\u5b9e\u73b0\u5ef6\u8fdf\u3002</li> <li> <code>logging</code>: \u7528\u4e8e\u8bb0\u5f55\u7a0b\u5e8f\u8fd0\u884c\u4fe1\u606f\u548c\u9519\u8bef\u3002</li> <li> <code>random</code>: \u7528\u4e8e\u968f\u673a\u9009\u62e9 User-Agent\u3002</li> </ul> </li> <li>\u5185\u90e8\u6a21\u5757:<ul> <li> <code>sage.lib.tools.base.base_tool.BaseTool</code>: \u5de5\u5177\u7684\u57fa\u7c7b\u3002</li> </ul> </li> </ul>"},{"location":"librarys/tools/nature_news_fetcher/#6","title":"6. \u9650\u5236\u4e0e\u6ce8\u610f\u4e8b\u9879","text":"<p>\u91cd\u8981\u9650\u5236</p> <p>\u8be5\u5de5\u5177\u7684\u7a33\u5b9a\u8fd0\u884c\u4f9d\u8d56\u4e8e\u300a\u81ea\u7136\u300b\u5b98\u7f51\u7684 HTML \u7ed3\u6784\u3002 * \u7f51\u7ad9\u7ed3\u6784\u53d8\u66f4: \u5982\u679c <code>nature.com</code> \u7684\u524d\u7aef\u4ee3\u7801\uff08\u5982\u6807\u7b7e\u3001\u7c7b\u540d\u3001ID\uff09\u53d1\u751f\u53d8\u5316\uff0c\u8be5\u5de5\u5177\u7684\u89e3\u6790\u903b\u8f91\u53ef\u80fd\u4f1a\u5931\u6548\uff0c\u9700\u8981\u66f4\u65b0\u4ee3\u7801\u4ee5\u9002\u5e94\u65b0\u7ed3\u6784\u3002 * \u7f51\u7edc\u4f9d\u8d56: \u5de5\u5177\u7684\u6210\u529f\u6267\u884c\u4f9d\u8d56\u4e8e\u7a33\u5b9a\u7684\u7f51\u7edc\u8fde\u63a5\u3002 * \u53cd\u722c\u866b\u7b56\u7565: \u5c3d\u7ba1\u4f7f\u7528\u4e86\u968f\u673a User-Agent\uff0c\u4f46\u5982\u679c\u76ee\u6807\u7f51\u7ad9\u90e8\u7f72\u4e86\u66f4\u590d\u6742\u7684\u53cd\u722c\u866b\u673a\u5236\uff0c\u6293\u53d6\u8bf7\u6c42\u4ecd\u6709\u53ef\u80fd\u88ab\u963b\u6b62\u3002</p>"},{"location":"librarys/tools/searcher_tool/","title":"Searcher Tool","text":""},{"location":"librarys/tools/text_detector/","title":"SAGE \u5de5\u5177\u6587\u6863: <code>Text_Detector_Tool</code>","text":"<p>\u5de5\u5177\u72b6\u6001: \u53ef\u7528</p> <p>\u7248\u672c: 1.0.0 \u63cf\u8ff0: \u4e00\u4e2a\u4f7f\u7528 <code>EasyOCR</code> \u5e93\u6765\u68c0\u6d4b\u5e76\u8bc6\u522b\u56fe\u50cf\u4e2d\u6587\u5b57\u7684\u5de5\u5177\u3002</p>"},{"location":"librarys/tools/text_detector/#1","title":"1. \u529f\u80fd\u6982\u8ff0","text":"<p><code>Text_Detector_Tool</code> \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5149\u5b66\u5b57\u7b26\u8bc6\u522b\uff08OCR\uff09\u5de5\u5177\uff0c\u5b83\u5c01\u88c5\u4e86\u6d41\u884c\u7684 <code>EasyOCR</code> \u5e93\u3002\u8be5\u5de5\u5177\u80fd\u591f\u52a0\u8f7d\u672c\u5730\u56fe\u50cf\u6587\u4ef6\uff0c\u5e76\u8bc6\u522b\u5176\u4e2d\u7684\u6587\u672c\u5185\u5bb9\u3002\u5b83\u652f\u6301\u591a\u79cd\u8bed\u8a00\uff0c\u5e76\u5185\u7f6e\u4e86\u91cd\u8bd5\u673a\u5236\u6765\u5904\u7406\u5e38\u89c1\u7684\u8fd0\u884c\u65f6\u95ee\u9898\uff0c\u7279\u522b\u662f GPU \u663e\u5b58\u4e0d\u8db3\u7684\u60c5\u51b5\u3002</p> <p>\u6838\u5fc3\u4f9d\u8d56: EasyOCR</p> <p>\u6b64\u5de5\u5177\u7684\u8fd0\u884c\u4f9d\u8d56\u4e8e <code>easyocr</code> \u548c <code>torch</code> Python \u5305\u3002\u5982\u679c\u60a8\u7684\u73af\u5883\u4e2d\u6ca1\u6709\u5b89\u88c5\uff0c\u5de5\u5177\u5728\u6784\u5efa\u65f6\u4f1a\u629b\u51fa <code>ImportError</code>\u3002</p>"},{"location":"librarys/tools/text_detector/#2","title":"2. \u53c2\u6570\u8be6\u89e3","text":"<p>\u8be5\u5de5\u5177\u901a\u8fc7 <code>execute</code> \u65b9\u6cd5\u63a5\u6536\u53c2\u6570\u6765\u6267\u884c\u6587\u672c\u68c0\u6d4b\u3002</p>"},{"location":"librarys/tools/text_detector/#_1","title":"\u8f93\u5165\u53c2\u6570","text":"\u53c2\u6570\u540d (Parameter) \u7c7b\u578b (Type) \u63cf\u8ff0 \u9ed8\u8ba4\u503c <code>image</code> <code>str</code> \u5fc5\u9700\u3002\u9700\u8981\u8fdb\u884c\u6587\u672c\u68c0\u6d4b\u7684\u672c\u5730\u56fe\u7247\u6587\u4ef6\u7684\u8def\u5f84\u3002 \u65e0 <code>languages</code> <code>list</code> \u6307\u5b9a OCR \u6a21\u578b\u9700\u8981\u8bc6\u522b\u7684\u8bed\u8a00\u4ee3\u7801\u5217\u8868\u3002\u4f8b\u5982 <code>[\"en\", \"ch_sim\"]</code>\u3002 <code>[\"en\"]</code> <code>detail</code> <code>int</code> \u63a7\u5236\u8f93\u51fa\u7684\u8be6\u7ec6\u7a0b\u5ea6\u3002<code>1</code> \u4e3a\u8be6\u7ec6\u8f93\u51fa\uff08\u9ed8\u8ba4\uff09\uff0c<code>0</code> \u4e3a\u7b80\u5316\u8f93\u51fa\u3002\u6b64\u53c2\u6570\u901a\u8fc7 <code>readtext</code> \u65b9\u6cd5\u7684 <code>**kwargs</code> \u4f20\u5165\u3002 <code>1</code> <code>clear_cuda_cache</code> <code>bool</code> \u5f53\u53d1\u751f \"CUDA out of memory\" \u9519\u8bef\u65f6\uff0c\u662f\u5426\u5c1d\u8bd5\u6e05\u7a7a CUDA \u7f13\u5b58\u3002 <code>False</code>"},{"location":"librarys/tools/text_detector/#_2","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8be5\u5de5\u5177\u7684\u8f93\u51fa\u683c\u5f0f\u53d6\u51b3\u4e8e\u4f20\u5165 <code>execute</code> \u65b9\u6cd5\u7684 <code>detail</code> \u53c2\u6570\uff1a</p> <ul> <li> <p>\u8be6\u7ec6\u6a21\u5f0f (<code>detail=1</code>, \u9ed8\u8ba4): \u8fd4\u56de\u4e00\u4e2a\u5217\u8868\uff0c\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4e00\u4e2a\u8bc6\u522b\u51fa\u7684\u6587\u672c\u5757\u3002\u6bcf\u4e2a\u6587\u672c\u5757\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u5305\u542b <code>(bounding_box, text, confidence_score)</code>\u3002</p> <ul> <li><code>bounding_box</code>: \u4e00\u4e2a\u5305\u542b\u56db\u4e2a <code>[x, y]</code> \u5750\u6807\u70b9\u7684\u5217\u8868\uff0c\u5b9a\u4e49\u4e86\u6587\u672c\u7684\u8fb9\u754c\u6846\u3002</li> <li><code>text</code>: \u8bc6\u522b\u51fa\u7684\u5b57\u7b26\u4e32\u6587\u672c\u3002</li> <li><code>confidence_score</code>: \u8bc6\u522b\u7ed3\u679c\u7684\u7f6e\u4fe1\u5ea6\uff0c\u6d6e\u70b9\u6570\uff0c\u8303\u56f4 0 \u5230 1\u3002 <pre><code>[\n    [[[55, 62], [339, 62], [339, 103], [55, 103]], \"This is a test\", 0.98]\n]\n</code></pre></li> </ul> </li> <li> <p>\u7b80\u5316\u6a21\u5f0f (<code>detail=0</code>): \u8fd4\u56de\u4e00\u4e2a\u4ec5\u5305\u542b\u8bc6\u522b\u51fa\u7684\u5b57\u7b26\u4e32\u6587\u672c\u7684\u5217\u8868\u3002     <pre><code>[\n    \"This is a test\"\n]\n</code></pre></p> </li> </ul>"},{"location":"librarys/tools/text_detector/#3","title":"3. \u4f7f\u7528\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u6f14\u793a\u5982\u4f55\u8c03\u7528 <code>Text_Detector_Tool</code> \u7684\u793a\u4f8b\u3002</p> \u57fa\u7840\u7528\u6cd5 (\u82f1\u6587)\u591a\u8bed\u8a00\u68c0\u6d4b\u7b80\u5316\u8f93\u51fa <p>\u68c0\u6d4b\u4e00\u5f20\u56fe\u7247\u4e2d\u7684\u82f1\u6587\u6587\u672c\u3002</p> \u57fa\u7840\u7528\u6cd5\u793a\u4f8b<pre><code>from your_module import text_detector # \u8bf7\u66ff\u6362\u4e3a\u5b9e\u9645\u7684\u6a21\u5757\u8def\u5f84\n\ntool = text_detector()\nresults = tool.execute(image=\"path/to/your/image.png\", languages=[\"en\"])\nprint(results)\n</code></pre> <p>\u540c\u65f6\u68c0\u6d4b\u56fe\u7247\u4e2d\u7684\u82f1\u6587\u548c\u5fb7\u6587\u3002</p> \u591a\u8bed\u8a00\u68c0\u6d4b\u793a\u4f8b<pre><code>tool = text_detector()\nresults = tool.execute(image=\"path/to/image.png\", languages=[\"en\", \"de\"])\nprint(results)\n</code></pre> <p>\u53ea\u83b7\u53d6\u8bc6\u522b\u51fa\u7684\u6587\u672c\u5b57\u7b26\u4e32\uff0c\u4e0d\u5305\u542b\u5750\u6807\u548c\u7f6e\u4fe1\u5ea6\u3002</p> \u7b80\u5316\u8f93\u51fa\u793a\u4f8b<pre><code>tool = text_detector()\nresults = tool.execute(image=\"path/to/image.png\", languages=[\"en\"], detail=0)\nprint(results) # \u8f93\u51fa: ['Detected text line 1', 'Another line']\n</code></pre>"},{"location":"librarys/tools/text_detector/#4","title":"4. \u5185\u90e8\u5b9e\u73b0\u903b\u8f91","text":"\u6267\u884c\u6d41\u7a0b\u8be6\u89e3 (\u70b9\u51fb\u5c55\u5f00) <p><code>execute</code> \u65b9\u6cd5\u7684\u6267\u884c\u6d41\u7a0b\u8bbe\u8ba1\u5f97\u76f8\u5f53\u5065\u58ee\uff1a</p> <ol> <li>\u91cd\u8bd5\u5faa\u73af: \u65b9\u6cd5\u7684\u6838\u5fc3\u662f\u4e00\u4e2a <code>for</code> \u5faa\u73af\uff0c\u7528\u4e8e\u5728\u53d1\u751f\u53ef\u6062\u590d\u7684\u9519\u8bef\u65f6\u8fdb\u884c\u91cd\u8bd5\uff08\u9ed8\u8ba4\u6700\u591a10\u6b21\uff09\u3002</li> <li>\u6a21\u578b\u6784\u5efa (<code>build_tool</code>): \u5728\u6bcf\u6b21\u5faa\u73af\u5c1d\u8bd5\u4e2d\uff0c\u90fd\u4f1a\u8c03\u7528 <code>build_tool</code> \u65b9\u6cd5\u6765\u521d\u59cb\u5316 <code>easyocr.Reader</code>\u3002\u8fd9\u786e\u4fdd\u4e86\u5728\u67d0\u4e9b\u9519\u8bef\u540e\u53ef\u4ee5\u91cd\u65b0\u52a0\u8f7d\u6a21\u578b\u3002\u5982\u679c <code>easyocr</code> \u672a\u5b89\u88c5\uff0c\u6b64\u6b65\u9aa4\u4f1a\u629b\u51fa <code>ImportError</code>\u3002</li> <li>\u6587\u672c\u8bfb\u53d6: \u8c03\u7528 <code>reader.readtext(image, **kwargs)</code> \u6765\u6267\u884c\u6838\u5fc3\u7684 OCR \u529f\u80fd\u3002</li> <li>\u7ed3\u679c\u6e05\u6d17: \u5982\u679c\u662f\u8be6\u7ec6\u6a21\u5f0f\uff0c\u5de5\u5177\u4f1a\u904d\u5386\u7ed3\u679c\uff0c\u5c06 <code>numpy</code> \u7684\u6570\u503c\u7c7b\u578b\u8f6c\u6362\u4e3a\u6807\u51c6\u7684 Python <code>int</code> \u548c <code>float</code> \u7c7b\u578b\uff0c\u4ee5\u4fbf\u4e8e\u540e\u7eed\u5904\u7406\uff08\u5982 JSON \u5e8f\u5217\u5316\uff09\u3002</li> <li>CUDA \u5185\u5b58\u9519\u8bef\u5904\u7406: \u7279\u522b\u5730\uff0c\u5982\u679c\u6355\u83b7\u5230\u5305\u542b \"CUDA out of memory\" \u7684 <code>RuntimeError</code>\uff0c\u5de5\u5177\u4f1a\uff1a<ul> <li>\u5982\u679c <code>clear_cuda_cache</code> \u4e3a <code>True</code>\uff0c\u5219\u8c03\u7528 <code>torch.cuda.empty_cache()</code> \u6e05\u7406\u663e\u5b58\u3002</li> <li>\u5426\u5219\uff0c\u7b49\u5f85\u4e00\u6bb5\u5ef6\u8fdf\u65f6\u95f4 (<code>retry_delay</code>) \u540e\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5c1d\u8bd5\u3002</li> </ul> </li> <li>\u5931\u8d25\u8fd4\u56de: \u5982\u679c\u6240\u6709\u91cd\u8bd5\u90fd\u5931\u8d25\u4e86\uff0c\u65b9\u6cd5\u4f1a\u6253\u5370\u4e00\u6761\u5931\u8d25\u4fe1\u606f\u5e76\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5217\u8868 <code>[]</code>\u3002</li> </ol>"},{"location":"librarys/tools/text_detector/#5","title":"5. \u4f9d\u8d56\u9879\u4e0e\u8981\u6c42","text":"<ul> <li> <p>Python \u5e93:</p> <ul> <li> <code>easyocr</code>: \u6838\u5fc3\u7684 OCR \u5f15\u64ce\u3002</li> <li> <code>torch</code>: <code>easyocr</code> \u7684\u5e95\u5c42\u4f9d\u8d56\uff0c\u7528\u4e8e\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u3002</li> <li> <code>os</code>, <code>time</code>, <code>typing</code>, <code>warnings</code>: Python \u6807\u51c6\u5e93\u3002</li> </ul> </li> <li> <p>\u5b89\u88c5\u547d\u4ee4:     <pre><code>pip install easyocr torch\n</code></pre></p> </li> </ul>"},{"location":"librarys/tools/text_detector/#6","title":"6. \u5e38\u7528\u8bed\u8a00\u53c2\u8003","text":"<p>\u5de5\u5177\u5143\u6570\u636e\u4e2d\u5305\u542b\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u8bed\u8a00\u4ee3\u7801\uff0c\u65b9\u4fbf\u7528\u6237\u53c2\u8003\uff1a</p> \u4ee3\u7801 (Code) \u8bed\u8a00 (Language) <code>en</code> English <code>ch_sim</code> Simplified Chinese <code>ch_tra</code> Traditional Chinese <code>ja</code> Japanese <code>de</code> German <code>fr</code> French <code>es</code> Spanish <code>hi</code> Hindi"},{"location":"librarys/tools/url_text_extractor/","title":"SAGE \u5de5\u5177\u6587\u6863: <code>URL_Text_Extractor_Tool</code>","text":"<p>\u5de5\u5177\u72b6\u6001: \u53ef\u7528</p> <p>\u7248\u672c: 1.0.0 \u63cf\u8ff0: \u4e00\u4e2a\u4ece\u7ed9\u5b9a\u7684 URL \u4e2d\u63d0\u53d6\u6240\u6709\u6587\u672c\u5185\u5bb9\u7684\u5de5\u5177\u3002</p>"},{"location":"librarys/tools/url_text_extractor/#1","title":"1. \u529f\u80fd\u6982\u8ff0","text":"<p><code>URL_Text_Extractor_Tool</code> \u662f\u4e00\u4e2a\u7f51\u9875\u5185\u5bb9\u6293\u53d6\u5de5\u5177\uff0c\u5176\u6838\u5fc3\u529f\u80fd\u662f\u8bbf\u95ee\u4e00\u4e2a\u7ed9\u5b9a\u7684\u7f51\u9875\u94fe\u63a5\uff0c\u5e76\u63d0\u53d6\u51fa\u5176\u4e2d\u6240\u6709\u53ef\u8bfb\u7684\u6587\u672c\u5185\u5bb9\u3002\u5b83\u5229\u7528 <code>requests</code> \u5e93\u83b7\u53d6\u7f51\u9875\u7684 HTML\uff0c\u518d\u901a\u8fc7 <code>BeautifulSoup</code> \u89e3\u6790\u5e76\u63d0\u53d6\u7eaf\u6587\u672c\uff0c\u4e3a\u540e\u7eed\u7684\u6587\u672c\u5206\u6790\u4efb\u52a1\u63d0\u4f9b\u539f\u59cb\u7d20\u6750\u3002</p> <p>\u7279\u6b8a\u5904\u7406: arXiv \u94fe\u63a5</p> <p>\u8be5\u5de5\u5177\u5185\u7f6e\u4e86\u4e00\u4e2a\u9488\u5bf9 arXiv \u7f51\u7ad9\u7684\u4f18\u5316\uff1a\u5b83\u4f1a\u81ea\u52a8\u5c06\u6307\u5411 PDF \u6587\u4ef6\u7684\u94fe\u63a5 (<code>/pdf/</code>) \u66ff\u6362\u4e3a\u6307\u5411\u6458\u8981\u9875\u7684\u94fe\u63a5 (<code>/abs/</code>)\uff0c\u56e0\u4e3a\u6458\u8981\u9875\u7684 HTML \u683c\u5f0f\u66f4\u6613\u4e8e\u63d0\u53d6\u6587\u672c\u3002</p>"},{"location":"librarys/tools/url_text_extractor/#2","title":"2. \u53c2\u6570\u8be6\u89e3","text":"<p>\u8be5\u5de5\u5177\u901a\u8fc7 <code>execute</code> \u65b9\u6cd5\u63a5\u6536\u53c2\u6570\u6765\u6267\u884c\u6587\u672c\u63d0\u53d6\u3002</p>"},{"location":"librarys/tools/url_text_extractor/#_1","title":"\u8f93\u5165\u53c2\u6570","text":"\u53c2\u6570\u540d (Parameter) \u7c7b\u578b (Type) \u63cf\u8ff0 <code>url</code> <code>str</code> \u5fc5\u9700\u3002\u9700\u8981\u63d0\u53d6\u6587\u672c\u7684\u7f51\u9875 URL\u3002"},{"location":"librarys/tools/url_text_extractor/#_2","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p><code>execute</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178\uff0c\u5305\u542b\u4ee5\u4e0b\u4e24\u4e2a\u952e\uff1a</p> \u952e (Key) \u7c7b\u578b (Type) \u63cf\u8ff0 <code>url</code> <code>str</code> \u539f\u59cb\u8f93\u5165\u7684 URL\u3002 <code>extracted_text</code> <code>str</code> \u4ece URL \u4e2d\u63d0\u53d6\u7684\u6587\u672c\u5185\u5bb9\u3002\u5982\u679c\u63d0\u53d6\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\uff08\u5982\u7f51\u7edc\u95ee\u9898\uff09\uff0c\u8fd9\u91cc\u4f1a\u5305\u542b\u76f8\u5e94\u7684\u9519\u8bef\u4fe1\u606f\u3002\u63d0\u53d6\u7684\u6587\u672c\u5185\u5bb9\u4e0a\u9650\u4e3a 10,000 \u4e2a\u5b57\u7b26\u3002"},{"location":"librarys/tools/url_text_extractor/#3","title":"3. \u4f7f\u7528\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u6f14\u793a\u5982\u4f55\u8c03\u7528 <code>URL_Text_Extractor_Tool</code> \u7684\u793a\u4f8b\u3002</p> \u63d0\u53d6\u666e\u901a\u7f51\u7ad9\u63d0\u53d6\u7ef4\u57fa\u767e\u79d1 <p>\u4ece\u4e00\u4e2a\u5e38\u89c4\u7f51\u7ad9\u63d0\u53d6\u6587\u672c\u3002</p> \u57fa\u7840\u7528\u6cd5\u793a\u4f8b<pre><code>from your_module import URL_Text_Extractor_Tool # \u8bf7\u66ff\u6362\u4e3a\u5b9e\u9645\u7684\u6a21\u5757\u8def\u5f84\n\ntool = URL_Text_Extractor_Tool()\nresults = tool.execute(url=\"[https://www.python.org/](https://www.python.org/)\")\n\nprint(results['extracted_text'][:500]) # \u6253\u5370\u524d 500 \u4e2a\u5b57\u7b26\n</code></pre> <p>\u4ece\u7ef4\u57fa\u767e\u79d1\u7684\u4e00\u4e2a\u8bcd\u6761\u9875\u9762\u63d0\u53d6\u6587\u672c\u3002</p> \u7ef4\u57fa\u767e\u79d1\u793a\u4f8b<pre><code>tool = URL_Text_Extractor_Tool()\nurl = \"[https://en.wikipedia.org/wiki/Python_(programming_language](https://en.wikipedia.org/wiki/Python_(programming_language))\"\nresults = tool.execute(url=url)\nprint(results)\n</code></pre>"},{"location":"librarys/tools/url_text_extractor/#4","title":"4. \u5185\u90e8\u5b9e\u73b0\u903b\u8f91","text":"\u6267\u884c\u6d41\u7a0b\u8be6\u89e3 (\u70b9\u51fb\u5c55\u5f00) <p><code>execute</code> \u65b9\u6cd5\u7684\u903b\u8f91\u975e\u5e38\u76f4\u63a5\uff0c\u4e3b\u8981\u4f9d\u8d56\u4e8e\u5176\u8f85\u52a9\u65b9\u6cd5 <code>extract_text_from_url</code>\uff1a</p> <ol> <li>URL \u9884\u5904\u7406: \u9996\u5148\uff0c\u68c0\u67e5 URL \u662f\u5426\u4e3a arXiv \u7684 PDF \u94fe\u63a5\uff0c\u5982\u679c\u662f\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u6458\u8981\u9875\u94fe\u63a5\u3002</li> <li>\u83b7\u53d6\u7f51\u9875\u5185\u5bb9: \u4f7f\u7528 <code>requests.get(url)</code> \u53d1\u9001 HTTP GET \u8bf7\u6c42\u6765\u4e0b\u8f7d\u7f51\u9875\u7684 HTML \u5185\u5bb9\u3002</li> <li>\u89e3\u6790\u4e0e\u63d0\u53d6:<ul> <li>\u4f7f\u7528 <code>BeautifulSoup</code> \u5c06\u83b7\u53d6\u5230\u7684 HTML \u5185\u5bb9\u8fdb\u884c\u89e3\u6790\u3002</li> <li>\u8c03\u7528 <code>soup.get_text(separator='\\n', strip=True)</code> \u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u63d0\u53d6\u51fa\u9875\u9762\u4e2d\u6240\u6709\u7684\u6587\u672c\u8282\u70b9\uff0c\u5e76\u7528\u6362\u884c\u7b26 <code>\\n</code> \u5206\u9694\uff0c\u540c\u65f6\u79fb\u9664\u591a\u4f59\u7684\u7a7a\u767d\u3002</li> </ul> </li> <li>\u5185\u5bb9\u622a\u65ad: \u4e3a\u4e86\u9632\u6b62\u6587\u672c\u5185\u5bb9\u8fc7\u957f\uff0c\u5de5\u5177\u4f1a\u5c06\u63d0\u53d6\u51fa\u7684\u6587\u672c\u622a\u65ad\uff0c\u53ea\u4fdd\u7559\u524d 10,000 \u4e2a\u5b57\u7b26\u3002</li> <li>\u5f02\u5e38\u5904\u7406: \u6574\u4e2a\u8fc7\u7a0b\u88ab\u5305\u88f9\u5728 <code>try...except</code> \u5757\u4e2d\u3002<ul> <li>\u5982\u679c\u53d1\u751f <code>requests.RequestException</code>\uff08\u5982\u7f51\u7edc\u8fde\u63a5\u5931\u8d25\u3001DNS \u9519\u8bef\u3001404 Not Found \u7b49\uff09\uff0c\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5177\u4f53\u7f51\u7edc\u9519\u8bef\u4fe1\u606f\u7684\u5b57\u7b26\u4e32\u3002</li> <li>\u5982\u679c\u53d1\u751f\u5176\u4ed6\u4efb\u4f55\u5f02\u5e38\uff08\u5982\u89e3\u6790\u9519\u8bef\uff09\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u901a\u7528\u7684\u9519\u8bef\u4fe1\u606f\u5b57\u7b26\u4e32\u3002</li> </ul> </li> <li>\u7ed3\u679c\u5c01\u88c5: <code>execute</code> \u65b9\u6cd5\u6700\u540e\u5c06\u63d0\u53d6\u51fa\u7684\u6587\u672c\uff08\u6216\u9519\u8bef\u4fe1\u606f\uff09\u4e0e\u539f\u59cb URL \u4e00\u8d77\u5c01\u88c5\u5230\u4e00\u4e2a\u5b57\u5178\u4e2d\u5e76\u8fd4\u56de\u3002</li> </ol>"},{"location":"librarys/tools/url_text_extractor/#5","title":"5. \u4f9d\u8d56\u9879\u4e0e\u8981\u6c42","text":"<ul> <li> <p>Python \u5e93:</p> <ul> <li> <code>requests</code>: \u7528\u4e8e\u53d1\u9001 HTTP \u8bf7\u6c42\u3002</li> <li> <code>beautifulsoup4</code>: \u7528\u4e8e\u89e3\u6790 HTML \u5185\u5bb9\u3002</li> <li> <code>os</code>: \u7528\u4e8e\u6587\u4ef6\u8def\u5f84\u64cd\u4f5c\uff08\u5728 <code>if __name__ == \"__main__\"</code> \u4e2d\u4f7f\u7528\uff09\u3002</li> </ul> </li> <li> <p>\u5b89\u88c5\u547d\u4ee4:     <pre><code>pip install requests beautifulsoup4\n</code></pre></p> </li> </ul>"},{"location":"librarys/tools/url_text_extractor/#6","title":"6. \u9650\u5236\u4e0e\u6ce8\u610f\u4e8b\u9879","text":"<p>\u91cd\u8981\u9650\u5236</p> <ul> <li>\u52a8\u6001\u5185\u5bb9: \u6b64\u5de5\u5177\u5bf9\u4e8e\u4f7f\u7528 JavaScript \u52a8\u6001\u52a0\u8f7d\u5185\u5bb9\u7684\u7f51\u7ad9\uff08\u5355\u9875\u5e94\u7528\uff0cSPA\uff09\u6548\u679c\u4e0d\u4f73\uff0c\u56e0\u4e3a\u5b83\u53ea\u80fd\u83b7\u53d6\u5230\u521d\u59cb\u52a0\u8f7d\u7684 HTML \u4e2d\u7684\u6587\u672c\u3002</li> <li>\u6587\u672c\u566a\u97f3: <code>get_text()</code> \u4f1a\u63d0\u53d6\u9875\u9762\u4e0a\u6240\u6709\u7684\u6587\u672c\uff0c\u5305\u62ec\u5bfc\u822a\u680f\u3001\u9875\u811a\u3001\u5e7f\u544a\u3001\u6837\u5f0f\u811a\u672c\u7b49\u201c\u566a\u97f3\u201d\uff0c\u53ef\u80fd\u4f1a\u5e72\u6270\u540e\u7eed\u5904\u7406\u3002</li> <li>\u5b57\u7b26\u9650\u5236: \u5b58\u5728 10,000 \u4e2a\u5b57\u7b26\u7684\u786c\u6027\u9650\u5236\uff0c\u5bf9\u4e8e\u975e\u5e38\u957f\u7684\u6587\u7ae0\uff0c\u5185\u5bb9\u4f1a\u88ab\u622a\u65ad\u3002</li> <li>\u8bbf\u95ee\u9650\u5236: \u67d0\u4e9b\u7f51\u7ad9\u53ef\u80fd\u6709\u53cd\u722c\u866b\u673a\u5236\uff0c\u53ef\u80fd\u4f1a\u963b\u6b62\u6b64\u5de5\u5177\u7684\u8bf7\u6c42\u3002</li> </ul>"},{"location":"middleware/middleware_instrument/","title":"Middleware \u7b80\u8ff0\u4e0e\u5206\u5c42\u8bbe\u8ba1","text":"<p>SAGE Middleware \u63d0\u4f9b\u4e00\u7ec4\u9762\u5411 AI \u63a8\u7406\u7684\u901a\u7528\u201c\u670d\u52a1\u4e0e\u8ba1\u7b97\u63a5\u53e3\u201d\uff0c\u7528\u4e8e\u652f\u6491\u4e0a\u5c42\u5e94\u7528\u5728\u6548\u679c\u3001\u6548\u7387\u4e0e\u6548\u80fd\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u3002</p>"},{"location":"middleware/middleware_instrument/#middleware_1","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u5355\u72ec\u7684 Middleware \u5c42\uff1f","text":"<ul> <li>\u8d44\u6e90\u4e0e\u786c\u4ef6\u53cb\u597d\uff1a\u805a\u7126\u5e95\u5c42\u786c\u4ef6\u52a0\u901f\u4e0e\u8d44\u6e90\u5229\u7528\uff0c\u628a\u590d\u6742\u5ea6\u4e0b\u6c89\u5230\u4e2d\u95f4\u4ef6\u3002</li> <li>\u670d\u52a1\u903b\u8f91\u7edf\u4e00\uff1a\u901a\u8fc7\u670d\u52a1\u5316\u62bd\u8c61\uff0c\u590d\u7528\u6210\u719f\u80fd\u529b\uff0c\u51cf\u5c11\u4e1a\u52a1\u91cd\u590d\u9020\u8f6e\u5b50\u3002</li> <li>\u7ec4\u5408\u4e0e\u7f16\u6392\uff1a\u5c06\u7ec4\u4ef6\u4ee5\u670d\u52a1\u65b9\u5f0f\u7f16\u6392\uff0c\u5f62\u6210\u4ece\u5b58\u50a8\u5230\u68c0\u7d22\u7684\u7aef\u5230\u7aef\u8def\u5f84\u3002</li> </ul>"},{"location":"middleware/middleware_instrument/#4","title":"\u5206\u5c42\u7ed3\u6784\uff084 \u5c42\uff09","text":"<p>1) API \u5c42\uff08\u63a5\u53e3\uff09</p> <pre><code>- \u62bd\u8c61\u670d\u52a1\u63a5\u53e3\uff1a\u7c7b\u4f3c map_function\uff0c\u7528\u6237\u901a\u8fc7\u7ee7\u627f\u57fa\u7c7b\u5b9e\u73b0\u81ea\u5b9a\u4e49\u670d\u52a1\u3002\n- \u8ba1\u7b97\u63a5\u53e3\uff1a\u4f8b\u5982 SAGE Flow\uff0c\u5bf9\u5916\u63d0\u4f9b\u53ef\u7f16\u7a0b\u7684\u8ba1\u7b97\u4e0e\u7f16\u6392\u63a5\u53e3\u3002\n</code></pre> <p>2) \u670d\u52a1\u5c42\uff08Service\uff09</p> <pre><code>- \u63d0\u4f9b\u9884\u5b9a\u4e49\u670d\u52a1\uff0c\u7f16\u6392\u7ec4\u4ef6\u5f62\u6210\u670d\u52a1\u903b\u8f91\uff0c\u5bf9\u4e0a\u66b4\u9732\u7edf\u4e00\u63a5\u53e3\u3002\n- \u793a\u4f8b\uff1a\u8bed\u6599\u67e5\u8be2\u3001\u957f\u671f\u8bb0\u5fc6\u5b58\u50a8\u3001\u5411\u91cf\u68c0\u7d22\u7b49\u3002\n</code></pre> <p>3) \u7ec4\u4ef6\u5c42\uff08Components\uff09</p> <pre><code>- \u88ab\u52a8\u7ec4\u4ef6\u4e0e\u5f15\u64ce\uff1a\u975e\u7ed3\u6784\u5316\u6570\u636e\u5e93\u3001\u5411\u91cf\u8ba1\u7b97\u5f15\u64ce\u3001Neuromem \u7b49\u3002\n- \u4f5c\u4e3a\u670d\u52a1\u7684\u5b9e\u73b0\u57fa\u77f3\uff0c\u7531\u670d\u52a1\u5c42\u8fdb\u884c\u7ec4\u5408\u4e0e\u7f16\u6392\u3002\n</code></pre> <p>4) \u786c\u4ef6\u5c42\uff08Hardware\uff09</p> <pre><code>- \u9762\u5411\u5404\u7ec4\u4ef6\u7684\u786c\u4ef6\u4eb2\u548c\u540e\u7aef\uff1aGPU \u52a0\u901f\u5411\u91cf\u76f8\u4f3c\u5ea6\u3001CXL \u5185\u5b58\u540e\u7aef\u7b49\u3002\n- \u7531\u7ec4\u4ef6/\u670d\u52a1\u9009\u62e9\u5e76\u7ed1\u5b9a\u6700\u4f18\u6267\u884c\u540e\u7aef\u3002\n</code></pre>"},{"location":"middleware/middleware_instrument/#sage-flow","title":"\u5173\u4e8e SAGE Flow \u7684\u4f4d\u7f6e\u4e0e\u7406\u89e3","text":"<ul> <li>\u5355\u4e2a Flow \u7b97\u5b50\uff1a\u5176\u5177\u4f53\u8ba1\u7b97\u6267\u884c\u5728\u201c\u786c\u4ef6\u5c42\u201d\uff1b\u4ece\u804c\u8d23\u770b\u53ef\u89c6\u4e3a\u201c\u7ec4\u4ef6\u5c42\u201d\u7684\u4e00\u4e2a function\u3002</li> <li>SAGE Flow \u672c\u8eab\uff1a\u5c5e\u4e8e\u201c\u8ba1\u7b97\u7ec4\u4ef6\u201d\uff0c\u65e2\u53ef\u4ee5\u88ab\u5b9a\u4e49\u4e3a\u670d\u52a1\uff08\u81ea\u5b9a\u4e49\u6216\u9884\u5b9a\u4e49\uff09\uff0c\u4e5f\u53ef\u4ee5\u5411\u4e0a\u76f4\u63a5\u63d0\u4f9b\u8ba1\u7b97\u63a5\u53e3\u3002</li> </ul>"},{"location":"middleware/overview-old/","title":"SAGE Middleware \u4e2d\u95f4\u4ef6\u670d\u52a1","text":"<p>SAGE Middleware \u662f\u4f4d\u4e8e SAGE Kernel \u548c\u5e94\u7528\u5c42\u4e4b\u95f4\u7684\u670d\u52a1\u5c42\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5f00\u7bb1\u5373\u7528\u7684\u4e2d\u95f4\u4ef6\u670d\u52a1\uff0c\u5305\u62ec\u5b58\u50a8\u3001\u6d88\u606f\u961f\u5217\u3001\u7f13\u5b58\u7b49\u57fa\u7840\u8bbe\u65bd\u670d\u52a1\u3002</p>"},{"location":"middleware/overview-old/#_1","title":"\ud83c\udfd7\ufe0f \u67b6\u6784\u5b9a\u4f4d","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Applications  \u2502  \u2190 RAG\u3001Agent\u3001Tools\u7b49\u9ad8\u7ea7\u5e94\u7528\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   Middleware    \u2502  \u2190 \u4e2d\u95f4\u4ef6\u670d\u52a1\u5c42 (\u5f53\u524d\u6587\u6863)\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524  \n\u2502   SAGE Kernel   \u2502  \u2190 \u6838\u5fc3\u6d41\u5904\u7406\u5f15\u64ce\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Middleware \u5c42\u4e3a\u5e94\u7528\u5c42\u63d0\u4f9b\u4e86\u6807\u51c6\u5316\u7684\u670d\u52a1\u63a5\u53e3\uff0c\u5c4f\u853d\u4e86\u5e95\u5c42\u5b9e\u73b0\u7684\u590d\u6742\u6027\uff0c\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u4e13\u6ce8\u4e8e\u4e1a\u52a1\u903b\u8f91\u7684\u5b9e\u73b0\u3002</p>"},{"location":"middleware/overview-old/#_2","title":"\ud83d\udccb \u6838\u5fc3\u670d\u52a1","text":""},{"location":"middleware/overview-old/#memory","title":"Memory \u670d\u52a1","text":"<p>\u63d0\u4f9b\u9ad8\u6027\u80fd\u7684\u5185\u5b58\u5b58\u50a8\u548c\u7f13\u5b58\u670d\u52a1\uff1a</p>"},{"location":"middleware/overview-old/#kv-service","title":"\u952e\u503c\u5b58\u50a8\u670d\u52a1 (KV Service)","text":"<p>\u5206\u5e03\u5f0f\u952e\u503c\u5b58\u50a8\uff0c\u652f\u6301\uff1a - \u9ad8\u5e76\u53d1\u8bfb\u5199 - \u6570\u636e\u6301\u4e45\u5316 - \u96c6\u7fa4\u90e8\u7f72 - \u81ea\u52a8\u6545\u969c\u8f6c\u79fb</p>"},{"location":"middleware/overview-old/#vdb-service","title":"\u5411\u91cf\u6570\u636e\u5e93\u670d\u52a1 (VDB Service)","text":"<p>\u4e13\u4e3aAI\u5e94\u7528\u4f18\u5316\u7684\u5411\u91cf\u5b58\u50a8\uff1a - \u9ad8\u7ef4\u5411\u91cf\u5b58\u50a8 - \u76f8\u4f3c\u6027\u641c\u7d22 - \u591a\u79cd\u8ddd\u79bb\u5ea6\u91cf - \u7d22\u5f15\u4f18\u5316</p>"},{"location":"middleware/overview-old/#_3","title":"\u6d88\u606f\u961f\u5217\u670d\u52a1","text":"<p>\u5f02\u6b65\u6d88\u606f\u5904\u7406\uff1a - \u53d1\u5e03/\u8ba2\u9605\u6a21\u5f0f - \u6d88\u606f\u6301\u4e45\u5316 - \u8d1f\u8f7d\u5747\u8861 - \u6b7b\u4fe1\u961f\u5217</p>"},{"location":"middleware/overview-old/#_4","title":"\ud83d\ude80 \u5feb\u901f\u5f00\u59cb","text":""},{"location":"middleware/overview-old/#_5","title":"\u57fa\u7840\u4f7f\u7528","text":"<pre><code>from sage.middleware.services import MemoryService, KVService\n\n# \u521d\u59cb\u5316\u5185\u5b58\u670d\u52a1\nmemory = MemoryService()\nmemory.set(\"key1\", \"value1\")\nvalue = memory.get(\"key1\")\n\n# \u521d\u59cb\u5316KV\u670d\u52a1\nkv = KVService()\nkv.put(\"user:123\", {\"name\": \"\u5f20\u4e09\", \"age\": 25})\nuser = kv.get(\"user:123\")\n</code></pre>"},{"location":"middleware/overview-old/#kernel","title":"\u4e0e Kernel \u96c6\u6210","text":"<pre><code>from sage.core.api import LocalEnvironment\nfrom sage.middleware.services import VDBService\n\n# \u5728\u6d41\u5904\u7406\u4e2d\u4f7f\u7528\u5411\u91cf\u6570\u636e\u5e93\nenv = LocalEnvironment(\"vdb_demo\")\nvdb = VDBService()\n\ndef store_embeddings(data):\n    # \u5b58\u50a8\u5411\u91cf\u5230VDB\n    vdb.insert(data[\"id\"], data[\"vector\"])\n    return data\n\ndef search_similar(query_vector):\n    # \u641c\u7d22\u76f8\u4f3c\u5411\u91cf\n    results = vdb.search(query_vector, top_k=10)\n    return results\n\nstream = env.create_stream(\"embeddings\")\nstream.map(store_embeddings).sink(print)\n</code></pre>"},{"location":"middleware/overview-old/#_6","title":"\ud83d\udd27 \u670d\u52a1\u914d\u7f6e","text":""},{"location":"middleware/overview-old/#_7","title":"\u7edf\u4e00\u914d\u7f6e\u63a5\u53e3","text":"<p>\u6240\u6709\u4e2d\u95f4\u4ef6\u670d\u52a1\u90fd\u652f\u6301\u7edf\u4e00\u7684\u914d\u7f6e\u63a5\u53e3\uff1a</p> <pre><code>from sage.middleware.config import ServiceConfig\n\nconfig = ServiceConfig({\n    \"memory\": {\n        \"max_size\": \"1GB\",\n        \"eviction_policy\": \"LRU\"\n    },\n    \"kv\": {\n        \"persistence\": True,\n        \"sync_interval\": 30\n    },\n    \"vdb\": {\n        \"dimension\": 768,\n        \"index_type\": \"HNSW\"\n    }\n})\n</code></pre>"},{"location":"middleware/overview-old/#_8","title":"\u73af\u5883\u53d8\u91cf\u914d\u7f6e","text":"<pre><code># Memory \u670d\u52a1\u914d\u7f6e\nSAGE_MEMORY_MAX_SIZE=2GB\nSAGE_MEMORY_EVICTION_POLICY=LFU\n\n# KV \u670d\u52a1\u914d\u7f6e  \nSAGE_KV_PERSISTENCE=true\nSAGE_KV_BACKUP_INTERVAL=60\n\n# VDB \u670d\u52a1\u914d\u7f6e\nSAGE_VDB_DIMENSION=1024\nSAGE_VDB_INDEX_TYPE=IVF\n</code></pre>"},{"location":"middleware/overview-old/#_9","title":"\ud83d\udcca \u76d1\u63a7\u548c\u8fd0\u7ef4","text":""},{"location":"middleware/overview-old/#_10","title":"\u5065\u5eb7\u68c0\u67e5","text":"<p>\u6bcf\u4e2a\u670d\u52a1\u90fd\u63d0\u4f9b\u5065\u5eb7\u68c0\u67e5\u63a5\u53e3\uff1a</p> <pre><code>from sage.middleware.health import HealthChecker\n\nchecker = HealthChecker()\nstatus = checker.check_all_services()\n\nprint(f\"Memory Service: {status['memory']}\")\nprint(f\"KV Service: {status['kv']}\")  \nprint(f\"VDB Service: {status['vdb']}\")\n</code></pre>"},{"location":"middleware/overview-old/#_11","title":"\u6027\u80fd\u6307\u6807","text":"<pre><code>from sage.middleware.metrics import MetricsCollector\n\nmetrics = MetricsCollector()\nstats = metrics.get_service_stats()\n\nprint(f\"Memory Usage: {stats['memory']['usage']}\")\nprint(f\"KV Operations/sec: {stats['kv']['ops_per_sec']}\")\nprint(f\"VDB Query Latency: {stats['vdb']['avg_latency']}\")\n</code></pre>"},{"location":"middleware/overview-old/#_12","title":"\ud83d\udd17 \u96c6\u6210\u793a\u4f8b","text":""},{"location":"middleware/overview-old/#rag","title":"RAG \u5e94\u7528\u96c6\u6210","text":"<pre><code>from sage.middleware.services import VDBService, KVService\nfrom sage.applications.rag import RAGPipeline\n\n# \u521d\u59cb\u5316\u670d\u52a1\nvdb = VDBService()  # \u5b58\u50a8\u6587\u6863\u5411\u91cf\nkv = KVService()    # \u7f13\u5b58\u67e5\u8be2\u7ed3\u679c\n\n# \u521b\u5efa RAG \u7ba1\u9053\nrag = RAGPipeline(\n    vector_store=vdb,\n    cache_store=kv\n)\n\n# \u5904\u7406\u67e5\u8be2\nanswer = rag.query(\"\u4ec0\u4e48\u662fSAGE\u6846\u67b6\uff1f\")\n</code></pre>"},{"location":"middleware/overview-old/#_13","title":"\u591a\u79df\u6237\u652f\u6301","text":"<pre><code>from sage.middleware.tenant import TenantManager\n\n# \u521b\u5efa\u79df\u6237\u7ba1\u7406\u5668\ntenant_mgr = TenantManager()\n\n# \u4e3a\u4e0d\u540c\u79df\u6237\u521b\u5efa\u9694\u79bb\u7684\u670d\u52a1\u5b9e\u4f8b\ntenant_a_vdb = tenant_mgr.get_service(\"tenant_a\", \"vdb\")\ntenant_b_vdb = tenant_mgr.get_service(\"tenant_b\", \"vdb\")\n\n# \u6570\u636e\u9694\u79bb\uff0c\u4e92\u4e0d\u5e72\u6270\ntenant_a_vdb.insert(\"doc1\", vector_a)\ntenant_b_vdb.insert(\"doc1\", vector_b)\n</code></pre>"},{"location":"middleware/overview-old/#_14","title":"\ud83d\udd12 \u5b89\u5168\u7279\u6027","text":""},{"location":"middleware/overview-old/#_15","title":"\u8bbf\u95ee\u63a7\u5236","text":"<pre><code>from sage.middleware.auth import ServiceAuth\n\nauth = ServiceAuth()\n\n# \u8bbe\u7f6e\u670d\u52a1\u8bbf\u95ee\u6743\u9650\nauth.grant_permission(\"user123\", \"memory\", [\"read\", \"write\"])\nauth.grant_permission(\"user456\", \"vdb\", [\"read\"])\n\n# \u9a8c\u8bc1\u6743\u9650\nif auth.check_permission(\"user123\", \"memory\", \"write\"):\n    memory.set(\"key\", \"value\")\n</code></pre>"},{"location":"middleware/overview-old/#_16","title":"\u6570\u636e\u52a0\u5bc6","text":"<pre><code>from sage.middleware.encryption import DataEncryption\n\nencryption = DataEncryption()\n\n# \u5b58\u50a8\u65f6\u81ea\u52a8\u52a0\u5bc6\nkv.put(\"sensitive_data\", encryption.encrypt(data))\n\n# \u8bfb\u53d6\u65f6\u81ea\u52a8\u89e3\u5bc6  \ndecrypted_data = encryption.decrypt(kv.get(\"sensitive_data\"))\n</code></pre>"},{"location":"middleware/overview-old/#_17","title":"\ud83d\ude80 \u90e8\u7f72\u6a21\u5f0f","text":""},{"location":"middleware/overview-old/#_18","title":"\u5355\u673a\u90e8\u7f72","text":"<pre><code># docker-compose.yml\nversion: '3.8'\nservices:\n  sage-middleware:\n    image: sage/middleware:latest\n    environment:\n      - SAGE_MODE=standalone\n    ports:\n      - \"8080:8080\"\n</code></pre>"},{"location":"middleware/overview-old/#_19","title":"\u96c6\u7fa4\u90e8\u7f72","text":"<pre><code># kubernetes deployment\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sage-middleware\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: sage-middleware\n  template:\n    spec:\n      containers:\n      - name: middleware\n        image: sage/middleware:latest\n        env:\n        - name: SAGE_MODE\n          value: cluster\n        - name: SAGE_CLUSTER_NODES\n          value: \"node1:8080,node2:8080,node3:8080\"\n</code></pre> <p>SAGE Middleware \u901a\u8fc7\u63d0\u4f9b\u6807\u51c6\u5316\u3001\u9ad8\u6027\u80fd\u7684\u57fa\u7840\u670d\u52a1\uff0c\u5927\u5927\u7b80\u5316\u4e86\u590d\u6742\u5e94\u7528\u7684\u5f00\u53d1\u548c\u90e8\u7f72\u3002\u5b83\u662f\u8fde\u63a5\u5e95\u5c42 Kernel \u548c\u4e0a\u5c42\u5e94\u7528\u7684\u91cd\u8981\u6865\u6881\u3002</p>"},{"location":"middleware/overview/","title":"SAGE Middleware \u6982\u89c8","text":"<p>SAGE Middleware \u662f\u4e00\u4e2a\u6a21\u5757\u5316\u3001\u9ad8\u6027\u80fd\u7684\u4e2d\u95f4\u4ef6\u5c42\uff0c\u4e3aSAGE\u63a8\u7406\u6846\u67b6\u63d0\u4f9b\u6838\u5fc3\u57fa\u7840\u8bbe\u65bd\u652f\u6301\u3002\u5b83\u91c7\u7528\u5206\u5c42\u67b6\u6784\u8bbe\u8ba1\uff0c\u63d0\u4f9b\u5411\u91cf\u589e\u5f3a\u3001\u6d41\u6570\u636e\u5904\u7406\u3001\u795e\u7ecf\u8bb0\u5fc6\u7ba1\u7406\u4e0e\u590d\u6742\u6570\u636e\u5904\u7406\u80fd\u529b\uff0c\u517c\u987e\u6548\u679c\u3001\u6548\u7387\u548c\u6548\u80fd\u3002</p>"},{"location":"middleware/overview/#_1","title":"\u67b6\u6784\u6982\u8ff0","text":"<pre><code>flowchart TB\n  App[\"\u5e94\u7528\u5c42 (App)\"]\n  subgraph MW[\"SAGE Middleware\"]\n    direction TB\n    subgraph API[API \u5c42]\n      SvcAPI[Service \u8c03\u7528\u63a5\u53e3]\n      ComputeAPI[\u8ba1\u7b97\u63a5\u53e3]\n    end\n    subgraph Services[\u670d\u52a1\u5c42]\n      Memory[Memory Service]\n      SageDBSvc[\"SAGE-DB Service\"]\n      Other[\u5176\u4ed6\u670d\u52a1]\n    end\n    subgraph Components[\u7ec4\u4ef6\u5c42]\n      SageDB[\"SAGE-DB\"]\n      NeuroMem[NeuroMem]\n      Vector[\"SAGE-Flow\"]\n    end\n    subgraph HW[\u786c\u4ef6\u5c42]\n      GPU[GPU \u52a0\u901f]\n      CXL[CXL \u5185\u5b58]\n      Affinity[\u786c\u4ef6\u4eb2\u548c\u8ba1\u7b97]\n    end\n  end\n  Kernel[\"\u5185\u6838\u5c42 (Kernel)\"]\n  App --&gt; MW --&gt; Kernel</code></pre>"},{"location":"middleware/overview/#_2","title":"\u6838\u5fc3\u7279\u6027","text":""},{"location":"middleware/overview/#_3","title":"\ud83d\udd0c \u6a21\u5757\u5316\u8bbe\u8ba1","text":"<ul> <li>\u670d\u52a1\u89e3\u8026\uff1a\u6bcf\u4e2a\u670d\u52a1\u90fd\u662f\u72ec\u7acb\u7684\u5fae\u670d\u52a1\uff0c\u57fa\u4e8e BaseService \u5b9e\u73b0</li> <li>\u7075\u6d3b\u7ec4\u5408\uff1a\u670d\u52a1\u53ef\u4ee5\u72ec\u7acb\u90e8\u7f72\u3001\u6d4b\u8bd5\u548c\u6269\u5c55</li> <li>\u7edf\u4e00\u63a5\u53e3\uff1a\u901a\u8fc7\u6807\u51c6\u5316 API \u63a5\u53e3\u8fdb\u884c\u670d\u52a1\u4ea4\u4e92\uff08call_service/call_service_async\uff09</li> </ul>"},{"location":"middleware/overview/#_4","title":"\u26a1 \u9ad8\u6027\u80fd\u5904\u7406","text":"<ul> <li>\u5f02\u6b65\u901a\u4fe1\uff1a\u57fa\u4e8e SAGE \u5185\u6838\u7684\u9ad8\u6027\u80fd\u961f\u5217\u673a\u5236</li> <li>\u5e76\u53d1\u5904\u7406\uff1a\u652f\u6301\u591a\u7ebf\u7a0b\u548c\u5206\u5e03\u5f0f\u5904\u7406</li> <li>\u8d44\u6e90\u4f18\u5316\uff1a\u667a\u80fd\u8d44\u6e90\u5206\u914d\u548c\u786c\u4ef6\u52a0\u901f</li> </ul>"},{"location":"middleware/overview/#_5","title":"\ud83e\udde0 \u667a\u80fd\u8bb0\u5fc6","text":"<ul> <li>\u591a\u6a21\u6001\u5b58\u50a8\uff1a\u652f\u6301\u952e\u503c\u3001\u5411\u91cf\u3001\u56fe\u7b49\u591a\u79cd\u6570\u636e\u7ed3\u6784</li> <li>\u8bb0\u5fc6\u7f16\u6392\uff1a\u9ad8\u7ea7\u8bb0\u5fc6\u7ba1\u7406\u548c\u667a\u80fd\u68c0\u7d22</li> <li>\u957f\u671f\u8bb0\u5fc6\uff1a\u6301\u4e45\u5316\u795e\u7ecf\u8bb0\u5fc6\u5b58\u50a8</li> </ul>"},{"location":"middleware/overview/#_6","title":"\ud83c\udf10 \u5206\u5e03\u5f0f\u652f\u6301","text":"<ul> <li>Ray \u96c6\u6210\uff1a\u539f\u751f\u652f\u6301 Ray \u5206\u5e03\u5f0f\u8ba1\u7b97</li> <li>\u670d\u52a1\u53d1\u73b0\uff1a\u81ea\u52a8\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0</li> <li>\u8d1f\u8f7d\u5747\u8861\uff1a\u667a\u80fd\u8d1f\u8f7d\u5206\u914d\u548c\u6545\u969c\u6062\u590d</li> </ul>"},{"location":"middleware/overview/#_7","title":"\u8bbe\u8ba1\u7406\u5ff5","text":"<p>1) \u62bd\u8c61\u4e0e\u5b9e\u73b0\u5206\u79bb - \u62bd\u8c61\u670d\u52a1\u63a5\u53e3\uff1a\u901a\u8fc7 BaseFunction/BaseService \u7684 call_service \u8bbf\u95ee\u670d\u52a1 - \u8ba1\u7b97\u63a5\u53e3\uff1a\u5982 SAGE Flow \u63d0\u4f9b\u53ef\u7f16\u7a0b\u63a5\u53e3</p> <p>2) \u670d\u52a1\u7f16\u6392\u6a21\u5f0f - \u57fa\u7840\u670d\u52a1\uff1aKV\u3001VDB\u3001Graph \u7b49\u63d0\u4f9b\u5e95\u5c42\u5b58\u50a8\u80fd\u529b - \u7f16\u6392\u670d\u52a1\uff1aMemory Service \u7b49\u534f\u8c03\u57fa\u7840\u670d\u52a1\u63d0\u4f9b\u9ad8\u7ea7\u529f\u80fd</p> <p>3) \u786c\u4ef6\u4eb2\u548c\u4f18\u5316 - GPU \u52a0\u901f\uff1a\u5411\u91cf\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u4f18\u5316 - CXL \u5185\u5b58\uff1a\u5927\u5bb9\u91cf\u5185\u5b58\u540e\u7aef\u652f\u6301 - \u4e13\u7528\u540e\u7aef\uff1a\u4e3a\u4e0d\u540c\u786c\u4ef6\u63d0\u4f9b\u6700\u4f18\u8ba1\u7b97\u540e\u7aef</p>"},{"location":"middleware/overview/#_8","title":"\u6838\u5fc3\u7ec4\u4ef6","text":"<ul> <li>API \u5c42\uff1aService \u8c03\u7528\u63a5\u53e3\uff08BaseFunction/BaseService \u7684 call_service/call_service_async\uff09</li> <li>\u670d\u52a1\u5c42\uff1aMemory Service\u3001SAGE-DB Service \u7b49</li> <li>\u7ec4\u4ef6\u5c42\uff1aSAGE-DB\u3001NeuroMem \u7b49</li> <li>\u786c\u4ef6\u5c42\uff1aGPU \u52a0\u901f\u3001CXL \u5185\u5b58</li> </ul>"},{"location":"middleware/overview/#_9","title":"\u4f7f\u7528\u573a\u666f","text":"<ul> <li>\u667a\u80fd\u68c0\u7d22\u7cfb\u7edf</li> <li>\u5927\u89c4\u6a21\u6570\u636e\u5b58\u50a8</li> <li>\u957f\u671f\u8bb0\u5fc6\u7ba1\u7406</li> </ul>"},{"location":"middleware/overview/#_10","title":"\u5f00\u53d1\u6307\u5357\uff08\u7b80\u8981\uff09","text":"<ul> <li>\u670d\u52a1\u6ce8\u518c\uff08\u793a\u4f8b\uff0c\u8be6\u89c1\u201c\u670d\u52a1\u5feb\u901f\u5165\u95e8\u201d\uff09</li> <li>\u5728 Function \u4e2d\u8c03\u7528\u670d\u52a1\uff1aself.call_service[\"service_name\"].method(...)</li> </ul>"},{"location":"middleware/api/service_api/","title":"Service API","text":"<p>\u4e00\u53e5\u8bdd\u6982\u8ff0\uff1a\u7edf\u4e00\u7684\u670d\u52a1\u8c03\u7528\u5165\u53e3\uff0c\u652f\u6301\u540c\u6b65\u4e0e\u5f02\u6b65\uff0c\u5728 Function \u4e0e Service \u4e2d\u5747\u53ef\u4f7f\u7528\u3002\u670d\u52a1\u901a\u8fc7 Environment \u6ce8\u518c\u540e\uff0c\u4ee5\u540d\u79f0\u66b4\u9732\u7ed9\u8c03\u7528\u4fa7\uff1b\u5728 BaseFunction/BaseService \u4e2d\u901a\u8fc7 call_service/call_service_async \u8bbf\u95ee\u3002</p> <p>\u5148\u51b3\u6761\u4ef6\uff08Prerequisites\uff09</p> <ul> <li>\u4e86\u89e3 SAGE \u7684 Function/Operator \u7f16\u7a0b\u6a21\u578b</li> <li>\u5df2\u5728 Environment \u4e2d\u6ce8\u518c\u5bf9\u5e94\u670d\u52a1\uff08\u5982 memory_service\u3001kv_service\u3001vdb_service\u3001graph_service \u7b49\uff09</li> </ul>"},{"location":"middleware/api/service_api/#_1","title":"\u4e00\u3001\u5feb\u901f\u5f00\u59cb","text":"Python \u5728 Function \u4e2d\u8c03\u7528\u670d\u52a1\uff08\u4e0e\u4ed3\u5e93\u5b9e\u73b0\u4e00\u81f4\uff09<pre><code>from sage.core.api.function.base_function import BaseFunction\n\nclass MyFn(BaseFunction):\n    def execute(self, data):\n        # \u540c\u6b65\u8c03\u7528 KV\n        self.call_service[\"kv_service\"].put(\"key1\", data)\n\n        # \u5f02\u6b65\u8c03\u7528 KV\uff08future\uff09\n        fut = self.call_service_async[\"kv_service\"].get(\"key1\")\n        value = fut.result(timeout=5)\n\n        # \u540c\u6b65\u8c03\u7528 Memory Service\uff08Neuromem \u63d0\u4f9b\u7684\u670d\u52a1\uff09\n        self.call_service[\"memory_service\"].store_memory(\n            content=str(value),\n            vector=data.get(\"vector\"),\n            session_id=data.get(\"session_id\", \"default\"),\n            memory_type=\"conversation\",\n            metadata={\"source\": \"demo\"}\n        )\n        return {\"ok\": True}\n</code></pre>"},{"location":"middleware/api/service_api/#_2","title":"\u4e8c\u3001\u8c03\u7528\u5165\u53e3\uff08\u901f\u67e5\uff09","text":"<pre><code>class BaseFunction:\n    @property\n    def call_service(self): ...\n    @property\n    def call_service_async(self): ...\n    def execute(self, data): ...\n\nclass BaseService:\n    @property\n    def call_service(self): ...\n    @property\n    def call_service_async(self): ...\n</code></pre> <ul> <li>\u540c\u6b65\uff1aself.call_service[\"service_name\"].method(args...)</li> <li>\u5f02\u6b65\uff1aself.call_service_async[\"service_name\"].method(args...) -&gt; Future\uff08\u7528 .result(timeout=\u2026) \u83b7\u53d6\u7ed3\u679c\uff09</li> <li>\u82e5\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u672a\u6ce8\u5165\uff0c\u8bbf\u95ee\u4e0a\u8ff0\u5c5e\u6027\u4f1a\u629b\u51fa RuntimeError</li> </ul>"},{"location":"middleware/api/service_api/#_3","title":"\u4e09\u3001\u670d\u52a1\u6e05\u5355\uff08\u57fa\u4e8e\u5f53\u524d\u4ed3\u5e93\uff0c\u6309\u6a21\u5757\u5212\u5206\uff09","text":"<p>\u8bf4\u660e\uff1a</p> <ul> <li>\u4e0b\u5217\u670d\u52a1\u540d\u79f0\u4e3a\u5e38\u7528\u6ce8\u518c\u540d\uff1b\u9700\u4e0e\u5b9e\u9645\u6ce8\u518c\u65f6\u7684\u540d\u79f0\u4e00\u81f4\u3002</li> <li>\u5177\u4f53\u65b9\u6cd5\u4ee5\u4ed3\u5e93\u5b9e\u73b0\u4e3a\u51c6\uff1b\u793a\u4f8b\u4ec5\u5c55\u793a\u4ed3\u5e93\u4e2d\u51fa\u73b0\u7684\u5178\u578b\u7528\u6cd5\uff0c\u907f\u514d\u865a\u6784\u63a5\u53e3\u3002</li> <li>\u5982\u9700\u6d4f\u89c8\u5b8c\u6574\u4ee3\u7801\uff0c\u8bf7\u53c2\u8003\u4ed3\u5e93\u76ee\u5f55\uff1apackages/sage-middleware/src/sage/middleware/services</li> </ul>"},{"location":"middleware/api/service_api/#1-memory-service-neuromem","title":"1) Memory Service\uff08\u7531 Neuromem \u63d0\u4f9b\u7684\u957f\u671f\u8bb0\u5fc6\u670d\u52a1\uff09","text":"<ul> <li>\u5178\u578b\u6ce8\u518c\u540d\uff1amemory_service</li> <li>\u7ec4\u4ef6\u5173\u7cfb\uff1aMemory Service = Neuromem \u7684\u670d\u52a1\u5316\u5c01\u88c5\uff0c\u5bf9\u63a5\u5e95\u5c42 VDB/KV/Graph \u7b49\u540e\u7aef</li> <li>\u6a21\u5757\u4f4d\u7f6e\uff08\u53c2\u8003\uff09\uff1aservices/memory/</li> <li> <p>\u5e38\u89c1\u80fd\u529b</p> <ul> <li>\u96c6\u5408/\u7a7a\u95f4\u7ba1\u7406\uff08\u5982\u521b\u5efa\u96c6\u5408\uff09</li> <li>\u5199\u5165\u957f\u671f\u8bb0\u5fc6\uff08\u5185\u5bb9\u3001\u5411\u91cf\u3001\u4f1a\u8bdd\u4e0a\u4e0b\u6587\u4e0e\u5143\u6570\u636e\uff09</li> <li>\u76f8\u4f3c\u68c0\u7d22/\u8bed\u4e49\u68c0\u7d22\uff08\u57fa\u4e8e\u5411\u91cf/\u8fc7\u6ee4\u6761\u4ef6\uff09</li> </ul> </li> <li> <p>\u4ed3\u5e93\u4e2d\u793a\u4f8b\u7528\u6cd5\uff08\u8282\u9009\uff09</p> </li> <li> <p>\u5728\u73af\u5883\u4e2d\u6ce8\u518c\u540e\u4f7f\u7528\uff1a     <pre><code># \u53c2\u8003\u4ed3\u5e93 README \u7528\u6cd5\ndef memory_service_factory():\n    service = MemoryService()\n    # \u53ef\u9009\u521d\u59cb\u5316\u96c6\u5408\uff08\u5728 README \u4e2d\u51fa\u73b0\u8fc7\uff09\n    service.create_collection(\n        name=\"qa_collection\",\n        backend_type=\"VDB\",\n        description=\"QA pipeline memory\"\n    )\n    return service\n\nenv.register_service(\"memory_service\", memory_service_factory)\n</code></pre></p> </li> <li>\u5728 Function \u4e2d\u8bfb\u5199\uff1a     <pre><code># \u5199\u5165\nmemory_id = self.call_service[\"memory_service\"].store_memory(\n    content=content,\n    vector=vector,\n    session_id=session_id,\n    memory_type=\"conversation\",\n    metadata={\"source\": \"user_input\"}\n)\n\n# \u68c0\u7d22\uff08\u4ed3\u5e93\u793a\u4f8b\u4e2d\u51fa\u73b0\u8fc7 search_memories \u7528\u6cd5\uff09\nresults = self.call_service[\"memory_service\"].search_memories(\n    query_vector=vector,\n    session_id=session_id,\n    limit=5  # \u547d\u540d\u53ef\u80fd\u4e3a limit/top_k\uff0c\u6309\u5b9e\u9645\u5b9e\u73b0\u4e3a\u51c6\n)\n</code></pre></li> </ul>"},{"location":"middleware/api/service_api/#2-kv-service","title":"2) KV Service\uff08\u952e\u503c\u5b58\u50a8\u670d\u52a1\uff09","text":"<ul> <li>\u5178\u578b\u6ce8\u518c\u540d\uff1akv_service</li> <li>\u6a21\u5757\u4f4d\u7f6e\uff08\u53c2\u8003\uff09\uff1aservices/kv/kv_service.py</li> <li> <p>\u5e38\u89c1\u80fd\u529b</p> <ul> <li>\u952e\u503c\u5199\u5165\u4e0e\u8bfb\u53d6</li> <li>\u4f5c\u4e3a Memory \u7f16\u6392\u4e2d\u7684\u5143\u6570\u636e/\u7f13\u5b58\u652f\u6491</li> </ul> </li> <li> <p>\u4ed3\u5e93\u4e2d\u793a\u4f8b\u7528\u6cd5\uff08\u8282\u9009\uff09   <pre><code># \u540c\u6b65\u5199\u5165\nself.call_service[\"kv_service\"].put(\"key1\", data)\n\n# \u5f02\u6b65\u8bfb\u53d6\nfut = self.call_service_async[\"kv_service\"].get(\"key1\")\nvalue = fut.result(timeout=5)\n</code></pre></p> </li> </ul>"},{"location":"middleware/api/service_api/#3-vdb-service","title":"3) VDB Service\uff08\u5411\u91cf\u6570\u636e\u5e93\u670d\u52a1\uff09","text":"<ul> <li>\u5178\u578b\u6ce8\u518c\u540d\uff1avdb_service</li> <li>\u6a21\u5757\u4f4d\u7f6e\uff08\u53c2\u8003\uff09\uff1aservices/vdb/</li> <li> <p>\u5e38\u89c1\u80fd\u529b</p> <ul> <li>\u5411\u91cf\u96c6\u5408\u7ba1\u7406</li> <li>\u5411\u91cf\u5199\u5165/\u66f4\u65b0</li> <li>\u76f8\u4f3c\u5ea6\u68c0\u7d22\u3001\u8fc7\u6ee4\u68c0\u7d22</li> </ul> </li> <li> <p>\u4f7f\u7528\u8bf4\u660e</p> <ul> <li>\u8be5\u670d\u52a1\u901a\u5e38\u7531 Memory Service \u95f4\u63a5\u4f7f\u7528\uff1b\u7528\u6237\u4e5f\u53ef\u76f4\u63a5\u6ce8\u518c\u540e\u5728 Function \u4e2d\u8c03\u7528</li> <li>\u5177\u4f53\u65b9\u6cd5\u540d\u79f0\u8bf7\u53c2\u8003\u6a21\u5757\u4ee3\u7801\u4e0e examples/services/vdb/examples/vdb_demo.py</li> </ul> </li> </ul>"},{"location":"middleware/api/service_api/#4-graph-service","title":"4) Graph Service\uff08\u56fe\u5b58\u50a8/\u5173\u7cfb\u7d22\u5f15\u670d\u52a1\uff09","text":"<ul> <li>\u5178\u578b\u6ce8\u518c\u540d\uff1agraph_service</li> <li>\u6a21\u5757\u4f4d\u7f6e\uff08\u53c2\u8003\uff09\uff1aservices/graph/</li> <li> <p>\u5e38\u89c1\u80fd\u529b</p> <ul> <li>\u8282\u70b9/\u8fb9\u7684\u5199\u5165\u4e0e\u67e5\u8be2</li> <li>\u5173\u7cfb/\u90bb\u57df\u68c0\u7d22\uff0c\u8f85\u52a9\u957f\u671f\u8bb0\u5fc6\u7684\u4e0a\u4e0b\u6587\u7ec4\u7ec7</li> </ul> </li> <li> <p>\u4f7f\u7528\u8bf4\u660e</p> <ul> <li>\u8be5\u670d\u52a1\u901a\u5e38\u4f5c\u4e3a Memory/Neuromem \u7684\u5173\u7cfb\u540e\u7aef\uff1b\u5177\u4f53\u63a5\u53e3\u4ee5\u5b9e\u73b0\u4e3a\u51c6</li> <li>\u53ef\u53c2\u8003 examples/services/graph/examples/graph_demo.py</li> </ul> </li> </ul>"},{"location":"middleware/api/service_api/#_4","title":"\u56db\u3001\u670d\u52a1\u6ce8\u518c\u4e0e\u8c03\u7528\u6a21\u5f0f","text":"<ul> <li> <p>\u6ce8\u518c\u670d\u52a1\uff08\u5de5\u5382\u51fd\u6570\u8fd4\u56de\u670d\u52a1\u5b9e\u4f8b\uff09   <pre><code>def some_service_factory():\n    # \u8fd4\u56de\u5177\u4f53\u670d\u52a1\u5b9e\u4f8b\n    return SomeService(...)\n\nenv.register_service(\"some_service\", some_service_factory)\n</code></pre></p> </li> <li> <p>\u5728 Function \u4e2d\u8c03\u7528   <pre><code>class MyFn(BaseFunction):\n    def execute(self, data):\n        out = self.call_service[\"some_service\"].some_method(arg1, arg2)\n        fut = self.call_service_async[\"some_service\"].other_method(...)\n        result = fut.result(timeout=5)\n        return {\"out\": out, \"async\": result}\n</code></pre></p> </li> </ul>"},{"location":"middleware/api/service_api/#_5","title":"\u4e94\u3001\u5e38\u89c1\u9519\u8bef\u4e0e\u6392\u67e5","text":"<ul> <li>\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u672a\u6ce8\u5165\uff1a\u786e\u4fdd\u901a\u8fc7 Environment \u6784\u5efa DAG \u5e76\u4ee5\u6807\u51c6\u65b9\u5f0f\u8fd0\u884c</li> <li>\u670d\u52a1\u672a\u6ce8\u518c\u6216\u540d\u79f0\u4e0d\u5339\u914d\uff1a\u68c0\u67e5 env.register_service \u7684\u540d\u79f0\u4e0e\u8c03\u7528\u4fa7\u4e00\u81f4</li> <li>\u4e0b\u6e38\u670d\u52a1\u5f02\u5e38/\u8d85\u65f6\uff1a\u5bf9\u5f02\u6b65\u8c03\u7528\u4f7f\u7528\u5408\u7406\u7684 timeout\uff0c\u5e76\u5728\u8c03\u7528\u4fa7\u6355\u83b7\u5f02\u5e38</li> <li>\u6570\u636e\u5951\u7ea6\u4e0d\u4e00\u81f4\uff1a\u9075\u5faa\u5404\u670d\u52a1\u793a\u4f8b\u4e2d\u7684\u5b57\u6bb5\u7ea6\u5b9a\uff0c\u5fc5\u8981\u65f6\u5728\u8c03\u7528\u524d\u505a\u8f93\u5165\u6821\u9a8c</li> </ul>"},{"location":"middleware/api/service_api/#_6","title":"\u53c2\u8003","text":"<ul> <li>\u4ee3\u7801\u603b\u89c8\uff08\u670d\u52a1\u76ee\u5f55\uff09\uff1ahttps://github.com/ZeroJustMe/SAGE/tree/main/packages/sage-middleware/src/sage/middleware/services</li> <li>\u793a\u4f8b\u5bfc\u822a\uff08\u542b KV/VDB/Memory/Graph \u793a\u4f8b\uff09\uff1apackages/sage-middleware/src/sage/middleware/examples</li> </ul> <p>\u6ce8\uff1a\u4ee5\u4e0a\u6e05\u5355\u57fa\u4e8e\u5f53\u524d\u53ef\u89c1\u7684\u4ed3\u5e93\u7ed3\u6784\u4e0e\u793a\u4f8b\u6587\u4ef6\uff0c\u53ef\u80fd\u672a\u5b8c\u5168\u8986\u76d6\u6240\u6709\u5185\u90e8/\u5b9e\u9a8c\u6027\u670d\u52a1\u6a21\u5757\uff1b\u8bf7\u4ee5\u670d\u52a1\u76ee\u5f55\u4e0e\u5bf9\u5e94\u793a\u4f8b\u4e3a\u51c6\u3002</p>"},{"location":"middleware/components/neuromem/","title":"Neuromem\uff08\u957f\u671f\u8bb0\u5fc6\u7ec4\u4ef6\uff09","text":"<p>Neuromem \u662f\u957f\u671f\u8bb0\u5fc6\uff08Long-term Memory\uff09\u7684\u7ec4\u4ef6\u5b9e\u73b0\uff0cMemory Service \u5373\u7531 Neuromem \u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u5c01\u88c5\u3002\u4e1a\u52a1\u4fa7\u7edf\u4e00\u901a\u8fc7 Service API \u8c03\u7528 memory_service \u5b8c\u6210\u5199\u5165\u4e0e\u68c0\u7d22\uff0c\u65e0\u9700\u76f4\u63a5\u4f9d\u8d56 Neuromem \u7684\u5185\u90e8\u5b9e\u73b0\u3002</p> <ul> <li>\u4ee3\u7801\u4f4d\u7f6e\uff08\u7ec4\u4ef6/\u670d\u52a1\uff09\uff1apackages/sage-middleware/src/sage/middleware/services/memory/ \u4e0e\u5176\u5b50\u6a21\u5757</li> <li>\u4e0e\u670d\u52a1\u7684\u5173\u7cfb\uff1aMemory Service = Neuromem \u7684\u670d\u52a1\u5316\u5c01\u88c5\uff1bFunction \u4e2d\u901a\u8fc7 self.call_service[\"memory_service\"] \u8c03\u7528</li> </ul> <p>\u672c\u9875\u5305\u542b\uff1a</p> <ul> <li>\u670d\u52a1\u793a\u4f8b\uff08\u5982\u4f55\u5728 Function \u4e2d\u8c03\u7528\u7531 Neuromem \u63d0\u4f9b\u7684 Memory Service\uff09</li> <li>\u7ec4\u4ef6\u8bbe\u8ba1\uff08Neuromem \u7684\u6838\u5fc3\u5206\u5c42\u4e0e\u5173\u952e\u5b50\u6a21\u5757\uff09</li> <li>\u90e8\u5206\u7ec4\u4ef6\u5c42 API\uff08\u6309\u6a21\u5757\u7c92\u5ea6\u4e0e\u7a33\u5b9a\u8c03\u7528\u9762\u6c47\u603b\uff09</li> </ul>"},{"location":"middleware/components/neuromem/#_1","title":"\u4e00\u3001\u670d\u52a1\u793a\u4f8b\uff08\u9762\u5411\u4f7f\u7528\u8005\uff09","text":"<p>\u5728\u73af\u5883\u91cc\u6ce8\u518c Memory Service\uff08\u7531\u5de5\u5382\u51fd\u6570\u8fd4\u56de\u670d\u52a1\u5b9e\u4f8b\uff09\uff0c\u7136\u540e\u5728 Function \u4e2d\u8fdb\u884c\u5b58\u53d6\u4e0e\u68c0\u7d22\u3002\u793a\u4f8b\u63a5\u53e3\u4e0e\u8c03\u7528\u98ce\u683c\u4e0e\u4ed3\u5e93\u4fdd\u6301\u4e00\u81f4\u3002</p> <pre><code># \u73af\u5883\u4fa7\uff1a\u6ce8\u518c\u670d\u52a1\uff08\u53ef\u6309\u9700\u5728\u5de5\u5382\u5185\u521d\u59cb\u5316\u96c6\u5408\u7b49\uff09\nfrom sage.core.api.local_environment import LocalEnvironment\nfrom sage.middleware.services.memory import MemoryService  # \u4ee5\u4ed3\u5e93 README \u793a\u4f8b\u4e3a\u51c6\n\ndef memory_service_factory():\n    service = MemoryService()\n    # \u53ef\u9009\uff1a\u521d\u59cb\u5316\u96c6\u5408\uff08\u793a\u4f8b\u51fa\u73b0\u5728\u4ed3\u5e93 README\uff09\n    # service.create_collection(\n    #     name=\"qa_collection\",\n    #     backend_type=\"VDB\",\n    #     description=\"QA pipeline memory\"\n    # )\n    return service\n\nenv = LocalEnvironment(\"neuromem_demo\")\nenv.register_service(\"memory_service\", memory_service_factory)\n</code></pre> <pre><code># Function \u4fa7\uff1a\u901a\u8fc7 Service API \u8bbf\u95ee Memory Service\nfrom sage.core.api.function.base_function import BaseFunction\n\nclass ConversationMemory(BaseFunction):\n    def execute(self, data):\n        session_id = data.get(\"session_id\", \"default\")\n        content = data.get(\"content\", \"\")\n        vector = data.get(\"vector\")\n\n        # 1) \u5199\u5165\u957f\u671f\u8bb0\u5fc6\uff08\u7531 Neuromem \u7ec4\u4ef6\u627f\u8f7d\uff09\n        memory_id = self.call_service[\"memory_service\"].store_memory(\n            content=content,\n            vector=vector,\n            session_id=session_id,\n            memory_type=\"conversation\",\n            metadata={\"source\": \"user_input\"}\n        )\n\n        # 2) \u76f8\u4f3c\u68c0\u7d22\uff08\u65b9\u6cd5\u540d\u4ee5\u5b9e\u73b0\u4e3a\u51c6\uff0c\u793a\u4f8b\u4e0e\u4ed3\u5e93\u793a\u4f8b\u4e00\u81f4\uff09\n        # \u6ce8\u610f\uff1a\u53c2\u6570\u547d\u540d\u5728\u4e0d\u540c\u5b9e\u73b0\u4e2d\u53ef\u80fd\u4e3a top_k \u6216 limit\n        results = self.call_service[\"memory_service\"].search_memories(\n            query_vector=vector,\n            session_id=session_id,\n            limit=5\n        )\n\n        return {\"memory_id\": memory_id, \"related\": results}\n</code></pre> <p>\u8981\u70b9\uff1a</p> <ul> <li>Function/Service \u4e2d\u7edf\u4e00\u4f7f\u7528 self.call_service / self.call_service_async \u8bbf\u95ee</li> <li>Memory Service \u5bf9\u63a5\u5411\u91cf\uff08VDB\uff09\u3001KV\u3001Graph \u7b49\u540e\u7aef\uff0cFunction \u65e0\u9700\u5173\u5fc3\u5185\u90e8\u7ec6\u8282</li> </ul>"},{"location":"middleware/components/neuromem/#neuromem_1","title":"\u4e8c\u3001\u7ec4\u4ef6\u8bbe\u8ba1\uff08Neuromem \u5185\u90e8\u5206\u5c42\u4e0e\u804c\u8d23\uff09","text":"<p>Neuromem \u91c7\u7528\u201c\u7f16\u6392\u670d\u52a1 + \u57fa\u7840\u96c6\u5408 + \u5f15\u64ce/\u540e\u7aef\u201d\u7684\u5206\u5c42\u65b9\u5f0f\u5b9e\u73b0\uff0c\u652f\u6301\u5728\u670d\u52a1\u5c42\u63d0\u4f9b\u7a33\u5b9a\u80fd\u529b\uff0c\u540c\u65f6\u5141\u8bb8\u7ec4\u4ef6\u5c42\u6309\u9700\u66ff\u6362\u5e95\u5c42\u540e\u7aef\u3002</p> <pre><code>flowchart LR\n  App[\u8c03\u7528\u65b9\uff1aFunction/Service]\n  MS[\"Memory Service&lt;br/&gt;\uff08\u670d\u52a1\u5c01\u88c5\uff09\"]\n  subgraph Neuromem[Neuromem \u7ec4\u4ef6]\n    MM[\"MemoryManager&lt;br/&gt;(\u6838\u5fc3\u7ba1\u7406/\u8def\u7531)\"]\n    subgraph Collections[Memory Collection \u5c42]\n      BC[\"base_collection.py&lt;br/&gt;\uff08\u57fa\u7840\u62bd\u8c61\uff09\"]\n      KVC[kv_collection.py]\n      VDBC[vdb_collection.py]\n      GC[graph_collection.py]\n    end\n    subgraph Engines[\"\u5f15\u64ce/\u540e\u7aef\u9002\u914d\"]\n      MD[\"storage_engine/metadata_storage.py\"]\n      GI[\"search_engine/graph_index/\"]\n      HI[\"search_engine/hybrid_index/\"]\n      KV[\"kv\uff08\u5728\u5bf9\u5e94\u670d\u52a1\u4e2d\u5b9e\u73b0\uff09\"]\n      VDB[\"vdb\uff08\u5728\u5bf9\u5e94\u670d\u52a1\u4e2d\u5b9e\u73b0\uff09\"]\n    end\n  end\n  Stores[\u5b9e\u9645\u540e\u7aef\uff1a&lt;br/&gt;KV / VDB / Graph \u7b49]\n\n  App --&gt; MS --&gt; Neuromem\n  Neuromem --&gt; Stores\n\n  MM --&gt; Collections\n  Collections --&gt; Engines</code></pre> <ul> <li> <p>MemoryManager\uff08memory_manager.py\uff09</p> <ul> <li>\u7edf\u4e00\u7ba1\u7406\u5199\u5165/\u68c0\u7d22\u7684\u6d41\u7a0b\u7f16\u6392\uff0c\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u5bf9\u5e94\u96c6\u5408/\u540e\u7aef</li> </ul> </li> <li> <p>Memory Collection \u5c42\uff08memory_collection/\uff09</p> <ul> <li>base_collection.py\uff1a\u96c6\u5408\u62bd\u8c61\u57fa\u7c7b</li> <li>kv_collection.py / vdb_collection.py / graph_collection.py\uff1a\u9762\u5411\u4e0d\u540c\u540e\u7aef\u7684\u96c6\u5408\u5b9e\u73b0</li> </ul> </li> <li> <p>\u5f15\u64ce/\u540e\u7aef\u9002\u914d\uff08storage_engine/ \u4e0e search_engine/\uff09</p> <ul> <li>metadata_storage.py\uff1a\u5143\u6570\u636e\u5b58\u50a8</li> <li> <p>graph_index/\u3001hybrid_index/\uff1a\u56fe\u4e0e\u6df7\u5408\u68c0\u7d22\u76f8\u5173\u7d22\u5f15</p> </li> <li> <p>\u4e0e KV/VDB \u7684\u843d\u5730\u5f15\u64ce\u8fc1\u79fb\u5230\u4e86\u5404\u81ea\u670d\u52a1\u6a21\u5757\uff08\u9075\u5faa\u5355\u4e00\u804c\u8d23\uff09</p> <ul> <li>\u5728 Memory Service \u4e2d\u4ec5\u4fdd\u7559\u201c\u7f16\u6392\u4e0e\u62bd\u8c61\u201d</li> <li>KV/VDB \u5177\u4f53\u5b58\u50a8\u4e0e\u7d22\u5f15\u5728 kv/vdb \u670d\u52a1\u4e2d\u5b9e\u73b0</li> </ul> </li> </ul> </li> </ul>"},{"location":"middleware/components/neuromem/#api","title":"\u4e09\u3001\u90e8\u5206\u7ec4\u4ef6\u5c42 API\uff08\u6309\u6a21\u5757\u7c92\u5ea6\u6c47\u603b\uff09","text":"<p>\u8bf4\u660e\uff1a</p> <ul> <li>\u4e0b\u5217\u4e3a\u7a33\u5b9a\u201c\u9762\u5411\u7ec4\u4ef6\u201d\u7684\u804c\u8d23/\u63a5\u53e3\u9762\u5411\uff0c\u5c3d\u91cf\u907f\u514d\u786c\u7f16\u7801\u5177\u4f53\u7b7e\u540d\uff1b\u4ee5\u4ed3\u5e93\u5b9e\u9645\u5b9e\u73b0\u4e3a\u51c6</li> <li>\u5bf9\u4e0a\u7edf\u4e00\u901a\u8fc7 Memory Service \u7684\u670d\u52a1\u63a5\u53e3\uff08store_memory/search_memories \u7b49\uff09</li> </ul> <p>1) Memory Service\uff08\u670d\u52a1\u5c42\uff0c\u5bf9\u4e0a\u66b4\u9732\uff09</p> <ul> <li> <p>\u5e38\u7528\u65b9\u6cd5\uff08\u4f9d\u636e\u4ed3\u5e93\u793a\u4f8b\uff09</p> <ul> <li>store_memory(content, vector, session_id, memory_type, metadata)</li> <li>search_memories(query_vector, session_id, limit/top_k, filters)</li> <li>retrieve_memories(...)\uff08\u5982\u5b9e\u73b0\u63d0\u4f9b\uff09</li> </ul> </li> <li> <p>\u4f5c\u7528\uff1a\u5c06 Neuromem \u7684\u80fd\u529b\u670d\u52a1\u5316\uff0c\u5c4f\u853d KV/VDB/Graph \u7684\u7ec6\u8282</p> </li> </ul> <p>2) MemoryManager\uff08\u7ec4\u4ef6\u6838\u5fc3\uff09</p> <ul> <li>\u804c\u8d23\uff1a\u89e3\u6790\u5199\u5165/\u68c0\u7d22\u8bf7\u6c42\uff0c\u5c06\u5176\u5206\u53d1\u5230\u5408\u9002\u7684 Collection \u4e0e\u540e\u7aef</li> <li>\u884c\u4e3a\uff1a\u7ef4\u62a4\u96c6\u5408/\u7d22\u5f15/\u5143\u6570\u636e\u4e00\u81f4\u6027\uff1b\u805a\u5408\u540e\u7aef\u7ed3\u679c</li> </ul> <p>3) Collections\uff08memory_collection/\uff09</p> <ul> <li>base_collection.py\uff1a\u96c6\u5408\u62bd\u8c61\uff08\u63d0\u4f9b\u96c6\u5408\u7ea7\u80fd\u529b\u7684\u7edf\u4e00\u63a5\u53e3\uff09</li> <li>kv_collection.py / vdb_collection.py / graph_collection.py\uff1a\u4e0d\u540c\u540e\u7aef\u96c6\u5408\u7684\u9002\u914d\u5668</li> <li>\u5178\u578b\u884c\u4e3a\uff1a\u96c6\u5408\u521b\u5efa/\u52a0\u8f7d\u3001\u96c6\u5408\u5185\u5bf9\u8c61/\u5411\u91cf\u8bfb\u5199\u3001\u7d22\u5f15/\u68c0\u7d22\u59d4\u6258</li> </ul> <p>4) Engines\uff08storage_engine/ \u4e0e search_engine/\uff09</p> <ul> <li>metadata_storage.py\uff1a\u5143\u6570\u636e\u8bfb\u5199</li> <li>graph_index/\u3001hybrid_index/\uff1a\u56fe\u4e0e\u6df7\u5408\u68c0\u7d22\u7d22\u5f15\u80fd\u529b</li> <li>\u4e0e KV/VDB \u7684\u5177\u4f53\u5b58\u50a8/\u68c0\u7d22\u5f15\u64ce\u5728\u5404\u81ea\u670d\u52a1\u6a21\u5757\u7ef4\u62a4</li> </ul>"},{"location":"middleware/components/neuromem/#_2","title":"\u56db\u3001\u5b9e\u8df5\u5efa\u8bae","text":"<ul> <li>\u7f16\u7a0b\u6a21\u578b\uff1a\u53ea\u5728 Function/Service \u4e2d\u8c03\u7528 memory_service\uff1b\u7ec4\u4ef6\u5185\u90e8\u7ec6\u8282\u4ea4\u7531 Neuromem \u5904\u7406</li> <li>\u6027\u80fd\uff1a\u5927\u6279\u91cf\u5199\u5165/\u68c0\u7d22\u65f6\u4f18\u5148\u4f7f\u7528\u6279\u63a5\u53e3\uff08\u82e5\u5b9e\u73b0\u63d0\u4f9b\uff09\uff1b\u907f\u514d\u5728 execute \u4e2d\u8fc7\u7ec6\u7c92\u5ea6\u9891\u7e41\u963b\u585e</li> <li>\u53ef\u6d4b\u8bd5\u6027\uff1a\u53ef\u5728\u73af\u5883\u5185\u6ce8\u518c Mock \u670d\u52a1\uff0c\u5229\u7528\u76f8\u540c Service API \u9a8c\u8bc1\u4e1a\u52a1\u903b\u8f91</li> </ul>"},{"location":"middleware/components/sage_db/","title":"SAGE-DB\uff08\u975e\u7ed3\u6784\u5316\u6570\u636e\u5e93\u7ec4\u4ef6\uff09","text":"<p>SAGE-DB \u9762\u5411\u5411\u91cf/\u6587\u672c\u7b49\u975e\u7ed3\u6784\u5316\u6570\u636e\u7684\u9ad8\u6027\u80fd\u5b58\u50a8\u4e0e\u68c0\u7d22\uff0c\u901a\u5e38\u4f5c\u4e3a Neuromem/Memory Service \u7684\u5e95\u5c42\u540e\u7aef\u4e4b\u4e00\uff0c\u4e5f\u53ef\u7531 VDB Service \u76f4\u63a5\u5bf9\u5916\u66b4\u9732\u80fd\u529b\u3002</p> <ul> <li>\u4ee3\u7801\u4f4d\u7f6e\uff08\u4f01\u4e1a\u7248\uff09\uff1apackages/sage-middleware/src/sage/middleware/enterprise/sage_db/</li> <li>\u5bf9\u4e0a\u6e38\u7684\u5173\u7cfb\uff1a\u88ab Memory/Neuromem \u6216 VDB Service \u4f5c\u4e3a\u540e\u7aef\u5f15\u64ce\u4f7f\u7528</li> </ul> <p>\u672c\u9875\u5305\u542b\uff1a</p> <ul> <li>\u7f16\u8bd1/\u6784\u5efa\u65b9\u6cd5\uff08\u4f01\u4e1a\u7248\u7ec4\u4ef6\uff09</li> <li>\u670d\u52a1\u793a\u4f8b\uff08\u5982\u4f55\u901a\u8fc7\u670d\u52a1\u5bf9\u63a5 SAGE-DB\uff09</li> <li>\u7ec4\u4ef6\u8bbe\u8ba1\uff08\u6838\u5fc3\u5206\u5c42\uff09</li> <li>\u7ec4\u4ef6\u5c42 API\uff08\u5bf9\u4e0a\u7a33\u5b9a\u80fd\u529b\u9762\u4e0e\u5178\u578b\u65b9\u6cd5\uff09</li> </ul>"},{"location":"middleware/components/sage_db/#_1","title":"\u4e00\u3001\u7f16\u8bd1/\u6784\u5efa\u65b9\u6cd5\uff08\u4f01\u4e1a\u7248\uff09","text":"<p>SAGE-DB \u4f4d\u4e8e\u4f01\u4e1a\u6a21\u5757\u76ee\u5f55\u4e0b\uff0c\u662f\u5426\u5305\u542b\u672c\u5730\u52a0\u901f/\u539f\u751f\u6269\u5c55\u4f9d\u53d1\u884c\u5305\u800c\u5b9a\u3002\u5e38\u89c1\u6784\u5efa\u8def\u5f84\u5982\u4e0b\uff08\u8bf7\u4ee5\u5b9e\u9645\u4ed3\u5e93\u7684\u6784\u5efa\u811a\u672c\u4e0e\u8bf4\u660e\u4e3a\u51c6\uff09\uff1a</p> <p>1) \u7eaf Python/\u65e0\u672c\u5730\u6269\u5c55\uff08\u5e38\u89c1\u4e8e\u5f00\u53d1\u73af\u5883\uff09</p> <ul> <li>\u63a8\u8350\u901a\u8fc7\u4e2d\u95f4\u4ef6\u5305\u8fdb\u884c\u53ef\u7f16\u8f91\u5b89\u88c5\uff0c\u786e\u4fdd\u4f9d\u8d56\u5c31\u7eea   <pre><code># \u5728\u4ed3\u5e93\u6839\u76ee\u5f55\npip install -e packages/sage-middleware\n</code></pre></li> <li>\u82e5\u4f01\u4e1a\u76ee\u5f55\u4e0b\u5177\u5907\u72ec\u7acb\u7684 Python \u5305\u7ed3\u6784\uff08\u542b pyproject.toml \u6216 setup.py\uff09\uff0c\u4e5f\u53ef\u5728\u8be5\u76ee\u5f55\u76f4\u63a5\u5b89\u88c5   <pre><code>cd packages/sage-middleware/src/sage/middleware/enterprise/sage_db\npip install -e .\n</code></pre></li> </ul> <p>2) \u542b\u672c\u5730\u6269\u5c55/\u9700\u8981 C++ \u6784\u5efa\uff08\u82e5\u8be5\u76ee\u5f55\u5305\u542b\u539f\u751f\u52a0\u901f\u7ec4\u4ef6\uff09</p> <ul> <li> <p>\u5148\u5b89\u88c5\u7f16\u8bd1\u4f9d\u8d56\uff08\u793a\u4f8b\uff09</p> <ul> <li>C/C++ \u7f16\u8bd1\u5668\uff08\u652f\u6301 C++17\uff09</li> <li>Python \u5f00\u53d1\u5934\u6587\u4ef6\uff08python3-dev \u7b49\uff09</li> <li>CMake/Ninja\uff08\u82e5\u4f7f\u7528 CMake \u6784\u5efa\uff09</li> </ul> </li> <li> <p>\u53c2\u8003\u8be5\u76ee\u5f55\u81ea\u5e26\u7684\u6784\u5efa\u811a\u672c\u6267\u884c\uff08\u4ee5\u4e0b\u4e3a\u5e38\u89c1\u547d\u4ee4\u8303\u5f0f\uff09   <pre><code>cd packages/sage-middleware/src/sage/middleware/enterprise/sage_db\n\n# pyproject \u6784\u5efa\npip install -v .\n\n# \u6216 setup.py \u6784\u5efa\uff08\u89c6\u4ed3\u5e93\u811a\u624b\u67b6\u800c\u5b9a\uff09\npython setup.py build_ext --inplace -j4\npython setup.py install\n</code></pre></p> </li> <li>\u82e5\u9700\u6307\u5b9a GPU/\u5411\u91cf\u5e93\u7b49\u540e\u7aef\uff0c\u8bf7\u6309\u7167\u8be5\u76ee\u5f55 README/\u6784\u5efa\u811a\u672c\u4e2d\u7684\u9009\u9879\u914d\u7f6e\u73af\u5883\u53d8\u91cf/\u7f16\u8bd1\u9009\u9879</li> </ul> <p>\u63d0\u793a\uff1a</p> <ul> <li>\u4f01\u4e1a\u6a21\u5757\u53ef\u80fd\u53d7\u8bb8\u53ef\u63a7\u5236\uff1b\u5982\u672a\u5305\u542b\u6e90\u7801\u6216\u6784\u5efa\u811a\u672c\uff0c\u8bf7\u8054\u7cfb\u7ef4\u62a4\u8005\u83b7\u53d6\u6784\u5efa\u8bf4\u660e\u6216\u9884\u7f16\u8bd1\u5305</li> </ul>"},{"location":"middleware/components/sage_db/#sage-db_1","title":"\u4e8c\u3001\u670d\u52a1\u793a\u4f8b\uff08\u901a\u8fc7\u670d\u52a1\u5bf9\u63a5 SAGE-DB\uff09","text":"<p>\u4e1a\u52a1\u4fa7\u4e0d\u76f4\u63a5\u4f9d\u8d56 SAGE-DB \u7ec4\u4ef6\uff0c\u800c\u662f\u901a\u8fc7\u670d\u52a1\u62bd\u8c61\u8bbf\u95ee\uff08\u4f8b\u5982 VDB Service \u6216 Memory Service\uff09\u3002</p> <p>1) \u4f5c\u4e3a Memory/Neuromem \u7684\u540e\u7aef\uff08\u63a8\u8350\u4f7f\u7528\u65b9\u5f0f\uff09</p> <ul> <li>\u53c2\u8003 Neuromem \u6587\u6863\u4e0e Memory Service \u793a\u4f8b\uff1a\u5728 Function \u4e2d\u4f7f\u7528 self.call_service[\"memory_service\"] \u5b8c\u6210\u957f\u8bb0\u5fc6\u5199\u5165\u4e0e\u68c0\u7d22</li> <li>SAGE-DB \u5728\u5185\u90e8\u627f\u62c5\u5411\u91cf\u5199\u5165/\u68c0\u7d22\u7684\u540e\u7aef\u804c\u8d23</li> </ul> <p>2) \u76f4\u63a5\u901a\u8fc7 VDB Service \u8bbf\u95ee\u5411\u91cf\u6570\u636e\u5e93 - \u5728\u73af\u5883\u4e2d\u6ce8\u518c vdb_service\uff0c\u7136\u540e\u5728 Function \u4e2d\u8c03\u7528   <pre><code>from sage.core.api.local_environment import LocalEnvironment\n# \u5047\u8bbe VDBService \u66b4\u9732\u4e8e services/vdb/\uff08\u6309\u4ed3\u5e93\u7ed3\u6784\uff09\nfrom sage.middleware.services.vdb import VDBService\n\ndef vdb_service_factory():\n  return VDBService()  # \u6784\u9020\u53c2\u6570\u6309\u5b9e\u9645\u5b9e\u73b0\u586b\u5199\n\nenv = LocalEnvironment(\"sage_db_vdb_demo\")\nenv.register_service(\"vdb_service\", vdb_service_factory)\n</code></pre></p> <pre><code>from sage.core.api.function.base_function import BaseFunction\n\nclass VectorWriter(BaseFunction):\n    def execute(self, data):\n        # \u6dfb\u52a0\u5411\u91cf\uff08\u65b9\u6cd5\u540d/\u53c2\u6570\u4ee5\u5b9e\u9645\u5b9e\u73b0\u4e3a\u51c6\uff0c\u793a\u4f8b\u53c2\u8003 examples/README\uff09\n        self.call_service[\"vdb_service\"].add_vectors(\n            vectors=data[\"vectors\"],  # List[List[float]]\n            ids=data.get(\"ids\"),      # Optional[List[str]]\n            metadata=data.get(\"metadata\")  # Optional[List[dict]]\n        )\n        return {\"ok\": True}\n\nclass VectorSearcher(BaseFunction):\n    def execute(self, data):\n        # \u76f8\u4f3c\u68c0\u7d22\n        results = self.call_service[\"vdb_service\"].search(\n            query=data[\"query_vector\"],\n            top_k=data.get(\"top_k\", 5),\n            filters=data.get(\"filters\")\n        )\n        return {\"results\": results}\n</code></pre>"},{"location":"middleware/components/sage_db/#_2","title":"\u4e09\u3001\u7ec4\u4ef6\u8bbe\u8ba1\uff08\u6838\u5fc3\u5206\u5c42\uff09","text":"<p>SAGE-DB \u7ec4\u4ef6\u901a\u5e38\u91c7\u7528\u201cPython API/\u670d\u52a1\u5c01\u88c5 \u2192 \u672c\u5730/\u52a0\u901f\u7ed1\u5b9a \u2192 Core Engine \u2192 \u786c\u4ef6\u8d44\u6e90\u201d\u7684\u5206\u5c42\uff0c\u65e2\u4fdd\u8bc1\u5bf9\u4e0a API \u7684\u7a33\u5b9a\u6027\uff0c\u53c8\u4fbf\u4e8e\u66ff\u6362\u5e95\u5c42\u5b9e\u73b0\uff08CPU/GPU/\u7279\u5b9a\u5e93\uff09\u3002</p> <pre><code>flowchart TB\n  API[\"Python API/\u670d\u52a1\u5c01\u88c5&lt;br/&gt;(VDB Service/Memory Service \u95f4\u63a5\u4f7f\u7528)\"]\n  Bind[\"\u672c\u5730\u6269\u5c55/\u52a0\u901f\u7ed1\u5b9a\"]\n  subgraph Core[Core Engine]\n    Index[Index Engine]\n    Query[Query Engine]\n    Storage[Storage Engine]\n  end\n  HW[\"\u786c\u4ef6: \u5185\u5b58/\u78c1\u76d8/GPU/\u4e13\u7528\u5e93\"]\n\n  API --&gt; Bind --&gt; Core --&gt; HW</code></pre> <ul> <li>Python API/\u670d\u52a1\u5c01\u88c5\uff1a\u5bf9\u4e0a\u4e3a VDB Service \u6216 Memory Service \u4f7f\u7528</li> <li>\u672c\u5730\u6269\u5c55/\u52a0\u901f\u7ed1\u5b9a\uff1a\u5982\u542b C++/CUDA/ROCm \u7b49\u539f\u751f\u52a0\u901f</li> <li>Core Engine\uff1a\u7d22\u5f15\u3001\u67e5\u8be2\u3001\u5b58\u50a8\u6838\u5fc3</li> <li>\u786c\u4ef6\uff1a\u9762\u5411\u4e0d\u540c\u540e\u7aef\uff08CPU/GPU/\u4e13\u7528\u5411\u91cf\u5e93\uff09</li> </ul>"},{"location":"middleware/components/sage_db/#api","title":"\u56db\u3001\u7ec4\u4ef6\u5c42 API\uff08\u5bf9\u4e0a\u7a33\u5b9a\u80fd\u529b\u9762\uff09","text":"<p>\u4ee5\u4e0b\u4e3a\u201c\u5bf9\u4e0a\u201d\u5e38\u89c1\u80fd\u529b\u9762\uff08\u4ee5\u4ed3\u5e93 examples/README \u4e2d\u7684\u8bf4\u660e\u4e3a\u951a\u70b9\uff1b\u5177\u4f53\u7b7e\u540d\u4ee5\u5b9e\u73b0\u4e3a\u51c6\uff09\uff1a</p> <p>1) \u5411\u91cf\u96c6\u5408\u4e0e\u5199\u5165</p> <ul> <li>add_vectors(vectors, ids, metadata)</li> <li>update_vectors(vectors, ids)</li> <li>delete_vectors(ids)</li> <li>create_collection(name, params) / drop_collection(name)</li> </ul> <p>2) \u68c0\u7d22\u80fd\u529b</p> <ul> <li>search(query, top_k, filters)\uff1a\u76f8\u4f3c\u5ea6\u68c0\u7d22</li> <li>batch_search(queries, top_k, filters)</li> <li>get_vector(id)/get_metadata(id)</li> </ul> <p>3) \u7ef4\u62a4\u4e0e\u5de5\u5177</p> <ul> <li>stats()/info()\uff1a\u96c6\u5408/\u5f15\u64ce\u72b6\u6001</li> <li>persist()/load()\uff1a\u6301\u4e45\u5316/\u52a0\u8f7d</li> <li>compact()/rebuild_index()\uff1a\u7d22\u5f15\u7ef4\u62a4</li> </ul> <p>\u5bf9\u4e0a\u5efa\u8bae\uff1a</p> <ul> <li>\u5728\u4e1a\u52a1 Function \u4e2d\u4f18\u5148\u901a\u8fc7 Memory Service \u4f7f\u7528\u957f\u671f\u8bb0\u5fc6\u80fd\u529b\uff08\u7531 Neuromem \u7f16\u6392\uff09</li> <li>\u82e5\u9700\u76f4\u63a5\u64cd\u4f5c\u5411\u91cf\u96c6\u5408\uff0c\u4f7f\u7528 vdb_service \u66b4\u9732\u7684\u65b9\u6cd5\u65cf\uff1b\u907f\u514d\u76f4\u63a5\u5f15\u7528\u4f01\u4e1a\u7ec4\u4ef6\u5185\u90e8\u7c7b</li> </ul>"},{"location":"middleware/components/sage_db/#_3","title":"\u4e94\u3001\u5b9e\u8df5\u4e0e\u90e8\u7f72","text":"<ul> <li>\u8d44\u6e90\u9009\u62e9\uff1a\u6839\u636e\u6570\u636e\u89c4\u6a21\u4e0e\u5ef6\u8fdf\u8981\u6c42\u9009\u62e9 CPU/GPU \u4e0e\u5bf9\u5e94\u5411\u91cf\u5e93/\u7d22\u5f15\u7c7b\u578b</li> <li>\u5e76\u53d1\u6a21\u578b\uff1a\u6279\u91cf\u5199\u5165\u4e0e\u6279\u91cf\u68c0\u7d22\u80fd\u663e\u8457\u964d\u4f4e\u5f00\u9500\uff1b\u5728\u670d\u52a1\u4fa7\u7ec4\u5408\u6279\u5904\u7406\u4ee5\u63d0\u9ad8\u541e\u5410</li> <li>\u6570\u636e\u4e00\u81f4\u6027\uff1a\u5982\u4e0e KV/Graph \u8054\u52a8\uff0c\u8bf7\u901a\u8fc7 Memory/Neuromem \u7f16\u6392\uff0c\u907f\u514d\u81ea\u884c\u8de8\u670d\u52a1\u5199\u4e00\u81f4\u6027 ```</li> </ul>"},{"location":"middleware/hardware/gpu_acceleration/","title":"SAGE-Flow\uff08\u6570\u636e\u6d41/\u6267\u884c\u5f15\u64ce\uff09GPU \u4e0e\u786c\u4ef6\u52a0\u901f","text":"<p>SAGE \u7684\u6570\u636e\u6d41\u6267\u884c\u7531 Engine \u8d1f\u8d23\uff0c\u5c06\u903b\u8f91\u7ba1\u9053\u7f16\u8bd1\u4e3a\u7269\u7406\u6267\u884c\u56fe\u5e76\u5728\u672c\u5730\u6216\u5206\u5e03\u5f0f\u73af\u5883\u9ad8\u6548\u8fd0\u884c\u3002 - \u672c\u5730\uff1a\u591a\u7ebf\u7a0b\u52a0\u901f - \u5206\u5e03\u5f0f\uff1a\u901a\u8fc7\u8fdc\u7a0b\u73af\u5883\u8fd0\u884c\uff08\u793a\u4f8b\u6587\u6863\u5c55\u793a\u4e86\u5728\u5206\u5e03\u5f0f\u73af\u5883\u63d0\u4ea4\u4f5c\u4e1a\uff09\uff0c\u4eea\u8868\u76d8\u652f\u6301 GPU \u8d44\u6e90\u6307\u6807\u76d1\u63a7</p> <p>Flow/Engine \u672c\u8eab\u4e0d\u76f4\u63a5\u201c\u6301\u6709\u201d GPU \u8ba1\u7b97\u6838\uff0c\u800c\u662f\u4ee5\u4e24\u7c7b\u65b9\u5f0f\u5229\u7528\u786c\u4ef6\u52a0\u901f\uff1a 1) \u901a\u8fc7\u670d\u52a1\uff1a\u5c06\u9700\u8981 GPU \u7684\u80fd\u529b\u5c01\u88c5\u4e3a\u670d\u52a1\u5e76\u5728 Flow \u4e2d\u8c03\u7528\uff08\u5982 vLLM \u63a8\u7406\u670d\u52a1\u3001SAGE-DB \u4f5c\u4e3a VDB \u540e\u7aef\uff09 2) \u901a\u8fc7\u5206\u5e03\u5f0f\u8fd0\u884c\u65f6\uff1a\u5728\u5177\u5907 GPU \u7684\u8282\u70b9\u4e0a\u90e8\u7f72/\u8c03\u5ea6\u4e0a\u8ff0\u670d\u52a1\u4e0e\u7b97\u5b50\u8fdb\u7a0b\uff0c\u4f7f\u5176\u7ed1\u5b9a\u5e76\u4f7f\u7528 GPU</p>"},{"location":"middleware/hardware/gpu_acceleration/#gpu","title":"\u5178\u578b GPU \u52a0\u901f\u8def\u5f84","text":"<ul> <li>LLM \u63a8\u7406\uff1a\u4f7f\u7528 vLLM \u7b49 GPU \u63a8\u7406\u540e\u7aef\u7684\u670d\u52a1\uff08\u4ed3\u5e93\u6587\u6863\u63d0\u4f9b\u4e86 LLMService \u793a\u4f8b\uff09</li> <li>\u5411\u91cf\u68c0\u7d22\uff1a\u4f7f\u7528\u542f\u7528 GPU \u52a0\u901f\u7684 SAGE-DB \u4f5c\u4e3a VDB Service \u540e\u7aef\uff08\u89c1 middleware/components/sage_db.md\uff09</li> <li>\u56fe/\u6df7\u5408\u68c0\u7d22\uff1a\u7531 Memory/Neuromem \u7f16\u6392 KV/VDB/Graph\uff1bVDB \u6bb5\u53ef\u5229\u7528 GPU</li> <li>\u53ef\u89c2\u6d4b\u6027\uff1a\u4eea\u8868\u76d8\u5c55\u793a\u5305\u542b GPU \u5728\u5185\u7684\u8d44\u6e90\u76d1\u63a7\uff08README \u5c55\u793a\u4e86 GPU \u76d1\u63a7\u4e0e\u53ef\u89c6\u5316\uff09</li> </ul>"},{"location":"middleware/hardware/gpu_acceleration/#gpu_1","title":"\u7f16\u6392\u793a\u4f8b\uff08\u670d\u52a1\u9a71\u52a8\u7684 GPU \u4f7f\u7528\uff09","text":"<p>\u5728\u6570\u636e\u6d41\u4e2d\uff0c\u53ea\u9700\u8981\u8c03\u7528\u5bf9\u5e94\u670d\u52a1\u5373\u53ef\uff1bGPU \u7684\u5206\u914d\u4e0e\u4f7f\u7528\u7531\u670d\u52a1\u8fdb\u7a0b\u4e0e\u540e\u7aef\u5f15\u64ce\u8d1f\u8d23\uff1a</p> <pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.core.api.function.base_function import BaseFunction\nfrom sage.middleware.services.memory import MemoryService\nfrom sage.middleware.services.vdb import VDBService\n\nenv = LocalEnvironment(\"gpu_flow_demo\")\nenv.register_service(\"memory_service\", lambda: MemoryService())\nenv.register_service(\"vdb_service\", lambda: VDBService())\n\nclass RAGStep(BaseFunction):\n    def execute(self, data):\n        # \u5411\u91cf\u68c0\u7d22\uff08VDB \u540e\u7aef\u53ef\u6307\u5411 SAGE-DB GPU\uff09\n        results = self.call_service[\"vdb_service\"].search(\n            query=data[\"query_vector\"], top_k=10\n        )\n        # \u957f\u671f\u8bb0\u5fc6\u4ea4\u4e92\uff08Memory \u5185\u90e8\u7f16\u6392 KV/VDB/Graph\uff09\n        self.call_service[\"memory_service\"].store_memory(\n            content=data[\"content\"], vector=data[\"query_vector\"],\n            session_id=data.get(\"sid\",\"default\"), memory_type=\"conversation\"\n        )\n        return {\"hits\": results}\n</code></pre>"},{"location":"middleware/hardware/gpu_acceleration/#gpu_2","title":"\u5206\u5e03\u5f0f\u4e0e GPU \u8d44\u6e90","text":"<ul> <li>\u8fd0\u884c\u65f6\u652f\u6301\u5c06\u540c\u4e00\u4efd\u6d41\u56fe\u63d0\u4ea4\u5230\u5206\u5e03\u5f0f\u73af\u5883\u6267\u884c\uff08\u4ed3\u5e93\u793a\u4f8b\u5c55\u793a\u4e86\u8fdc\u7a0b\u73af\u5883\u7684\u4f7f\u7528\uff09</li> <li> <p>\u5728\u5206\u5e03\u5f0f\u90e8\u7f72\u4e2d\uff1a</p> <ul> <li>\u5c06 GPU \u670d\u52a1\uff08\u5982 vLLM\u3001VDB/SAGE-DB\uff09\u90e8\u7f72\u5230\u5177\u5907 GPU \u7684\u8282\u70b9</li> <li>\u6570\u636e\u6d41\u901a\u8fc7 Service API \u8bbf\u95ee\u8fd9\u4e9b\u670d\u52a1\uff0c\u670d\u52a1\u8fdb\u7a0b\u81ea\u884c\u7ed1\u5b9a\u5e76\u4f7f\u7528 GPU</li> <li>\u901a\u8fc7\u4eea\u8868\u76d8\u76d1\u63a7 GPU \u4e0e\u4efb\u52a1\u72b6\u6001\uff0c\u7ed3\u5408\u6279\u5904\u7406/\u5f02\u6b65\uff0c\u63d0\u9ad8\u541e\u5410</li> </ul> </li> </ul>"},{"location":"middleware/hardware/gpu_acceleration/#_1","title":"\u6027\u80fd\u4e0e\u5de5\u7a0b\u5efa\u8bae","text":"<ul> <li> <p>\u670d\u52a1\u7c92\u5ea6\uff1a</p> <ul> <li>\u5c06 GPU \u5bc6\u96c6\u578b\u80fd\u529b\u7edf\u4e00\u5c01\u88c5\u4e3a\u957f\u751f\u547d\u5468\u671f\u670d\u52a1\uff0c\u907f\u514d\u5728\u7b97\u5b50\u5185\u9891\u7e41\u521d\u59cb\u5316 GPU \u4e0a\u4e0b\u6587</li> </ul> </li> <li> <p>\u6279\u5904\u7406\u4e0e\u5f02\u6b65\uff1a</p> <ul> <li>\u5728\u7b97\u5b50\u5185\u4f7f\u7528 self.call_service_async \u53d1\u8d77\u68c0\u7d22/\u63a8\u7406\u6279\u8bf7\u6c42\uff0c\u51cf\u5c11\u963b\u585e</li> <li>\u914d\u5408 SAGE-DB \u7684 numpy \u6279\u8def\u5f84\uff08add/search\uff09\u5927\u5e45\u63d0\u5347\u541e\u5410</li> </ul> </li> <li> <p>\u6570\u636e\u642c\u8fd0\uff1a</p> <ul> <li>\u5c3d\u91cf\u5408\u5e76\u8bf7\u6c42\uff0c\u907f\u514d\u9891\u7e41\u7684\u5c0f\u6570\u636e\u91cf\u5f80\u8fd4\u5e26\u6765\u7684 PCIe/NVLink \u6296\u52a8</li> </ul> </li> <li> <p>\u76d1\u63a7\u4e0e\u6269\u5bb9\uff1a</p> <ul> <li>\u4f7f\u7528\u4eea\u8868\u76d8\u89c2\u6d4b GPU \u5229\u7528\u7387\u4e0e\u5ef6\u8fdf</li> <li>\u901a\u8fc7\u670d\u52a1\u5206\u7247\uff08shard\uff09\u4e0e\u526f\u672c\uff08replica\uff09\u6269\u5c55\u591a GPU \u5e76\u53d1</li> </ul> </li> <li> <p>\u5bb9\u9519\u4e0e\u964d\u7ea7\uff1a</p> <ul> <li>\u670d\u52a1\u4e0d\u53ef\u7528\u6216 GPU \u9971\u548c\u65f6\uff0c\u670d\u52a1\u5c42\u53ef\u964d\u7ea7\u5230 CPU/\u5176\u4ed6\u540e\u7aef\uff1b\u6570\u636e\u6d41\u903b\u8f91\u4fdd\u6301\u4e0d\u53d8</li> </ul> </li> </ul> <p>\u53c2\u8003\uff1a</p> <ul> <li>Engine/RemoteEnvironment \u7684\u5206\u5e03\u5f0f\u793a\u4f8b\uff08\u4ed3\u5e93 README\uff09</li> <li>GPU \u8d44\u6e90\u76d1\u63a7\u4e0e\u4eea\u8868\u76d8\uff08\u4ed3\u5e93 README\uff09</li> <li>SAGE-DB GPU/\u7d22\u5f15\u914d\u7f6e\uff08middleware/components/sage_db.md\uff09 ```</li> </ul>"},{"location":"middleware/service/service_api/","title":"Service API","text":"<p>\u4e00\u53e5\u8bdd\u6982\u8ff0\uff1a\u7edf\u4e00\u7684\u670d\u52a1\u8c03\u7528\u5165\u53e3\uff0c\u652f\u6301\u540c\u6b65\u4e0e\u5f02\u6b65\uff0c\u5728 Function \u4e0e Service \u4e2d\u5747\u53ef\u4f7f\u7528\u3002\u670d\u52a1\u901a\u8fc7 Environment \u6ce8\u518c\u540e\uff0c\u4ee5\u540d\u79f0\u66b4\u9732\u7ed9\u8c03\u7528\u4fa7\uff1b\u5728 BaseFunction/BaseService \u4e2d\u901a\u8fc7 call_service/call_service_async \u8bbf\u95ee\u3002</p> <p>\u5148\u51b3\u6761\u4ef6\uff08Prerequisites\uff09</p> <ul> <li>\u4e86\u89e3 SAGE \u7684 Function/Operator \u7f16\u7a0b\u6a21\u578b</li> <li>\u5df2\u5728 Environment \u4e2d\u6ce8\u518c\u5bf9\u5e94\u670d\u52a1\uff08\u5982 memory_service\u3001kv_service\u3001vdb_service\u3001graph_service \u7b49\uff09</li> </ul>"},{"location":"middleware/service/service_api/#_1","title":"\u4e00\u3001\u5feb\u901f\u5f00\u59cb","text":"<pre><code>from sage.core.api.function.base_function import BaseFunction\n\nclass MyFn(BaseFunction):\n    def execute(self, data):\n        # \u540c\u6b65\u8c03\u7528 KV\n        self.call_service[\"kv_service\"].put(\"key1\", data)\n\n        # \u5f02\u6b65\u8c03\u7528 KV\uff08future\uff09\n        fut = self.call_service_async[\"kv_service\"].get(\"key1\")\n        value = fut.result(timeout=5)\n\n        # \u540c\u6b65\u8c03\u7528 Memory Service\uff08Neuromem \u63d0\u4f9b\u7684\u670d\u52a1\uff09\n        self.call_service[\"memory_service\"].store_memory(\n            content=str(value),\n            vector=data.get(\"vector\"),\n            session_id=data.get(\"session_id\", \"default\"),\n            memory_type=\"conversation\",\n            metadata={\"source\": \"demo\"}\n        )\n        return {\"ok\": True}\n</code></pre>"},{"location":"middleware/service/service_api/#_2","title":"\u4e8c\u3001\u8c03\u7528\u5165\u53e3\uff08\u901f\u67e5\uff09","text":"<pre><code>class BaseFunction:\n    @property\n    def call_service(self): ...\n    @property\n    def call_service_async(self): ...\n    def execute(self, data): ...\n\nclass BaseService:\n    @property\n    def call_service(self): ...\n    @property\n    def call_service_async(self): ...\n</code></pre> <ul> <li>\u540c\u6b65\uff1a<code>self.call_service[\"service_name\"].method(args...)</code></li> <li>\u5f02\u6b65\uff1a<code>self.call_service_async[\"service_name\"].method(args...)</code> -&gt; Future\uff08\u7528 <code>.result(timeout=\u2026)</code> \u83b7\u53d6\u7ed3\u679c\uff09</li> <li>\u82e5\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u672a\u6ce8\u5165\uff0c\u8bbf\u95ee\u4e0a\u8ff0\u5c5e\u6027\u4f1a\u629b\u51fa <code>RuntimeError</code></li> </ul>"},{"location":"middleware/service/service_api/#_3","title":"\u4e09\u3001\u670d\u52a1\u6e05\u5355\uff08\u57fa\u4e8e\u5f53\u524d\u4ed3\u5e93\uff0c\u6309\u6a21\u5757\u5212\u5206\uff09","text":"<p>\u8bf4\u660e\uff1a</p> <ul> <li>\u4e0b\u5217\u670d\u52a1\u540d\u79f0\u4e3a\u5e38\u7528\u6ce8\u518c\u540d\uff1b\u9700\u4e0e\u5b9e\u9645\u6ce8\u518c\u65f6\u7684\u540d\u79f0\u4e00\u81f4\u3002</li> <li>\u5177\u4f53\u65b9\u6cd5\u4ee5\u4ed3\u5e93\u5b9e\u73b0\u4e3a\u51c6\uff1b\u793a\u4f8b\u4ec5\u5c55\u793a\u4ed3\u5e93\u4e2d\u51fa\u73b0\u7684\u5178\u578b\u7528\u6cd5\uff0c\u907f\u514d\u865a\u6784\u63a5\u53e3\u3002</li> <li>\u5982\u9700\u6d4f\u89c8\u5b8c\u6574\u4ee3\u7801\uff0c\u8bf7\u53c2\u8003\u4ed3\u5e93\u76ee\u5f55\uff1a<code>packages/sage-middleware/src/sage/middleware/services</code></li> </ul>"},{"location":"middleware/service/service_api/#1-memory-service-neuromem","title":"1) Memory Service\uff08\u7531 Neuromem \u63d0\u4f9b\u7684\u957f\u671f\u8bb0\u5fc6\u670d\u52a1\uff09","text":"<ul> <li>\u5178\u578b\u6ce8\u518c\u540d\uff1a<code>memory_service</code></li> <li>\u7ec4\u4ef6\u5173\u7cfb\uff1aMemory Service = Neuromem \u7684\u670d\u52a1\u5316\u5c01\u88c5\uff0c\u5bf9\u63a5\u5e95\u5c42 VDB/KV/Graph \u7b49\u540e\u7aef</li> <li>\u6a21\u5757\u4f4d\u7f6e\uff08\u53c2\u8003\uff09\uff1a<code>services/memory/</code></li> <li> <p>\u5e38\u89c1\u80fd\u529b</p> <ul> <li>\u96c6\u5408/\u7a7a\u95f4\u7ba1\u7406\uff08\u5982\u521b\u5efa\u96c6\u5408\uff09</li> <li>\u5199\u5165\u957f\u671f\u8bb0\u5fc6\uff08\u5185\u5bb9\u3001\u5411\u91cf\u3001\u4f1a\u8bdd\u4e0a\u4e0b\u6587\u4e0e\u5143\u6570\u636e\uff09</li> <li>\u76f8\u4f3c\u68c0\u7d22/\u8bed\u4e49\u68c0\u7d22\uff08\u57fa\u4e8e\u5411\u91cf/\u8fc7\u6ee4\u6761\u4ef6\uff09</li> </ul> </li> <li> <p>\u4ed3\u5e93\u4e2d\u793a\u4f8b\u7528\u6cd5\uff08\u8282\u9009\uff09</p> </li> <li> <p>\u5728\u73af\u5883\u4e2d\u6ce8\u518c\u540e\u4f7f\u7528\uff1a</p> <pre><code># \u53c2\u8003\u4ed3\u5e93 README \u7528\u6cd5\ndef memory_service_factory():\n    service = MemoryService()\n    # \u53ef\u9009\u521d\u59cb\u5316\u96c6\u5408\uff08\u5728 README \u4e2d\u51fa\u73b0\u8fc7\uff09\n    service.create_collection(\n        name=\"qa_collection\",\n        backend_type=\"VDB\",\n        description=\"QA pipeline memory\"\n    )\n    return service\n\nenv.register_service(\"memory_service\", memory_service_factory)\n</code></pre> </li> <li> <p>\u5728 Function \u4e2d\u8bfb\u5199\uff1a</p> <pre><code># \u5199\u5165\nmemory_id = self.call_service[\"memory_service\"].store_memory(\n    content=content,\n    vector=vector,\n    session_id=session_id,\n    memory_type=\"conversation\",\n    metadata={\"source\": \"user_input\"}\n)\n\n# \u68c0\u7d22\uff08\u4ed3\u5e93\u793a\u4f8b\u4e2d\u51fa\u73b0\u8fc7 search_memories \u7528\u6cd5\uff09\nresults = self.call_service[\"memory_service\"].search_memories(\n    query_vector=vector,\n    session_id=session_id,\n    limit=5  # \u547d\u540d\u53ef\u80fd\u4e3a limit/top_k\uff0c\u6309\u5b9e\u9645\u5b9e\u73b0\u4e3a\u51c6\n)\n</code></pre> </li> </ul>"},{"location":"middleware/service/service_api/#2-kv-service","title":"2) KV Service\uff08\u952e\u503c\u5b58\u50a8\u670d\u52a1\uff09","text":"<ul> <li>\u5178\u578b\u6ce8\u518c\u540d\uff1a<code>kv_service</code></li> <li>\u6a21\u5757\u4f4d\u7f6e\uff08\u53c2\u8003\uff09\uff1a<code>services/kv/kv_service.py</code></li> <li> <p>\u5e38\u89c1\u80fd\u529b</p> <ul> <li>\u952e\u503c\u5199\u5165\u4e0e\u8bfb\u53d6</li> <li>\u4f5c\u4e3a Memory \u7f16\u6392\u4e2d\u7684\u5143\u6570\u636e/\u7f13\u5b58\u652f\u6491</li> </ul> </li> <li> <p>\u4ed3\u5e93\u4e2d\u793a\u4f8b\u7528\u6cd5\uff08\u8282\u9009\uff09</p> </li> </ul> <pre><code># \u540c\u6b65\u5199\u5165\nself.call_service[\"kv_service\"].put(\"key1\", data)\n\n# \u5f02\u6b65\u8bfb\u53d6\nfut = self.call_service_async[\"kv_service\"].get(\"key1\")\nvalue = fut.result(timeout=5)\n</code></pre>"},{"location":"middleware/service/service_api/#3-vdb-service","title":"3) VDB Service\uff08\u5411\u91cf\u6570\u636e\u5e93\u670d\u52a1\uff09","text":"<ul> <li>\u5178\u578b\u6ce8\u518c\u540d\uff1a<code>vdb_service</code></li> <li>\u6a21\u5757\u4f4d\u7f6e\uff08\u53c2\u8003\uff09\uff1a<code>services/vdb/</code></li> <li> <p>\u5e38\u89c1\u80fd\u529b</p> <ul> <li>\u5411\u91cf\u96c6\u5408\u7ba1\u7406</li> <li>\u5411\u91cf\u5199\u5165/\u66f4\u65b0</li> <li>\u76f8\u4f3c\u5ea6\u68c0\u7d22\u3001\u8fc7\u6ee4\u68c0\u7d22</li> </ul> </li> <li> <p>\u4f7f\u7528\u8bf4\u660e</p> <ul> <li>\u8be5\u670d\u52a1\u901a\u5e38\u7531 Memory Service \u95f4\u63a5\u4f7f\u7528\uff1b\u7528\u6237\u4e5f\u53ef\u76f4\u63a5\u6ce8\u518c\u540e\u5728 Function \u4e2d\u8c03\u7528</li> <li>\u5177\u4f53\u65b9\u6cd5\u540d\u79f0\u8bf7\u53c2\u8003\u6a21\u5757\u4ee3\u7801\u4e0e <code>examples/services/vdb/examples/vdb_demo.py</code></li> </ul> </li> </ul>"},{"location":"middleware/service/service_api/#4-graph-service","title":"4) Graph Service\uff08\u56fe\u5b58\u50a8/\u5173\u7cfb\u7d22\u5f15\u670d\u52a1\uff09","text":"<ul> <li>\u5178\u578b\u6ce8\u518c\u540d\uff1a<code>graph_service</code></li> <li>\u6a21\u5757\u4f4d\u7f6e\uff08\u53c2\u8003\uff09\uff1a<code>services/graph/</code></li> <li> <p>\u5e38\u89c1\u80fd\u529b</p> <ul> <li>\u8282\u70b9/\u8fb9\u7684\u5199\u5165\u4e0e\u67e5\u8be2</li> <li>\u5173\u7cfb/\u90bb\u57df\u68c0\u7d22\uff0c\u8f85\u52a9\u957f\u671f\u8bb0\u5fc6\u7684\u4e0a\u4e0b\u6587\u7ec4\u7ec7</li> </ul> </li> <li> <p>\u4f7f\u7528\u8bf4\u660e</p> <ul> <li>\u8be5\u670d\u52a1\u901a\u5e38\u4f5c\u4e3a Memory/Neuromem \u7684\u5173\u7cfb\u540e\u7aef\uff1b\u5177\u4f53\u63a5\u53e3\u4ee5\u5b9e\u73b0\u4e3a\u51c6</li> <li>\u53ef\u53c2\u8003 <code>examples/services/graph/examples/graph_demo.py</code></li> </ul> </li> </ul>"},{"location":"middleware/service/service_api/#_4","title":"\u56db\u3001\u670d\u52a1\u6ce8\u518c\u4e0e\u8c03\u7528\u6a21\u5f0f","text":"<ul> <li>\u6ce8\u518c\u670d\u52a1\uff08\u5de5\u5382\u51fd\u6570\u8fd4\u56de\u670d\u52a1\u5b9e\u4f8b\uff09</li> </ul> <pre><code>def some_service_factory():\n    # \u8fd4\u56de\u5177\u4f53\u670d\u52a1\u5b9e\u4f8b\n    return SomeService(...)\n\nenv.register_service(\"some_service\", some_service_factory)\n</code></pre> <ul> <li>\u5728 Function \u4e2d\u8c03\u7528</li> </ul> <pre><code>class MyFn(BaseFunction):\n    def execute(self, data):\n        out = self.call_service[\"some_service\"].some_method(arg1, arg2)\n        fut = self.call_service_async[\"some_service\"].other_method(...)\n        result = fut.result(timeout=5)\n        return {\"out\": out, \"async\": result}\n</code></pre>"},{"location":"middleware/service/service_api/#_5","title":"\u4e94\u3001\u5e38\u89c1\u9519\u8bef\u4e0e\u6392\u67e5","text":"<ul> <li>\u8fd0\u884c\u65f6\u4e0a\u4e0b\u6587\u672a\u6ce8\u5165\uff1a\u786e\u4fdd\u901a\u8fc7 Environment \u6784\u5efa DAG \u5e76\u4ee5\u6807\u51c6\u65b9\u5f0f\u8fd0\u884c</li> <li>\u670d\u52a1\u672a\u6ce8\u518c\u6216\u540d\u79f0\u4e0d\u5339\u914d\uff1a\u68c0\u67e5 <code>env.register_service</code> \u7684\u540d\u79f0\u4e0e\u8c03\u7528\u4fa7\u4e00\u81f4</li> <li>\u4e0b\u6e38\u670d\u52a1\u5f02\u5e38/\u8d85\u65f6\uff1a\u5bf9\u5f02\u6b65\u8c03\u7528\u4f7f\u7528\u5408\u7406\u7684 timeout\uff0c\u5e76\u5728\u8c03\u7528\u4fa7\u6355\u83b7\u5f02\u5e38</li> <li>\u6570\u636e\u5951\u7ea6\u4e0d\u4e00\u81f4\uff1a\u9075\u5faa\u5404\u670d\u52a1\u793a\u4f8b\u4e2d\u7684\u5b57\u6bb5\u7ea6\u5b9a\uff0c\u5fc5\u8981\u65f6\u5728\u8c03\u7528\u524d\u505a\u8f93\u5165\u6821\u9a8c</li> </ul>"},{"location":"middleware/service/service_api/#_6","title":"\u53c2\u8003","text":"<ul> <li>\u4ee3\u7801\u603b\u89c8\uff08\u670d\u52a1\u76ee\u5f55\uff09\uff1ahttps://github.com/ZeroJustMe/SAGE/tree/main/packages/sage-middleware/src/sage/middleware/services</li> <li>\u793a\u4f8b\u5bfc\u822a\uff08\u542b KV/VDB/Memory/Graph \u793a\u4f8b\uff09\uff1a<code>packages/sage-middleware/src/sage/middleware/examples</code></li> </ul> <p>\u6ce8\uff1a\u4ee5\u4e0a\u6e05\u5355\u57fa\u4e8e\u5f53\u524d\u53ef\u89c1\u7684\u4ed3\u5e93\u7ed3\u6784\u4e0e\u793a\u4f8b\u6587\u4ef6\uff0c\u53ef\u80fd\u672a\u5b8c\u5168\u8986\u76d6\u6240\u6709\u5185\u90e8/\u5b9e\u9a8c\u6027\u670d\u52a1\u6a21\u5757\uff1b\u8bf7\u4ee5\u670d\u52a1\u76ee\u5f55\u4e0e\u5bf9\u5e94\u793a\u4f8b\u4e3a\u51c6\u3002</p>"},{"location":"middleware/service/service_intro/","title":"SAGE Middleware \u670d\u52a1\u5c42\u6982\u89c8","text":"<p>\u670d\u52a1\u5c42\u662f SAGE Middleware \u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u9884\u5b9a\u4e49\u7684\u5fae\u670d\u52a1\uff0c\u901a\u8fc7\u7f16\u6392\u5404\u79cd\u7ec4\u4ef6\u5f62\u6210\u5b8c\u6574\u7684\u670d\u52a1\u903b\u8f91\uff0c\u5411\u4e0a\u5c42\u5e94\u7528\u63d0\u4f9b\u7edf\u4e00\u7684\u670d\u52a1\u63a5\u53e3\u3002\u670d\u52a1\u5c42\u91c7\u7528\u5fae\u670d\u52a1\u67b6\u6784\u8bbe\u8ba1\uff0c\u652f\u6301\u72ec\u7acb\u90e8\u7f72\u3001\u6269\u5c55\u548c\u7ba1\u7406\u3002</p>"},{"location":"middleware/service/service_intro/#1-api","title":"1. \u8c03\u7528\u5165\u53e3\uff08\u7edf\u4e00 API\uff09","text":"<ul> <li>\u540c\u6b65\uff1aself.call_service[\"service_name\"].method(args...)</li> <li>\u5f02\u6b65\uff1aself.call_service_async[\"service_name\"].method(args...) \u2192 Future\uff08.result(timeout=...)\uff09</li> </ul> <p>\u793a\u4f8b\uff1a <pre><code># Function \u4e2d\nvalue = self.call_service[\"kv_service\"].get(\"key1\")\nfut = self.call_service_async[\"vdb_service\"].search(query=vec, top_k=10)\nresults = fut.result(timeout=5)\n</code></pre></p>"},{"location":"middleware/service/service_intro/#2","title":"2. \u670d\u52a1\u6e05\u5355\u4e0e\u804c\u8d23\uff08\u793a\u610f\uff09","text":"<pre><code>flowchart TB\n    API[\"Service API&lt;br/&gt;(call_service)\"]\n    MS1[\"Memory Service&lt;br/&gt;(Neuromem \u7f16\u6392\u957f\u671f\u8bb0\u5fc6)\"]\n    MS2[\"VDB Service&lt;br/&gt;(\u5411\u91cf\u6570\u636e\u5e93\u62bd\u8c61)\"]\n    MS3[\"KV Service&lt;br/&gt;(\u952e\u503c/\u4f1a\u8bdd/\u5143\u6570\u636e)\"]\n    MS4[\"Graph Service&lt;br/&gt;(\u56fe\u5173\u7cfb/\u4e0a\u4e0b\u6587)\"]\n\n    API --&gt; MS1\n    API --&gt; MS2\n    API --&gt; MS3\n    API --&gt; MS4</code></pre>"},{"location":"middleware/service/service_intro/#3","title":"3. \u7aef\u5230\u7aef\u8c03\u7528\u8def\u5f84\uff08\u793a\u610f\uff09","text":"<pre><code>flowchart LR\n  F[Function]\n  M[Memory Service]\n  V[VDB Service]\n  K[KV Service]\n  G[Graph Service]\n  SD[\"SAGE-DB (GPU/CPU)\"]\n\n  F --&gt; M\n  M --&gt; V\n  M --&gt; K\n  M --&gt; G\n  V --&gt; SD</code></pre>"},{"location":"middleware/service/service_intro/#4","title":"4. \u5178\u578b\u7528\u6cd5","text":"<ul> <li> <p>Memory\uff08\u957f\u671f\u8bb0\u5fc6\uff09 <pre><code>mid = self.call_service[\"memory_service\"].store_memory(\n    content=content, vector=vec, session_id=sid,\n    memory_type=\"conversation\", metadata={\"source\": \"user\"}\n)\nhits = self.call_service[\"memory_service\"].search_memories(\n    query_vector=vec, session_id=sid, limit=5\n)\n</code></pre></p> </li> <li> <p>VDB\uff08\u76f4\u63a5\u5411\u91cf\u670d\u52a1\uff09 <pre><code>self.call_service[\"vdb_service\"].add_vectors(vectors=batch, ids=ids, metadata=md)\nhits = self.call_service[\"vdb_service\"].search(query=vec, top_k=10)\n</code></pre></p> </li> <li> <p>KV <pre><code>self.call_service[\"kv_service\"].put(\"k\", {\"v\": 1})\nv = self.call_service[\"kv_service\"].get(\"k\")\n</code></pre></p> </li> <li> <p>Graph <pre><code>self.call_service[\"graph_service\"].add_edge(\"A\",\"B\", {\"rel\":\"next\"})\n</code></pre></p> </li> </ul> <p>\u66f4\u591a\u793a\u4f8b\uff0c\u8bf7\u53c2\u8003\u201c\u670d\u52a1\u5feb\u901f\u5165\u95e8\u201d\u3002</p>"},{"location":"middleware/service/memory/memory_service/","title":"Memory Service - \u8bb0\u5fc6\u7f16\u6392\u670d\u52a1","text":"<p>Memory Service \u662f SAGE Middleware \u7684\u7f16\u6392\u670d\u52a1\uff0c\u534f\u8c03 KV\u3001VDB \u548c Graph \u7b49\u57fa\u7840\u670d\u52a1\uff0c\u4e3a\u5e94\u7528\u63d0\u4f9b\u667a\u80fd\u7684\u8bb0\u5fc6\u5b58\u50a8\u3001\u68c0\u7d22\u548c\u7ba1\u7406\u80fd\u529b\u3002</p>"},{"location":"middleware/service/memory/memory_service/#_1","title":"\u670d\u52a1\u4f9d\u8d56\u5173\u7cfb","text":"<pre><code>flowchart LR\n  MS[Memory Service]\n  KV[KV Service]\n  VDB[VDB Service]\n  Graph[Graph Service]\n\n  MS --&gt; KV\n  MS --&gt; VDB\n  MS --&gt; Graph</code></pre>"},{"location":"middleware/service/memory/memory_service/#_2","title":"\u6570\u636e\u6d41\u7a0b","text":"<pre><code>sequenceDiagram\n  participant U as \u7528\u6237/\u8c03\u7528\u65b9\n  participant MS as Memory Service\n  participant KV as KV Service\n  participant VDB as VDB Service\n  participant G as Graph Service\n\n  U-&gt;&gt;MS: store_memory(content, vector, session_id, ...)\n  MS-&gt;&gt;KV: put(metadata)\n  MS-&gt;&gt;VDB: add(vector, id, metadata)\n  MS-&gt;&gt;G: add_node/edge(session\u5173\u7cfb)\n  MS--&gt;&gt;U: memory_id\n\n  U-&gt;&gt;MS: retrieve/search(query or vector, filters)\n  MS-&gt;&gt;VDB: \u5411\u91cf\u641c\u7d22\n  MS-&gt;&gt;KV: \u6279\u91cf\u83b7\u53d6\u5143\u6570\u636e\n  MS-&gt;&gt;G: \u53ef\u9009\u5173\u7cfb\u6269\u5c55\n  MS--&gt;&gt;U: \u5408\u5e76/\u6392\u5e8f\u540e\u7684\u7ed3\u679c</code></pre>"},{"location":"middleware/service/memory/memory_service/#function","title":"\u5728 Function \u4e2d\u8c03\u7528\uff08\u4e0e\u4ed3\u5e93\u63a5\u53e3\u4e00\u81f4\uff09","text":"<pre><code>from sage.core.api.function.base_function import BaseFunction\n\nclass ConversationMemory(BaseFunction):\n    def execute(self, data):\n        session_id = data[\"session_id\"]\n        content = data[\"content\"]\n        vector = data[\"vector\"]\n\n        # \u5b58\u50a8\u8bb0\u5fc6\uff08\u540c\u6b65\uff09\n        memory_id = self.call_service[\"memory_service\"].store_memory(\n            content=content,\n            vector=vector,\n            session_id=session_id,\n            memory_type=\"conversation\",\n            metadata={\"source\": \"user_input\"}\n        )\n\n        # \u68c0\u7d22\u76f8\u5173\u8bb0\u5fc6\uff08\u540c\u6b65\uff09\n        related = self.call_service[\"memory_service\"].retrieve_memories(\n            query_vector=vector,\n            session_id=session_id,\n            top_k=5\n        )\n        return {\"memory_id\": memory_id, \"related\": related}\n</code></pre> <p>\u5907\u6ce8\uff1a</p> <ul> <li>\u4ee5\u4e0a\u8c03\u7528\u65b9\u5f0f\u57fa\u4e8e BaseFunction \u7684 call_service \u8bed\u6cd5\u7cd6\uff0c\u7b26\u5408\u5f53\u524d\u4ed3\u5e93\u5b9e\u73b0\u3002</li> <li>\u5982\u679c\u9700\u8981\u5f02\u6b65\uff1a\u4f7f\u7528 self.call_service_async[\"memory_service\"].method(...).result()</li> </ul>"},{"location":"middleware/service/neuromem/vdb/faiss/","title":"SAGE FaissIndex API \u6587\u6863","text":"<p>\u4e00\u53e5\u8bdd\u6982\u8ff0\uff1a\u672c\u8282\u4ecb\u7ecd FaissIndex \u5411\u91cf\u7d22\u5f15\u7c7b\uff0c\u7528\u4e8e\u9ad8\u6027\u80fd\u5411\u91cf\u76f8\u4f3c\u6027\u641c\u7d22\u548c\u68c0\u7d22\uff0c\u5e2e\u52a9\u4f60\u5728 SAGE \u795e\u7ecf\u8bb0\u5fc6\u7cfb\u7edf\u4e2d\u5b8c\u6210\u5927\u89c4\u6a21\u5411\u91cf\u6570\u636e\u7684\u5b58\u50a8\u3001\u7ba1\u7406\u548c\u5feb\u901f\u68c0\u7d22\u4efb\u52a1\u3002</p> <p>\u6ce8\u610f\uff0c\u5728\u4e86\u89e3\u672c\u8282\u4e4b\u524d\u9700\u8981\u63d0\u524d\u4e86\u89e3\u4ee5\u4e0b\u77e5\u8bc6\uff1a</p> <p>\u5148\u51b3\u6761\u4ef6\uff08Prerequisites\uff09</p> <ul> <li>\u57fa\u7840\u6982\u5ff5\uff1a\u5411\u91cf\u76f8\u4f3c\u6027\u641c\u7d22\u3001\u5d4c\u5165\u5411\u91cf\u3001L2\u8ddd\u79bb\u3001\u5185\u79ef</li> <li>\u6280\u672f\u4f9d\u8d56\uff1aFAISS\u5e93\u3001numpy\u6570\u7ec4\u64cd\u4f5c </li> </ul>"},{"location":"middleware/service/neuromem/vdb/faiss/#_1","title":"\u4e00\u3001\u5feb\u901f\u5f00\u59cb","text":"Python\u6301\u4e45\u5316\u5b58\u50a8 \u6700\u5c0f\u53ef\u8fd0\u884c\u793a\u4f8b\uff08\u53ef\u62f7\u8d1d\u8fd0\u884c\uff09<pre><code>import numpy as np\nfrom sage.middleware.services.neuromem.search_engine.vdb_index.faiss_index import FaissIndex\n\ndef main():\n    # \u914d\u7f6e\u5411\u91cf\u7d22\u5f15\n    config = {\n        \"name\": \"my_index\",\n        \"dim\": 128,\n        \"index_type\": \"IndexFlatL2\",\n        \"tombstone_threshold\": 50\n    }\n\n    # \u521b\u5efa\u7d22\u5f15\u5b9e\u4f8b\n    index = FaissIndex(config=config)\n\n    # \u63d2\u5165\u5411\u91cf\u6570\u636e\n    vectors = [np.random.random(128).astype(np.float32) for _ in range(5)]\n    ids = [f\"doc_{i}\" for i in range(5)]\n    index.batch_insert(vectors, ids)\n\n    # \u5411\u91cf\u68c0\u7d22\n    query_vector = np.random.random(128).astype(np.float32)\n    result_ids, distances = index.search(query_vector, topk=3)\n    print(f\"\u68c0\u7d22\u7ed3\u679c: {result_ids}\")\n    print(f\"\u76f8\u4f3c\u5ea6\u8ddd\u79bb: {distances}\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> \u7d22\u5f15\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u793a\u4f8b<pre><code># \u4fdd\u5b58\u7d22\u5f15\u5230\u78c1\u76d8\nindex.store(\"./my_index_data\")\n\n# \u4ece\u78c1\u76d8\u52a0\u8f7d\u7d22\u5f15\nloaded_index = FaissIndex.load(\"my_index\", \"./my_index_data\")\n\n# \u7ee7\u7eed\u4f7f\u7528\u52a0\u8f7d\u7684\u7d22\u5f15\nresults, dists = loaded_index.search(query_vector, topk=5)\n</code></pre>"},{"location":"middleware/service/neuromem/vdb/faiss/#api","title":"\u4e8c\u3001API \u6982\u89c8\uff08\u7b7e\u540d / \u5165\u53e3 / \u901f\u67e5\uff09","text":"<p>\u8fd9\u91cc\u653e**\u6700\u5e38\u7528**\u7684\u5165\u53e3\u4e0e\u7b7e\u540d\uff1b\u8be6\u7ec6\u53c2\u6570\u653e\u5230\u4e0b\u4e00\u8282\"\u53c2\u6570 &amp; \u8fd4\u56de\"\u3002</p> Python API \u7b7e\u540d<pre><code>class FaissIndex(BaseVDBIndex):\n    def __init__(self, \n                 config: Optional[dict] = None,\n                 vectors: Optional[List[np.ndarray]] = None, \n                 ids: Optional[List[str]] = None): ...\n\n    # \u6838\u5fc3\u68c0\u7d22API\n    def search(self, query_vector: np.ndarray, topk: int = 10, \n               threshold: Optional[float] = None) -&gt; Tuple[List[str], List[float]]: ...\n\n    # \u6570\u636e\u64cd\u4f5cAPI\n    def insert(self, vector: np.ndarray, string_id: str) -&gt; int: ...\n    def batch_insert(self, vectors: List[np.ndarray], string_ids: List[str]) -&gt; int: ...\n    def update(self, string_id: str, new_vector: np.ndarray) -&gt; int: ...\n    def delete(self, string_id: str) -&gt; int: ...\n\n    # \u6301\u4e45\u5316API\n    def store(self, dir_path: str) -&gt; Dict[str, Any]: ...\n\n    @classmethod\n    def load(cls, name: str, load_path: str) -&gt; \"FaissIndex\": ...\n</code></pre>"},{"location":"middleware/service/neuromem/vdb/faiss/#_2","title":"\u4e09\u3001\u53c2\u6570 &amp; \u8fd4\u56de &amp; \u9519\u8bef","text":""},{"location":"middleware/service/neuromem/vdb/faiss/#constructor-parameters","title":"\u521d\u59cb\u5316\u53c2\u6570\uff08Constructor Parameters\uff09","text":"\u540d\u79f0 \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>config</code> <code>Optional[dict]</code> \u5426 <code>{}</code> \u7d22\u5f15\u914d\u7f6e\u5b57\u5178\uff0c\u5305\u542bname\u3001dim\u3001index_type\u7b49\u53c2\u6570 <code>vectors</code> <code>Optional[List[ndarray]]</code> \u5426 <code>None</code> \u521d\u59cb\u5411\u91cf\u5217\u8868\uff0c\u4e0eids\u53c2\u6570\u914d\u5bf9\u4f7f\u7528 <code>ids</code> <code>Optional[List[str]]</code> \u5426 <code>None</code> \u521d\u59cb\u5411\u91cf\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32ID\u5217\u8868"},{"location":"middleware/service/neuromem/vdb/faiss/#config-parameters","title":"\u914d\u7f6e\u53c2\u6570\u8be6\u89e3\uff08Config Parameters\uff09","text":"\u914d\u7f6e\u952e \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>name</code> <code>str</code> \u662f \u2014 \u7d22\u5f15\u540d\u79f0\uff0c\u7528\u4e8e\u6301\u4e45\u5316\u65f6\u7684\u6807\u8bc6 <code>dim</code> <code>int</code> \u5426 <code>128</code> \u5411\u91cf\u7ef4\u5ea6 <code>index_type</code> <code>str</code> \u5426 <code>\"IndexFlatL2\"</code> FAISS\u7d22\u5f15\u7c7b\u578b <code>tombstone_threshold</code> <code>int</code> \u5426 <code>30</code> \u5893\u7891\u56de\u6536\u9608\u503c\uff0c\u8d85\u8fc7\u6b64\u6570\u91cf\u65f6\u89e6\u53d1\u7d22\u5f15\u91cd\u5efa <code>HNSW_M</code> <code>int</code> \u5426 <code>32</code> HNSW\u7b97\u6cd5\u7684\u8fde\u63a5\u6570\u53c2\u6570 <code>HNSW_EF_CONSTRUCTION</code> <code>int</code> \u5426 <code>200</code> HNSW\u6784\u5efa\u65f6\u7684\u5019\u9009\u6570\u91cf <code>HNSW_EF_SEARCH</code> <code>int</code> \u5426 \u2014 HNSW\u641c\u7d22\u65f6\u7684\u5019\u9009\u6570\u91cf <code>IVF_NLIST</code> <code>int</code> \u5426 <code>100</code> IVF\u7d22\u5f15\u7684\u805a\u7c7b\u4e2d\u5fc3\u6570\u91cf <code>IVF_NPROBE</code> <code>int</code> \u5426 <code>10</code> IVF\u641c\u7d22\u65f6\u63a2\u67e5\u7684\u805a\u7c7b\u6570\u91cf <code>PQ_M</code> <code>int</code> \u5426 <code>8</code> \u4e58\u79ef\u91cf\u5316\u7684\u5b50\u5411\u91cf\u6570\u91cf <code>PQ_NBITS</code> <code>int</code> \u5426 <code>8</code> \u4e58\u79ef\u91cf\u5316\u7684\u7f16\u7801\u4f4d\u6570"},{"location":"middleware/service/neuromem/vdb/faiss/#_3","title":"\u6838\u5fc3\u65b9\u6cd5\u8fd4\u56de\u503c","text":""},{"location":"middleware/service/neuromem/vdb/faiss/#search","title":"search() \u8fd4\u56de","text":"\u5b57\u6bb5 \u7c7b\u578b \u8bf4\u660e <code>result_ids</code> <code>List[str]</code> \u68c0\u7d22\u5230\u7684\u5411\u91cfID\u5217\u8868\uff0c\u6309\u76f8\u4f3c\u5ea6\u6392\u5e8f <code>distances</code> <code>List[float]</code> \u5bf9\u5e94\u7684\u8ddd\u79bb\u5217\u8868\uff0c\u503c\u8d8a\u5c0f\u8868\u793a\u8d8a\u76f8\u4f3c"},{"location":"middleware/service/neuromem/vdb/faiss/#_4","title":"\u64cd\u4f5c\u65b9\u6cd5\u8fd4\u56de","text":"\u65b9\u6cd5 \u8fd4\u56de\u7c7b\u578b \u8fd4\u56de\u503c\u542b\u4e49 <code>insert()</code> <code>int</code> 1=\u6210\u529f\uff0c0=\u5931\u8d25\uff08\u5982\u5411\u91cf\u91cd\u590d\uff09 <code>batch_insert()</code> <code>int</code> \u6210\u529f\u63d2\u5165\u7684\u5411\u91cf\u6570\u91cf <code>update()</code> <code>int</code> 1=\u6210\u529f\uff0c0=\u5931\u8d25 <code>delete()</code> <code>int</code> 1=\u6210\u529f\uff0c0=\u5931\u8d25\uff08\u5982ID\u4e0d\u5b58\u5728\uff09"},{"location":"middleware/service/neuromem/vdb/faiss/#errors","title":"\u5f02\u5e38 / \u9519\u8bef\u7801\uff08Errors\uff09","text":"\u9519\u8bef \u89e6\u53d1\u6761\u4ef6 \u5efa\u8bae\u4fee\u590d <code>ValueError</code> config\u4e2d\u7f3a\u5c11name\u5b57\u6bb5 \u5728config\u4e2d\u6dfb\u52a0\u5fc5\u9700\u7684\"name\"\u5b57\u6bb5 <code>AssertionError</code> vectors\u4e0eids\u957f\u5ea6\u4e0d\u5339\u914d \u786e\u4fddvectors\u548cids\u5217\u8868\u957f\u5ea6\u76f8\u540c <code>AttributeError</code> \u65e0\u6548\u7684\u7d22\u5f15\u7c7b\u578b \u68c0\u67e5index_type\u662f\u5426\u4e3a\u652f\u6301\u7684FAISS\u7d22\u5f15\u7c7b\u578b <code>FileNotFoundError</code> \u52a0\u8f7d\u4e0d\u5b58\u5728\u7684\u7d22\u5f15\u6587\u4ef6 \u786e\u8ba4\u7d22\u5f15\u6587\u4ef6\u8def\u5f84\u6b63\u786e\u4e14\u6587\u4ef6\u5b58\u5728 <code>\u91cd\u590d\u5411\u91cf\u8b66\u544a</code> \u63d2\u5165\u5df2\u5b58\u5728\u7684\u5411\u91cf \u68c0\u67e5\u5411\u91cf\u5185\u5bb9\u6216\u4f7f\u7528update()\u65b9\u6cd5\u66ff\u4ee3"},{"location":"middleware/service/neuromem/vdb/faiss/#_5","title":"\u56db\u3001\u5de5\u4f5c\u673a\u5236\uff08\u7531\u6d45\u5165\u6df1\uff09","text":"<pre><code>sequenceDiagram\n  participant U as User\n  participant F as FaissIndex\n  participant I as FAISS Core\n  participant D as Disk Storage\n\n  U-&gt;&gt;F: \u521d\u59cb\u5316(config, vectors, ids)\n  F-&gt;&gt;F: \u89e3\u6790\u914d\u7f6e\u3001\u521b\u5efa\u7d22\u5f15\u7c7b\u578b\n  F-&gt;&gt;I: \u6784\u5efaFAISS\u7d22\u5f15\n  F-&gt;&gt;F: \u5efa\u7acbID\u6620\u5c04\u5173\u7cfb\n\n  U-&gt;&gt;F: search(query_vector, topk)\n  F-&gt;&gt;I: \u5411\u91cf\u68c0\u7d22\n  I--&gt;&gt;F: \u8fd4\u56deint_ids\u548c\u8ddd\u79bb\n  F-&gt;&gt;F: \u8fc7\u6ee4\u5893\u7891\u3001\u8f6c\u6362ID\n  F--&gt;&gt;U: \u8fd4\u56destring_ids\u548c\u8ddd\u79bb\n\n  U-&gt;&gt;F: insert/update/delete\n  F-&gt;&gt;F: \u91cd\u590d\u68c0\u6d4b\u3001\u6620\u5c04\u7ba1\u7406\n  F-&gt;&gt;I: \u7d22\u5f15\u64cd\u4f5c\n  F-&gt;&gt;F: \u5893\u7891\u7ba1\u7406\u3001\u91cd\u5efa\u68c0\u67e5\n  F--&gt;&gt;U: \u64cd\u4f5c\u7ed3\u679c\n\n  U-&gt;&gt;F: store(dir_path)\n  F-&gt;&gt;D: \u4fdd\u5b58\u7d22\u5f15\u6587\u4ef6\n  F-&gt;&gt;D: \u4fdd\u5b58\u6620\u5c04\u548c\u5143\u6570\u636e\n  F--&gt;&gt;U: \u5b58\u50a8\u8def\u5f84</code></pre> <p>\u8bbe\u8ba1\u52a8\u673a / \u53d6\u820d</p> <ul> <li>\u9009\u62e9FAISS\u7684\u539f\u56e0\uff1a\u9ad8\u6027\u80fdC++\u5b9e\u73b0\uff0c\u652f\u6301GPU\u52a0\u901f\uff0c\u591a\u79cd\u7d22\u5f15\u7b97\u6cd5\u9002\u5e94\u4e0d\u540c\u573a\u666f</li> <li>ID\u6620\u5c04\u8bbe\u8ba1\uff1aFAISS\u539f\u751f\u53ea\u652f\u6301\u6574\u6570ID\uff0c\u901a\u8fc7\u53cc\u5411\u6620\u5c04\u652f\u6301\u5b57\u7b26\u4e32ID\uff0c\u4fbf\u4e8e\u4e1a\u52a1\u4f7f\u7528</li> <li>\u5893\u788f\u673a\u5236\uff1a\u5bf9\u4e8e\u4e0d\u652f\u6301\u5220\u9664\u7684\u7d22\u5f15\u7c7b\u578b\uff0c\u4f7f\u7528\u8f6f\u5220\u9664+\u5b9a\u671f\u91cd\u5efa\u5e73\u8861\u6027\u80fd\u4e0e\u5185\u5b58\u4f7f\u7528</li> <li>\u91cd\u590d\u68c0\u6d4b\uff1a\u901a\u8fc7\u5411\u91cf\u54c8\u5e0c\u907f\u514d\u91cd\u590d\u6570\u636e\uff0c\u4fdd\u6301\u7d22\u5f15\u8d28\u91cf</li> <li>\u4e0e\u5176\u4ed6\u65b9\u6848\u5bf9\u6bd4\uff1a\u76f8\u6bd4Annoy\u66f4\u7075\u6d3b\uff0c\u76f8\u6bd4\u7eaf\u66b4\u529b\u641c\u7d22\u6027\u80fd\u66f4\u4f18\uff0c\u76f8\u6bd4\u81ea\u7814\u65b9\u6848\u7a33\u5b9a\u6027\u66f4\u597d</li> </ul>"},{"location":"middleware/service/neuromem/vdb/faiss/#_6","title":"\u4e94\u3001\u652f\u6301\u7684\u7d22\u5f15\u7c7b\u578b","text":"\u7d22\u5f15\u7c7b\u578b \u7279\u70b9 \u9002\u7528\u573a\u666f \u652f\u6301\u5220\u9664 <code>IndexFlatL2</code> \u7cbe\u786e\u641c\u7d22\uff0cL2\u8ddd\u79bb \u5c0f\u89c4\u6a21\u6570\u636e\uff0c\u8981\u6c42100%\u53ec\u56de\u7387 \u2705 <code>IndexFlatIP</code> \u7cbe\u786e\u641c\u7d22\uff0c\u5185\u79ef\u8ddd\u79bb \u5c0f\u89c4\u6a21\u6570\u636e\uff0c\u5185\u79ef\u76f8\u4f3c\u5ea6\u8ba1\u7b97 \u2705 <code>IndexHNSWFlat</code> \u8fd1\u4f3c\u641c\u7d22\uff0c\u56fe\u7ed3\u6784 \u4e2d\u7b49\u89c4\u6a21\uff0c\u5e73\u8861\u7cbe\u5ea6\u548c\u901f\u5ea6 \u274c <code>IndexIVFFlat</code> \u5012\u6392\u7d22\u5f15+\u7cbe\u786e\u8ddd\u79bb \u5927\u89c4\u6a21\u6570\u636e\uff0c\u53ef\u8bad\u7ec3\u7684\u91cf\u5316 \u2705 <code>IndexIVFPQ</code> \u5012\u6392\u7d22\u5f15+\u4e58\u79ef\u91cf\u5316 \u8d85\u5927\u89c4\u6a21\uff0c\u5185\u5b58\u53d7\u9650 \u2705 <code>IndexIVFScalarQuantizer</code> \u5012\u6392\u7d22\u5f15+\u6807\u91cf\u91cf\u5316 \u5927\u89c4\u6a21\u6570\u636e\uff0c\u538b\u7f29\u6bd4\u8981\u6c42\u9002\u4e2d \u2705 <code>IndexLSH</code> \u5c40\u90e8\u654f\u611f\u54c8\u5e0c \u9ad8\u7ef4\u7a00\u758f\u5411\u91cf\uff0c\u8fd1\u4f3c\u641c\u7d22 \u274c <code>IndexPQ</code> \u7eaf\u4e58\u79ef\u91cf\u5316 \u5185\u5b58\u6781\u5ea6\u53d7\u9650\uff0c\u53ef\u63a5\u53d7\u7cbe\u5ea6\u635f\u5931 \u274c <code>IndexScalarQuantizer</code> \u6807\u91cf\u91cf\u5316 \u5e73\u8861\u5185\u5b58\u548c\u7cbe\u5ea6 \u2705"},{"location":"middleware/service/neuromem/vdb/faiss/#_7","title":"\u516d\u3001\u914d\u7f6e\u9879\uff08\u8fdb\u9636\uff09","text":""},{"location":"middleware/service/neuromem/vdb/faiss/#_8","title":"\u6027\u80fd\u8c03\u4f18\u914d\u7f6e","text":"\u914d\u7f6e\u952e \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e \u8c03\u4f18\u5efa\u8bae <code>tombstone_threshold</code> <code>int</code> <code>30</code> \u5893\u7891\u56de\u6536\u9608\u503c \u5220\u9664\u64cd\u4f5c\u9891\u7e41\u65f6\u8c03\u5c0f(10-20)\uff0c\u7a33\u5b9a\u73af\u5883\u53ef\u8c03\u5927(50-100) <code>IVF_NLIST</code> <code>int</code> <code>100</code> IVF\u805a\u7c7b\u4e2d\u5fc3\u6570 \u6570\u636e\u91cf\u5927\u65f6\u8c03\u5927(sqrt(N))\uff0c\u5c0f\u6570\u636e\u96c6\u53ef\u8c03\u5c0f <code>IVF_NPROBE</code> <code>int</code> <code>10</code> IVF\u641c\u7d22\u63a2\u67e5\u6570 \u53ec\u56de\u7387\u8981\u6c42\u9ad8\u65f6\u8c03\u5927\uff0c\u901f\u5ea6\u8981\u6c42\u9ad8\u65f6\u8c03\u5c0f <code>HNSW_M</code> <code>int</code> <code>32</code> HNSW\u8fde\u63a5\u5ea6 \u7cbe\u5ea6\u8981\u6c42\u9ad8\u8c03\u5927(48-64)\uff0c\u5185\u5b58\u53d7\u9650\u8c03\u5c0f(16-24) <code>HNSW_EF_CONSTRUCTION</code> <code>int</code> <code>200</code> HNSW\u6784\u5efa\u65f6\u5019\u9009\u6570 \u5927\u6570\u636e\u96c6\u8c03\u5927(400-800)\uff0c\u5feb\u901f\u6784\u5efa\u8c03\u5c0f(100-150) <code>HNSW_EF_SEARCH</code> <code>int</code> \u2014 HNSW\u641c\u7d22\u65f6\u5019\u9009\u6570 \u9ad8\u7cbe\u5ea6\u641c\u7d22\u8bbe\u4e3a64-512\uff0c\u5feb\u901f\u641c\u7d22\u8bbe\u4e3a16-32"},{"location":"middleware/service/neuromem/vdb/faiss/#_9","title":"\u5185\u5b58\u4f18\u5316\u914d\u7f6e","text":"\u914d\u7f6e\u952e \u7c7b\u578b \u9ed8\u8ba4\u503c \u8bf4\u660e \u5185\u5b58\u4f18\u5316\u5efa\u8bae <code>PQ_M</code> <code>int</code> <code>8</code> \u4e58\u79ef\u91cf\u5316\u5b50\u5411\u91cf\u6570 \u5185\u5b58\u7d27\u5f20\u65f6\u8c03\u5927\uff0c\u7cbe\u5ea6\u8981\u6c42\u9ad8\u65f6\u8c03\u5c0f <code>PQ_NBITS</code> <code>int</code> <code>8</code> \u91cf\u5316\u7f16\u7801\u4f4d\u6570 \u6781\u5ea6\u5185\u5b58\u53d7\u9650\u65f6\u8bbe\u4e3a4\uff0c\u4e00\u822c\u60c5\u51b5\u4fdd\u63018 <code>SQ_TYPE</code> <code>str</code> \u2014 \u6807\u91cf\u91cf\u5316\u7c7b\u578b \u5185\u5b58\u53d7\u9650\u7528<code>QT_4bit</code>\uff0c\u5e73\u8861\u573a\u666f\u7528<code>QT_8bit</code>"},{"location":"middleware/service/neuromem/vdb/faiss/#_10","title":"\u4f7f\u7528\u5efa\u8bae","text":"<p>\u7d22\u5f15\u9009\u62e9\u6307\u5357</p> <ul> <li>&lt; 10\u4e07\u5411\u91cf\uff1a\u4f7f\u7528 <code>IndexFlatL2</code>\uff0c\u4fdd\u8bc1100%\u51c6\u786e\u7387</li> <li>10\u4e07-100\u4e07\u5411\u91cf\uff1a\u4f7f\u7528 <code>IndexHNSWFlat</code>\uff0c\u5e73\u8861\u901f\u5ea6\u548c\u7cbe\u5ea6  </li> <li>100\u4e07-1000\u4e07\u5411\u91cf\uff1a\u4f7f\u7528 <code>IndexIVFFlat</code>\uff0c\u8bbe\u7f6e\u5408\u9002\u7684nlist</li> <li>&gt; 1000\u4e07\u5411\u91cf\uff1a\u4f7f\u7528 <code>IndexIVFPQ</code>\uff0c\u542f\u7528\u538b\u7f29</li> </ul> <p>\u6ce8\u610f\u4e8b\u9879</p> <ul> <li>\u5411\u91cf\u7ef4\u5ea6\u9700\u5728\u521d\u59cb\u5316\u65f6\u786e\u5b9a\uff0c\u540e\u7eed\u4e0d\u53ef\u66f4\u6539</li> <li>\u652f\u6301\u5220\u9664\u7684\u7d22\u5f15\u7c7b\u578b\u6027\u80fd\u66f4\u597d\uff0c\u4f46\u5185\u5b58\u5360\u7528\u8f83\u9ad8</li> <li>\u5893\u7891\u673a\u5236\u4f1a\u5b9a\u671f\u89e6\u53d1\u91cd\u5efa\uff0c\u6ce8\u610f\u5728\u4f4e\u5cf0\u671f\u8fdb\u884c</li> <li>\u5efa\u8bae\u5b9a\u671f\u5907\u4efd\u7d22\u5f15\u6570\u636e\uff0c\u907f\u514d\u610f\u5916\u4e22\u5931</li> </ul>"},{"location":"middleware/service/neuromem/vdb/vdb/","title":"SAGE VDBMemoryCollection \u7ec4\u4ef6","text":"<p>\u4e00\u53e5\u8bdd\u6982\u8ff0\uff1a\u672c\u8282\u4ecb\u7ecd VDBMemoryCollection\uff0c\u7528\u4e8e \u5411\u91cf\u6570\u636e\u5e93\u652f\u6301\u7684\u667a\u80fd\u5185\u5b58\u96c6\u5408\u7ba1\u7406\uff0c\u5e2e\u52a9\u4f60\u5728 RAG/Agent \u7cfb\u7edf \u4e2d\u5b8c\u6210 \u9ad8\u6548\u7684\u6587\u672c\u5b58\u50a8\u3001\u68c0\u7d22\u548c\u76f8\u4f3c\u6027\u641c\u7d22\u3002</p> <p>\u6ce8\u610f\uff0c\u5728\u4e86\u89e3\u672c\u8282\u4e4b\u524d\u9700\u8981\u63d0\u524d\u4e86\u89e3\u4ee5\u4e0b\u77e5\u8bc6\uff1a</p> <p>\u5148\u51b3\u6761\u4ef6\uff08Prerequisites\uff09</p> <ul> <li>\u57fa\u7840\u6982\u5ff5\uff1aRAG / Vector Database / Embedding / \u5143\u6570\u636e\u8fc7\u6ee4 </li> <li>\u76f8\u5173\u7ec4\u4ef6\uff1aBaseMemoryCollection / VDBIndex / EmbeddingModel</li> </ul>"},{"location":"middleware/service/neuromem/vdb/vdb/#_1","title":"\u4e00\u3001\u5feb\u901f\u5f00\u59cb","text":"<p>VDBMemoryCollection \u662f SAGE \u7cfb\u7edf\u4e2d\u7684\u6838\u5fc3\u5185\u5b58\u7ba1\u7406\u7ec4\u4ef6\uff0c\u5b83\u5c06\u4f20\u7edf\u7684\u6587\u672c\u5b58\u50a8\u4e0e\u73b0\u4ee3\u5411\u91cf\u6570\u636e\u5e93\u6280\u672f\u7ed3\u5408\uff0c\u4e3a RAG \u5e94\u7528\u63d0\u4f9b\u5f3a\u5927\u7684\u8bed\u4e49\u641c\u7d22\u80fd\u529b\u3002\u60f3\u8c61\u4f60\u6b63\u5728\u6784\u5efa\u4e00\u4e2a\u667a\u80fd\u95ee\u7b54\u7cfb\u7edf\uff0c\u9700\u8981\u4ece\u5927\u91cf\u6587\u6863\u4e2d\u5feb\u901f\u627e\u5230\u4e0e\u7528\u6237\u95ee\u9898\u6700\u76f8\u5173\u7684\u5185\u5bb9 \u2014 VDBMemoryCollection \u6b63\u662f\u4e3a\u6b64\u800c\u751f\u3002</p> Python\u52a0\u8f7d\u5df2\u6709\u96c6\u5408\u591a\u7d22\u5f15\u7ba1\u7406 \u6700\u5c0f\u53ef\u8fd0\u884c\u793a\u4f8b\uff08\u53ef\u62f7\u8d1d\u8fd0\u884c\uff09<pre><code>from sage.middleware.services.neuromem.memory_collection.vdb_collection import VDBMemoryCollection\n\ndef main():\n    # \u521b\u5efa\u914d\u7f6e\n    config = {\n        \"name\": \"my_knowledge_base\",\n        \"default_embedding_model\": \"mockembedder\",\n        \"default_dim\": 128,\n        \"default_topk\": 5,\n        \"default_vdb_backend\": \"FAISS\"\n    }\n\n    # \u521d\u59cb\u5316\u96c6\u5408\n    collection = VDBMemoryCollection(config=config)\n\n    # \u63d2\u5165\u6587\u6863\n    texts = [\n        \"Python\u662f\u4e00\u79cd\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\",\n        \"\u673a\u5668\u5b66\u4e60\u662f\u4eba\u5de5\u667a\u80fd\u7684\u91cd\u8981\u5206\u652f\",\n        \"\u5411\u91cf\u6570\u636e\u5e93\u7528\u4e8e\u9ad8\u6548\u7684\u76f8\u4f3c\u6027\u641c\u7d22\"\n    ]\n\n    for text in texts:\n        collection.insert(text, metadata={\"type\": \"knowledge\", \"source\": \"manual\"})\n\n    # \u8bed\u4e49\u68c0\u7d22\n    results = collection.retrieve(\"\u7f16\u7a0b\u8bed\u8a00\u76f8\u5173\u4fe1\u606f\", topk=2)\n    print(\"\u68c0\u7d22\u7ed3\u679c\uff1a\", results)\n\n    # \u4fdd\u5b58\u5230\u78c1\u76d8\n    collection.store(\"/path/to/save\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> \u4ece\u78c1\u76d8\u52a0\u8f7d\u5df2\u4fdd\u5b58\u7684\u96c6\u5408<pre><code>from sage.middleware.services.neuromem.memory_collection.vdb_collection import VDBMemoryCollection\n\n# \u4ece\u78c1\u76d8\u52a0\u8f7d\ncollection = VDBMemoryCollection.load(\n    name=\"my_knowledge_base\", \n    vdb_path=\"/path/to/save/vdb_collection/my_knowledge_base\"\n)\n\n# \u7ee7\u7eed\u4f7f\u7528\nresults = collection.retrieve(\"\u673a\u5668\u5b66\u4e60\", topk=3, with_metadata=True)\nfor result in results:\n    print(f\"\u6587\u672c: {result['text']}\")\n    print(f\"\u5143\u6570\u636e: {result['metadata']}\")\n</code></pre> \u521b\u5efa\u548c\u7ba1\u7406\u591a\u4e2a\u4e13\u7528\u7d22\u5f15<pre><code># \u521b\u5efa\u4e13\u7528\u7d22\u5f15\ncollection.create_index(config={\n    \"name\": \"tech_docs\",\n    \"description\": \"\u6280\u672f\u6587\u6863\u4e13\u7528\u7d22\u5f15\",\n    \"embedding_model\": \"sentence-transformers/all-MiniLM-L6-v2\",\n    \"dim\": 384\n})\n\n# \u5411\u7279\u5b9a\u7d22\u5f15\u63d2\u5165\u6570\u636e\ncollection.insert(\n    \"FastAPI\u662f\u4e00\u4e2a\u73b0\u4ee3\u7684Python Web\u6846\u67b6\",\n    metadata={\"category\": \"tech\", \"framework\": \"fastapi\"},\n    \"tech_docs\"\n)\n\n# \u4ece\u7279\u5b9a\u7d22\u5f15\u68c0\u7d22\nresults = collection.retrieve(\n    \"Web\u6846\u67b6\",\n    index_name=\"tech_docs\",\n    topk=5\n)\n</code></pre>"},{"location":"middleware/service/neuromem/vdb/vdb/#api","title":"\u4e8c\u3001API \u6982\u89c8\uff08\u7b7e\u540d / \u5165\u53e3 / \u901f\u67e5\uff09","text":"<p>\u8fd9\u91cc\u653e**\u6700\u5e38\u7528**\u7684\u5165\u53e3\u4e0e\u7b7e\u540d\uff1b\u8be6\u7ec6\u53c2\u6570\u653e\u5230\u4e0b\u4e00\u8282\"\u53c2\u6570 &amp; \u8fd4\u56de\"\u3002</p> Python API \u7b7e\u540d<pre><code>class VDBMemoryCollection(BaseMemoryCollection):\n    def __init__(self, config: Dict[str, Any]): ...\n\n    # \u6570\u636e\u7ba1\u7406\n    def insert(self, raw_text: str, metadata: Optional[Dict[str, Any]] = None, *index_names) -&gt; str: ...\n    def batch_insert_data(self, data: List[str], metadatas: Optional[List[Dict[str, Any]]] = None): ...\n    def update(self, former_data: str, new_data: str, new_metadata: Optional[Dict[str, Any]] = None, *index_names: str) -&gt; str: ...\n    def delete(self, raw_text: str): ...\n\n    # \u68c0\u7d22\u529f\u80fd\n    def retrieve(self, raw_data: str, topk: Optional[int] = None, index_name: Optional[str] = None, \n                threshold: Optional[float] = None, with_metadata: bool = False,\n                metadata_filter_func: Optional[Callable] = None, **metadata_conditions): ...\n\n    # \u7d22\u5f15\u7ba1\u7406\n    def create_index(self, config: Optional[dict] = None, metadata_filter_func: Optional[Callable] = None, **metadata_conditions): ...\n    def delete_index(self, index_name: str): ...\n    def list_index(self, *index_names) -&gt; List[Dict[str, str]]: ...\n    def update_index(self, index_name: str): ...\n\n    # \u6301\u4e45\u5316\n    def store(self, store_path: Optional[str] = None): ...\n    @classmethod\n    def load(cls, name: str, vdb_path: Optional[str] = None): ...\n    @staticmethod\n    def clear(name, clear_path=None): ...\n</code></pre>"},{"location":"middleware/service/neuromem/vdb/vdb/#_2","title":"\u4e09\u3001\u53c2\u6570 &amp; \u8fd4\u56de &amp; \u9519\u8bef","text":""},{"location":"middleware/service/neuromem/vdb/vdb/#config","title":"\u521d\u59cb\u5316\u53c2\u6570\uff08Config\uff09","text":"\u540d\u79f0 \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>name</code> <code>str</code> \u662f \u2014 \u96c6\u5408\u540d\u79f0\uff0c\u7528\u4e8e\u6807\u8bc6\u548c\u6301\u4e45\u5316 <code>default_embedding_model</code> <code>str</code> \u5426 <code>\"default\"</code> \u9ed8\u8ba4\u5411\u91cf\u5316\u6a21\u578b\u540d\u79f0 <code>default_dim</code> <code>int</code> \u5426 <code>\u6a21\u578b\u81ea\u52a8\u83b7\u53d6</code> / <code>128</code> \u9ed8\u8ba4\u5411\u91cf\u7ef4\u5ea6 <code>default_topk</code> <code>int</code> \u5426 <code>5</code> \u9ed8\u8ba4\u68c0\u7d22\u8fd4\u56de\u6570\u91cf <code>default_vdb_backend</code> <code>str</code> \u5426 <code>\"FAISS\"</code> \u9ed8\u8ba4\u5411\u91cf\u6570\u636e\u5e93\u540e\u7aef\uff08\u652f\u6301 FAISS \u7b49\uff09 <code>global_index</code> <code>dict</code> \u5426 <code>\u81ea\u52a8\u751f\u6210</code> \u5168\u5c40\u7d22\u5f15\u914d\u7f6e\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa global_index"},{"location":"middleware/service/neuromem/vdb/vdb/#retrieve","title":"\u68c0\u7d22\u53c2\u6570\uff08Retrieve\uff09","text":"\u540d\u79f0 \u7c7b\u578b \u5fc5\u586b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>raw_data</code> <code>str</code> \u662f \u2014 \u67e5\u8be2\u6587\u672c <code>topk</code> <code>int</code> \u5426 <code>default_topk</code> \u8fd4\u56de\u7ed3\u679c\u6570\u91cf <code>index_name</code> <code>str</code> \u5426 <code>\u5168\u5c40\u7d22\u5f15</code> \u6307\u5b9a\u641c\u7d22\u7684\u7d22\u5f15\u540d\u79f0 <code>threshold</code> <code>float</code> \u5426 <code>None</code> \u76f8\u4f3c\u5ea6\u9608\u503c\u8fc7\u6ee4 <code>with_metadata</code> <code>bool</code> \u5426 <code>False</code> \u662f\u5426\u8fd4\u56de\u5143\u6570\u636e <code>metadata_filter_func</code> <code>Callable[[Dict], bool]</code> \u5426 <code>None</code> \u5143\u6570\u636e\u8fc7\u6ee4\u51fd\u6570 <code>**metadata_conditions</code> <code>Any</code> \u5426 <code>{}</code> \u5143\u6570\u636e\u7cbe\u786e\u5339\u914d\u6761\u4ef6"},{"location":"middleware/service/neuromem/vdb/vdb/#returns","title":"\u8fd4\u56de\u683c\u5f0f\uff08Returns\uff09","text":"\u65b9\u6cd5 \u8fd4\u56de\u7c7b\u578b \u8bf4\u660e <code>insert</code> <code>str</code> \u8fd4\u56de\u751f\u6210\u7684\u7a33\u5b9aID\uff08SHA256\u54c8\u5e0c\uff09 <code>retrieve</code> <code>List[str]</code> / <code>List[Dict]</code> \u6587\u672c\u5217\u8868 \u6216 \u5305\u542b\u6587\u672c\u548c\u5143\u6570\u636e\u7684\u5b57\u5178\u5217\u8868 <code>create_index</code> <code>int</code> \u6210\u529f\u8fd4\u56de1\uff0c\u5931\u8d25\u8fd4\u56de0 <code>list_index</code> <code>List[Dict[str, str]]</code> \u7d22\u5f15\u4fe1\u606f\u5217\u8868\uff1a<code>[{\"name\": ..., \"description\": ...}]</code> <code>store</code> <code>Dict</code> \u5b58\u50a8\u8def\u5f84\u4fe1\u606f\uff1a<code>{\"collection_path\": path}</code>"},{"location":"middleware/service/neuromem/vdb/vdb/#errors","title":"\u5f02\u5e38 / \u9519\u8bef\u7801\uff08Errors\uff09","text":"\u9519\u8bef \u89e6\u53d1\u6761\u4ef6 \u5efa\u8bae\u4fee\u590d <code>ValueError: config\u4e2d\u5fc5\u987b\u5305\u542b'name'\u5b57\u6bb5</code> \u521d\u59cb\u5316\u65f6config\u7f3a\u5c11name\u5b57\u6bb5 \u786e\u4fddconfig\u5305\u542bname\u5b57\u6bb5 <code>ValueError: Index 'xxx' does not exist</code> \u64cd\u4f5c\u4e0d\u5b58\u5728\u7684\u7d22\u5f15 \u5148\u7528list_index\u68c0\u67e5\u7d22\u5f15\u662f\u5426\u5b58\u5728 <code>ValueError: Original data not found</code> \u66f4\u65b0\u65f6\u627e\u4e0d\u5230\u539f\u59cb\u6570\u636e \u786e\u8ba4\u8981\u66f4\u65b0\u7684\u6570\u636e\u786e\u5b9e\u5b58\u5728 <code>FileNotFoundError</code> \u52a0\u8f7d\u65f6\u627e\u4e0d\u5230\u914d\u7f6e\u6587\u4ef6 \u68c0\u67e5\u8def\u5f84\u548c\u6587\u4ef6\u662f\u5426\u5b58\u5728 <code>NotImplementedError</code> \u4f7f\u7528\u4e0d\u652f\u6301\u7684\u7d22\u5f15\u7c7b\u578b \u4f7f\u7528FAISS\u7b49\u652f\u6301\u7684\u540e\u7aef\u7c7b\u578b"},{"location":"middleware/service/neuromem/vdb/vdb/#_3","title":"\u56db\u3001\u5de5\u4f5c\u673a\u5236\uff08\u7531\u6d45\u5165\u6df1\uff09","text":"<pre><code>sequenceDiagram\n  participant U as User\n  participant VDB as VDBMemoryCollection\n  participant TS as TextStorage\n  participant MS as MetadataStorage\n  participant IDX as VDBIndex\n  participant EM as EmbeddingModel\n\n  U-&gt;&gt;VDB: insert(text, metadata)\n  VDB-&gt;&gt;VDB: \u751f\u6210stable_id\n  VDB-&gt;&gt;TS: store(stable_id, text)\n  VDB-&gt;&gt;MS: store(stable_id, metadata)\n  VDB-&gt;&gt;EM: encode(text)\n  EM--&gt;&gt;VDB: vector\n  VDB-&gt;&gt;IDX: insert(vector, stable_id)\n  VDB--&gt;&gt;U: stable_id\n\n  U-&gt;&gt;VDB: retrieve(query, topk)\n  VDB-&gt;&gt;EM: encode(query)\n  EM--&gt;&gt;VDB: query_vector\n  VDB-&gt;&gt;IDX: search(query_vector, topk)\n  IDX--&gt;&gt;VDB: [ids, distances]\n  VDB-&gt;&gt;VDB: apply_metadata_filter\n  VDB-&gt;&gt;TS: get_texts(filtered_ids)\n  VDB-&gt;&gt;MS: get_metadata(filtered_ids)\n  VDB--&gt;&gt;U: results</code></pre> <p>\u8bbe\u8ba1\u52a8\u673a / \u53d6\u820d</p> <ul> <li>\u9009\u62e9\u5206\u79bb\u5f0f\u5b58\u50a8\u8bbe\u8ba1\uff1a\u6587\u672c\u3001\u5143\u6570\u636e\u3001\u5411\u91cf\u7d22\u5f15\u5206\u522b\u5b58\u50a8\uff0c\u4fbf\u4e8e\u7075\u6d3b\u7ba1\u7406\u548c\u6269\u5c55</li> <li>\u591a\u7d22\u5f15\u652f\u6301\uff1a\u5141\u8bb8\u4e3a\u4e0d\u540c\u7528\u9014\u521b\u5efa\u4e13\u7528\u7d22\u5f15\uff0c\u63d0\u9ad8\u68c0\u7d22\u7cbe\u5ea6\u548c\u6027\u80fd</li> <li>\u4e0e\u4f20\u7edf\u5168\u6587\u68c0\u7d22\u7684\u6298\u4e2d\uff1a\u727a\u7272\u4e86\u5b8c\u5168\u7684\u6587\u672c\u5339\u914d\u7cbe\u5ea6\uff0c\u6362\u53d6\u8bed\u4e49\u76f8\u4f3c\u6027\u68c0\u7d22\u80fd\u529b</li> <li>embedding\u6a21\u578b\u53ef\u914d\u7f6e\uff1a\u4e0d\u540c\u7d22\u5f15\u53ef\u4f7f\u7528\u4e0d\u540c\u7684embedding\u6a21\u578b\uff0c\u5e73\u8861\u6027\u80fd\u548c\u6548\u679c</li> </ul>"},{"location":"middleware/service/neuromem/vdb/vdb/#_4","title":"\u6838\u5fc3\u7279\u6027","text":"<ol> <li>\u667a\u80fd\u7d22\u5f15\u7ba1\u7406\uff1a</li> <li>\u81ea\u52a8\u521b\u5efa\u5168\u5c40\u7d22\u5f15 <code>global_index</code></li> <li>\u652f\u6301\u591a\u4e2a\u4e13\u7528\u7d22\u5f15\uff0c\u6bcf\u4e2a\u7d22\u5f15\u53ef\u914d\u7f6e\u4e0d\u540c\u7684embedding\u6a21\u578b</li> <li> <p>\u7d22\u5f15\u7ea7\u522b\u7684\u5143\u6570\u636e\u8fc7\u6ee4\u652f\u6301</p> </li> <li> <p>\u7075\u6d3b\u7684\u6570\u636e\u64cd\u4f5c\uff1a</p> </li> <li>\u5355\u6761\u548c\u6279\u91cf\u6570\u636e\u63d2\u5165</li> <li>\u57fa\u4e8e\u7a33\u5b9aID\u7684\u6570\u636e\u66f4\u65b0\u548c\u5220\u9664</li> <li> <p>\u589e\u91cf\u7d22\u5f15\u66f4\u65b0\u673a\u5236</p> </li> <li> <p>\u5f3a\u5927\u7684\u68c0\u7d22\u80fd\u529b\uff1a</p> </li> <li>\u8bed\u4e49\u76f8\u4f3c\u6027\u641c\u7d22</li> <li>\u5143\u6570\u636e\u8fc7\u6ee4\uff08\u51fd\u6570\u5f0f + \u6761\u4ef6\u5f0f\uff09</li> <li> <p>\u9608\u503c\u8fc7\u6ee4\u548ctopk\u9650\u5236</p> </li> <li> <p>\u6301\u4e45\u5316\u652f\u6301\uff1a</p> </li> <li>\u5b8c\u6574\u7684\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316</li> <li>Lambda\u51fd\u6570\u7684\u5e8f\u5217\u5316\u652f\u6301</li> <li>\u589e\u91cf\u52a0\u8f7d\u548c\u4fdd\u5b58</li> </ol>"},{"location":"middleware/service/neuromem/vdb/vdb/#_5","title":"\u4e94\u3001\u4f7f\u7528\u573a\u666f\u548c\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"middleware/service/neuromem/vdb/vdb/#_6","title":"\u5178\u578b\u4f7f\u7528\u573a\u666f","text":"<ol> <li> <p>RAG\u77e5\u8bc6\u5e93\u6784\u5efa\uff1a    <pre><code># \u6784\u5efa\u4f01\u4e1a\u77e5\u8bc6\u5e93\nkb_config = {\n    \"name\": \"enterprise_kb\",\n    \"default_embedding_model\": \"text-embedding-ada-002\",\n    \"default_dim\": 1536,\n    \"default_topk\": 10\n}\nkb = VDBMemoryCollection(config=kb_config)\n\n# \u6309\u90e8\u95e8\u521b\u5efa\u4e13\u7528\u7d22\u5f15\nkb.create_index(config={\n    \"name\": \"tech_docs\",\n    \"description\": \"\u6280\u672f\u6587\u6863\u7d22\u5f15\"\n})\n</code></pre></p> </li> <li> <p>\u591a\u6a21\u6001\u5185\u5bb9\u7ba1\u7406\uff1a    <pre><code># \u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u5185\u5bb9\u521b\u5efa\u4e0d\u540c\u7d22\u5f15\ncollection.create_index(config={\n    \"name\": \"code_snippets\", \n    \"embedding_model\": \"code-search-net\",\n    \"description\": \"\u4ee3\u7801\u7247\u6bb5\u7d22\u5f15\"\n})\n\ncollection.create_index(config={\n    \"name\": \"documentation\",\n    \"embedding_model\": \"sentence-transformers/all-MiniLM-L6-v2\", \n    \"description\": \"\u6587\u6863\u7d22\u5f15\"\n})\n</code></pre></p> </li> <li> <p>\u52a8\u6001\u5185\u5bb9\u8fc7\u6ee4\uff1a    <pre><code># \u57fa\u4e8e\u5143\u6570\u636e\u7684\u52a8\u6001\u8fc7\u6ee4\nresults = collection.retrieve(\n    \"\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\",\n    topk=5,\n    metadata_filter_func=lambda m: m.get(\"difficulty\") == \"beginner\",\n    category=\"tutorial\"\n)\n</code></pre></p> </li> </ol>"},{"location":"middleware/service/neuromem/vdb/vdb/#_7","title":"\u6027\u80fd\u4f18\u5316\u5efa\u8bae","text":"<ol> <li>\u7d22\u5f15\u7ba1\u7406\u4f18\u5316\uff1a</li> <li>\u4e3a\u4e0d\u540c\u4e1a\u52a1\u573a\u666f\u521b\u5efa\u4e13\u7528\u7d22\u5f15\uff0c\u907f\u514d\u5728\u5355\u4e00\u5927\u7d22\u5f15\u4e2d\u641c\u7d22</li> <li>\u5408\u7406\u8bbe\u7f6eembedding\u6a21\u578b\u7ef4\u5ea6\uff0c\u5e73\u8861\u7cbe\u5ea6\u548c\u6027\u80fd</li> <li> <p>\u5b9a\u671f\u4f7f\u7528 <code>update_index()</code> \u91cd\u5efa\u7d22\u5f15\u4ee5\u4f18\u5316\u6027\u80fd</p> </li> <li> <p>\u5185\u5b58\u548c\u5b58\u50a8\u4f18\u5316\uff1a</p> </li> <li>\u5927\u91cf\u6570\u636e\u65f6\u4f7f\u7528 <code>batch_insert_data()</code> \u6279\u91cf\u63d2\u5165</li> <li>\u5b9a\u671f\u6e05\u7406\u4e0d\u9700\u8981\u7684\u7d22\u5f15\u548c\u6570\u636e</li> <li> <p>\u5408\u7406\u914d\u7f6eFAISS\u7d22\u5f15\u7c7b\u578b\uff08HNSW/IVF\u7b49\uff09</p> </li> <li> <p>\u68c0\u7d22\u4f18\u5316\uff1a</p> </li> <li>\u4f7f\u7528\u5143\u6570\u636e\u8fc7\u6ee4\u7f29\u5c0f\u641c\u7d22\u8303\u56f4</li> <li>\u8bbe\u7f6e\u5408\u7406\u7684topk\u503c\uff0c\u907f\u514d\u8fd4\u56de\u8fc7\u591a\u65e0\u5173\u7ed3\u679c</li> <li>\u5229\u7528threshold\u53c2\u6570\u8fc7\u6ee4\u4f4e\u76f8\u4f3c\u5ea6\u7ed3\u679c</li> </ol>"},{"location":"middleware/service/neuromem/vdb/vdb/#_8","title":"\u516d\u3001\u914d\u7f6e\u9879\uff08\u8fdb\u9636\uff09","text":""},{"location":"middleware/service/neuromem/vdb/vdb/#vdbmemorycollection","title":"VDBMemoryCollection\u914d\u7f6e","text":"\u914d\u7f6e\u952e \u7c7b\u578b \u9ed8\u8ba4 \u8bf4\u660e \u8c03\u4f18\u5efa\u8bae <code>default_embedding_model</code> <code>str</code> <code>\"default\"</code> \u9ed8\u8ba4\u5411\u91cf\u5316\u6a21\u578b \u6839\u636e\u6570\u636e\u7c7b\u578b\u9009\u62e9\u5408\u9002\u6a21\u578b\uff1a\u4ee3\u7801\u7528CodeBERT\uff0c\u6587\u672c\u7528sentence-transformers <code>default_dim</code> <code>int</code> <code>128</code> \u9ed8\u8ba4\u5411\u91cf\u7ef4\u5ea6 \u9ad8\u7cbe\u5ea6\u573a\u666f\u75281536\uff0c\u6027\u80fd\u4f18\u5148\u7528384 <code>default_topk</code> <code>int</code> <code>5</code> \u9ed8\u8ba4\u8fd4\u56de\u6570\u91cf \u6839\u636e\u5e94\u7528\u573a\u666f\u8c03\u6574\uff1a\u95ee\u7b54\u75283-5\uff0c\u63a8\u8350\u752810-20 <code>default_vdb_backend</code> <code>str</code> <code>\"FAISS\"</code> \u5411\u91cf\u6570\u636e\u5e93\u540e\u7aef \u76ee\u524d\u4e3b\u8981\u652f\u6301FAISS\uff0c\u672a\u6765\u53ef\u6269\u5c55\u5176\u4ed6\u540e\u7aef"},{"location":"middleware/service/neuromem/vdb/vdb/#_9","title":"\u7d22\u5f15\u7ea7\u914d\u7f6e","text":"\u914d\u7f6e\u952e \u7c7b\u578b \u9ed8\u8ba4 \u8bf4\u660e \u8c03\u4f18\u5efa\u8bae <code>embedding_model</code> <code>str</code> <code>\u7ee7\u627fcollection\u9ed8\u8ba4</code> \u7d22\u5f15\u4e13\u7528\u6a21\u578b \u4e0d\u540c\u6570\u636e\u7c7b\u578b\u4f7f\u7528\u4e0d\u540c\u6a21\u578b\u63d0\u9ad8\u7cbe\u5ea6 <code>backend_type</code> <code>str</code> <code>\"FAISS\"</code> \u7d22\u5f15\u540e\u7aef\u7c7b\u578b \u53ef\u914d\u7f6e\u4e0d\u540cFAISS\u7d22\u5f15\u7c7b\u578b\u4f18\u5316\u6027\u80fd <code>description</code> <code>str</code> <code>\"\"</code> \u7d22\u5f15\u63cf\u8ff0 \u4fbf\u4e8e\u7ba1\u7406\u548c\u7ef4\u62a4\u591a\u4e2a\u7d22\u5f15"},{"location":"middleware/service/neuromem/vdb/vdb/#faiss","title":"FAISS\u7d22\u5f15\u7c7b\u578b\u914d\u7f6e","text":"\u7d22\u5f15\u7c7b\u578b \u9002\u7528\u573a\u666f \u5185\u5b58\u5360\u7528 \u641c\u7d22\u901f\u5ea6 \u7cbe\u5ea6 <code>IndexFlatL2</code> \u5c0f\u6570\u636e\u96c6\u3001\u9ad8\u7cbe\u5ea6\u8981\u6c42 \u9ad8 \u4e2d\u7b49 \u6700\u9ad8 <code>IndexHNSWFlat</code> \u4e2d\u7b49\u6570\u636e\u96c6\u3001\u5e73\u8861\u6027\u80fd \u4e2d\u7b49 \u5feb \u9ad8 <code>IndexIVFFlat</code> \u5927\u6570\u636e\u96c6 \u4f4e \u5feb \u4e2d\u7b49 <code>IndexIVFPQ</code> \u8d85\u5927\u6570\u636e\u96c6\u3001\u5185\u5b58\u654f\u611f \u6700\u4f4e \u6700\u5feb \u4e2d\u7b49 <p>\u57fa\u4e8e\u4f60\u7684\u5177\u4f53\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u914d\u7f6e\uff0cVDBMemoryCollection \u5c06\u4e3a\u4f60\u7684 RAG \u5e94\u7528\u63d0\u4f9b\u5f3a\u5927\u800c\u7075\u6d3b\u7684\u5411\u91cf\u5316\u5185\u5b58\u7ba1\u7406\u80fd\u529b\u3002</p>"},{"location":"middleware/service/sage-db/sage_db_service/","title":"SAGE-DB Service\uff08\u901a\u8fc7 VDB Service \u96c6\u6210\uff09","text":"<p>SAGE-DB \u662f\u4f01\u4e1a\u7248\u7684\u9ad8\u6027\u80fd\u5411\u91cf\u6570\u636e\u5e93\u7ec4\u4ef6\uff0c\u4f4d\u4e8e enterprise/sage_db/\u3002\u5728\u670d\u52a1\u5c42\u63a8\u8350\u901a\u8fc7 VDB Service \u5bf9\u63a5\u4f7f\u7528\uff0c\u5373\u201cVDB Service\uff08SAGE-DB \u540e\u7aef\uff09\u201d\u3002\u5f53\u4f01\u4e1a\u7ec4\u4ef6\u53ef\u7528\u65f6\uff0cVDB Service \u53ef\u5c06 SAGE-DB \u4f5c\u4e3a\u5e95\u5c42\u5f15\u64ce\u6765\u63d0\u4f9b\u5411\u91cf\u96c6\u5408\u7ba1\u7406\u3001\u6279\u91cf\u5199\u5165\u4e0e\u76f8\u4f3c\u68c0\u7d22\u7b49\u80fd\u529b\u3002</p> <ul> <li>\u7ec4\u4ef6\u4ee3\u7801\u4f4d\u7f6e\uff1apackages/sage-middleware/src/sage/middleware/enterprise/sage_db/</li> <li>\u6838\u5fc3\uff1asage_db.py\uff08Python \u5c01\u88c5\uff0c\u5bfc\u51fa SageDB/IndexType/SearchParams \u7b49\uff09</li> <li>C++ \u6e90\u7801\uff1ainclude/sage_db/*.h\u3001src/sage_db.cpp</li> <li>Python \u5360\u4f4d\u63a5\u53e3\uff08\u6700\u5c0f\u6a21\u5f0f\uff09\uff1apython/sage_db.py</li> <li>\u4f01\u4e1a\u5bfc\u51fa\u5165\u53e3\uff1aenterprise/sage_db/init.py\uff08is_available(), get_status() \u7b49\uff09</li> <li>\u670d\u52a1\u5bf9\u63a5\uff1a\u901a\u8fc7 VDB Service \u7edf\u4e00\u66b4\u9732 API\uff08services/vdb/\uff09</li> <li>\u5bfc\u51fa\uff1aservices/vdb/init.py \u63d0\u4f9b VDBService, create_vdb_service_factory</li> <li>\u793a\u4f8b\uff1aservices/vdb/examples/vdb_demo.py \u5c55\u793a add_vectors(), search(), get_vector() \u7b49</li> </ul> <p>\u8bf4\u660e\uff1a - \u672c\u6587\u4ee5\u201cVDB Service\uff08SAGE-DB \u540e\u7aef\uff09\u201d\u4f5c\u4e3a SAGE-DB \u7684\u670d\u52a1\u5f62\u6001\u8fdb\u884c\u8bf4\u660e - \u82e5\u4f60\u9700\u8981\u66f4\u5e95\u5c42\u7684\u81ea\u5b9a\u4e49\u670d\u52a1\u5c01\u88c5\uff0c\u53ef\u5728\u4f60\u7684 Service \u5185\u76f4\u63a5\u4f7f\u7528 enterprise.sage_db.SageDB</p>"},{"location":"middleware/service/sage-db/sage_db_service/#_1","title":"\u4e00\u3001\u7f16\u8bd1\u4e0e\u53ef\u7528\u6027\u68c0\u67e5","text":"<p>\u4f01\u4e1a\u7ec4\u4ef6\u53ef\u7528\u6027\u53d6\u51b3\u4e8e\u6784\u5efa\u4e0e\u8bb8\u53ef\u8bc1\u3002\u5e38\u89c1\u8def\u5f84\u5982\u4e0b\uff08\u8bf7\u4ee5\u4f60\u4ed3\u5e93\u7248\u672c\u7684\u6784\u5efa\u811a\u672c\u4e3a\u51c6\uff09\uff1a</p> <p>1) \u5b89\u88c5\u4e2d\u95f4\u4ef6\uff08\u5f00\u53d1\u6001\uff09 <pre><code># \u4ed3\u5e93\u6839\u76ee\u5f55\npip install -e packages/sage-middleware\n</code></pre></p> <p>2) \u5728\u4f01\u4e1a\u6a21\u5757\u76ee\u5f55\u4e0b\u5b89\u88c5/\u6784\u5efa\uff08\u82e5\u72ec\u7acb\uff09 <pre><code>cd packages/sage-middleware/src/sage/middleware/enterprise/sage_db\n# \u82e5\u63d0\u4f9b pyproject/setup.py\npip install -v .\n# \u6216\uff08\u542b C++ \u6269\u5c55\u7684\u5e38\u89c1\u547d\u4ee4\uff09\npython setup.py build_ext --inplace -j4\npython setup.py install\n</code></pre></p> <p>3) \u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u53ef\u7528\u6027 <pre><code>from sage.middleware.enterprise import sage_db as enterprise_sage_db\n\nif enterprise_sage_db.is_available():\n    print(\"SAGE-DB ready:\", enterprise_sage_db.get_status())\nelse:\n    print(\"SAGE-DB unavailable, fallback to other VDB backends\")\n</code></pre></p>"},{"location":"middleware/service/sage-db/sage_db_service/#vdb-service","title":"\u4e8c\u3001\u4ee5 VDB Service \u5f62\u6001\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1","text":"<p>VDB Service \u662f\u4e0a\u5c42\u7edf\u4e00\u7684\u201c\u5411\u91cf\u6570\u636e\u5e93\u670d\u52a1\u201d\uff0c\u5f53 SAGE-DB \u53ef\u7528\u4e14\u914d\u7f6e\u4e3a\u540e\u7aef\u65f6\uff0c\u5373\u6784\u6210\u201cSAGE-DB Service\u201d\u3002</p> <ul> <li>\u5e38\u89c1\u65b9\u6cd5\uff08\u53c2\u89c1 examples/README \u4e0e vdb_demo.py\uff09</li> <li>add_vectors(vectors, ids?, metadata?)</li> <li>search(query, top_k, filters?)</li> <li>get_vector(id)</li> <li>\u5176\u4ed6\u5982\u96c6\u5408\u7ba1\u7406\u3001\u66f4\u65b0/\u5220\u9664\u7b49\u4ee5\u4f60\u672c\u5730\u7248\u672c\u5b9e\u73b0\u4e3a\u51c6</li> </ul>"},{"location":"middleware/service/sage-db/sage_db_service/#1-vdb-service","title":"1) \u6ce8\u518c VDB Service","text":"<pre><code>from sage.core.api.local_environment import LocalEnvironment\nfrom sage.middleware.services.vdb import VDBService  # services/vdb/__init__.py \u5bfc\u51fa\n\ndef vdb_service_factory():\n    # \u5982\u679c VDBService \u652f\u6301\u901a\u8fc7\u6784\u9020\u53c2\u6570/\u914d\u7f6e\u9009\u62e9\u540e\u7aef\uff0c\u53ef\u5728\u6b64\u6307\u5b9a SAGE-DB\n    # \u4f8b\u5982\uff1aVDBService(backend=\"sage_db\", config={...})\n    # \u82e5\u5f53\u524d\u7248\u672c\u4e0d\u652f\u6301\u663e\u5f0f\u6307\u5b9a\uff0c\u901a\u5e38\u5728\u5185\u90e8\u68c0\u6d4b enterprise.sage_db \u53ef\u7528\u6027\u5e76\u9009\u7528\n    return VDBService()\n\nenv = LocalEnvironment(\"sage_db_service_demo\")\nenv.register_service(\"vdb_service\", vdb_service_factory)\n</code></pre>"},{"location":"middleware/service/sage-db/sage_db_service/#2-function","title":"2) \u5728 Function \u4e2d\u8c03\u7528","text":"<pre><code>from sage.core.api.function.base_function import BaseFunction\n\nclass VectorWorkflow(BaseFunction):\n    def execute(self, data):\n        vectors = data[\"vectors\"]         # List[List[float]]\n        ids = data.get(\"ids\")             # Optional[List[str]]\n        metadata = data.get(\"metadata\")   # Optional[List[dict]]\n\n        # \u5199\u5165\u5411\u91cf\n        self.call_service[\"vdb_service\"].add_vectors(\n            vectors=vectors, ids=ids, metadata=metadata\n        )\n\n        # \u76f8\u4f3c\u68c0\u7d22\n        results = self.call_service[\"vdb_service\"].search(\n            query=data[\"query_vector\"], top_k=data.get(\"top_k\", 5),\n            filters=data.get(\"filters\")\n        )\n\n        # \u8bfb\u53d6\u5355\u6761\u5411\u91cf\n        item = None\n        if ids:\n            item = self.call_service[\"vdb_service\"].get_vector(ids[0])\n\n        return {\"results\": results, \"first_item\": item}\n</code></pre> <ul> <li>\u5f02\u6b65\u8c03\u7528   <pre><code>fut = self.call_service_async[\"vdb_service\"].search(query=q, top_k=10)\nasync_results = fut.result(timeout=5)\n</code></pre></li> </ul>"},{"location":"middleware/service/sage-db/sage_db_service/#sage-db-vdb","title":"\u4e09\u3001SAGE-DB \u7ec4\u4ef6\u80fd\u529b\u4e0e VDB \u6620\u5c04\uff08\u6982\u89c8\uff09","text":"<p>SAGE-DB \u7ec4\u4ef6\u5bfc\u51fa\u4e30\u5bcc\u7684\u6838\u5fc3 API/\u7c7b\u578b\uff08\u4ee5\u4f01\u4e1a\u6a21\u5757\u4e3a\u51c6\uff09\uff1a - \u7c7b\u578b\u4e0e\u679a\u4e3e\uff1aIndexType, DistanceMetric, SearchParams, QueryResult, DatabaseConfig - \u6838\u5fc3\u7c7b\uff1aSageDB   - add / batch_add / update / delete\uff08\u6309\u5b9e\u73b0\uff09   - search / batch_search\uff08\u76f8\u4f3c\u68c0\u7d22/\u6279\u68c0\u7d22\uff09   - build_index / train_index / is_trained\uff08\u7d22\u5f15\u7ba1\u7406\uff09   - set_metadata / get_metadata / find_by_metadata\uff08\u5143\u6570\u636e\u64cd\u4f5c\uff09   - save / load\uff08\u6301\u4e45\u5316\uff09   - size / dimension / index_type / config\uff08\u72b6\u6001\u4e0e\u7edf\u8ba1\uff09   - query_engine()/vector_store()/metadata_store()\uff08\u9ad8\u7ea7\u63a5\u53e3\uff09</p> <p>\u5728\u670d\u52a1\u5c42\uff08VDB Service\uff09\uff0c\u901a\u5e38\u66b4\u9732\u7684\u662f\u201c\u5bf9\u4e0a\u7a33\u5b9a\u7684\u5c11\u91cf\u65b9\u6cd5\u65cf\u201d\uff08add_vectors/search/get_vector \u7b49\uff09\uff0c\u5e76\u5728\u5185\u90e8\u5c06\u914d\u7f6e\u4e0e\u641c\u7d22\u53c2\u6570\u7ffb\u8bd1\u4e3a SageDB \u7684 SearchParams/\u7d22\u5f15\u7c7b\u578b\u7b49\u4f4e\u5c42\u7ec6\u8282\u3002</p> <p>\u5efa\u8bae\uff1a - \u4e1a\u52a1\u4fa7\u4f18\u5148\u901a\u8fc7 VDB Service \u4f7f\u7528\u5bf9\u4e0a\u7a33\u5b9a\u7684\u65b9\u6cd5\u65cf - \u5982\u9700\u7279\u5b9a\u7d22\u5f15/\u8ddd\u79bb\u5ea6\u91cf/\u6279\u68c0\u7d22\u7b49\u9ad8\u7ea7\u80fd\u529b\uff0c\u53ef\u5728\u670d\u52a1\u5c42\u6269\u5c55\u65b9\u6cd5\u6216\u5728\u4f60\u81ea\u5b9a\u4e49\u670d\u52a1\u4e2d\u76f4\u63a5\u6301\u6709 SageDB \u5b9e\u4f8b\u8fdb\u884c\u5c01\u88c5</p>"},{"location":"middleware/service/sage-db/sage_db_service/#memoryneuromem","title":"\u56db\u3001\u4e0e Memory/Neuromem \u7684\u534f\u4f5c","text":"<ul> <li>Memory Service \u5728\u5185\u90e8\u53ef\u5c06 VDB Service\uff08SAGE-DB \u540e\u7aef\uff09\u4f5c\u4e3a\u5411\u91cf\u68c0\u7d22\u5f15\u64ce\uff0c\u7edf\u4e00\u7f16\u6392 KV/Graph \u4e0e\u5411\u91cf\u540e\u7aef</li> <li>\u4f7f\u7528\u5efa\u8bae\uff1a\u4e1a\u52a1 Function \u8fdb\u884c\u201c\u957f\u671f\u8bb0\u5fc6\u201d\u7f16\u6392\u65f6\u4f18\u5148\u901a\u8fc7 memory_service\uff1b\u4ec5\u5728\u201c\u7eaf\u5411\u91cf\u573a\u666f\u201d\u76f4\u63a5\u4f7f\u7528 vdb_service</li> </ul>"},{"location":"middleware/service/sage-db/sage_db_service/#_2","title":"\u4e94\u3001\u9519\u8bef\u5904\u7406\u4e0e\u6027\u80fd\u5efa\u8bae","text":"<ul> <li>\u53ef\u7528\u6027\u4e0e\u964d\u7ea7</li> <li>\u5728\u670d\u52a1\u542f\u52a8\u65f6\u68c0\u6d4b enterprise.sage_db.is_available()\uff0c\u4e0d\u53ef\u7528\u65f6\u964d\u7ea7\u5230\u5176\u4ed6\u5411\u91cf\u540e\u7aef</li> <li>\u6279\u91cf\u63a5\u53e3</li> <li>\u6279\u91cf\u5199\u5165/\u68c0\u7d22\u53ef\u663e\u8457\u63d0\u5347\u541e\u5410\uff1b\u5728 VDB Service/SageDB \u5c42\u9009\u62e9 batch \u63a5\u53e3\uff08\u82e5\u63d0\u4f9b\uff09</li> <li>\u7d22\u5f15\u4e0e\u8bad\u7ec3</li> <li>\u5bf9\u9700\u8981\u9ad8\u6027\u80fd\u7684\u68c0\u7d22\u4efb\u52a1\uff0c\u63d0\u524d\u6784\u5efa/\u8bad\u7ec3\u7d22\u5f15\uff08build_index/train_index\uff09\uff0c\u5e76\u4e3a\u67e5\u8be2\u8bbe\u7f6e\u5408\u7406\u7684 SearchParams</li> <li>\u8d85\u65f6\u4e0e\u8d44\u6e90</li> <li>\u5728\u8c03\u7528\u4fa7\u8bbe\u7f6e\u5408\u7406\u7684\u8d85\u65f6\uff1b\u5728\u670d\u52a1\u4fa7\u914d\u7f6e\u7ebf\u7a0b/\u5185\u5b58/GPU \u8d44\u6e90\uff0c\u907f\u514d OOM/\u9971\u548c</li> </ul>"},{"location":"middleware/service/sage-db/sage_db_service/#_3","title":"\u53c2\u8003\u4e0e\u6e90\u7801\u5165\u53e3","text":"<ul> <li>\u4f01\u4e1a\u7ec4\u4ef6\uff1apackages/sage-middleware/src/sage/middleware/enterprise/sage_db/</li> <li>Python \u5c01\u88c5\uff1aenterprise/sage_db/sage_db.py</li> <li>C++ \u5b9e\u73b0\uff1aenterprise/sage_db/include \u4e0e enterprise/sage_db/src</li> <li>\u53ef\u7528\u6027\u63a5\u53e3\uff1aenterprise/sage_db/init.py\uff08is_available, get_status\uff09</li> <li>VDB Service\uff1apackages/sage-middleware/src/sage/middleware/services/vdb/</li> <li>init.py \u5bfc\u51fa VDBService, create_vdb_service_factory</li> <li>\u793a\u4f8b\uff1aservices/vdb/examples/vdb_demo.py</li> </ul>"}]}